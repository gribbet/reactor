(self["webpackChunk_reactor_ui"] = self["webpackChunk_reactor_ui"] || []).push([[51],{

/***/ 8988:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var AlluvialChart = /** @class */ (function (_super) {
    __extends(AlluvialChart, _super);
    function AlluvialChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AlluvialChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.AlluvialChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    AlluvialChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return AlluvialChart;
}(base_chart_1.default));
exports["default"] = AlluvialChart;


/***/ }),

/***/ 2313:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var StackedAreaChart = /** @class */ (function (_super) {
    __extends(StackedAreaChart, _super);
    function StackedAreaChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedAreaChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.StackedAreaChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    StackedAreaChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return StackedAreaChart;
}(base_chart_1.default));
exports["default"] = StackedAreaChart;


/***/ }),

/***/ 2409:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var AreaChart = /** @class */ (function (_super) {
    __extends(AreaChart, _super);
    function AreaChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AreaChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.AreaChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    AreaChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return AreaChart;
}(base_chart_1.default));
exports["default"] = AreaChart;


/***/ }),

/***/ 9252:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var GroupedBarChart = /** @class */ (function (_super) {
    __extends(GroupedBarChart, _super);
    function GroupedBarChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GroupedBarChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.GroupedBarChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    GroupedBarChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return GroupedBarChart;
}(base_chart_1.default));
exports["default"] = GroupedBarChart;


/***/ }),

/***/ 5481:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var SimpleBarChart = /** @class */ (function (_super) {
    __extends(SimpleBarChart, _super);
    function SimpleBarChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SimpleBarChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.SimpleBarChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    SimpleBarChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return SimpleBarChart;
}(base_chart_1.default));
exports["default"] = SimpleBarChart;


/***/ }),

/***/ 8886:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var StackedBarChart = /** @class */ (function (_super) {
    __extends(StackedBarChart, _super);
    function StackedBarChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedBarChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.StackedBarChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    StackedBarChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return StackedBarChart;
}(base_chart_1.default));
exports["default"] = StackedBarChart;


/***/ }),

/***/ 5899:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var BaseChart = /** @class */ (function (_super) {
    __extends(BaseChart, _super);
    function BaseChart(props) {
        var _this = _super.call(this, props) || this;
        var options = props.options, data = props.data;
        if (!options) {
            console.error('Missing options!');
        }
        if (!data) {
            console.error('Missing data!');
        }
        _this.data = props.data || [];
        _this.options = props.options || {};
        Object.assign(_this, _this.chart);
        return _this;
    }
    BaseChart.prototype.shouldComponentUpdate = function (nextProps) {
        return (this.props.data !== nextProps.data ||
            this.props.options !== nextProps.options);
    };
    BaseChart.prototype.componentDidUpdate = function () {
        this.chart.model.setData(this.props.data);
        this.chart.model.setOptions(this.props.options);
    };
    return BaseChart;
}(react_1.default.Component));
exports["default"] = BaseChart;


/***/ }),

/***/ 9076:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var BoxplotChart = /** @class */ (function (_super) {
    __extends(BoxplotChart, _super);
    function BoxplotChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BoxplotChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.BoxplotChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    BoxplotChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return BoxplotChart;
}(base_chart_1.default));
exports["default"] = BoxplotChart;


/***/ }),

/***/ 2490:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var BubbleChart = /** @class */ (function (_super) {
    __extends(BubbleChart, _super);
    function BubbleChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BubbleChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.BubbleChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    BubbleChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return BubbleChart;
}(base_chart_1.default));
exports["default"] = BubbleChart;


/***/ }),

/***/ 4587:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var BulletChart = /** @class */ (function (_super) {
    __extends(BulletChart, _super);
    function BulletChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BulletChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.BulletChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    BulletChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return BulletChart;
}(base_chart_1.default));
exports["default"] = BulletChart;


/***/ }),

/***/ 3439:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var CirclePackChart = /** @class */ (function (_super) {
    __extends(CirclePackChart, _super);
    function CirclePackChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CirclePackChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.CirclePackChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    CirclePackChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return CirclePackChart;
}(base_chart_1.default));
exports["default"] = CirclePackChart;


/***/ }),

/***/ 176:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var ComboChart = /** @class */ (function (_super) {
    __extends(ComboChart, _super);
    function ComboChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ComboChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.ComboChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    ComboChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return ComboChart;
}(base_chart_1.default));
exports["default"] = ComboChart;


/***/ }),

/***/ 7125:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var DonutChart = /** @class */ (function (_super) {
    __extends(DonutChart, _super);
    function DonutChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DonutChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.DonutChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    DonutChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return DonutChart;
}(base_chart_1.default));
exports["default"] = DonutChart;


/***/ }),

/***/ 1965:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var GaugeChart = /** @class */ (function (_super) {
    __extends(GaugeChart, _super);
    function GaugeChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GaugeChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.GaugeChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    GaugeChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return GaugeChart;
}(base_chart_1.default));
exports["default"] = GaugeChart;


/***/ }),

/***/ 7768:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var HeatmapChart = /** @class */ (function (_super) {
    __extends(HeatmapChart, _super);
    function HeatmapChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HeatmapChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.HeatmapChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    HeatmapChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return HeatmapChart;
}(base_chart_1.default));
exports["default"] = HeatmapChart;


/***/ }),

/***/ 5777:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var HistogramChart = /** @class */ (function (_super) {
    __extends(HistogramChart, _super);
    function HistogramChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HistogramChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.HistogramChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    HistogramChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return HistogramChart;
}(base_chart_1.default));
exports["default"] = HistogramChart;


/***/ }),

/***/ 419:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.HeatmapChart = exports.AlluvialChart = exports.WordCloudChart = exports.CirclePackChart = exports.TreemapChart = exports.TreeChart = exports.ComboChart = exports.RadarChart = exports.MeterChart = exports.ScatterChart = exports.PieChart = exports.LollipopChart = exports.LineChart = exports.HistogramChart = exports.GaugeChart = exports.DonutChart = exports.BulletChart = exports.BubbleChart = exports.BoxplotChart = exports.StackedBarChart = exports.SimpleBarChart = exports.GroupedBarChart = exports.StackedAreaChart = exports.AreaChart = void 0;
var area_chart_1 = __importDefault(__webpack_require__(2409));
exports.AreaChart = area_chart_1.default;
var area_chart_stacked_1 = __importDefault(__webpack_require__(2313));
exports.StackedAreaChart = area_chart_stacked_1.default;
var bar_chart_grouped_1 = __importDefault(__webpack_require__(9252));
exports.GroupedBarChart = bar_chart_grouped_1.default;
var bar_chart_simple_1 = __importDefault(__webpack_require__(5481));
exports.SimpleBarChart = bar_chart_simple_1.default;
var bar_chart_stacked_1 = __importDefault(__webpack_require__(8886));
exports.StackedBarChart = bar_chart_stacked_1.default;
var boxplot_chart_1 = __importDefault(__webpack_require__(9076));
exports.BoxplotChart = boxplot_chart_1.default;
var bubble_chart_1 = __importDefault(__webpack_require__(2490));
exports.BubbleChart = bubble_chart_1.default;
var bullet_chart_1 = __importDefault(__webpack_require__(4587));
exports.BulletChart = bullet_chart_1.default;
var donut_chart_1 = __importDefault(__webpack_require__(7125));
exports.DonutChart = donut_chart_1.default;
var gauge_chart_1 = __importDefault(__webpack_require__(1965));
exports.GaugeChart = gauge_chart_1.default;
var histogram_chart_1 = __importDefault(__webpack_require__(5777));
exports.HistogramChart = histogram_chart_1.default;
var line_chart_1 = __importDefault(__webpack_require__(5998));
exports.LineChart = line_chart_1.default;
var lollipop_chart_1 = __importDefault(__webpack_require__(4397));
exports.LollipopChart = lollipop_chart_1.default;
var pie_chart_1 = __importDefault(__webpack_require__(5108));
exports.PieChart = pie_chart_1.default;
var scatter_chart_1 = __importDefault(__webpack_require__(4617));
exports.ScatterChart = scatter_chart_1.default;
var meter_chart_1 = __importDefault(__webpack_require__(3064));
exports.MeterChart = meter_chart_1.default;
var radar_chart_1 = __importDefault(__webpack_require__(8507));
exports.RadarChart = radar_chart_1.default;
var combo_chart_1 = __importDefault(__webpack_require__(176));
exports.ComboChart = combo_chart_1.default;
var tree_chart_1 = __importDefault(__webpack_require__(7930));
exports.TreeChart = tree_chart_1.default;
var treemap_chart_1 = __importDefault(__webpack_require__(1087));
exports.TreemapChart = treemap_chart_1.default;
var circle_pack_chart_1 = __importDefault(__webpack_require__(3439));
exports.CirclePackChart = circle_pack_chart_1.default;
var wordcloud_chart_1 = __importDefault(__webpack_require__(257));
exports.WordCloudChart = wordcloud_chart_1.default;
var alluvial_chart_1 = __importDefault(__webpack_require__(8988));
exports.AlluvialChart = alluvial_chart_1.default;
var heatmap_chart_1 = __importDefault(__webpack_require__(7768));
exports.HeatmapChart = heatmap_chart_1.default;


/***/ }),

/***/ 5998:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var LineChart = /** @class */ (function (_super) {
    __extends(LineChart, _super);
    function LineChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LineChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.LineChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    LineChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return LineChart;
}(base_chart_1.default));
exports["default"] = LineChart;


/***/ }),

/***/ 4397:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var LollipopChart = /** @class */ (function (_super) {
    __extends(LollipopChart, _super);
    function LollipopChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LollipopChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.LollipopChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    LollipopChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return LollipopChart;
}(base_chart_1.default));
exports["default"] = LollipopChart;


/***/ }),

/***/ 3064:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var MeterChart = /** @class */ (function (_super) {
    __extends(MeterChart, _super);
    function MeterChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MeterChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.MeterChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    MeterChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return MeterChart;
}(base_chart_1.default));
exports["default"] = MeterChart;


/***/ }),

/***/ 5108:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var PieChart = /** @class */ (function (_super) {
    __extends(PieChart, _super);
    function PieChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PieChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.PieChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    PieChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return PieChart;
}(base_chart_1.default));
exports["default"] = PieChart;


/***/ }),

/***/ 8507:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var RadarChart = /** @class */ (function (_super) {
    __extends(RadarChart, _super);
    function RadarChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RadarChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.RadarChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    RadarChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return RadarChart;
}(base_chart_1.default));
exports["default"] = RadarChart;


/***/ }),

/***/ 4617:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var ScatterChart = /** @class */ (function (_super) {
    __extends(ScatterChart, _super);
    function ScatterChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ScatterChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.ScatterChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    ScatterChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return ScatterChart;
}(base_chart_1.default));
exports["default"] = ScatterChart;


/***/ }),

/***/ 7930:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var TreeChart = /** @class */ (function (_super) {
    __extends(TreeChart, _super);
    function TreeChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreeChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.TreeChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    TreeChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return TreeChart;
}(base_chart_1.default));
exports["default"] = TreeChart;


/***/ }),

/***/ 1087:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var TreemapChart = /** @class */ (function (_super) {
    __extends(TreemapChart, _super);
    function TreemapChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TreemapChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.TreemapChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    TreemapChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return TreemapChart;
}(base_chart_1.default));
exports["default"] = TreemapChart;


/***/ }),

/***/ 257:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
var react_1 = __importDefault(__webpack_require__(2784));
var charts_1 = __webpack_require__(8275);
var base_chart_1 = __importDefault(__webpack_require__(5899));
var WordCloudChart = /** @class */ (function (_super) {
    __extends(WordCloudChart, _super);
    function WordCloudChart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WordCloudChart.prototype.componentDidMount = function () {
        this.chart = new charts_1.WordCloudChart(this.chartRef, {
            data: this.props.data,
            options: this.props.options,
        });
    };
    WordCloudChart.prototype.render = function () {
        var _this = this;
        return (react_1.default.createElement("div", { ref: function (chartRef) { return (_this.chartRef = chartRef); }, className: "chart-holder" }));
    };
    return WordCloudChart;
}(base_chart_1.default));
exports["default"] = WordCloudChart;


/***/ }),

/***/ 8275:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "AlluvialChart": () => (/* reexport */ AlluvialChart),
  "AreaChart": () => (/* reexport */ AreaChart),
  "BoxplotChart": () => (/* reexport */ BoxplotChart),
  "BubbleChart": () => (/* reexport */ BubbleChart),
  "BulletChart": () => (/* reexport */ BulletChart),
  "CirclePackChart": () => (/* reexport */ CirclePackChart),
  "ComboChart": () => (/* reexport */ ComboChart),
  "DonutChart": () => (/* reexport */ DonutChart),
  "GaugeChart": () => (/* reexport */ GaugeChart),
  "GroupedBarChart": () => (/* reexport */ GroupedBarChart),
  "HeatmapChart": () => (/* reexport */ HeatmapChart),
  "HistogramChart": () => (/* reexport */ HistogramChart),
  "LineChart": () => (/* reexport */ LineChart),
  "LollipopChart": () => (/* reexport */ LollipopChart),
  "MeterChart": () => (/* reexport */ MeterChart),
  "PieChart": () => (/* reexport */ PieChart),
  "RadarChart": () => (/* reexport */ RadarChart),
  "ScatterChart": () => (/* reexport */ ScatterChart),
  "SimpleBarChart": () => (/* reexport */ SimpleBarChart),
  "StackedAreaChart": () => (/* reexport */ StackedAreaChart),
  "StackedBarChart": () => (/* reexport */ StackedBarChart),
  "TreeChart": () => (/* reexport */ TreeChart),
  "TreemapChart": () => (/* reexport */ TreemapChart),
  "WordCloudChart": () => (/* reexport */ WordCloudChart),
  "configurations": () => (/* reexport */ configuration_namespaceObject),
  "interfaces": () => (/* reexport */ interfaces)
});

// NAMESPACE OBJECT: ../../node_modules/@carbon/charts/configuration.js
var configuration_namespaceObject = {};
__webpack_require__.r(configuration_namespaceObject);
__webpack_require__.d(configuration_namespaceObject, {
  "alluvial": () => (alluvial),
  "area": () => (configuration_non_customizable_area),
  "axis": () => (configuration_non_customizable_axis),
  "baseTooltip": () => (baseTooltip),
  "boxplot": () => (boxplot),
  "canvasZoomSettings": () => (canvasZoomSettings),
  "circlePack": () => (circlePack),
  "color": () => (color),
  "defaultLegendAdditionalItems": () => (defaultLegendAdditionalItems),
  "grid": () => (grid),
  "heatmap": () => (heatmap),
  "histogram": () => (histogram),
  "legend": () => (configuration_non_customizable_legend),
  "lines": () => (lines),
  "meter": () => (meter),
  "options": () => (configuration_options),
  "pie": () => (pie),
  "radar": () => (radar),
  "ruler": () => (ruler),
  "spacers": () => (spacers),
  "timeScale": () => (timeScale),
  "toolbar": () => (toolbar),
  "tooltips": () => (tooltips),
  "transitions": () => (transitions),
  "zoomBar": () => (zoomBar)
});

// EXTERNAL MODULE: ../../node_modules/@carbon/charts/interfaces/index.js + 1 modules
var interfaces = __webpack_require__(8675);
;// CONCATENATED MODULE: ../../node_modules/d3-ease/src/cubic.js
function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/configuration-non-customizable.js
var _a;


var configuration_non_customizable_area = {
    opacity: {
        unselected: 0.05,
        selected: 0.4,
    },
};
var configuration_non_customizable_axis = {
    ticks: {
        number: 7,
        rotateIfSmallerThan: 30,
        verticalSpaceRatio: 2.5,
        horizontalSpaceRatio: 3.5,
    },
    ratio: {
        reference: 'value',
        compareTo: 'marker',
    },
    paddingRatio: 0.1,
    hover: {
        rectanglePadding: 4,
    },
};
var canvasZoomSettings = {
    duration: 1000,
    ease: cubicInOut,
    zoomLevel: 3,
};
var circlePack = {
    circles: {
        fillOpacity: 0.3,
        hover: {
            stroke: '#FFF',
        },
    },
    padding: {
        mainGroup: 4,
        children: 2,
    },
    hierarchyLevel: 2,
};
var color = {
    pairingOptions: {
        '1-color': 4,
        '2-color': 5,
        '3-color': 5,
        '4-color': 3,
        '5-color': 2,
        '14-color': 1,
    },
};
var boxplot = {
    circle: {
        radius: 4,
        opacity: {
            hovered: 1,
            default: 0.3,
        },
    },
    box: {
        opacity: {
            hovered: 0.5,
            default: 0.3,
        },
    },
    strokeWidth: {
        default: 1,
        thicker: 2,
    },
};
var histogram = {
    defaultBins: 10,
};
var configuration_non_customizable_legend = {
    items: {
        status: {
            ACTIVE: 1,
            DISABLED: 0,
        },
        horizontalSpace: 12,
        verticalSpace: 24,
        textYOffset: 8,
        spaceAfter: 4,
    },
    checkbox: {
        radius: 6.5,
    },
    radius: {
        iconData: [
            { cx: 7, cy: 7, r: 6.5 },
            { cx: 7, cy: 10, r: 3.5 },
        ],
        fill: null,
        stroke: '#8c8c8c',
    },
    line: {
        yPosition: 6,
        width: 24,
        strokeWidth: 1.4,
        fill: null,
        stroke: '#999999',
    },
    area: {
        width: 24,
        height: 14,
        fill: '#6f6f6f',
        stroke: null,
    },
    size: {
        iconData: [
            { width: 23, height: 12 },
            { width: 13, height: 6 },
        ],
        fill: null,
        stroke: '#8D8D8D',
    },
    quartile: {
        iconData: [
            { x: 0, y: 0, width: 24, height: 13 },
            { x: 11, y: 4, width: 1, height: 4 },
        ],
    },
    zoom: {
        iconData: [{ x: 0, y: 0, width: 12, height: 12 }],
        color: '#8D8D8D',
    },
    color: {
        barWidth: 300,
        barHeight: 8,
        axisYTranslation: 10,
    },
};
var lines = {
    opacity: {
        unselected: 0.3,
        selected: 1,
    },
    weight: {
        selected: 2,
        unselected: 1,
    },
};
var meter = {
    statusBar: {
        paddingRight: 5,
    },
    status: {
        indicatorSize: 16,
        paddingLeft: 15,
    },
    total: {
        paddingLeft: 36,
        paddingRight: 24,
    },
    height: {
        default: 8,
        proportional: 16,
    },
    dividerWidth: 2,
};
var pie = {
    radiusOffset: -15,
    innerRadius: 2,
    padAngle: 0.007,
    hoverArc: {
        outerRadiusOffset: 3,
    },
    xOffset: 30,
    yOffset: 20,
    yOffsetCallout: 10,
    callout: {
        minSliceDegree: 5,
        offsetX: 15,
        offsetY: 12,
        horizontalLineLength: 8,
        textMargin: 2,
    },
};
var radar = {
    opacity: {
        unselected: 0.1,
        selected: 0.3,
    },
    xLabelPadding: 10,
    yLabelPadding: 8,
    yTicksNumber: 4,
    minRange: 10,
    xAxisRectHeight: 50,
    dotsRadius: 5,
};
var alluvial = {
    nodeWidth: 4,
    nodeHoveredWidth: 8,
    minNodePadding: 24,
    opacity: {
        unfocus: 0.3,
        default: 0.8,
        selected: 1,
    },
};
var heatmap = {
    minCellDividerDimension: 16,
    // Ensures axes lines are displayed with or without stroke disabled
    chartPadding: 0.5,
};
var spacers = {
    default: {
        size: 24,
    },
};
var tooltips = {
    horizontalOffset: 10,
};
/**
 * Base transition configuration
 */
var transitions = {
    default: {
        duration: 300,
    },
    pie_slice_mouseover: {
        duration: 100,
    },
    pie_chart_titles: {
        duration: 375,
    },
    graph_element_mouseover_fill_update: {
        duration: 100,
    },
    graph_element_mouseout_fill_update: {
        duration: 100,
    },
};
var toolbar = {
    buttonSize: 32,
    iconSize: 20,
    height: 32,
    spacerHeight: 10,
    iconPadding: 6,
};
var zoomBar = {
    height: (_a = {},
        _a[interfaces.ZoomBarTypes.GRAPH_VIEW] = 32,
        _a[interfaces.ZoomBarTypes.SLIDER_VIEW] = 10,
        _a),
    spacerHeight: 8,
    handleWidth: 5,
    handleBarWidth: 1,
    handleBarHeight: 12,
};
var defaultLegendAdditionalItems = [
    {
        type: interfaces.LegendItemType.RADIUS,
        name: 'Radius',
    },
    {
        type: interfaces.LegendItemType.AREA,
        name: 'Poor area',
    },
    {
        type: interfaces.LegendItemType.AREA,
        name: 'Satisfactory area',
    },
    {
        type: interfaces.LegendItemType.AREA,
        name: 'Great area',
    },
    {
        type: interfaces.LegendItemType.QUARTILE,
        name: 'Quartiles',
    },
];
//# sourceMappingURL=../src/configuration-non-customizable.js.map
;// CONCATENATED MODULE: ../../node_modules/lodash-es/isObject.js
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

/* harmony default export */ const lodash_es_isObject = (isObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_freeGlobal.js
/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/* harmony default export */ const _freeGlobal = (freeGlobal);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_root.js


/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = _freeGlobal || freeSelf || Function('return this')();

/* harmony default export */ const _root = (root);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/now.js


/**
 * Gets the timestamp of the number of milliseconds that have elapsed since
 * the Unix epoch (1 January 1970 00:00:00 UTC).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Date
 * @returns {number} Returns the timestamp.
 * @example
 *
 * _.defer(function(stamp) {
 *   console.log(_.now() - stamp);
 * }, _.now());
 * // => Logs the number of milliseconds it took for the deferred invocation.
 */
var now = function() {
  return _root.Date.now();
};

/* harmony default export */ const lodash_es_now = (now);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_trimmedEndIndex.js
/** Used to match a single whitespace character. */
var reWhitespace = /\s/;

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
 * character of `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the index of the last non-whitespace character.
 */
function trimmedEndIndex(string) {
  var index = string.length;

  while (index-- && reWhitespace.test(string.charAt(index))) {}
  return index;
}

/* harmony default export */ const _trimmedEndIndex = (trimmedEndIndex);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseTrim.js


/** Used to match leading whitespace. */
var reTrimStart = /^\s+/;

/**
 * The base implementation of `_.trim`.
 *
 * @private
 * @param {string} string The string to trim.
 * @returns {string} Returns the trimmed string.
 */
function baseTrim(string) {
  return string
    ? string.slice(0, _trimmedEndIndex(string) + 1).replace(reTrimStart, '')
    : string;
}

/* harmony default export */ const _baseTrim = (baseTrim);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Symbol.js


/** Built-in value references. */
var _Symbol_Symbol = _root.Symbol;

/* harmony default export */ const _Symbol = (_Symbol_Symbol);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getRawTag.js


/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

/* harmony default export */ const _getRawTag = (getRawTag);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_objectToString.js
/** Used for built-in method references. */
var _objectToString_objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var _objectToString_nativeObjectToString = _objectToString_objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return _objectToString_nativeObjectToString.call(value);
}

/* harmony default export */ const _objectToString = (objectToString);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseGetTag.js




/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var _baseGetTag_symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))
    ? _getRawTag(value)
    : _objectToString(value);
}

/* harmony default export */ const _baseGetTag = (baseGetTag);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isObjectLike.js
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/* harmony default export */ const lodash_es_isObjectLike = (isObjectLike);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isSymbol.js



/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (lodash_es_isObjectLike(value) && _baseGetTag(value) == symbolTag);
}

/* harmony default export */ const lodash_es_isSymbol = (isSymbol);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/toNumber.js




/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (lodash_es_isSymbol(value)) {
    return NAN;
  }
  if (lodash_es_isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = lodash_es_isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = _baseTrim(value);
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/* harmony default export */ const lodash_es_toNumber = (toNumber);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/debounce.js




/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * Creates a debounced function that delays invoking `func` until after `wait`
 * milliseconds have elapsed since the last time the debounced function was
 * invoked. The debounced function comes with a `cancel` method to cancel
 * delayed `func` invocations and a `flush` method to immediately invoke them.
 * Provide `options` to indicate whether `func` should be invoked on the
 * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
 * with the last arguments provided to the debounced function. Subsequent
 * calls to the debounced function return the result of the last `func`
 * invocation.
 *
 * **Note:** If `leading` and `trailing` options are `true`, `func` is
 * invoked on the trailing edge of the timeout only if the debounced function
 * is invoked more than once during the `wait` timeout.
 *
 * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
 * until to the next tick, similar to `setTimeout` with a timeout of `0`.
 *
 * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
 * for details over the differences between `_.debounce` and `_.throttle`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to debounce.
 * @param {number} [wait=0] The number of milliseconds to delay.
 * @param {Object} [options={}] The options object.
 * @param {boolean} [options.leading=false]
 *  Specify invoking on the leading edge of the timeout.
 * @param {number} [options.maxWait]
 *  The maximum time `func` is allowed to be delayed before it's invoked.
 * @param {boolean} [options.trailing=true]
 *  Specify invoking on the trailing edge of the timeout.
 * @returns {Function} Returns the new debounced function.
 * @example
 *
 * // Avoid costly calculations while the window size is in flux.
 * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
 *
 * // Invoke `sendMail` when clicked, debouncing subsequent calls.
 * jQuery(element).on('click', _.debounce(sendMail, 300, {
 *   'leading': true,
 *   'trailing': false
 * }));
 *
 * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
 * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
 * var source = new EventSource('/stream');
 * jQuery(source).on('message', debounced);
 *
 * // Cancel the trailing debounced invocation.
 * jQuery(window).on('popstate', debounced.cancel);
 */
function debounce(func, wait, options) {
  var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true;

  if (typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  wait = lodash_es_toNumber(wait) || 0;
  if (lodash_es_isObject(options)) {
    leading = !!options.leading;
    maxing = 'maxWait' in options;
    maxWait = maxing ? nativeMax(lodash_es_toNumber(options.maxWait) || 0, wait) : maxWait;
    trailing = 'trailing' in options ? !!options.trailing : trailing;
  }

  function invokeFunc(time) {
    var args = lastArgs,
        thisArg = lastThis;

    lastArgs = lastThis = undefined;
    lastInvokeTime = time;
    result = func.apply(thisArg, args);
    return result;
  }

  function leadingEdge(time) {
    // Reset any `maxWait` timer.
    lastInvokeTime = time;
    // Start the timer for the trailing edge.
    timerId = setTimeout(timerExpired, wait);
    // Invoke the leading edge.
    return leading ? invokeFunc(time) : result;
  }

  function remainingWait(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall;

    return maxing
      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
      : timeWaiting;
  }

  function shouldInvoke(time) {
    var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime;

    // Either this is the first call, activity has stopped and we're at the
    // trailing edge, the system time has gone backwards and we're treating
    // it as the trailing edge, or we've hit the `maxWait` limit.
    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
  }

  function timerExpired() {
    var time = lodash_es_now();
    if (shouldInvoke(time)) {
      return trailingEdge(time);
    }
    // Restart the timer.
    timerId = setTimeout(timerExpired, remainingWait(time));
  }

  function trailingEdge(time) {
    timerId = undefined;

    // Only invoke if we have `lastArgs` which means `func` has been
    // debounced at least once.
    if (trailing && lastArgs) {
      return invokeFunc(time);
    }
    lastArgs = lastThis = undefined;
    return result;
  }

  function cancel() {
    if (timerId !== undefined) {
      clearTimeout(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = undefined;
  }

  function flush() {
    return timerId === undefined ? result : trailingEdge(lodash_es_now());
  }

  function debounced() {
    var time = lodash_es_now(),
        isInvoking = shouldInvoke(time);

    lastArgs = arguments;
    lastThis = this;
    lastCallTime = time;

    if (isInvoking) {
      if (timerId === undefined) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        // Handle invocations in a tight loop.
        clearTimeout(timerId);
        timerId = setTimeout(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === undefined) {
      timerId = setTimeout(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  return debounced;
}

/* harmony default export */ const lodash_es_debounce = (debounce);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_listCacheClear.js
/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

/* harmony default export */ const _listCacheClear = (listCacheClear);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/eq.js
/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/* harmony default export */ const lodash_es_eq = (eq);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_assocIndexOf.js


/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (lodash_es_eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/* harmony default export */ const _assocIndexOf = (assocIndexOf);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_listCacheDelete.js


/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

/* harmony default export */ const _listCacheDelete = (listCacheDelete);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_listCacheGet.js


/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/* harmony default export */ const _listCacheGet = (listCacheGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_listCacheHas.js


/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return _assocIndexOf(this.__data__, key) > -1;
}

/* harmony default export */ const _listCacheHas = (listCacheHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_listCacheSet.js


/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = _assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

/* harmony default export */ const _listCacheSet = (listCacheSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_ListCache.js






/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = _listCacheClear;
ListCache.prototype['delete'] = _listCacheDelete;
ListCache.prototype.get = _listCacheGet;
ListCache.prototype.has = _listCacheHas;
ListCache.prototype.set = _listCacheSet;

/* harmony default export */ const _ListCache = (ListCache);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stackClear.js


/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new _ListCache;
  this.size = 0;
}

/* harmony default export */ const _stackClear = (stackClear);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stackDelete.js
/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

/* harmony default export */ const _stackDelete = (stackDelete);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stackGet.js
/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/* harmony default export */ const _stackGet = (stackGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stackHas.js
/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/* harmony default export */ const _stackHas = (stackHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isFunction.js



/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!lodash_es_isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = _baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/* harmony default export */ const lodash_es_isFunction = (isFunction);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_coreJsData.js


/** Used to detect overreaching core-js shims. */
var coreJsData = _root["__core-js_shared__"];

/* harmony default export */ const _coreJsData = (coreJsData);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isMasked.js


/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/* harmony default export */ const _isMasked = (isMasked);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_toSource.js
/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/* harmony default export */ const _toSource = (toSource);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsNative.js





/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var _baseIsNative_funcProto = Function.prototype,
    _baseIsNative_objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var _baseIsNative_funcToString = _baseIsNative_funcProto.toString;

/** Used to check objects for own properties. */
var _baseIsNative_hasOwnProperty = _baseIsNative_objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!lodash_es_isObject(value) || _isMasked(value)) {
    return false;
  }
  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(_toSource(value));
}

/* harmony default export */ const _baseIsNative = (baseIsNative);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getValue.js
/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/* harmony default export */ const _getValue = (getValue);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getNative.js



/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = _getValue(object, key);
  return _baseIsNative(value) ? value : undefined;
}

/* harmony default export */ const _getNative = (getNative);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Map.js



/* Built-in method references that are verified to be native. */
var _Map_Map = _getNative(_root, 'Map');

/* harmony default export */ const _Map = (_Map_Map);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_nativeCreate.js


/* Built-in method references that are verified to be native. */
var nativeCreate = _getNative(Object, 'create');

/* harmony default export */ const _nativeCreate = (nativeCreate);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hashClear.js


/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};
  this.size = 0;
}

/* harmony default export */ const _hashClear = (hashClear);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hashDelete.js
/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ const _hashDelete = (hashDelete);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hashGet.js


/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var _hashGet_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (_nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/* harmony default export */ const _hashGet = (hashGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hashHas.js


/** Used for built-in method references. */
var _hashHas_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);
}

/* harmony default export */ const _hashHas = (hashHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hashSet.js


/** Used to stand-in for `undefined` hash values. */
var _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;
  return this;
}

/* harmony default export */ const _hashSet = (hashSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Hash.js






/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = _hashClear;
Hash.prototype['delete'] = _hashDelete;
Hash.prototype.get = _hashGet;
Hash.prototype.has = _hashHas;
Hash.prototype.set = _hashSet;

/* harmony default export */ const _Hash = (Hash);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapCacheClear.js




/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new _Hash,
    'map': new (_Map || _ListCache),
    'string': new _Hash
  };
}

/* harmony default export */ const _mapCacheClear = (mapCacheClear);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isKeyable.js
/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/* harmony default export */ const _isKeyable = (isKeyable);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getMapData.js


/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return _isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/* harmony default export */ const _getMapData = (getMapData);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapCacheDelete.js


/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = _getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

/* harmony default export */ const _mapCacheDelete = (mapCacheDelete);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapCacheGet.js


/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return _getMapData(this, key).get(key);
}

/* harmony default export */ const _mapCacheGet = (mapCacheGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapCacheHas.js


/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return _getMapData(this, key).has(key);
}

/* harmony default export */ const _mapCacheHas = (mapCacheHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapCacheSet.js


/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = _getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

/* harmony default export */ const _mapCacheSet = (mapCacheSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_MapCache.js






/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = _mapCacheClear;
MapCache.prototype['delete'] = _mapCacheDelete;
MapCache.prototype.get = _mapCacheGet;
MapCache.prototype.has = _mapCacheHas;
MapCache.prototype.set = _mapCacheSet;

/* harmony default export */ const _MapCache = (MapCache);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stackSet.js




/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof _ListCache) {
    var pairs = data.__data__;
    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new _MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

/* harmony default export */ const _stackSet = (stackSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Stack.js







/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new _ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = _stackClear;
Stack.prototype['delete'] = _stackDelete;
Stack.prototype.get = _stackGet;
Stack.prototype.has = _stackHas;
Stack.prototype.set = _stackSet;

/* harmony default export */ const _Stack = (Stack);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayEach.js
/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/* harmony default export */ const _arrayEach = (arrayEach);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_defineProperty.js


var defineProperty = (function() {
  try {
    var func = _getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

/* harmony default export */ const _defineProperty = (defineProperty);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseAssignValue.js


/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && _defineProperty) {
    _defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

/* harmony default export */ const _baseAssignValue = (baseAssignValue);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_assignValue.js



/** Used for built-in method references. */
var _assignValue_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ const _assignValue = (assignValue);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_copyObject.js



/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      _baseAssignValue(object, key, newValue);
    } else {
      _assignValue(object, key, newValue);
    }
  }
  return object;
}

/* harmony default export */ const _copyObject = (copyObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseTimes.js
/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/* harmony default export */ const _baseTimes = (baseTimes);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsArguments.js



/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return lodash_es_isObjectLike(value) && _baseGetTag(value) == argsTag;
}

/* harmony default export */ const _baseIsArguments = (baseIsArguments);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isArguments.js



/** Used for built-in method references. */
var isArguments_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {
  return lodash_es_isObjectLike(value) && isArguments_hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/* harmony default export */ const lodash_es_isArguments = (isArguments);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isArray.js
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/* harmony default export */ const lodash_es_isArray = (isArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/stubFalse.js
/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/* harmony default export */ const lodash_es_stubFalse = (stubFalse);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isBuffer.js



/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? _root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || lodash_es_stubFalse;

/* harmony default export */ const lodash_es_isBuffer = (isBuffer);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isIndex.js
/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/* harmony default export */ const _isIndex = (isIndex);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isLength.js
/** Used as references for various `Number` constants. */
var isLength_MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= isLength_MAX_SAFE_INTEGER;
}

/* harmony default export */ const lodash_es_isLength = (isLength);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsTypedArray.js




/** `Object#toString` result references. */
var _baseIsTypedArray_argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    _baseIsTypedArray_funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return lodash_es_isObjectLike(value) &&
    lodash_es_isLength(value.length) && !!typedArrayTags[_baseGetTag(value)];
}

/* harmony default export */ const _baseIsTypedArray = (baseIsTypedArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseUnary.js
/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/* harmony default export */ const _baseUnary = (baseUnary);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_nodeUtil.js


/** Detect free variable `exports`. */
var _nodeUtil_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var _nodeUtil_freeModule = _nodeUtil_freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var _nodeUtil_moduleExports = _nodeUtil_freeModule && _nodeUtil_freeModule.exports === _nodeUtil_freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = _nodeUtil_moduleExports && _freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = _nodeUtil_freeModule && _nodeUtil_freeModule.require && _nodeUtil_freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* harmony default export */ const _nodeUtil = (nodeUtil);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isTypedArray.js




/* Node.js helper references. */
var nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;

/* harmony default export */ const lodash_es_isTypedArray = (isTypedArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayLikeKeys.js







/** Used for built-in method references. */
var _arrayLikeKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = lodash_es_isArray(value),
      isArg = !isArr && lodash_es_isArguments(value),
      isBuff = !isArr && !isArg && lodash_es_isBuffer(value),
      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? _baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           _isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const _arrayLikeKeys = (arrayLikeKeys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isPrototype.js
/** Used for built-in method references. */
var _isPrototype_objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || _isPrototype_objectProto;

  return value === proto;
}

/* harmony default export */ const _isPrototype = (isPrototype);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_overArg.js
/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* harmony default export */ const _overArg = (overArg);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_nativeKeys.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = _overArg(Object.keys, Object);

/* harmony default export */ const _nativeKeys = (nativeKeys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseKeys.js



/** Used for built-in method references. */
var _baseKeys_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!_isPrototype(object)) {
    return _nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const _baseKeys = (baseKeys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isArrayLike.js



/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);
}

/* harmony default export */ const lodash_es_isArrayLike = (isArrayLike);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/keys.js




/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);
}

/* harmony default export */ const lodash_es_keys = (keys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseAssign.js



/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && _copyObject(source, lodash_es_keys(source), object);
}

/* harmony default export */ const _baseAssign = (baseAssign);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_nativeKeysIn.js
/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const _nativeKeysIn = (nativeKeysIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseKeysIn.js




/** Used for built-in method references. */
var _baseKeysIn_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!lodash_es_isObject(object)) {
    return _nativeKeysIn(object);
  }
  var isProto = _isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

/* harmony default export */ const _baseKeysIn = (baseKeysIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/keysIn.js




/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);
}

/* harmony default export */ const lodash_es_keysIn = (keysIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseAssignIn.js



/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && _copyObject(source, lodash_es_keysIn(source), object);
}

/* harmony default export */ const _baseAssignIn = (baseAssignIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneBuffer.js


/** Detect free variable `exports`. */
var _cloneBuffer_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var _cloneBuffer_freeModule = _cloneBuffer_freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var _cloneBuffer_moduleExports = _cloneBuffer_freeModule && _cloneBuffer_freeModule.exports === _cloneBuffer_freeExports;

/** Built-in value references. */
var _cloneBuffer_Buffer = _cloneBuffer_moduleExports ? _root.Buffer : undefined,
    allocUnsafe = _cloneBuffer_Buffer ? _cloneBuffer_Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

/* harmony default export */ const _cloneBuffer = (cloneBuffer);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_copyArray.js
/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

/* harmony default export */ const _copyArray = (copyArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayFilter.js
/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

/* harmony default export */ const _arrayFilter = (arrayFilter);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/stubArray.js
/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

/* harmony default export */ const lodash_es_stubArray = (stubArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getSymbols.js



/** Used for built-in method references. */
var _getSymbols_objectProto = Object.prototype;

/** Built-in value references. */
var _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return _arrayFilter(nativeGetSymbols(object), function(symbol) {
    return _getSymbols_propertyIsEnumerable.call(object, symbol);
  });
};

/* harmony default export */ const _getSymbols = (getSymbols);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_copySymbols.js



/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return _copyObject(source, _getSymbols(source), object);
}

/* harmony default export */ const _copySymbols = (copySymbols);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayPush.js
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

/* harmony default export */ const _arrayPush = (arrayPush);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getPrototype.js


/** Built-in value references. */
var getPrototype = _overArg(Object.getPrototypeOf, Object);

/* harmony default export */ const _getPrototype = (getPrototype);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getSymbolsIn.js





/* Built-in method references for those with the same name as other `lodash` methods. */
var _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {
  var result = [];
  while (object) {
    _arrayPush(result, _getSymbols(object));
    object = _getPrototype(object);
  }
  return result;
};

/* harmony default export */ const _getSymbolsIn = (getSymbolsIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_copySymbolsIn.js



/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return _copyObject(source, _getSymbolsIn(source), object);
}

/* harmony default export */ const _copySymbolsIn = (copySymbolsIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseGetAllKeys.js



/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));
}

/* harmony default export */ const _baseGetAllKeys = (baseGetAllKeys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getAllKeys.js




/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);
}

/* harmony default export */ const _getAllKeys = (getAllKeys);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getAllKeysIn.js




/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);
}

/* harmony default export */ const _getAllKeysIn = (getAllKeysIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_DataView.js



/* Built-in method references that are verified to be native. */
var _DataView_DataView = _getNative(_root, 'DataView');

/* harmony default export */ const _DataView = (_DataView_DataView);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Promise.js



/* Built-in method references that are verified to be native. */
var _Promise_Promise = _getNative(_root, 'Promise');

/* harmony default export */ const _Promise = (_Promise_Promise);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Set.js



/* Built-in method references that are verified to be native. */
var _Set_Set = _getNative(_root, 'Set');

/* harmony default export */ const _Set = (_Set_Set);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_WeakMap.js



/* Built-in method references that are verified to be native. */
var _WeakMap_WeakMap = _getNative(_root, 'WeakMap');

/* harmony default export */ const _WeakMap = (_WeakMap_WeakMap);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getTag.js








/** `Object#toString` result references. */
var _getTag_mapTag = '[object Map]',
    _getTag_objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    _getTag_setTag = '[object Set]',
    _getTag_weakMapTag = '[object WeakMap]';

var _getTag_dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = _toSource(_DataView),
    mapCtorString = _toSource(_Map),
    promiseCtorString = _toSource(_Promise),
    setCtorString = _toSource(_Set),
    weakMapCtorString = _toSource(_WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = _baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != _getTag_dataViewTag) ||
    (_Map && getTag(new _Map) != _getTag_mapTag) ||
    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||
    (_Set && getTag(new _Set) != _getTag_setTag) ||
    (_WeakMap && getTag(new _WeakMap) != _getTag_weakMapTag)) {
  getTag = function(value) {
    var result = _baseGetTag(value),
        Ctor = result == _getTag_objectTag ? value.constructor : undefined,
        ctorString = Ctor ? _toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return _getTag_dataViewTag;
        case mapCtorString: return _getTag_mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return _getTag_setTag;
        case weakMapCtorString: return _getTag_weakMapTag;
      }
    }
    return result;
  };
}

/* harmony default export */ const _getTag = (getTag);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_initCloneArray.js
/** Used for built-in method references. */
var _initCloneArray_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

/* harmony default export */ const _initCloneArray = (initCloneArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_Uint8Array.js


/** Built-in value references. */
var Uint8Array = _root.Uint8Array;

/* harmony default export */ const _Uint8Array = (Uint8Array);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneArrayBuffer.js


/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));
  return result;
}

/* harmony default export */ const _cloneArrayBuffer = (cloneArrayBuffer);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneDataView.js


/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

/* harmony default export */ const _cloneDataView = (cloneDataView);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneRegExp.js
/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

/* harmony default export */ const _cloneRegExp = (cloneRegExp);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneSymbol.js


/** Used to convert symbols to primitives and strings. */
var symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

/* harmony default export */ const _cloneSymbol = (cloneSymbol);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cloneTypedArray.js


/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

/* harmony default export */ const _cloneTypedArray = (cloneTypedArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_initCloneByTag.js






/** `Object#toString` result references. */
var _initCloneByTag_boolTag = '[object Boolean]',
    _initCloneByTag_dateTag = '[object Date]',
    _initCloneByTag_mapTag = '[object Map]',
    _initCloneByTag_numberTag = '[object Number]',
    _initCloneByTag_regexpTag = '[object RegExp]',
    _initCloneByTag_setTag = '[object Set]',
    _initCloneByTag_stringTag = '[object String]',
    _initCloneByTag_symbolTag = '[object Symbol]';

var _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',
    _initCloneByTag_dataViewTag = '[object DataView]',
    _initCloneByTag_float32Tag = '[object Float32Array]',
    _initCloneByTag_float64Tag = '[object Float64Array]',
    _initCloneByTag_int8Tag = '[object Int8Array]',
    _initCloneByTag_int16Tag = '[object Int16Array]',
    _initCloneByTag_int32Tag = '[object Int32Array]',
    _initCloneByTag_uint8Tag = '[object Uint8Array]',
    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',
    _initCloneByTag_uint16Tag = '[object Uint16Array]',
    _initCloneByTag_uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case _initCloneByTag_arrayBufferTag:
      return _cloneArrayBuffer(object);

    case _initCloneByTag_boolTag:
    case _initCloneByTag_dateTag:
      return new Ctor(+object);

    case _initCloneByTag_dataViewTag:
      return _cloneDataView(object, isDeep);

    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:
    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:
    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:
      return _cloneTypedArray(object, isDeep);

    case _initCloneByTag_mapTag:
      return new Ctor;

    case _initCloneByTag_numberTag:
    case _initCloneByTag_stringTag:
      return new Ctor(object);

    case _initCloneByTag_regexpTag:
      return _cloneRegExp(object);

    case _initCloneByTag_setTag:
      return new Ctor;

    case _initCloneByTag_symbolTag:
      return _cloneSymbol(object);
  }
}

/* harmony default export */ const _initCloneByTag = (initCloneByTag);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseCreate.js


/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!lodash_es_isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

/* harmony default export */ const _baseCreate = (baseCreate);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_initCloneObject.js




/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !_isPrototype(object))
    ? _baseCreate(_getPrototype(object))
    : {};
}

/* harmony default export */ const _initCloneObject = (initCloneObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsMap.js



/** `Object#toString` result references. */
var _baseIsMap_mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsMap_mapTag;
}

/* harmony default export */ const _baseIsMap = (baseIsMap);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isMap.js




/* Node.js helper references. */
var nodeIsMap = _nodeUtil && _nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;

/* harmony default export */ const lodash_es_isMap = (isMap);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsSet.js



/** `Object#toString` result references. */
var _baseIsSet_setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsSet_setTag;
}

/* harmony default export */ const _baseIsSet = (baseIsSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isSet.js




/* Node.js helper references. */
var nodeIsSet = _nodeUtil && _nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;

/* harmony default export */ const lodash_es_isSet = (isSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseClone.js























/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var _baseClone_argsTag = '[object Arguments]',
    _baseClone_arrayTag = '[object Array]',
    _baseClone_boolTag = '[object Boolean]',
    _baseClone_dateTag = '[object Date]',
    _baseClone_errorTag = '[object Error]',
    _baseClone_funcTag = '[object Function]',
    _baseClone_genTag = '[object GeneratorFunction]',
    _baseClone_mapTag = '[object Map]',
    _baseClone_numberTag = '[object Number]',
    _baseClone_objectTag = '[object Object]',
    _baseClone_regexpTag = '[object RegExp]',
    _baseClone_setTag = '[object Set]',
    _baseClone_stringTag = '[object String]',
    _baseClone_symbolTag = '[object Symbol]',
    _baseClone_weakMapTag = '[object WeakMap]';

var _baseClone_arrayBufferTag = '[object ArrayBuffer]',
    _baseClone_dataViewTag = '[object DataView]',
    _baseClone_float32Tag = '[object Float32Array]',
    _baseClone_float64Tag = '[object Float64Array]',
    _baseClone_int8Tag = '[object Int8Array]',
    _baseClone_int16Tag = '[object Int16Array]',
    _baseClone_int32Tag = '[object Int32Array]',
    _baseClone_uint8Tag = '[object Uint8Array]',
    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',
    _baseClone_uint16Tag = '[object Uint16Array]',
    _baseClone_uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =
cloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =
cloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =
cloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =
cloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =
cloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =
cloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =
cloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =
cloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =
cloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =
cloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;
cloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =
cloneableTags[_baseClone_weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!lodash_es_isObject(value)) {
    return value;
  }
  var isArr = lodash_es_isArray(value);
  if (isArr) {
    result = _initCloneArray(value);
    if (!isDeep) {
      return _copyArray(value, result);
    }
  } else {
    var tag = _getTag(value),
        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;

    if (lodash_es_isBuffer(value)) {
      return _cloneBuffer(value, isDeep);
    }
    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : _initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? _copySymbolsIn(value, _baseAssignIn(result, value))
          : _copySymbols(value, _baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = _initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new _Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (lodash_es_isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (lodash_es_isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? _getAllKeysIn : _getAllKeys)
    : (isFlat ? lodash_es_keysIn : lodash_es_keys);

  var props = isArr ? undefined : keysFunc(value);
  _arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

/* harmony default export */ const _baseClone = (baseClone);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/cloneDeep.js


/** Used to compose bitmasks for cloning. */
var cloneDeep_CLONE_DEEP_FLAG = 1,
    cloneDeep_CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);
}

/* harmony default export */ const lodash_es_cloneDeep = (cloneDeep);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_assignMergeValue.js



/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !lodash_es_eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    _baseAssignValue(object, key, value);
  }
}

/* harmony default export */ const _assignMergeValue = (assignMergeValue);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createBaseFor.js
/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/* harmony default export */ const _createBaseFor = (createBaseFor);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseFor.js


/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = _createBaseFor();

/* harmony default export */ const _baseFor = (baseFor);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isArrayLikeObject.js



/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return lodash_es_isObjectLike(value) && lodash_es_isArrayLike(value);
}

/* harmony default export */ const lodash_es_isArrayLikeObject = (isArrayLikeObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isPlainObject.js




/** `Object#toString` result references. */
var isPlainObject_objectTag = '[object Object]';

/** Used for built-in method references. */
var isPlainObject_funcProto = Function.prototype,
    isPlainObject_objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var isPlainObject_funcToString = isPlainObject_funcProto.toString;

/** Used to check objects for own properties. */
var isPlainObject_hasOwnProperty = isPlainObject_objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = isPlainObject_funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!lodash_es_isObjectLike(value) || _baseGetTag(value) != isPlainObject_objectTag) {
    return false;
  }
  var proto = _getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    isPlainObject_funcToString.call(Ctor) == objectCtorString;
}

/* harmony default export */ const lodash_es_isPlainObject = (isPlainObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_safeGet.js
/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

/* harmony default export */ const _safeGet = (safeGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/toPlainObject.js



/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return _copyObject(value, lodash_es_keysIn(value));
}

/* harmony default export */ const lodash_es_toPlainObject = (toPlainObject);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseMergeDeep.js
















/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = _safeGet(object, key),
      srcValue = _safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    _assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = lodash_es_isArray(srcValue),
        isBuff = !isArr && lodash_es_isBuffer(srcValue),
        isTyped = !isArr && !isBuff && lodash_es_isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (lodash_es_isArray(objValue)) {
        newValue = objValue;
      }
      else if (lodash_es_isArrayLikeObject(objValue)) {
        newValue = _copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = _cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = _cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (lodash_es_isPlainObject(srcValue) || lodash_es_isArguments(srcValue)) {
      newValue = objValue;
      if (lodash_es_isArguments(objValue)) {
        newValue = lodash_es_toPlainObject(objValue);
      }
      else if (!lodash_es_isObject(objValue) || lodash_es_isFunction(objValue)) {
        newValue = _initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  _assignMergeValue(object, key, newValue);
}

/* harmony default export */ const _baseMergeDeep = (baseMergeDeep);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseMerge.js








/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  _baseFor(source, function(srcValue, key) {
    stack || (stack = new _Stack);
    if (lodash_es_isObject(srcValue)) {
      _baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(_safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      _assignMergeValue(object, key, newValue);
    }
  }, lodash_es_keysIn);
}

/* harmony default export */ const _baseMerge = (baseMerge);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/identity.js
/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/* harmony default export */ const lodash_es_identity = (identity);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_apply.js
/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

/* harmony default export */ const _apply = (apply);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_overRest.js


/* Built-in method references for those with the same name as other `lodash` methods. */
var _overRest_nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = _overRest_nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = _overRest_nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return _apply(func, this, otherArgs);
  };
}

/* harmony default export */ const _overRest = (overRest);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/constant.js
/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant_constant(value) {
  return function() {
    return value;
  };
}

/* harmony default export */ const lodash_es_constant = (constant_constant);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseSetToString.js




/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !_defineProperty ? lodash_es_identity : function(func, string) {
  return _defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': lodash_es_constant(string),
    'writable': true
  });
};

/* harmony default export */ const _baseSetToString = (baseSetToString);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_shortOut.js
/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

/* harmony default export */ const _shortOut = (shortOut);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_setToString.js



/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = _shortOut(_baseSetToString);

/* harmony default export */ const _setToString = (setToString);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseRest.js




/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return _setToString(_overRest(func, start, lodash_es_identity), func + '');
}

/* harmony default export */ const _baseRest = (baseRest);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isIterateeCall.js





/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!lodash_es_isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (lodash_es_isArrayLike(object) && _isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return lodash_es_eq(object[index], value);
  }
  return false;
}

/* harmony default export */ const _isIterateeCall = (isIterateeCall);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createAssigner.js



/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return _baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && _isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

/* harmony default export */ const _createAssigner = (createAssigner);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/merge.js



/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = _createAssigner(function(object, source, srcIndex) {
  _baseMerge(object, source, srcIndex);
});

/* harmony default export */ const lodash_es_merge = (merge);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isFlattenable.js




/** Built-in value references. */
var spreadableSymbol = _Symbol ? _Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return lodash_es_isArray(value) || lodash_es_isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

/* harmony default export */ const _isFlattenable = (isFlattenable);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseFlatten.js



/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = _isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        _arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

/* harmony default export */ const _baseFlatten = (baseFlatten);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_setCacheAdd.js
/** Used to stand-in for `undefined` hash values. */
var _setCacheAdd_HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, _setCacheAdd_HASH_UNDEFINED);
  return this;
}

/* harmony default export */ const _setCacheAdd = (setCacheAdd);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_setCacheHas.js
/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

/* harmony default export */ const _setCacheHas = (setCacheHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_SetCache.js




/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new _MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = _setCacheAdd;
SetCache.prototype.has = _setCacheHas;

/* harmony default export */ const _SetCache = (SetCache);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arraySome.js
/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ const _arraySome = (arraySome);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_cacheHas.js
/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/* harmony default export */ const _cacheHas = (cacheHas);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_equalArrays.js




/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Check that cyclic values are equal.
  var arrStacked = stack.get(array);
  var othStacked = stack.get(other);
  if (arrStacked && othStacked) {
    return arrStacked == other && othStacked == array;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new _SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!_arraySome(other, function(othValue, othIndex) {
            if (!_cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/* harmony default export */ const _equalArrays = (equalArrays);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_mapToArray.js
/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/* harmony default export */ const _mapToArray = (mapToArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_setToArray.js
/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/* harmony default export */ const _setToArray = (setToArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_equalByTag.js







/** Used to compose bitmasks for value comparisons. */
var _equalByTag_COMPARE_PARTIAL_FLAG = 1,
    _equalByTag_COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var _equalByTag_boolTag = '[object Boolean]',
    _equalByTag_dateTag = '[object Date]',
    _equalByTag_errorTag = '[object Error]',
    _equalByTag_mapTag = '[object Map]',
    _equalByTag_numberTag = '[object Number]',
    _equalByTag_regexpTag = '[object RegExp]',
    _equalByTag_setTag = '[object Set]',
    _equalByTag_stringTag = '[object String]',
    _equalByTag_symbolTag = '[object Symbol]';

var _equalByTag_arrayBufferTag = '[object ArrayBuffer]',
    _equalByTag_dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var _equalByTag_symbolProto = _Symbol ? _Symbol.prototype : undefined,
    _equalByTag_symbolValueOf = _equalByTag_symbolProto ? _equalByTag_symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case _equalByTag_dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case _equalByTag_arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new _Uint8Array(object), new _Uint8Array(other))) {
        return false;
      }
      return true;

    case _equalByTag_boolTag:
    case _equalByTag_dateTag:
    case _equalByTag_numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return lodash_es_eq(+object, +other);

    case _equalByTag_errorTag:
      return object.name == other.name && object.message == other.message;

    case _equalByTag_regexpTag:
    case _equalByTag_stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case _equalByTag_mapTag:
      var convert = _mapToArray;

    case _equalByTag_setTag:
      var isPartial = bitmask & _equalByTag_COMPARE_PARTIAL_FLAG;
      convert || (convert = _setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= _equalByTag_COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = _equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case _equalByTag_symbolTag:
      if (_equalByTag_symbolValueOf) {
        return _equalByTag_symbolValueOf.call(object) == _equalByTag_symbolValueOf.call(other);
      }
  }
  return false;
}

/* harmony default export */ const _equalByTag = (equalByTag);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_equalObjects.js


/** Used to compose bitmasks for value comparisons. */
var _equalObjects_COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var _equalObjects_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _equalObjects_hasOwnProperty = _equalObjects_objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & _equalObjects_COMPARE_PARTIAL_FLAG,
      objProps = _getAllKeys(object),
      objLength = objProps.length,
      othProps = _getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : _equalObjects_hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Check that cyclic values are equal.
  var objStacked = stack.get(object);
  var othStacked = stack.get(other);
  if (objStacked && othStacked) {
    return objStacked == other && othStacked == object;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/* harmony default export */ const _equalObjects = (equalObjects);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsEqualDeep.js









/** Used to compose bitmasks for value comparisons. */
var _baseIsEqualDeep_COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var _baseIsEqualDeep_argsTag = '[object Arguments]',
    _baseIsEqualDeep_arrayTag = '[object Array]',
    _baseIsEqualDeep_objectTag = '[object Object]';

/** Used for built-in method references. */
var _baseIsEqualDeep_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var _baseIsEqualDeep_hasOwnProperty = _baseIsEqualDeep_objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = lodash_es_isArray(object),
      othIsArr = lodash_es_isArray(other),
      objTag = objIsArr ? _baseIsEqualDeep_arrayTag : _getTag(object),
      othTag = othIsArr ? _baseIsEqualDeep_arrayTag : _getTag(other);

  objTag = objTag == _baseIsEqualDeep_argsTag ? _baseIsEqualDeep_objectTag : objTag;
  othTag = othTag == _baseIsEqualDeep_argsTag ? _baseIsEqualDeep_objectTag : othTag;

  var objIsObj = objTag == _baseIsEqualDeep_objectTag,
      othIsObj = othTag == _baseIsEqualDeep_objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && lodash_es_isBuffer(object)) {
    if (!lodash_es_isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new _Stack);
    return (objIsArr || lodash_es_isTypedArray(object))
      ? _equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : _equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & _baseIsEqualDeep_COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && _baseIsEqualDeep_hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && _baseIsEqualDeep_hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new _Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new _Stack);
  return _equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

/* harmony default export */ const _baseIsEqualDeep = (baseIsEqualDeep);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsEqual.js



/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!lodash_es_isObjectLike(value) && !lodash_es_isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return _baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

/* harmony default export */ const _baseIsEqual = (baseIsEqual);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsMatch.js



/** Used to compose bitmasks for value comparisons. */
var _baseIsMatch_COMPARE_PARTIAL_FLAG = 1,
    _baseIsMatch_COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new _Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? _baseIsEqual(srcValue, objValue, _baseIsMatch_COMPARE_PARTIAL_FLAG | _baseIsMatch_COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/* harmony default export */ const _baseIsMatch = (baseIsMatch);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isStrictComparable.js


/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !lodash_es_isObject(value);
}

/* harmony default export */ const _isStrictComparable = (isStrictComparable);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_getMatchData.js



/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = lodash_es_keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, _isStrictComparable(value)];
  }
  return result;
}

/* harmony default export */ const _getMatchData = (getMatchData);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_matchesStrictComparable.js
/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/* harmony default export */ const _matchesStrictComparable = (matchesStrictComparable);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseMatches.js




/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = _getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return _matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || _baseIsMatch(object, source, matchData);
  };
}

/* harmony default export */ const _baseMatches = (baseMatches);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_isKey.js



/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (lodash_es_isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || lodash_es_isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/* harmony default export */ const _isKey = (isKey);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/memoize.js


/** Error message constants. */
var memoize_FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(memoize_FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || _MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = _MapCache;

/* harmony default export */ const lodash_es_memoize = (memoize);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_memoizeCapped.js


/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = lodash_es_memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

/* harmony default export */ const _memoizeCapped = (memoizeCapped);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stringToPath.js


/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = _memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/* harmony default export */ const _stringToPath = (stringToPath);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayMap.js
/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/* harmony default export */ const _arrayMap = (arrayMap);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseToString.js





/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var _baseToString_symbolProto = _Symbol ? _Symbol.prototype : undefined,
    symbolToString = _baseToString_symbolProto ? _baseToString_symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (lodash_es_isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return _arrayMap(value, baseToString) + '';
  }
  if (lodash_es_isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/* harmony default export */ const _baseToString = (baseToString);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/toString.js


/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString_toString(value) {
  return value == null ? '' : _baseToString(value);
}

/* harmony default export */ const lodash_es_toString = (toString_toString);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_castPath.js





/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (lodash_es_isArray(value)) {
    return value;
  }
  return _isKey(value, object) ? [value] : _stringToPath(lodash_es_toString(value));
}

/* harmony default export */ const _castPath = (castPath);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_toKey.js


/** Used as references for various `Number` constants. */
var _toKey_INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || lodash_es_isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -_toKey_INFINITY) ? '-0' : result;
}

/* harmony default export */ const _toKey = (toKey);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseGet.js



/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = _castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[_toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/* harmony default export */ const _baseGet = (baseGet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/get.js


/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : _baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

/* harmony default export */ const lodash_es_get = (get);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseHasIn.js
/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/* harmony default export */ const _baseHasIn = (baseHasIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hasPath.js







/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = _castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = _toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && lodash_es_isLength(length) && _isIndex(key, length) &&
    (lodash_es_isArray(object) || lodash_es_isArguments(object));
}

/* harmony default export */ const _hasPath = (hasPath);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/hasIn.js



/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && _hasPath(object, path, _baseHasIn);
}

/* harmony default export */ const lodash_es_hasIn = (hasIn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseMatchesProperty.js








/** Used to compose bitmasks for value comparisons. */
var _baseMatchesProperty_COMPARE_PARTIAL_FLAG = 1,
    _baseMatchesProperty_COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (_isKey(path) && _isStrictComparable(srcValue)) {
    return _matchesStrictComparable(_toKey(path), srcValue);
  }
  return function(object) {
    var objValue = lodash_es_get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? lodash_es_hasIn(object, path)
      : _baseIsEqual(srcValue, objValue, _baseMatchesProperty_COMPARE_PARTIAL_FLAG | _baseMatchesProperty_COMPARE_UNORDERED_FLAG);
  };
}

/* harmony default export */ const _baseMatchesProperty = (baseMatchesProperty);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseProperty.js
/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ const _baseProperty = (baseProperty);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_basePropertyDeep.js


/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return _baseGet(object, path);
  };
}

/* harmony default export */ const _basePropertyDeep = (basePropertyDeep);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/property.js





/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return _isKey(path) ? _baseProperty(_toKey(path)) : _basePropertyDeep(path);
}

/* harmony default export */ const lodash_es_property = (property);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIteratee.js






/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return lodash_es_identity;
  }
  if (typeof value == 'object') {
    return lodash_es_isArray(value)
      ? _baseMatchesProperty(value[0], value[1])
      : _baseMatches(value);
  }
  return lodash_es_property(value);
}

/* harmony default export */ const _baseIteratee = (baseIteratee);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseFindIndex.js
/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ const _baseFindIndex = (baseFindIndex);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIsNaN.js
/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/* harmony default export */ const _baseIsNaN = (baseIsNaN);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_strictIndexOf.js
/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/* harmony default export */ const _strictIndexOf = (strictIndexOf);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseIndexOf.js




/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? _strictIndexOf(array, value, fromIndex)
    : _baseFindIndex(array, _baseIsNaN, fromIndex);
}

/* harmony default export */ const _baseIndexOf = (baseIndexOf);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayIncludes.js


/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && _baseIndexOf(array, value, 0) > -1;
}

/* harmony default export */ const _arrayIncludes = (arrayIncludes);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayIncludesWith.js
/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/* harmony default export */ const _arrayIncludesWith = (arrayIncludesWith);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/noop.js
/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

/* harmony default export */ const lodash_es_noop = (noop);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createSet.js




/** Used as references for various `Number` constants. */
var _createSet_INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(_Set && (1 / _setToArray(new _Set([,-0]))[1]) == _createSet_INFINITY) ? lodash_es_noop : function(values) {
  return new _Set(values);
};

/* harmony default export */ const _createSet = (createSet);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseUniq.js







/** Used as the size to enable large array optimizations. */
var _baseUniq_LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = _arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = _arrayIncludesWith;
  }
  else if (length >= _baseUniq_LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : _createSet(array);
    if (set) {
      return _setToArray(set);
    }
    isCommon = false;
    includes = _cacheHas;
    seen = new _SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/* harmony default export */ const _baseUniq = (baseUniq);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/last.js
/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

/* harmony default export */ const lodash_es_last = (last);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/unionBy.js







/**
 * This method is like `_.union` except that it accepts `iteratee` which is
 * invoked for each element of each `arrays` to generate the criterion by
 * which uniqueness is computed. Result values are chosen from the first
 * array in which the value occurs. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.unionBy([2.1], [1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
var unionBy = _baseRest(function(arrays) {
  var iteratee = lodash_es_last(arrays);
  if (lodash_es_isArrayLikeObject(iteratee)) {
    iteratee = undefined;
  }
  return _baseUniq(_baseFlatten(arrays, 1, lodash_es_isArrayLikeObject, true), _baseIteratee(iteratee, 2));
});

/* harmony default export */ const lodash_es_unionBy = (unionBy);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/uniq.js


/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? _baseUniq(array) : [];
}

/* harmony default export */ const lodash_es_uniq = (uniq);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseClamp.js
/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

/* harmony default export */ const _baseClamp = (baseClamp);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/clamp.js



/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = lodash_es_toNumber(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = lodash_es_toNumber(lower);
    lower = lower === lower ? lower : 0;
  }
  return _baseClamp(lodash_es_toNumber(number), lower, upper);
}

/* harmony default export */ const lodash_es_clamp = (clamp);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/flatten.js


/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? _baseFlatten(array, 1) : [];
}

/* harmony default export */ const lodash_es_flatten = (flatten);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayAggregator.js
/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

/* harmony default export */ const _arrayAggregator = (arrayAggregator);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseForOwn.js



/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && _baseFor(object, iteratee, lodash_es_keys);
}

/* harmony default export */ const _baseForOwn = (baseForOwn);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createBaseEach.js


/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!lodash_es_isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

/* harmony default export */ const _createBaseEach = (createBaseEach);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseEach.js



/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = _createBaseEach(_baseForOwn);

/* harmony default export */ const _baseEach = (baseEach);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseAggregator.js


/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  _baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

/* harmony default export */ const _baseAggregator = (baseAggregator);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createAggregator.js





/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = lodash_es_isArray(collection) ? _arrayAggregator : _baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, _baseIteratee(iteratee, 2), accumulator);
  };
}

/* harmony default export */ const _createAggregator = (createAggregator);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/groupBy.js



/** Used for built-in method references. */
var groupBy_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var groupBy_hasOwnProperty = groupBy_objectProto.hasOwnProperty;

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The order of grouped values
 * is determined by the order they occur in `collection`. The corresponding
 * value of each key is an array of elements responsible for generating the
 * key. The iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * _.groupBy([6.1, 4.2, 6.3], Math.floor);
 * // => { '4': [4.2], '6': [6.1, 6.3] }
 *
 * // The `_.property` iteratee shorthand.
 * _.groupBy(['one', 'two', 'three'], 'length');
 * // => { '3': ['one', 'two'], '5': ['three'] }
 */
var groupBy = _createAggregator(function(result, value, key) {
  if (groupBy_hasOwnProperty.call(result, key)) {
    result[key].push(value);
  } else {
    _baseAssignValue(result, key, [value]);
  }
});

/* harmony default export */ const lodash_es_groupBy = (groupBy);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseSlice.js
/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/* harmony default export */ const _baseSlice = (baseSlice);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_castSlice.js


/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : _baseSlice(array, start, end);
}

/* harmony default export */ const _castSlice = (castSlice);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hasUnicode.js
/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/* harmony default export */ const _hasUnicode = (hasUnicode);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_asciiToArray.js
/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/* harmony default export */ const _asciiToArray = (asciiToArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_unicodeToArray.js
/** Used to compose unicode character classes. */
var _unicodeToArray_rsAstralRange = '\\ud800-\\udfff',
    _unicodeToArray_rsComboMarksRange = '\\u0300-\\u036f',
    _unicodeToArray_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    _unicodeToArray_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    _unicodeToArray_rsComboRange = _unicodeToArray_rsComboMarksRange + _unicodeToArray_reComboHalfMarksRange + _unicodeToArray_rsComboSymbolsRange,
    _unicodeToArray_rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + _unicodeToArray_rsAstralRange + ']',
    rsCombo = '[' + _unicodeToArray_rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + _unicodeToArray_rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    _unicodeToArray_rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + _unicodeToArray_rsVarRange + ']?',
    rsOptJoin = '(?:' + _unicodeToArray_rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/* harmony default export */ const _unicodeToArray = (unicodeToArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_stringToArray.js




/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return _hasUnicode(string)
    ? _unicodeToArray(string)
    : _asciiToArray(string);
}

/* harmony default export */ const _stringToArray = (stringToArray);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createCaseFirst.js





/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = lodash_es_toString(string);

    var strSymbols = _hasUnicode(string)
      ? _stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? _castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

/* harmony default export */ const _createCaseFirst = (createCaseFirst);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/upperFirst.js


/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = _createCaseFirst('toUpperCase');

/* harmony default export */ const lodash_es_upperFirst = (upperFirst);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/capitalize.js



/**
 * Converts the first character of `string` to upper case and the remaining
 * to lower case.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to capitalize.
 * @returns {string} Returns the capitalized string.
 * @example
 *
 * _.capitalize('FRED');
 * // => 'Fred'
 */
function capitalize(string) {
  return lodash_es_upperFirst(lodash_es_toString(string).toLowerCase());
}

/* harmony default export */ const lodash_es_capitalize = (capitalize);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_arrayReduce.js
/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

/* harmony default export */ const _arrayReduce = (arrayReduce);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_basePropertyOf.js
/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

/* harmony default export */ const _basePropertyOf = (basePropertyOf);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_deburrLetter.js


/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = _basePropertyOf(deburredLetters);

/* harmony default export */ const _deburrLetter = (deburrLetter);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/deburr.js



/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var deburr_rsComboMarksRange = '\\u0300-\\u036f',
    deburr_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    deburr_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    deburr_rsComboRange = deburr_rsComboMarksRange + deburr_reComboHalfMarksRange + deburr_rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var deburr_rsCombo = '[' + deburr_rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(deburr_rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = lodash_es_toString(string);
  return string && string.replace(reLatin, _deburrLetter).replace(reComboMark, '');
}

/* harmony default export */ const lodash_es_deburr = (deburr);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_asciiWords.js
/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

/* harmony default export */ const _asciiWords = (asciiWords);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_hasUnicodeWord.js
/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

/* harmony default export */ const _hasUnicodeWord = (hasUnicodeWord);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_unicodeWords.js
/** Used to compose unicode character classes. */
var _unicodeWords_rsAstralRange = '\\ud800-\\udfff',
    _unicodeWords_rsComboMarksRange = '\\u0300-\\u036f',
    _unicodeWords_reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    _unicodeWords_rsComboSymbolsRange = '\\u20d0-\\u20ff',
    _unicodeWords_rsComboRange = _unicodeWords_rsComboMarksRange + _unicodeWords_reComboHalfMarksRange + _unicodeWords_rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    _unicodeWords_rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    _unicodeWords_rsCombo = '[' + _unicodeWords_rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + _unicodeWords_rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    _unicodeWords_rsFitz = '\\ud83c[\\udffb-\\udfff]',
    _unicodeWords_rsModifier = '(?:' + _unicodeWords_rsCombo + '|' + _unicodeWords_rsFitz + ')',
    _unicodeWords_rsNonAstral = '[^' + _unicodeWords_rsAstralRange + ']',
    _unicodeWords_rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    _unicodeWords_rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    _unicodeWords_rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    _unicodeWords_reOptMod = _unicodeWords_rsModifier + '?',
    _unicodeWords_rsOptVar = '[' + _unicodeWords_rsVarRange + ']?',
    _unicodeWords_rsOptJoin = '(?:' + _unicodeWords_rsZWJ + '(?:' + [_unicodeWords_rsNonAstral, _unicodeWords_rsRegional, _unicodeWords_rsSurrPair].join('|') + ')' + _unicodeWords_rsOptVar + _unicodeWords_reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    _unicodeWords_rsSeq = _unicodeWords_rsOptVar + _unicodeWords_reOptMod + _unicodeWords_rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, _unicodeWords_rsRegional, _unicodeWords_rsSurrPair].join('|') + ')' + _unicodeWords_rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

/* harmony default export */ const _unicodeWords = (unicodeWords);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/words.js





/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = lodash_es_toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return _hasUnicodeWord(string) ? _unicodeWords(string) : _asciiWords(string);
  }
  return string.match(pattern) || [];
}

/* harmony default export */ const lodash_es_words = (words);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_createCompounder.js




/** Used to compose unicode capture groups. */
var _createCompounder_rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(_createCompounder_rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return _arrayReduce(lodash_es_words(lodash_es_deburr(string).replace(reApos, '')), callback, '');
  };
}

/* harmony default export */ const _createCompounder = (createCompounder);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/camelCase.js



/**
 * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the camel cased string.
 * @example
 *
 * _.camelCase('Foo Bar');
 * // => 'fooBar'
 *
 * _.camelCase('--foo-bar--');
 * // => 'fooBar'
 *
 * _.camelCase('__FOO_BAR__');
 * // => 'fooBar'
 */
var camelCase = _createCompounder(function(result, word, index) {
  word = word.toLowerCase();
  return result + (index ? lodash_es_capitalize(word) : word);
});

/* harmony default export */ const lodash_es_camelCase = (camelCase);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isEmpty.js









/** `Object#toString` result references. */
var isEmpty_mapTag = '[object Map]',
    isEmpty_setTag = '[object Set]';

/** Used for built-in method references. */
var isEmpty_objectProto = Object.prototype;

/** Used to check objects for own properties. */
var isEmpty_hasOwnProperty = isEmpty_objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (lodash_es_isArrayLike(value) &&
      (lodash_es_isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        lodash_es_isBuffer(value) || lodash_es_isTypedArray(value) || lodash_es_isArguments(value))) {
    return !value.length;
  }
  var tag = _getTag(value);
  if (tag == isEmpty_mapTag || tag == isEmpty_setTag) {
    return !value.size;
  }
  if (_isPrototype(value)) {
    return !_baseKeys(value).length;
  }
  for (var key in value) {
    if (isEmpty_hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

/* harmony default export */ const lodash_es_isEmpty = (isEmpty);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/isEqual.js


/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return _baseIsEqual(value, other);
}

/* harmony default export */ const lodash_es_isEqual = (isEqual);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseMap.js



/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = lodash_es_isArrayLike(collection) ? Array(collection.length) : [];

  _baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

/* harmony default export */ const _baseMap = (baseMap);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/map.js





/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = lodash_es_isArray(collection) ? _arrayMap : _baseMap;
  return func(collection, _baseIteratee(iteratee, 3));
}

/* harmony default export */ const lodash_es_map = (map);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/flatMapDeep.js



/** Used as references for various `Number` constants. */
var flatMapDeep_INFINITY = 1 / 0;

/**
 * This method is like `_.flatMap` except that it recursively flattens the
 * mapped results.
 *
 * @static
 * @memberOf _
 * @since 4.7.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [[[n, n]]];
 * }
 *
 * _.flatMapDeep([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMapDeep(collection, iteratee) {
  return _baseFlatten(lodash_es_map(collection, iteratee), flatMapDeep_INFINITY);
}

/* harmony default export */ const lodash_es_flatMapDeep = (flatMapDeep);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/kebabCase.js


/**
 * Converts `string` to
 * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the kebab cased string.
 * @example
 *
 * _.kebabCase('Foo Bar');
 * // => 'foo-bar'
 *
 * _.kebabCase('fooBar');
 * // => 'foo-bar'
 *
 * _.kebabCase('__FOO_BAR__');
 * // => 'foo-bar'
 */
var kebabCase = _createCompounder(function(result, word, index) {
  return result + (index ? '-' : '') + word.toLowerCase();
});

/* harmony default export */ const lodash_es_kebabCase = (kebabCase);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/fromPairs.js
/**
 * The inverse of `_.toPairs`; this method returns an object composed
 * from key-value `pairs`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} pairs The key-value pairs.
 * @returns {Object} Returns the new object.
 * @example
 *
 * _.fromPairs([['a', 1], ['b', 2]]);
 * // => { 'a': 1, 'b': 2 }
 */
function fromPairs(pairs) {
  var index = -1,
      length = pairs == null ? 0 : pairs.length,
      result = {};

  while (++index < length) {
    var pair = pairs[index];
    result[pair[0]] = pair[1];
  }
  return result;
}

/* harmony default export */ const lodash_es_fromPairs = (fromPairs);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/_baseSome.js


/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;

  _baseEach(collection, function(value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

/* harmony default export */ const _baseSome = (baseSome);

;// CONCATENATED MODULE: ../../node_modules/lodash-es/some.js






/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = lodash_es_isArray(collection) ? _arraySome : _baseSome;
  if (guard && _isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, _baseIteratee(predicate, 3));
}

/* harmony default export */ const lodash_es_some = (some);

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/sourceEvent.js
/* harmony default export */ function sourceEvent(event) {
  let sourceEvent;
  while (sourceEvent = event.sourceEvent) event = sourceEvent;
  return event;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/pointer.js


/* harmony default export */ function pointer(event, node) {
  event = sourceEvent(event);
  if (node === undefined) node = event.currentTarget;
  if (node) {
    var svg = node.ownerSVGElement || node;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }
    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }
  return [event.pageX, event.pageY];
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/tools.js
// Internal imports



// D3 Imports
// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function

// Functions
var Tools;
(function (Tools) {
    // Export these functions from lodash
    Tools.debounce = lodash_es_debounce;
    Tools.clone = lodash_es_cloneDeep;
    Tools.merge = lodash_es_merge;
    Tools.unionBy = lodash_es_unionBy;
    Tools.removeArrayDuplicates = lodash_es_uniq;
    Tools.clamp = lodash_es_clamp;
    Tools.flatten = lodash_es_flatten;
    Tools.groupBy = lodash_es_groupBy;
    Tools.camelCase = lodash_es_camelCase;
    Tools.isEmpty = lodash_es_isEmpty;
    Tools.isEqual = lodash_es_isEqual;
    Tools.flatMapDeep = lodash_es_flatMapDeep;
    Tools.kebabCase = lodash_es_kebabCase;
    Tools.fromPairs = lodash_es_fromPairs;
    Tools.some = lodash_es_some;
    function debounceWithD3MousePosition(fn, delay, holder) {
        var timer = null;
        return function () {
            var context = this;
            var args = arguments;
            //we get the D3 event here
            context.mousePosition = pointer(args[0], holder);
            clearTimeout(timer);
            timer = setTimeout(function () {
                // and use the reference here
                fn.apply(context, args);
            }, delay);
        };
    }
    Tools.debounceWithD3MousePosition = debounceWithD3MousePosition;
    /**
     * Returns default chart options merged with provided options,
     * with special cases for axes.
     * Axes object will not merge the not provided axes.
     *
     * @export
     * @param {AxisChartOptions} defaultOptions Configuration.options[chartType]
     * @param {AxisChartOptions} providedOptions user provided options
     * @returns merged options
     */
    function mergeDefaultChartOptions(defaultOptions, providedOptions) {
        var _a, _b;
        var clonedDefaultOptions = Tools.clone(defaultOptions);
        var providedAxesNames = Object.keys(providedOptions.axes || {});
        // Use provide controls list if it exists
        // Prevents merging and element overriding of the two lists
        if ((_b = (_a = providedOptions) === null || _a === void 0 ? void 0 : _a.toolbar) === null || _b === void 0 ? void 0 : _b.controls) {
            delete clonedDefaultOptions.toolbar.controls;
        }
        if (providedAxesNames.length === 0) {
            delete clonedDefaultOptions.axes;
        }
        // Update deprecated options to work with the tabular data format
        // Similar to the functionality in model.transformToTabularData()
        for (var axisName in clonedDefaultOptions.axes) {
            if (providedAxesNames.includes(axisName)) {
                var providedAxisOptions = providedOptions.axes[axisName];
                if (providedAxisOptions['primary'] ||
                    providedAxisOptions['secondary']) {
                    console.warn('`primary` & `secondary` are no longer needed for axis configurations. Read more here https://carbon-design-system.github.io/carbon-charts/?path=/story/docs-tutorials--tabular-data-format');
                }
                var identifier = providedAxisOptions['mapsTo'];
                if (identifier === undefined || identifier === null) {
                    var scaleType = providedAxisOptions['scaleType'];
                    if (scaleType === undefined || scaleType === null) {
                        providedAxisOptions['mapsTo'] = 'value';
                    }
                    else if (scaleType === interfaces.ScaleTypes.TIME) {
                        providedAxisOptions['mapsTo'] = 'date';
                    }
                    else if (scaleType === interfaces.ScaleTypes.LABELS) {
                        providedAxisOptions['mapsTo'] = 'key';
                    }
                }
            }
            else {
                delete clonedDefaultOptions.axes[axisName];
            }
        }
        updateLegendAdditionalItems(clonedDefaultOptions, providedOptions);
        return Tools.merge(clonedDefaultOptions, providedOptions);
    }
    Tools.mergeDefaultChartOptions = mergeDefaultChartOptions;
    /**************************************
     *  DOM-related operations            *
     *************************************/
    /**
     * Get width & height of an element
     *
     * @export
     * @param {any} el element to get dimensions from
     * @returns an object containing the width and height of el
     */
    function getDimensions(el) {
        return {
            width: parseFloat(el.style.width.replace('px', '') || el.offsetWidth),
            height: parseFloat(el.style.height.replace('px', '') || el.offsetHeight),
        };
    }
    Tools.getDimensions = getDimensions;
    /**
     * Gets elements's x and y translations from transform attribute or returns null
     *
     * @param {HTMLElement} element
     * @returns an object containing the translated x and y values or null
     */
    function getTranslationValues(elementRef) {
        if (!elementRef) {
            return;
        }
        // regex to ONLY get values for translate (instead of all rotate, translate, skew, etc)
        var translateRegex = /translate\([0-9]+\.?[0-9]*,[0-9]+\.?[0-9]*\)/;
        var transformStr = elementRef
            .getAttribute('transform')
            .match(translateRegex);
        if (!transformStr) {
            return null;
        }
        // check for the match
        if (transformStr[0]) {
            var transforms = transformStr[0]
                .replace(/translate\(/, '')
                .replace(/\)/, '')
                .split(',');
            return {
                tx: transforms[0],
                ty: transforms[1],
            };
        }
        return null;
    }
    Tools.getTranslationValues = getTranslationValues;
    /**************************************
     *  Formatting & calculations         *
     *************************************/
    /**
     * Gets x and y coordinates from HTML transform attribute
     *
     * @export
     * @param {any} string the transform attribute string ie. transform(x,y)
     * @returns Returns an object with x and y offsets of the transform
     */
    function getTranformOffsets(string) {
        var regExp = /\(([^)]+)\)/;
        var match = regExp.exec(string)[1];
        var xyString = match.split(',');
        return {
            x: parseFloat(xyString[0]),
            y: parseFloat(xyString[1]),
        };
    }
    Tools.getTranformOffsets = getTranformOffsets;
    /**
     * Returns string value for height/width using pixels if there isn't a specified unit of measure
     *
     * @param value string or number value to be checked for unit of measure
     */
    function formatWidthHeightValues(value) {
        var stringValue = value.toString();
        // If the value provided contains any letters
        // Return it the same way
        if (stringValue.match(/[a-z]/i)) {
            return stringValue;
        }
        return stringValue + 'px';
    }
    Tools.formatWidthHeightValues = formatWidthHeightValues;
    /**
     * Capitalizes first letter of a string
     *
     * @export
     * @param {any} string the input string to perform first letter capitalization with
     * @returns The transformed string after first letter is capitalized
     */
    function capitalizeFirstLetter(string) {
        return string[0].toUpperCase() + string.slice(1);
    }
    Tools.capitalizeFirstLetter = capitalizeFirstLetter;
    /**
     * Get the percentage of a datapoint compared to the entire dataset.
     * @export
     * @param {any} item
     * @param {any} fullData
     * @param {string} key
     * @returns The percentage in the form of a number (1 significant digit if necessary)
     */
    function convertValueToPercentage(item, fullData, key) {
        if (key === void 0) { key = 'value'; }
        var percentage = (item / fullData.reduce(function (accum, val) { return accum + val[key]; }, 0)) * 100;
        // if the value has any significant figures, keep 1
        return percentage % 1 !== 0
            ? parseFloat(percentage.toFixed(1))
            : percentage;
    }
    Tools.convertValueToPercentage = convertValueToPercentage;
    /**
     * Truncate the labels
     * @export
     * @param {any} fullText
     * @param {any} truncationType
     * @param {any} numCharacter
     * @returns Truncated text
     */
    function truncateLabel(fullText, truncationType, numCharacter) {
        if (numCharacter > fullText.length) {
            return fullText;
        }
        if (truncationType === interfaces.TruncationTypes.MID_LINE) {
            return (fullText.substr(0, numCharacter / 2) +
                '...' +
                fullText.substr(-numCharacter / 2));
        }
        else if (truncationType === interfaces.TruncationTypes.FRONT_LINE) {
            return '...' + fullText.substr(-numCharacter);
        }
        else if (truncationType === interfaces.TruncationTypes.END_LINE) {
            return fullText.substr(0, numCharacter) + '...';
        }
    }
    Tools.truncateLabel = truncateLabel;
    /**
     * Update legend additional items
     * @param {any} defaultOptions
     * @param {any} providedOptions
     */
    function updateLegendAdditionalItems(defaultOptions, providedOptions) {
        var defaultAdditionalItems = Tools.getProperty(defaultOptions, 'legend', 'additionalItems');
        var userProvidedAdditionalItems = Tools.getProperty(providedOptions, 'legend', 'additionalItems');
        // Retain default legend additional items
        if (defaultAdditionalItems && userProvidedAdditionalItems) {
            var providedTypes_1 = userProvidedAdditionalItems.map(function (item) { return item.type; });
            var defaultTypes_1 = defaultAdditionalItems.map(function (item) { return item.type; });
            // Get default items in default options but not in provided options
            var updatedDefaultItems = defaultLegendAdditionalItems.filter(function (item) {
                return defaultTypes_1.includes(item.type) &&
                    !providedTypes_1.includes(item.type);
            });
            defaultOptions.legend.additionalItems = updatedDefaultItems;
            providedOptions.legend.additionalItems = Tools.unionBy(updatedDefaultItems, userProvidedAdditionalItems, 'name');
        }
    }
    Tools.updateLegendAdditionalItems = updateLegendAdditionalItems;
    /**************************************
     *  Object/array related checks       *
     *************************************/
    /**
     * Compares two arrays to return the difference between two arrays' items.
     *
     * @export
     * @param {any[]} oldArray the array to check for missing items
     * @param {any[]} newArray the array to check for newly added items
     * @returns An object containing items missing (existing in oldArray but not newArray)
     * and items added (existing in newArray but not in oldArray). Object is of the form { missing: [], added: [] }
     */
    function arrayDifferences(oldArray, newArray) {
        var difference = {
            missing: [],
            added: [],
        };
        oldArray.forEach(function (element) {
            if (newArray.indexOf(element) === -1) {
                difference.missing.push(element);
            }
        });
        newArray.forEach(function (element) {
            if (oldArray.indexOf(element) === -1) {
                difference.added.push(element);
            }
        });
        return difference;
    }
    Tools.arrayDifferences = arrayDifferences;
    /**
     * Gets the duplicated keys from an array of data
     *
     * @export
     * @param {*} data - array of data
     * @returns A list of the duplicated keys in data
     */
    function getDuplicateValues(arr) {
        var values = [];
        var duplicateValues = [];
        arr.forEach(function (value) {
            if (values.indexOf(value) !== -1 &&
                duplicateValues.indexOf(value) === -1) {
                duplicateValues.push(value);
            }
            values.push(value);
        });
        return duplicateValues;
    }
    Tools.getDuplicateValues = getDuplicateValues;
    // ================================================================================
    // D3 Extensions
    // ================================================================================
    /**
     * In D3, moves an element to the front of the canvas
     *
     * @export
     * @param {any} element input element to moved in front
     * @returns The function to be used by D3 to push element to the top of the canvas
     */
    function moveToFront(element) {
        return element.each(function () {
            this.parentNode.appendChild(this);
        });
    }
    Tools.moveToFront = moveToFront;
    // ================================================================================
    // Style Helpers
    // ================================================================================
    /**
     * Gets a speicified property from within an object.
     *
     * @param object the object containing the property to retrieve
     * @param propPath nested properties used to extract the final property from within the object
     * (i.e "style", "color" would retrieve the color property from within an object that has "color" nested within "style")
     */
    Tools.getProperty = function (object) {
        var propPath = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            propPath[_i - 1] = arguments[_i];
        }
        var position = object;
        if (position) {
            for (var _a = 0, propPath_1 = propPath; _a < propPath_1.length; _a++) {
                var prop = propPath_1[_a];
                if (position[prop] !== null && position[prop] !== undefined) {
                    position = position[prop];
                }
                else {
                    return null;
                }
            }
            return position;
        }
        return null;
    };
    Tools.flipSVGCoordinatesBasedOnOrientation = function (verticalCoordinates, orientation) {
        if (orientation === interfaces.CartesianOrientations.HORIZONTAL) {
            return {
                y0: verticalCoordinates.x0,
                y1: verticalCoordinates.x1,
                x0: verticalCoordinates.y0,
                x1: verticalCoordinates.y1,
            };
        }
        return verticalCoordinates;
    };
    Tools.generateSVGPathString = function (verticalCoordinates, orientation) {
        var _a = Tools.flipSVGCoordinatesBasedOnOrientation(verticalCoordinates, orientation), x0 = _a.x0, x1 = _a.x1, y0 = _a.y0, y1 = _a.y1;
        return "M" + x0 + "," + y0 + "L" + x0 + "," + y1 + "L" + x1 + "," + y1 + "L" + x1 + "," + y0 + "L" + x0 + "," + y0;
    };
    function flipDomainAndRangeBasedOnOrientation(domain, range, orientation) {
        return orientation === interfaces.CartesianOrientations.VERTICAL
            ? [domain, range]
            : [range, domain];
    }
    Tools.flipDomainAndRangeBasedOnOrientation = flipDomainAndRangeBasedOnOrientation;
    Tools.compareNumeric = function (a, b) {
        return Number(a) === Number(b);
    };
})(Tools || (Tools = {}));
//# sourceMappingURL=../src/tools.js.map
// EXTERNAL MODULE: ../../node_modules/date-fns/locale/en-US/index.js
var en_US = __webpack_require__(626);
var en_US_default = /*#__PURE__*/__webpack_require__.n(en_US);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/configuration.js
var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};




/*
 *****************************
 * User configurable options *
 *****************************
 */
/**
 * Default truncation configuration
 */
var standardTruncationOptions = {
    type: interfaces.TruncationTypes.END_LINE,
    threshold: 16,
    numCharacter: 14,
};
/**
 * Legend options
 */
var legend = {
    enabled: true,
    position: interfaces.LegendPositions.BOTTOM,
    clickable: true,
    truncation: standardTruncationOptions,
    alignment: interfaces.Alignments.LEFT,
    order: null,
    additionalItems: [],
};
/**
 * Grid options
 */
var grid = {
    x: {
        // set enable to false will not draw grid and stroke of grid backdrop
        enabled: true,
        numberOfTicks: 15,
        alignWithAxisTicks: false,
    },
    y: {
        // set enable to false will not draw grid and stroke of grid backdrop
        enabled: true,
        numberOfTicks: 5,
        alignWithAxisTicks: false,
    },
};
/**
 * Ruler options
 */
var ruler = {
    // enable or disable ruler
    enabled: true,
};
/**
 * Tooltip options
 */
var baseTooltip = {
    enabled: true,
    showTotal: true,
    truncation: standardTruncationOptions,
    groupLabel: 'Group',
};
// These options will be managed by Tools.mergeDefaultChartOptions
// by removing the ones the user is not providing,
// and by TwoDimensionalAxes.
var axes = {
    top: {
        visible: true,
        includeZero: true,
        truncation: standardTruncationOptions,
    },
    bottom: {
        visible: true,
        includeZero: true,
        truncation: standardTruncationOptions,
    },
    left: {
        visible: true,
        includeZero: true,
        truncation: standardTruncationOptions,
    },
    right: {
        visible: true,
        includeZero: true,
        truncation: standardTruncationOptions,
    },
};
var timeScale = {
    addSpaceOnEdges: 1,
    showDayName: false,
    localeObject: (en_US_default()),
    timeIntervalFormats: {
        '15seconds': { primary: 'MMM d, pp', secondary: 'pp' },
        minute: { primary: 'MMM d, p', secondary: 'p' },
        '30minutes': { primary: 'MMM d, p', secondary: 'p' },
        hourly: { primary: 'MMM d, hh a', secondary: 'hh a' },
        daily: { primary: 'MMM d', secondary: 'd' },
        weekly: { primary: 'eee, MMM d', secondary: 'eee' },
        monthly: { primary: 'MMM yyyy', secondary: 'MMM' },
        quarterly: { primary: "QQQ ''yy", secondary: 'QQQ' },
        yearly: { primary: 'yyyy', secondary: 'yyyy' },
    },
};
var isFullScreenEnabled = typeof document !== 'undefined' &&
    (document['fullscreenEnabled'] ||
        document['webkitFullscreenEnabled'] ||
        document['mozFullScreenEnabled'] ||
        document['msFullscreenEnabled']);
/**
 * Base chart options common to any chart
 */
var chart = {
    width: null,
    height: null,
    resizable: true,
    tooltip: baseTooltip,
    legend: legend,
    style: {
        prefix: 'cc',
    },
    data: {
        groupMapsTo: 'group',
        loading: false,
        selectedGroups: [],
    },
    color: {
        scale: null,
        pairing: {
            numberOfVariants: null,
            option: 1,
        },
        gradient: {
            enabled: false,
        },
    },
    toolbar: {
        enabled: true,
        numberOfIcons: 3,
        controls: __spreadArrays([
            {
                type: interfaces.ToolbarControlTypes.SHOW_AS_DATATABLE,
            }
        ], (isFullScreenEnabled
            ? [
                {
                    type: interfaces.ToolbarControlTypes.MAKE_FULLSCREEN,
                },
            ]
            : []), [
            {
                type: interfaces.ToolbarControlTypes.EXPORT_CSV,
            },
            {
                type: interfaces.ToolbarControlTypes.EXPORT_PNG,
            },
            {
                type: interfaces.ToolbarControlTypes.EXPORT_JPG,
            },
        ]),
    },
};
/**
 * Options common to any chart with an axis
 */
var axisChart = Tools.merge({}, chart, {
    axes: axes,
    timeScale: timeScale,
    grid: grid,
    ruler: ruler,
    zoomBar: {
        zoomRatio: 0.4,
        minZoomRatio: 0.01,
        top: {
            enabled: false,
            type: interfaces.ZoomBarTypes.GRAPH_VIEW,
        },
    },
});
/**
 * options specific to simple bar charts
 */
var baseBarChart = Tools.merge({}, axisChart, {
    bars: {
        maxWidth: 16,
    },
    timeScale: Tools.merge(timeScale, {
        addSpaceOnEdges: 1,
    }),
});
/**
 * options specific to simple bar charts
 */
var simpleBarChart = Tools.merge({}, baseBarChart, {});
/**
 * options specific to simple bar charts
 */
var groupedBarChart = Tools.merge({}, baseBarChart, {});
/**
 * options specific to stacked bar charts
 */
var stackedBarChart = Tools.merge({}, baseBarChart, {
    bars: Tools.merge({}, baseBarChart.bars, {
        dividerSize: 1.5,
    }),
});
/**
 * options specific to boxplot charts
 */
var boxplotChart = Tools.merge({}, baseBarChart, {});
/**
 * options specific to scatter charts
 */
var scatterChart = Tools.merge({}, axisChart, {
    points: {
        // default point radius to 4
        radius: 4,
        fillOpacity: 0.3,
        filled: true,
        enabled: true,
    },
});
/**
 * options specific to lollipop charts
 */
var lollipopChart = scatterChart;
/**
 * options specific to line charts
 */
var lineChart = Tools.merge({}, scatterChart, {
    points: {
        // default point radius to 3
        radius: 3,
        filled: false,
        enabled: true,
    },
});
/**
 * options specific to area charts
 */
var areaChart = Tools.merge({}, lineChart, {
    timeScale: Tools.merge(timeScale, {
        addSpaceOnEdges: 0,
    }),
});
/**
 * options specific to stacked area charts
 */
var stackedAreaChart = areaChart;
/**
 * options specific to bubble charts
 */
var bubbleChart = Tools.merge({}, axisChart, {
    bubble: {
        radiusMapsTo: 'radius',
        radiusLabel: 'Radius',
        radiusRange: function (chartSize, data) {
            var smallerChartDimension = Math.min(chartSize.width, chartSize.height);
            return [
                (smallerChartDimension * 3) / 400,
                (smallerChartDimension * 25) / 400,
            ];
        },
        fillOpacity: 0.2,
        enabled: true,
    },
    points: {
        filled: true,
    },
    legend: {
        additionalItems: [
            {
                type: interfaces.LegendItemType.RADIUS,
                name: 'Radius',
            },
        ],
    },
});
/**
 * options specific to bullet charts
 */
var bulletChart = Tools.merge({}, axisChart, {
    bullet: {
        performanceAreaTitles: ['Poor', 'Satisfactory', 'Great'],
    },
    grid: {
        x: {
            enabled: false,
        },
        y: {
            enabled: false,
        },
    },
    legend: {
        additionalItems: [
            {
                type: interfaces.LegendItemType.AREA,
                name: 'Poor area',
            },
            {
                type: interfaces.LegendItemType.AREA,
                name: 'Satisfactory area',
            },
            {
                type: interfaces.LegendItemType.AREA,
                name: 'Great area',
            },
            {
                type: interfaces.LegendItemType.QUARTILE,
                name: 'Quartiles',
            },
        ],
    },
});
/**
 * options specific to stacked bar charts
 */
var histogramChart = Tools.merge({}, baseBarChart, {
    bars: {
        dividerSize: 1.5,
    },
    timeScale: Tools.merge(timeScale, {
        addSpaceOnEdges: 0,
    }),
});
/*
 * options specific to word cloud charts
 */
var wordCloudChart = Tools.merge({}, chart, {
    tooltip: Tools.merge({}, baseTooltip, {
        wordLabel: 'Word',
        valueLabel: 'Value',
    }),
    wordCloud: {
        fontSizeMapsTo: 'value',
        fontSizeRange: function (chartSize, data) {
            var smallerChartDimension = Math.min(chartSize.width, chartSize.height);
            return [
                (smallerChartDimension * 20) / 400,
                (smallerChartDimension * 75) / 400,
            ];
        },
        wordMapsTo: 'word',
    },
});
/**
 * options specific to pie charts
 */
var pieChart = Tools.merge({}, chart, {
    pie: {
        labels: {
            formatter: null,
            enabled: true,
        },
        alignment: interfaces.Alignments.LEFT,
        sortFunction: null,
        valueMapsTo: 'value',
    },
});
/**
 * options specific to gauge charts
 */
var gaugeChart = Tools.merge({}, chart, {
    legend: {
        enabled: false,
    },
    gauge: {
        type: interfaces.GaugeTypes.SEMI,
        arcWidth: 16,
        deltaArrow: {
            size: function (radius) { return radius / 8; },
            enabled: true,
        },
        showPercentageSymbol: true,
        status: null,
        numberSpacing: 10,
        deltaFontSize: function (radius) { return radius / 8; },
        valueFontSize: function (radius) { return radius / 2.5; },
        numberFormatter: function (number) {
            return number.toFixed(2) % 1 !== 0
                ? number.toFixed(2).toLocaleString()
                : number.toFixed().toLocaleString();
        },
        alignment: interfaces.Alignments.LEFT,
    },
});
/**
 * options specific to donut charts
 */
var donutChart = Tools.merge({}, pieChart, {
    donut: {
        center: {
            numberFontSize: function (radius) {
                return Math.min((radius / 100) * 24, 24) + 'px';
            },
            titleFontSize: function (radius) { return Math.min((radius / 100) * 15, 15) + 'px'; },
            titleYPosition: function (radius) { return Math.min((radius / 80) * 20, 20); },
            numberFormatter: function (number) { return Math.floor(number).toLocaleString(); },
        },
        alignment: interfaces.Alignments.LEFT,
    },
});
var meterChart = Tools.merge({}, chart, {
    legend: {
        enabled: false,
        clickable: false,
    },
    meter: {
        proportional: null,
        statusBar: {
            percentageIndicator: {
                enabled: true,
            },
        },
    },
});
var proportionalMeterChart = Tools.merge({}, meterChart, {
    legend: {
        enabled: true,
    },
});
/**
 * options specific to radar charts
 */
var radarChart = Tools.merge({}, chart, {
    radar: {
        axes: {
            angle: 'key',
            value: 'value',
        },
        alignment: interfaces.Alignments.LEFT,
    },
    tooltip: {
        gridline: {
            enabled: true,
        },
        valueFormatter: function (value) {
            return value !== null && value !== undefined ? value : 'N/A';
        },
    },
});
/**
 * options specific to combo charts
 */
var comboChart = Tools.merge({}, baseBarChart, {
    comboChartTypes: [],
});
/*
 * options specific to tree charts
 */
var treeChart = Tools.merge({
    tree: {
        type: interfaces.TreeTypes.TREE,
    },
}, chart, {});
/*
 * options specific to treemap charts
 */
var treemapChart = Tools.merge({}, chart, {
    data: Tools.merge(chart.data, {
        groupMapsTo: 'name',
    }),
});
/*
 * options specific to circle pack charts
 */
var circlePackChart = Tools.merge({}, chart, circlePack, {
    data: Tools.merge(chart.data, {
        groupMapsTo: 'name',
    }),
});
var alluvialChart = Tools.merge({}, chart, {
    alluvial: {
        data: Tools.merge(chart.data, {
            groupMapsTo: 'source',
        }),
        nodePadding: 24,
        monochrome: false,
        nodes: [],
    },
});
var heatmapChart = Tools.merge({}, chart, {
    axes: axes,
    heatmap: {
        divider: {
            state: interfaces.DividerStatus.AUTO,
        },
        colorLegend: {
            type: 'linear',
        },
    },
});
var configuration_options = {
    chart: chart,
    axisChart: axisChart,
    simpleBarChart: simpleBarChart,
    groupedBarChart: groupedBarChart,
    stackedBarChart: stackedBarChart,
    boxplotChart: boxplotChart,
    bubbleChart: bubbleChart,
    bulletChart: bulletChart,
    histogramChart: histogramChart,
    lineChart: lineChart,
    areaChart: areaChart,
    stackedAreaChart: stackedAreaChart,
    scatterChart: scatterChart,
    lollipopChart: lollipopChart,
    pieChart: pieChart,
    donutChart: donutChart,
    meterChart: meterChart,
    proportionalMeterChart: proportionalMeterChart,
    radarChart: radarChart,
    gaugeChart: gaugeChart,
    comboChart: comboChart,
    treeChart: treeChart,
    treemapChart: treemapChart,
    circlePackChart: circlePackChart,
    wordCloudChart: wordCloudChart,
    alluvialChart: alluvialChart,
    heatmapChart: heatmapChart,
};

//# sourceMappingURL=../src/configuration.js.map
;// CONCATENATED MODULE: ../../node_modules/internmap/src/index.js
class InternMap extends Map {
  constructor(entries, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (entries != null) for (const [key, value] of entries) this.set(key, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}

class InternSet extends Set {
  constructor(values, key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    if (values != null) for (const value of values) this.add(value);
  }
  has(value) {
    return super.has(intern_get(this, value));
  }
  add(value) {
    return super.add(intern_set(this, value));
  }
  delete(value) {
    return super.delete(intern_delete(this, value));
  }
}

function intern_get({_intern, _key}, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) return _intern.get(key);
  _intern.set(key, value);
  return value;
}

function intern_delete({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(key);
    _intern.delete(key);
  }
  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/init.js
function initRange(domain, range) {
  switch (arguments.length) {
    case 0: break;
    case 1: this.range(domain); break;
    default: this.range(range).domain(domain); break;
  }
  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0: break;
    case 1: {
      if (typeof domain === "function") this.interpolator(domain);
      else this.range(domain);
      break;
    }
    default: {
      this.domain(domain);
      if (typeof interpolator === "function") this.interpolator(interpolator);
      else this.range(interpolator);
      break;
    }
  }
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/ordinal.js



const implicit = Symbol("implicit");

function ordinal() {
  var index = new InternMap(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    let i = index.get(d);
    if (i === undefined) {
      if (unknown !== implicit) return unknown;
      index.set(d, i = domain.push(d) - 1);
    }
    return range[i % range.length];
  }

  scale.domain = function(_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = new InternMap();
    for (const value of _) {
      if (index.has(value)) continue;
      index.set(value, domain.push(value) - 1);
    }
    return scale;
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), scale) : range.slice();
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function() {
    return ordinal(domain, range).unknown(unknown);
  };

  initRange.apply(scale, arguments);

  return scale;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/array.js
var slice = Array.prototype.slice;

/* harmony default export */ function array(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/constant.js
/* harmony default export */ function src_constant(x) {
  return function constant() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/offset/none.js
/* harmony default export */ function none(series, order) {
  if (!((n = series.length) > 1)) return;
  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];
    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/order/none.js
/* harmony default export */ function order_none(series) {
  var n = series.length, o = new Array(n);
  while (--n >= 0) o[n] = n;
  return o;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/stack.js





function stackValue(d, key) {
  return d[key];
}

function stackSeries(key) {
  const series = [];
  series.key = key;
  return series;
}

/* harmony default export */ function stack() {
  var keys = src_constant([]),
      order = order_none,
      offset = none,
      value = stackValue;

  function stack(data) {
    var sz = Array.from(keys.apply(this, arguments), stackSeries),
        i, n = sz.length, j = -1,
        oz;

    for (const d of data) {
      for (i = 0, ++j; i < n; ++i) {
        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;
      }
    }

    for (i = 0, oz = array(order(sz)); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function(_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : src_constant(Array.from(_)), stack) : keys;
  };

  stack.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : src_constant(+_), stack) : value;
  };

  stack.order = function(_) {
    return arguments.length ? (order = _ == null ? order_none : typeof _ === "function" ? _ : src_constant(Array.from(_)), stack) : order;
  };

  stack.offset = function(_) {
    return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
  };

  return stack;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/offset/diverging.js
/* harmony default export */ function diverging(series, order) {
  if (!((n = series.length) > 0)) return;
  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/array.js
var array_array = Array.prototype;

var array_slice = array_array.slice;
var array_map = array_array.map;

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/ascending.js
function ascending(a, b) {
  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/bisector.js


function bisector(f) {
  let delta = f;
  let compare1 = f;
  let compare2 = f;

  if (f.length !== 2) {
    delta = (d, x) => f(d) - x;
    compare1 = ascending;
    compare2 = (d, x) => ascending(f(d), x);
  }

  function left(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) < 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function right(a, x, lo = 0, hi = a.length) {
    if (lo < hi) {
      if (compare1(x, x) !== 0) return hi;
      do {
        const mid = (lo + hi) >>> 1;
        if (compare2(a[mid], x) <= 0) lo = mid + 1;
        else hi = mid;
      } while (lo < hi);
    }
    return lo;
  }

  function center(a, x, lo = 0, hi = a.length) {
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/number.js
function number_number(x) {
  return x === null ? NaN : +x;
}

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/bisect.js




const ascendingBisect = bisector(ascending);
const bisectRight = ascendingBisect.right;
const bisectLeft = ascendingBisect.left;
const bisectCenter = bisector(number_number).center;
/* harmony default export */ const bisect = (bisectRight);

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/constant.js
function src_constant_constant(x) {
  return () => x;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/extent.js
function extent(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/identity.js
function identity_identity(x) {
  return x;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/ticks.js
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function ticks(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    let r0 = Math.round(start / step), r1 = Math.round(stop / step);
    if (r0 * step < start) ++r0;
    if (r1 * step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) * step;
  } else {
    step = -step;
    let r0 = Math.round(start * step), r1 = Math.round(stop * step);
    if (r0 / step < start) ++r0;
    if (r1 / step > stop) --r1;
    ticks = new Array(n = r1 - r0 + 1);
    while (++i < n) ticks[i] = (r0 + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/nice.js


function nice(start, stop, count) {
  let prestep;
  while (true) {
    const step = tickIncrement(start, stop, count);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/count.js
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }
  return count;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/threshold/sturges.js


function thresholdSturges(values) {
  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/bin.js









function bin() {
  var value = identity_identity,
      domain = extent,
      threshold = thresholdSturges;

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.
    if (!Array.isArray(tz)) {
      const max = x1, tn = +tz;
      if (domain === extent) [x0, x1] = nice(x0, x1, tn);
      tz = ticks(x0, x1, tn);

      // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!
      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === extent) {
          const step = tickIncrement(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x != null && x0 <= x && x <= x1) {
        bins[bisect(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : src_constant_constant(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : src_constant_constant([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? src_constant_constant(array_slice.call(_)) : src_constant_constant(_), histogram) : threshold;
  };

  return histogram;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/model.js
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
// Internal Imports




// D3



/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var ChartModel = /** @class */ (function () {
    function ChartModel(services) {
        // Internal Model state
        this.state = {
            options: {},
        };
        // Fill scales & fill related objects
        this.colorScale = {};
        this.colorClassNames = {};
        this.services = services;
    }
    ChartModel.prototype.getAllDataFromDomain = function (groups) {
        if (!this.getData()) {
            return null;
        }
        var options = this.getOptions();
        // Remove datasets that have been disabled
        var allData = this.getData();
        var dataGroups = this.getDataGroups();
        var groupMapsTo = Tools.getProperty(options, 'data').groupMapsTo;
        var axesOptions = Tools.getProperty(options, 'axes');
        // filter out the groups that are irrelevant to the component
        if (groups) {
            allData = allData.filter(function (item) {
                return groups.includes(item[groupMapsTo]);
            });
        }
        if (axesOptions) {
            Object.keys(axesOptions).forEach(function (axis) {
                var mapsTo = axesOptions[axis].mapsTo;
                var scaleType = axesOptions[axis].scaleType;
                // make sure linear/log values are numbers
                if (scaleType === interfaces.ScaleTypes.LINEAR ||
                    scaleType === interfaces.ScaleTypes.LOG) {
                    allData = allData.map(function (datum) {
                        var _a;
                        return __assign(__assign({}, datum), (_a = {}, _a[mapsTo] = datum[mapsTo] === null
                            ? datum[mapsTo]
                            : Number(datum[mapsTo]), _a));
                    });
                }
                // Check for custom domain
                if (mapsTo && axesOptions[axis].domain) {
                    if (scaleType === interfaces.ScaleTypes.LABELS) {
                        allData = allData.filter(function (datum) {
                            return axesOptions[axis].domain.includes(datum[mapsTo]);
                        });
                    }
                    else {
                        var _a = axesOptions[axis].domain, start_1 = _a[0], end_1 = _a[1];
                        // Filter out data outside domain if that datapoint is using that axis (has mapsTo property)
                        allData = allData.filter(function (datum) {
                            return !(mapsTo in datum) ||
                                (datum[mapsTo] >= start_1 && datum[mapsTo] <= end_1);
                        });
                    }
                }
            });
        }
        return allData.filter(function (datum) {
            return dataGroups.find(function (group) { return group.name === datum[groupMapsTo]; });
        });
    };
    /**
     * Charts that have group configs passed into them, only want to retrieve the display data relevant to that chart
     * @param groups the included datasets for the particular chart
     */
    ChartModel.prototype.getDisplayData = function (groups) {
        if (!this.get('data')) {
            return null;
        }
        var ACTIVE = configuration_non_customizable_legend.items.status.ACTIVE;
        var dataGroups = this.getDataGroups(groups);
        var groupMapsTo = this.getOptions().data.groupMapsTo;
        var allDataFromDomain = this.getAllDataFromDomain(groups);
        return allDataFromDomain.filter(function (datum) {
            return dataGroups.find(function (dataGroup) {
                return dataGroup.name === datum[groupMapsTo] &&
                    dataGroup.status === ACTIVE;
            });
        });
    };
    ChartModel.prototype.getData = function () {
        return this.get('data');
    };
    ChartModel.prototype.isDataEmpty = function () {
        return !this.getData().length;
    };
    /**
     *
     * @param newData The new raw data to be set
     */
    ChartModel.prototype.setData = function (newData) {
        var sanitizedData = this.sanitize(Tools.clone(newData));
        var dataGroups = this.generateDataGroups(sanitizedData);
        this.set({
            data: sanitizedData,
            dataGroups: dataGroups,
        });
        return sanitizedData;
    };
    ChartModel.prototype.getDataGroups = function (groups) {
        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');
        // No data should be displayed while data is still loading
        if (isDataLoading) {
            return [];
        }
        // if its a combo chart, the specific chart will pass the model the groups it needs
        if (groups) {
            return this.get('dataGroups').filter(function (dataGroup) {
                return groups.includes(dataGroup.name);
            });
        }
        return this.get('dataGroups');
    };
    ChartModel.prototype.getActiveDataGroups = function (groups) {
        var ACTIVE = configuration_non_customizable_legend.items.status.ACTIVE;
        return this.getDataGroups(groups).filter(function (dataGroup) { return dataGroup.status === ACTIVE; });
    };
    ChartModel.prototype.getDataGroupNames = function (groups) {
        var dataGroups = this.getDataGroups(groups);
        return dataGroups.map(function (dataGroup) { return dataGroup.name; });
    };
    ChartModel.prototype.getActiveDataGroupNames = function (groups) {
        var activeDataGroups = this.getActiveDataGroups(groups);
        return activeDataGroups.map(function (dataGroup) { return dataGroup.name; });
    };
    ChartModel.prototype.aggregateBinDataByGroup = function (bin) {
        return Tools.groupBy(bin, 'group');
    };
    ChartModel.prototype.getBinConfigurations = function () {
        var _this = this;
        // Manipulate data and options for Histogram
        var data = this.getDisplayData();
        var options = this.getOptions();
        var mainXPos = this.services.cartesianScales.getMainXAxisPosition();
        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
        var axisOptions = options.axes[mainXPos];
        var groupMapsTo = options.data.groupMapsTo;
        var _a = axisOptions.bins, axisBins = _a === void 0 ? histogram.defaultBins : _a;
        var areBinsDefined = Array.isArray(axisBins);
        // Get Histogram bins
        var bins = bin()
            .value(function (d) { return d[domainIdentifier]; })
            .thresholds(axisBins)(data);
        if (!areBinsDefined) {
            // If bins are not defined by user
            var binsWidth = bins[0].x1 - bins[0].x0;
            // Set last bin width as the others
            bins[bins.length - 1].x1 = +bins[bins.length - 1].x0 + binsWidth;
        }
        else {
            // Set last bin end as the last user defined one
            bins[bins.length - 1].x1 = axisBins[axisBins.length - 1];
        }
        var binsDomain = areBinsDefined
            ? [axisBins[0], axisBins[axisBins.length - 1]]
            : [bins[0].x0, bins[bins.length - 1].x1];
        // Get all groups
        var groupsKeys = Array.from(new Set(data.map(function (d) { return d[groupMapsTo]; })));
        var histogramData = [];
        // Group data by bin
        bins.forEach(function (bin) {
            var key = bin.x0 + "-" + bin.x1;
            var aggregateDataByGroup = _this.aggregateBinDataByGroup(bin);
            groupsKeys.forEach(function (group) {
                // For each dataset put a bin with value 0 if not exist
                // (Scale X won't change when changing showed datasets)
                histogramData.push({
                    group: group,
                    key: key,
                    value: aggregateDataByGroup[group] || 0,
                    bin: bin.x0,
                });
            });
        });
        return {
            bins: bins,
            binsDomain: binsDomain,
        };
    };
    ChartModel.prototype.getBinnedStackedData = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var dataGroupNames = this.getActiveDataGroupNames();
        var bins = this.getBinConfigurations().bins;
        var dataValuesGroupedByKeys = this.getDataValuesGroupedByKeys({
            bins: bins,
        });
        return stack()
            .keys(dataGroupNames)(dataValuesGroupedByKeys)
            .map(function (series, i) {
            // Add data group names to each series
            return Object.keys(series)
                .filter(function (key) { return !isNaN(key); })
                .map(function (key) {
                var element = series[key];
                element[groupMapsTo] = dataGroupNames[i];
                return element;
            });
        });
    };
    ChartModel.prototype.getGroupedData = function (groups) {
        var displayData = this.getDisplayData(groups);
        var groupedData = {};
        var groupMapsTo = this.getOptions().data.groupMapsTo;
        displayData.map(function (datum) {
            var group = datum[groupMapsTo];
            if (groupedData[group] !== null &&
                groupedData[group] !== undefined) {
                groupedData[group].push(datum);
            }
            else {
                groupedData[group] = [datum];
            }
        });
        return Object.keys(groupedData).map(function (groupName) { return ({
            name: groupName,
            data: groupedData[groupName],
        }); });
    };
    ChartModel.prototype.getStackKeys = function (_a) {
        var _this = this;
        var _b = _a === void 0 ? { bins: null, groups: null } : _a, _c = _b.bins, bins = _c === void 0 ? null : _c, _d = _b.groups, groups = _d === void 0 ? null : _d;
        var options = this.getOptions();
        var displayData = this.getDisplayData(groups);
        var stackKeys;
        if (bins) {
            stackKeys = bins.map(function (bin) { return bin.x0 + "-" + bin.x1; });
        }
        else {
            stackKeys = Tools.removeArrayDuplicates(displayData.map(function (datum) {
                var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);
                return datum[domainIdentifier] &&
                    typeof datum[domainIdentifier].toString === 'function'
                    ? datum[domainIdentifier].toString()
                    : datum[domainIdentifier];
            }));
        }
        var axisPosition = this.services.cartesianScales.domainAxisPosition;
        var scaleType = options.axes[axisPosition].scaleType;
        // Sort keys
        if (scaleType === interfaces.ScaleTypes.TIME) {
            stackKeys.sort(function (a, b) {
                var dateA = new Date(a);
                var dateB = new Date(b);
                return dateA - dateB;
            });
        }
        else if (scaleType === interfaces.ScaleTypes.LOG ||
            scaleType === interfaces.ScaleTypes.LINEAR) {
            stackKeys.sort(function (a, b) { return a - b; });
        }
        return stackKeys;
    };
    ChartModel.prototype.getDataValuesGroupedByKeys = function (_a) {
        var _this = this;
        var _b = _a.bins, bins = _b === void 0 ? null : _b, _c = _a.groups, groups = _c === void 0 ? null : _c;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var displayData = this.getDisplayData(groups);
        var dataGroupNames = this.getDataGroupNames();
        var stackKeys = this.getStackKeys({ bins: bins, groups: groups });
        if (bins) {
            return stackKeys.map(function (key) {
                var _a = key.split('-'), binStart = _a[0], binEnd = _a[1];
                var correspondingValues = { x0: binStart, x1: binEnd };
                var correspondingBin = bins.find(function (bin) { return bin.x0.toString() === binStart.toString(); });
                dataGroupNames.forEach(function (dataGroupName) {
                    correspondingValues[dataGroupName] = correspondingBin.filter(function (binItem) { return binItem[groupMapsTo] === dataGroupName; }).length;
                });
                return correspondingValues;
            });
        }
        return stackKeys.map(function (key) {
            var correspondingValues = { sharedStackKey: key };
            dataGroupNames.forEach(function (dataGroupName) {
                var correspondingDatum = displayData.find(function (datum) {
                    var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);
                    return (datum[groupMapsTo] === dataGroupName &&
                        datum.hasOwnProperty(domainIdentifier) &&
                        datum[domainIdentifier].toString() === key);
                });
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(correspondingValues);
                correspondingValues[dataGroupName] = correspondingDatum
                    ? correspondingDatum[rangeIdentifier]
                    : null;
            });
            return correspondingValues;
        });
    };
    ChartModel.prototype.getStackedData = function (_a) {
        var _b = _a.percentage, percentage = _b === void 0 ? false : _b, _c = _a.groups, groups = _c === void 0 ? null : _c, _d = _a.divergent, divergent = _d === void 0 ? false : _d;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        // Get only active data groups so non-active data groups are not rendered
        // on legend item click
        var dataGroupNames = this.getActiveDataGroupNames(groups);
        var dataValuesGroupedByKeys = this.getDataValuesGroupedByKeys({
            groups: groups,
        });
        if (percentage) {
            var maxByKey_1 = Tools.fromPairs(dataValuesGroupedByKeys.map(function (d) { return [d.sharedStackKey, 0]; }));
            dataValuesGroupedByKeys.forEach(function (d) {
                dataGroupNames.forEach(function (name) {
                    maxByKey_1[d.sharedStackKey] += d[name];
                });
            });
            // cycle through data values to get percentage
            dataValuesGroupedByKeys.forEach(function (d) {
                dataGroupNames.forEach(function (name) {
                    if (maxByKey_1[d.sharedStackKey]) {
                        d[name] = (d[name] / maxByKey_1[d.sharedStackKey]) * 100;
                    }
                    else {
                        d[name] = 0;
                    }
                });
            });
        }
        var stackToUse = divergent
            ? stack().offset(diverging)
            : stack();
        return stackToUse
            .keys(dataGroupNames)(dataValuesGroupedByKeys)
            .map(function (series, i) {
            // Add data group names to each series
            return Object.keys(series)
                .filter(function (key) { return !isNaN(key); })
                .map(function (key) {
                var element = series[key];
                element[groupMapsTo] = dataGroupNames[i];
                return element;
            });
        });
    };
    /**
     * @return {Object} The chart's options
     */
    ChartModel.prototype.getOptions = function () {
        return this.state.options;
    };
    ChartModel.prototype.set = function (newState, configs) {
        this.state = Object.assign({}, this.state, newState);
        var newConfig = Object.assign({ skipUpdate: false, animate: true }, // default configs
        configs);
        if (!newConfig.skipUpdate) {
            this.update(newConfig.animate);
        }
    };
    ChartModel.prototype.get = function (property) {
        if (property) {
            return this.state[property];
        }
        else {
            return this.state;
        }
    };
    /**
     *
     * @param newOptions New options to be set
     */
    ChartModel.prototype.setOptions = function (newOptions) {
        var options = this.getOptions();
        Tools.updateLegendAdditionalItems(options, newOptions);
        this.set({
            options: Tools.merge(options, newOptions),
        });
    };
    /**
     *
     * Updates miscellanous information within the model
     * such as the color scales, or the legend data labels
     */
    ChartModel.prototype.update = function (animate) {
        if (animate === void 0) { animate = true; }
        if (!this.getDisplayData()) {
            return;
        }
        this.updateAllDataGroups();
        this.setCustomColorScale();
        this.setColorClassNames();
        this.services.events.dispatchEvent(interfaces.Events.Model.UPDATE, { animate: animate });
    };
    /*
     * Data labels
     */
    ChartModel.prototype.toggleDataLabel = function (changedLabel) {
        var _a = configuration_non_customizable_legend.items.status, ACTIVE = _a.ACTIVE, DISABLED = _a.DISABLED;
        var dataGroups = this.getDataGroups();
        var hasDeactivatedItems = dataGroups.some(function (group) { return group.status === DISABLED; });
        var activeItems = dataGroups.filter(function (group) { return group.status === ACTIVE; });
        // If there are deactivated items, toggle "changedLabel"
        if (hasDeactivatedItems) {
            // If the only active item is being toggled
            // Activate all items
            if (activeItems.length === 1 &&
                activeItems[0].name === changedLabel) {
                // If every item is active, then enable "changedLabel" and disable all other items
                dataGroups.forEach(function (group, i) {
                    dataGroups[i].status = ACTIVE;
                });
            }
            else {
                var indexToChange = dataGroups.findIndex(function (group) { return group.name === changedLabel; });
                dataGroups[indexToChange].status =
                    dataGroups[indexToChange].status === DISABLED
                        ? ACTIVE
                        : DISABLED;
            }
        }
        else {
            // If every item is active, then enable "changedLabel" and disable all other items
            dataGroups.forEach(function (group, i) {
                dataGroups[i].status =
                    group.name === changedLabel ? ACTIVE : DISABLED;
            });
        }
        // Updates selected groups
        var updatedActiveItems = dataGroups.filter(function (group) { return group.status === ACTIVE; });
        var options = this.getOptions();
        var hasUpdatedDeactivatedItems = dataGroups.some(function (group) { return group.status === DISABLED; });
        // If there are deactivated items, map the item name into selected groups
        if (hasUpdatedDeactivatedItems) {
            options.data.selectedGroups = updatedActiveItems.map(function (activeItem) { return activeItem.name; });
        }
        else {
            // If every item is active, clear array
            options.data.selectedGroups = [];
        }
        // dispatch legend filtering event with the status of all the dataLabels
        this.services.events.dispatchEvent(interfaces.Events.Legend.ITEMS_UPDATE, {
            dataGroups: dataGroups,
        });
        // Update model
        this.set({
            dataGroups: dataGroups,
        });
    };
    /**
     * Should the data point be filled?
     * @param group
     * @param key
     * @param value
     * @param defaultFilled the default for this chart
     */
    ChartModel.prototype.getIsFilled = function (group, key, data, defaultFilled) {
        var options = this.getOptions();
        if (options.getIsFilled) {
            return options.getIsFilled(group, key, data, defaultFilled);
        }
        else {
            return defaultFilled;
        }
    };
    ChartModel.prototype.getFillColor = function (group, key, data) {
        var options = this.getOptions();
        var defaultFillColor = Tools.getProperty(this.colorScale, group);
        if (options.getFillColor) {
            return options.getFillColor(group, key, data, defaultFillColor);
        }
        else {
            return defaultFillColor;
        }
    };
    ChartModel.prototype.getStrokeColor = function (group, key, data) {
        var options = this.getOptions();
        var defaultStrokeColor = Tools.getProperty(this.colorScale, group);
        if (options.getStrokeColor) {
            return options.getStrokeColor(group, key, data, defaultStrokeColor);
        }
        else {
            return defaultStrokeColor;
        }
    };
    ChartModel.prototype.isUserProvidedColorScaleValid = function () {
        var userProvidedScale = Tools.getProperty(this.getOptions(), 'color', 'scale');
        var dataGroups = this.getDataGroups();
        if (userProvidedScale == null ||
            Object.keys(userProvidedScale).length == 0) {
            return false;
        }
        return dataGroups.some(function (dataGroup) {
            return Object.keys(userProvidedScale).includes(dataGroup.name);
        });
    };
    ChartModel.prototype.getColorClassName = function (configs) {
        var colorPairingTag = this.colorClassNames(configs.dataGroupName);
        var className = configs.originalClassName;
        configs.classNameTypes.forEach(function (type) {
            return (className = configs.originalClassName
                ? className + " " + type + "-" + colorPairingTag
                : type + "-" + colorPairingTag);
        });
        return className;
    };
    /**
     * For charts that might hold an associated status for their dataset
     */
    ChartModel.prototype.getStatus = function () {
        return null;
    };
    ChartModel.prototype.getAllDataGroupsNames = function () {
        return this.allDataGroups;
    };
    /**
     * Converts data provided in the older format to tabular
     *
     */
    ChartModel.prototype.transformToTabularData = function (data) {
        console.warn("We've updated the charting data format to be tabular by default. The current format you're using is deprecated and will be removed in v1.0, read more here https://carbon-design-system.github.io/carbon-charts/?path=/story/docs-tutorials--tabular-data-format");
        var tabularData = [];
        var datasets = data.datasets, labels = data.labels;
        // Loop through all datasets
        datasets.forEach(function (dataset) {
            // Update each data point to the new format
            dataset.data.forEach(function (datum, i) {
                var group;
                var datasetLabel = Tools.getProperty(dataset, 'label');
                if (datasetLabel === null) {
                    var correspondingLabel = Tools.getProperty(labels, i);
                    if (correspondingLabel) {
                        group = correspondingLabel;
                    }
                    else {
                        group = 'Ungrouped';
                    }
                }
                else {
                    group = datasetLabel;
                }
                var updatedDatum = {
                    group: group,
                    key: labels[i],
                };
                if (isNaN(datum)) {
                    updatedDatum['value'] = datum.value;
                    updatedDatum['date'] = datum.date;
                }
                else {
                    updatedDatum['value'] = datum;
                }
                tabularData.push(updatedDatum);
            });
        });
        return tabularData;
    };
    ChartModel.prototype.getTabularDataArray = function () {
        return [];
    };
    ChartModel.prototype.exportToCSV = function () {
        var data = this.getTabularDataArray().map(function (row) {
            return row.map(function (column) { return "\"" + column + "\""; });
        });
        var csvString = '', csvData = '';
        data.forEach(function (d, i) {
            csvData = d.join(',');
            csvString += i < data.length ? csvData + '\n' : csvData;
        });
        this.services.files.downloadCSV(csvString, 'myChart.csv');
    };
    ChartModel.prototype.getTabularData = function (data) {
        // if data is not an array
        if (!Array.isArray(data)) {
            return this.transformToTabularData(data);
        }
        return data;
    };
    ChartModel.prototype.sanitize = function (data) {
        data = this.getTabularData(data);
        return data;
    };
    /*
     * Data groups
     */
    ChartModel.prototype.updateAllDataGroups = function () {
        // allDataGroups is used to generate a color scale that applies
        // to all the groups. Now when the data updates, you might remove a group,
        // and then bring it back in a newer data update, therefore
        // the order of the groups in allDataGroups matters so that you'd never
        // have an incorrect color assigned to a group.
        var _this = this;
        // Also, a new group should only be added to allDataGroups if
        // it doesn't currently exist
        if (!this.allDataGroups) {
            this.allDataGroups = this.getDataGroupNames();
        }
        else {
            // Loop through current data groups
            this.getDataGroupNames().forEach(function (dataGroupName) {
                // If group name hasn't been stored yet, store it
                if (_this.allDataGroups.indexOf(dataGroupName) === -1) {
                    _this.allDataGroups.push(dataGroupName);
                }
            });
        }
    };
    ChartModel.prototype.generateDataGroups = function (data) {
        var groupMapsTo = this.getOptions().data.groupMapsTo;
        var _a = configuration_non_customizable_legend.items.status, ACTIVE = _a.ACTIVE, DISABLED = _a.DISABLED;
        var options = this.getOptions();
        var uniqueDataGroups = Tools.removeArrayDuplicates(data.map(function (datum) { return datum[groupMapsTo]; }));
        // check if selectedGroups can be applied to chart with current data groups
        if (options.data.selectedGroups.length) {
            var hasAllSelectedGroups = options.data.selectedGroups.every(function (groupName) { return uniqueDataGroups.includes(groupName); });
            if (!hasAllSelectedGroups) {
                options.data.selectedGroups = [];
            }
        }
        // Get group status based on items in selected groups
        var getStatus = function (groupName) {
            return !options.data.selectedGroups.length ||
                options.data.selectedGroups.includes(groupName)
                ? ACTIVE
                : DISABLED;
        };
        return uniqueDataGroups.map(function (groupName) { return ({
            name: groupName,
            status: getStatus(groupName),
        }); });
    };
    /*
     * Fill scales
     */
    ChartModel.prototype.setCustomColorScale = function () {
        var _this = this;
        if (!this.isUserProvidedColorScaleValid()) {
            return;
        }
        var options = this.getOptions();
        var userProvidedScale = Tools.getProperty(options, 'color', 'scale');
        Object.keys(userProvidedScale).forEach(function (dataGroup) {
            if (!_this.allDataGroups.includes(dataGroup)) {
                console.warn("\"" + dataGroup + "\" does not exist in data groups.");
            }
        });
        /**
         * Go through allDataGroups. If a data group has a color value provided
         * by the user, add that to the color range
         */
        var providedDataGroups = this.allDataGroups.filter(function (dataGroup) { return userProvidedScale[dataGroup]; });
        providedDataGroups.forEach(function (dataGroup) {
            return (_this.colorScale[dataGroup] = userProvidedScale[dataGroup]);
        });
    };
    /*
     * Color palette
     */
    ChartModel.prototype.setColorClassNames = function () {
        var colorPairingOptions = Tools.getProperty(this.getOptions(), 'color', 'pairing');
        // Check if user has defined numberOfVariants (differ from given data)
        var numberOfVariants = Tools.getProperty(colorPairingOptions, 'numberOfVariants');
        if (!numberOfVariants || numberOfVariants < this.allDataGroups.length) {
            numberOfVariants = this.allDataGroups.length;
        }
        var pairingOption = Tools.getProperty(colorPairingOptions, 'option');
        var colorPairingCounts = color.pairingOptions;
        // If number of dataGroups is greater than 5, user 14-color palette
        var numberOfColors = numberOfVariants > 5 ? 14 : numberOfVariants;
        // Use default palette if user choice is not in range
        pairingOption =
            pairingOption <= colorPairingCounts[numberOfColors + "-color"]
                ? pairingOption
                : 1;
        // Create color classes for graph, tooltip and stroke use
        var colorPairing = this.allDataGroups.map(function (dataGroup, index) {
            return numberOfColors + "-" + pairingOption + "-" + ((index % 14) + 1);
        });
        // Create default color classnames
        this.colorClassNames = ordinal()
            .range(colorPairing)
            .domain(this.allDataGroups);
    };
    return ChartModel;
}());

//# sourceMappingURL=../../src/model/model.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/service.js
var Service = /** @class */ (function () {
    function Service(model, services) {
        this.model = model;
        this.services = services;
        this.init();
    }
    Service.prototype.init = function () {
        // do nothing.
    };
    Service.prototype.update = function () {
        // do nothing.
    };
    // Used to pass down information to the components
    Service.prototype.setModel = function (newObj) {
        this.model = newObj;
    };
    // Used to pass down services to the components
    Service.prototype.setServices = function (newObj) {
        this.services = newObj;
    };
    return Service;
}());

//# sourceMappingURL=../../src/services/service.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selector.js
function selector_none() {}

/* harmony default export */ function selector(selector) {
  return selector == null ? selector_none : function() {
    return this.querySelector(selector);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/select.js



/* harmony default export */ function selection_select(select) {
  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/array.js
// Given something array like (or null), returns something that is strictly an
// array. This is used to ensure that array-like objects passed to d3.selectAll
// or selection.selectAll are converted into proper arrays when creating a
// selection; we don’t ever want to create a selection backed by a live
// HTMLCollection or NodeList. However, note that selection.selectAll will use a
// static NodeList as a group, since it safely derived from querySelectorAll.
function src_array_array(x) {
  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selectorAll.js
function empty() {
  return [];
}

/* harmony default export */ function selectorAll(selector) {
  return selector == null ? empty : function() {
    return this.querySelectorAll(selector);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/selectAll.js




function arrayAll(select) {
  return function() {
    return src_array_array(select.apply(this, arguments));
  };
}

/* harmony default export */ function selectAll(select) {
  if (typeof select === "function") select = arrayAll(select);
  else select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new Selection(subgroups, parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/matcher.js
/* harmony default export */ function matcher(selector) {
  return function() {
    return this.matches(selector);
  };
}

function childMatcher(selector) {
  return function(node) {
    return node.matches(selector);
  };
}


;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/selectChild.js


var find = Array.prototype.find;

function childFind(match) {
  return function() {
    return find.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

/* harmony default export */ function selectChild(match) {
  return this.select(match == null ? childFirst
      : childFind(typeof match === "function" ? match : childMatcher(match)));
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/selectChildren.js


var filter = Array.prototype.filter;

function children() {
  return Array.from(this.children);
}

function childrenFilter(match) {
  return function() {
    return filter.call(this.children, match);
  };
}

/* harmony default export */ function selectChildren(match) {
  return this.selectAll(match == null ? children
      : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/filter.js



/* harmony default export */ function selection_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Selection(subgroups, this._parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/sparse.js
/* harmony default export */ function sparse(update) {
  return new Array(update.length);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/enter.js



/* harmony default export */ function enter() {
  return new Selection(this._enter || this._groups.map(sparse), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },
  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },
  querySelector: function(selector) { return this._parent.querySelector(selector); },
  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }
};

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/constant.js
/* harmony default export */ function d3_selection_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/data.js




function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length;

  // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.
  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Put any non-null nodes that don’t fit into exit.
  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map,
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue;

  // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.
  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  }

  // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.
  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";
    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new EnterNode(parent, data[i]);
    }
  }

  // Add any remaining nodes that were not bound to data to exit.
  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

/* harmony default export */ function data(value, key) {
  if (!arguments.length) return Array.from(this, datum);

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;

  if (typeof value !== "function") value = d3_selection_src_constant(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);

    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);

    // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.
    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;
        while (!(next = updateGroup[i1]) && ++i1 < dataLength);
        previous._next = next || null;
      }
    }
  }

  update = new Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}

// Given some data, this returns an array-like view of it: an object that
// exposes a length property and allows numeric indexing. Note that unlike
// selectAll, this isn’t worried about “live” collections because the resulting
// array will only be used briefly while data is being bound. (It is possible to
// cause the data to change while iterating by using a key function, but please
// don’t; we’d rather avoid a gratuitous copy.)
function arraylike(data) {
  return typeof data === "object" && "length" in data
    ? data // Array, TypedArray, NodeList, array-like
    : Array.from(data); // Map, Set, iterable, string, or anything else
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/exit.js



/* harmony default export */ function exit() {
  return new Selection(this._exit || this._groups.map(sparse), this._parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/join.js
/* harmony default export */ function join(onenter, onupdate, onexit) {
  var enter = this.enter(), update = this, exit = this.exit();
  if (typeof onenter === "function") {
    enter = onenter(enter);
    if (enter) enter = enter.selection();
  } else {
    enter = enter.append(onenter + "");
  }
  if (onupdate != null) {
    update = onupdate(update);
    if (update) update = update.selection();
  }
  if (onexit == null) exit.remove(); else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/merge.js


/* harmony default export */ function selection_merge(context) {
  var selection = context.selection ? context.selection() : context;

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Selection(merges, this._parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/order.js
/* harmony default export */ function order() {

  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/sort.js


/* harmony default export */ function sort(compare) {
  if (!compare) compare = sort_ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }
    sortgroup.sort(compareNode);
  }

  return new Selection(sortgroups, this._parents).order();
}

function sort_ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/call.js
/* harmony default export */ function call() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/nodes.js
/* harmony default export */ function nodes() {
  return Array.from(this);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/node.js
/* harmony default export */ function node() {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/size.js
/* harmony default export */ function size() {
  let size = 0;
  for (const node of this) ++size; // eslint-disable-line no-unused-vars
  return size;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/empty.js
/* harmony default export */ function selection_empty() {
  return !this.node();
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/each.js
/* harmony default export */ function each(callback) {

  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/namespaces.js
var xhtml = "http://www.w3.org/1999/xhtml";

/* harmony default export */ const namespaces = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/namespace.js


/* harmony default export */ function namespace(name) {
  var prefix = name += "", i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/attr.js


function attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function() {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function() {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);
    else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);
    else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ function attr(name, value) {
  var fullname = namespace(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local
        ? node.getAttributeNS(fullname.space, fullname.local)
        : node.getAttribute(fullname);
  }

  return this.each((value == null
      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === "function"
      ? (fullname.local ? attrFunctionNS : attrFunction)
      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/window.js
/* harmony default export */ function src_window(node) {
  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
      || (node.document && node) // node is a Window
      || node.defaultView; // node is a Document
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/style.js


function styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function() {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);
    else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ function style(name, value, priority) {
  return arguments.length > 1
      ? this.each((value == null
            ? styleRemove : typeof value === "function"
            ? styleFunction
            : styleConstant)(name, value, priority == null ? "" : priority))
      : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name)
      || src_window(node).getComputedStyle(node, null).getPropertyValue(name);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/property.js
function propertyRemove(name) {
  return function() {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function() {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];
    else this[name] = v;
  };
}

/* harmony default export */ function selection_property(name, value) {
  return arguments.length > 1
      ? this.each((value == null
          ? propertyRemove : typeof value === "function"
          ? propertyFunction
          : propertyConstant)(name, value))
      : this.node()[name];
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/classed.js
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function(name) {
    var i = this._names.indexOf(name);
    if (i < 0) {
      this._names.push(name);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function(name) {
    var i = this._names.indexOf(name);
    if (i >= 0) {
      this._names.splice(i, 1);
      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function(name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node), i = -1, n = names.length;
  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function() {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function() {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function() {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ function classed(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()), i = -1, n = names.length;
    while (++i < n) if (!list.contains(names[i])) return false;
    return true;
  }

  return this.each((typeof value === "function"
      ? classedFunction : value
      ? classedTrue
      : classedFalse)(names, value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/text.js
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ function selection_text(value) {
  return arguments.length
      ? this.each(value == null
          ? textRemove : (typeof value === "function"
          ? textFunction
          : textConstant)(value))
      : this.node().textContent;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/html.js
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function() {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function() {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ function html(value) {
  return arguments.length
      ? this.each(value == null
          ? htmlRemove : (typeof value === "function"
          ? htmlFunction
          : htmlConstant)(value))
      : this.node().innerHTML;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/raise.js
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ function selection_raise() {
  return this.each(raise);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/lower.js
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ function selection_lower() {
  return this.each(lower);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/creator.js



function creatorInherit(name) {
  return function() {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === xhtml && document.documentElement.namespaceURI === xhtml
        ? document.createElement(name)
        : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function() {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ function creator(name) {
  var fullname = namespace(name);
  return (fullname.local
      ? creatorFixed
      : creatorInherit)(fullname);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/append.js


/* harmony default export */ function append(name) {
  var create = typeof name === "function" ? name : creator(name);
  return this.select(function() {
    return this.appendChild(create.apply(this, arguments));
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/insert.js



function constantNull() {
  return null;
}

/* harmony default export */ function insert(name, before) {
  var create = typeof name === "function" ? name : creator(name),
      select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
  return this.select(function() {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/remove.js
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ function selection_remove() {
  return this.each(remove);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/clone.js
function selection_cloneShallow() {
  var clone = this.cloneNode(false), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true), parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

/* harmony default export */ function clone(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/datum.js
/* harmony default export */ function selection_datum(value) {
  return arguments.length
      ? this.property("__data__", value)
      : this.node().__data__;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/on.js
function contextListener(listener) {
  return function(event) {
    listener.call(this, event, this.__data__);
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {type: t, name: name};
  });
}

function onRemove(typename) {
  return function() {
    var on = this.__on;
    if (!on) return;
    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }
    if (++i) on.length = i;
    else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function() {
    var on = this.__on, o, listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};
    if (!on) this.__on = [o];
    else on.push(o);
  };
}

/* harmony default export */ function on(typename, value, options) {
  var typenames = parseTypenames(typename + ""), i, n = typenames.length, t;

  if (arguments.length < 2) {
    var on = this.node().__on;
    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/dispatch.js


function dispatchEvent(node, type, params) {
  var window = src_window(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
    else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function() {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function() {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ function dispatch(type, params) {
  return this.each((typeof params === "function"
      ? dispatchFunction
      : dispatchConstant)(type, params));
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/iterator.js
/* harmony default export */ function* iterator() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/selection/index.js



































var selection_root = [null];

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], selection_root);
}

function selection_selection() {
  return this;
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: selection_select,
  selectAll: selectAll,
  selectChild: selectChild,
  selectChildren: selectChildren,
  filter: selection_filter,
  data: data,
  enter: enter,
  exit: exit,
  join: join,
  merge: selection_merge,
  selection: selection_selection,
  order: order,
  sort: sort,
  call: call,
  nodes: nodes,
  node: node,
  size: size,
  empty: selection_empty,
  each: each,
  attr: attr,
  style: style,
  property: selection_property,
  classed: classed,
  text: selection_text,
  html: html,
  raise: selection_raise,
  lower: selection_lower,
  append: append,
  insert: insert,
  remove: selection_remove,
  clone: clone,
  datum: selection_datum,
  on: on,
  dispatch: dispatch,
  [Symbol.iterator]: iterator
};

/* harmony default export */ const src_selection = (selection);

;// CONCATENATED MODULE: ../../node_modules/d3-selection/src/select.js


/* harmony default export */ function src_select(selector) {
  return typeof selector === "string"
      ? new Selection([[document.querySelector(selector)]], [document.documentElement])
      : new Selection([[selector]], selection_root);
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/settings.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Settings.
 * @exports CarbonComponents.settings
 * @type Object
 * @property {boolean} [disableAutoInit]
 *   Disables automatic instantiation of components.
 *   By default (`CarbonComponents.disableAutoInit` is `false`),
 *   carbon-components attempts to instantiate components automatically
 *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute
 *   or upon DOM events (e.g. clicking) on such elements.
 *   See each components' static `.init()` methods for details.
 * @property {string} [prefix=bx]
 *   Brand prefix. Should be in sync with `$prefix` Sass variable in carbon-components/src/globals/scss/_vars.scss.
 * // @todo given that the default value is so long, is it appropriate to put in the JSDoc?
 * @property {string} [selectorTabbable]
 *   A selector selecting tabbable/focusable nodes.
 *   By default selectorTabbable references links, areas, inputs, buttons, selects, textareas,
 *   iframes, objects, embeds, or elements explicitly using tabindex or contenteditable attributes
 *   as long as the element is not `disabled` or the `tabindex="-1"`.
 * @property {string} [selectorFocusable]
 *   CSS selector that selects major nodes that are click focusable
 *   This property is identical to selectorTabbable with the exception of
 *   the `:not([tabindex='-1'])` pseudo class
 */
var settings = {
  prefix: 'bx',
  selectorTabbable: "\n    a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n    button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n    textarea:not([disabled]):not([tabindex='-1']),\n    iframe, object, embed, *[tabindex]:not([tabindex='-1']), *[contenteditable=true]\n  ",
  selectorFocusable: "\n    a[href], area[href], input:not([disabled]),\n    button:not([disabled]),select:not([disabled]),\n    textarea:not([disabled]),\n    iframe, object, embed, *[tabindex], *[contenteditable=true]\n  "
};
var settings_1 = settings;
/* harmony default export */ const js_settings = (settings_1);
;// CONCATENATED MODULE: ../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
/**
 * A collection of shims that provide minimal functionality of the ES6 collections.
 *
 * These implementations are not meant to be used outside of the ResizeObserver
 * modules as they cover only a limited range of use cases.
 */
/* eslint-disable require-jsdoc, valid-jsdoc */
var MapShim = (function () {
    if (typeof Map !== 'undefined') {
        return Map;
    }

    /**
     * Returns index in provided array that matches the specified key.
     *
     * @param {Array<Array>} arr
     * @param {*} key
     * @returns {number}
     */
    function getIndex(arr, key) {
        var result = -1;

        arr.some(function (entry, index) {
            if (entry[0] === key) {
                result = index;

                return true;
            }

            return false;
        });

        return result;
    }

    return (function () {
        function anonymous() {
            this.__entries__ = [];
        }

        var prototypeAccessors = { size: { configurable: true } };

        /**
         * @returns {boolean}
         */
        prototypeAccessors.size.get = function () {
            return this.__entries__.length;
        };

        /**
         * @param {*} key
         * @returns {*}
         */
        anonymous.prototype.get = function (key) {
            var index = getIndex(this.__entries__, key);
            var entry = this.__entries__[index];

            return entry && entry[1];
        };

        /**
         * @param {*} key
         * @param {*} value
         * @returns {void}
         */
        anonymous.prototype.set = function (key, value) {
            var index = getIndex(this.__entries__, key);

            if (~index) {
                this.__entries__[index][1] = value;
            } else {
                this.__entries__.push([key, value]);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.delete = function (key) {
            var entries = this.__entries__;
            var index = getIndex(entries, key);

            if (~index) {
                entries.splice(index, 1);
            }
        };

        /**
         * @param {*} key
         * @returns {void}
         */
        anonymous.prototype.has = function (key) {
            return !!~getIndex(this.__entries__, key);
        };

        /**
         * @returns {void}
         */
        anonymous.prototype.clear = function () {
            this.__entries__.splice(0);
        };

        /**
         * @param {Function} callback
         * @param {*} [ctx=null]
         * @returns {void}
         */
        anonymous.prototype.forEach = function (callback, ctx) {
            var this$1 = this;
            if ( ctx === void 0 ) ctx = null;

            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {
                var entry = list[i];

                callback.call(ctx, entry[1], entry[0]);
            }
        };

        Object.defineProperties( anonymous.prototype, prototypeAccessors );

        return anonymous;
    }());
})();

/**
 * Detects whether window and document objects are available in current environment.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;

// Returns global object of a current environment.
var global$1 = (function () {
    if (typeof __webpack_require__.g !== 'undefined' && __webpack_require__.g.Math === Math) {
        return __webpack_require__.g;
    }

    if (typeof self !== 'undefined' && self.Math === Math) {
        return self;
    }

    if (typeof window !== 'undefined' && window.Math === Math) {
        return window;
    }

    // eslint-disable-next-line no-new-func
    return Function('return this')();
})();

/**
 * A shim for the requestAnimationFrame which falls back to the setTimeout if
 * first one is not supported.
 *
 * @returns {number} Requests' identifier.
 */
var requestAnimationFrame$1 = (function () {
    if (typeof requestAnimationFrame === 'function') {
        // It's required to use a bounded function because IE sometimes throws
        // an "Invalid calling object" error if rAF is invoked without the global
        // object on the left hand side.
        return requestAnimationFrame.bind(global$1);
    }

    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };
})();

// Defines minimum timeout before adding a trailing call.
var trailingTimeout = 2;

/**
 * Creates a wrapper function which ensures that provided callback will be
 * invoked only once during the specified delay period.
 *
 * @param {Function} callback - Function to be invoked after the delay period.
 * @param {number} delay - Delay after which to invoke callback.
 * @returns {Function}
 */
var throttle = function (callback, delay) {
    var leadingCall = false,
        trailingCall = false,
        lastCallTime = 0;

    /**
     * Invokes the original callback function and schedules new invocation if
     * the "proxy" was called during current request.
     *
     * @returns {void}
     */
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;

            callback();
        }

        if (trailingCall) {
            proxy();
        }
    }

    /**
     * Callback invoked after the specified delay. It will further postpone
     * invocation of the original function delegating it to the
     * requestAnimationFrame.
     *
     * @returns {void}
     */
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }

    /**
     * Schedules invocation of the original function.
     *
     * @returns {void}
     */
    function proxy() {
        var timeStamp = Date.now();

        if (leadingCall) {
            // Reject immediately following calls.
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }

            // Schedule new call to be in invoked when the pending one is resolved.
            // This is important for "transitions" which never actually start
            // immediately so there is a chance that we might miss one if change
            // happens amids the pending invocation.
            trailingCall = true;
        } else {
            leadingCall = true;
            trailingCall = false;

            setTimeout(timeoutCallback, delay);
        }

        lastCallTime = timeStamp;
    }

    return proxy;
};

// Minimum delay before invoking the update of observers.
var REFRESH_DELAY = 20;

// A list of substrings of CSS properties used to find transition events that
// might affect dimensions of observed elements.
var transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];

// Check if MutationObserver is available.
var mutationObserverSupported = typeof MutationObserver !== 'undefined';

/**
 * Singleton controller class which handles updates of ResizeObserver instances.
 */
var ResizeObserverController = function() {
    this.connected_ = false;
    this.mutationEventsAdded_ = false;
    this.mutationsObserver_ = null;
    this.observers_ = [];

    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);
};

/**
 * Adds observer to observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be added.
 * @returns {void}
 */


/**
 * Holds reference to the controller's instance.
 *
 * @private {ResizeObserverController}
 */


/**
 * Keeps reference to the instance of MutationObserver.
 *
 * @private {MutationObserver}
 */

/**
 * Indicates whether DOM listeners have been added.
 *
 * @private {boolean}
 */
ResizeObserverController.prototype.addObserver = function (observer) {
    if (!~this.observers_.indexOf(observer)) {
        this.observers_.push(observer);
    }

    // Add listeners if they haven't been added yet.
    if (!this.connected_) {
        this.connect_();
    }
};

/**
 * Removes observer from observers list.
 *
 * @param {ResizeObserverSPI} observer - Observer to be removed.
 * @returns {void}
 */
ResizeObserverController.prototype.removeObserver = function (observer) {
    var observers = this.observers_;
    var index = observers.indexOf(observer);

    // Remove observer if it's present in registry.
    if (~index) {
        observers.splice(index, 1);
    }

    // Remove listeners if controller has no connected observers.
    if (!observers.length && this.connected_) {
        this.disconnect_();
    }
};

/**
 * Invokes the update of observers. It will continue running updates insofar
 * it detects changes.
 *
 * @returns {void}
 */
ResizeObserverController.prototype.refresh = function () {
    var changesDetected = this.updateObservers_();

    // Continue running updates if changes have been detected as there might
    // be future ones caused by CSS transitions.
    if (changesDetected) {
        this.refresh();
    }
};

/**
 * Updates every observer from observers list and notifies them of queued
 * entries.
 *
 * @private
 * @returns {boolean} Returns "true" if any observer has detected changes in
 *  dimensions of it's elements.
 */
ResizeObserverController.prototype.updateObservers_ = function () {
    // Collect observers that have active observations.
    var activeObservers = this.observers_.filter(function (observer) {
        return observer.gatherActive(), observer.hasActive();
    });

    // Deliver notifications in a separate cycle in order to avoid any
    // collisions between observers, e.g. when multiple instances of
    // ResizeObserver are tracking the same element and the callback of one
    // of them changes content dimensions of the observed target. Sometimes
    // this may result in notifications being blocked for the rest of observers.
    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });

    return activeObservers.length > 0;
};

/**
 * Initializes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.connect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already added.
    if (!isBrowser || this.connected_) {
        return;
    }

    // Subscription to the "Transitionend" event is used as a workaround for
    // delayed transitions. This way it's possible to capture at least the
    // final state of an element.
    document.addEventListener('transitionend', this.onTransitionEnd_);

    window.addEventListener('resize', this.refresh);

    if (mutationObserverSupported) {
        this.mutationsObserver_ = new MutationObserver(this.refresh);

        this.mutationsObserver_.observe(document, {
            attributes: true,
            childList: true,
            characterData: true,
            subtree: true
        });
    } else {
        document.addEventListener('DOMSubtreeModified', this.refresh);

        this.mutationEventsAdded_ = true;
    }

    this.connected_ = true;
};

/**
 * Removes DOM listeners.
 *
 * @private
 * @returns {void}
 */
ResizeObserverController.prototype.disconnect_ = function () {
    // Do nothing if running in a non-browser environment or if listeners
    // have been already removed.
    if (!isBrowser || !this.connected_) {
        return;
    }

    document.removeEventListener('transitionend', this.onTransitionEnd_);
    window.removeEventListener('resize', this.refresh);

    if (this.mutationsObserver_) {
        this.mutationsObserver_.disconnect();
    }

    if (this.mutationEventsAdded_) {
        document.removeEventListener('DOMSubtreeModified', this.refresh);
    }

    this.mutationsObserver_ = null;
    this.mutationEventsAdded_ = false;
    this.connected_ = false;
};

/**
 * "Transitionend" event handler.
 *
 * @private
 * @param {TransitionEvent} event
 * @returns {void}
 */
ResizeObserverController.prototype.onTransitionEnd_ = function (ref) {
        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';

    // Detect whether transition may affect dimensions of an element.
    var isReflowProperty = transitionKeys.some(function (key) {
        return !!~propertyName.indexOf(key);
    });

    if (isReflowProperty) {
        this.refresh();
    }
};

/**
 * Returns instance of the ResizeObserverController.
 *
 * @returns {ResizeObserverController}
 */
ResizeObserverController.getInstance = function () {
    if (!this.instance_) {
        this.instance_ = new ResizeObserverController();
    }

    return this.instance_;
};

ResizeObserverController.instance_ = null;

/**
 * Defines non-writable/enumerable properties of the provided target object.
 *
 * @param {Object} target - Object for which to define properties.
 * @param {Object} props - Properties to be defined.
 * @returns {Object} Target object.
 */
var defineConfigurable = (function (target, props) {
    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {
        var key = list[i];

        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }

    return target;
});

/**
 * Returns the global object associated with provided element.
 *
 * @param {Object} target
 * @returns {Object}
 */
var getWindowOf = (function (target) {
    // Assume that the element is an instance of Node, which means that it
    // has the "ownerDocument" property from which we can retrieve a
    // corresponding global object.
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;

    // Return the local global object if it's not possible extract one from
    // provided element.
    return ownerGlobal || global$1;
});

// Placeholder of an empty content rectangle.
var emptyRect = createRectInit(0, 0, 0, 0);

/**
 * Converts provided string to a number.
 *
 * @param {number|string} value
 * @returns {number}
 */
function toFloat(value) {
    return parseFloat(value) || 0;
}

/**
 * Extracts borders size from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @param {...string} positions - Borders positions (top, right, ...)
 * @returns {number}
 */
function getBordersSize(styles) {
    var positions = [], len = arguments.length - 1;
    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];

    return positions.reduce(function (size, position) {
        var value = styles['border-' + position + '-width'];

        return size + toFloat(value);
    }, 0);
}

/**
 * Extracts paddings sizes from provided styles.
 *
 * @param {CSSStyleDeclaration} styles
 * @returns {Object} Paddings box.
 */
function getPaddings(styles) {
    var positions = ['top', 'right', 'bottom', 'left'];
    var paddings = {};

    for (var i = 0, list = positions; i < list.length; i += 1) {
        var position = list[i];

        var value = styles['padding-' + position];

        paddings[position] = toFloat(value);
    }

    return paddings;
}

/**
 * Calculates content rectangle of provided SVG element.
 *
 * @param {SVGGraphicsElement} target - Element content rectangle of which needs
 *      to be calculated.
 * @returns {DOMRectInit}
 */
function getSVGContentRect(target) {
    var bbox = target.getBBox();

    return createRectInit(0, 0, bbox.width, bbox.height);
}

/**
 * Calculates content rectangle of provided HTMLElement.
 *
 * @param {HTMLElement} target - Element for which to calculate the content rectangle.
 * @returns {DOMRectInit}
 */
function getHTMLElementContentRect(target) {
    // Client width & height properties can't be
    // used exclusively as they provide rounded values.
    var clientWidth = target.clientWidth;
    var clientHeight = target.clientHeight;

    // By this condition we can catch all non-replaced inline, hidden and
    // detached elements. Though elements with width & height properties less
    // than 0.5 will be discarded as well.
    //
    // Without it we would need to implement separate methods for each of
    // those cases and it's not possible to perform a precise and performance
    // effective test for hidden elements. E.g. even jQuery's ':visible' filter
    // gives wrong results for elements with width & height less than 0.5.
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }

    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;

    // Computed styles of width & height are being used because they are the
    // only dimensions available to JS that contain non-rounded values. It could
    // be possible to utilize the getBoundingClientRect if only it's data wasn't
    // affected by CSS transformations let alone paddings, borders and scroll bars.
    var width = toFloat(styles.width),
        height = toFloat(styles.height);

    // Width & height include paddings and borders when the 'border-box' box
    // model is applied (except for IE).
    if (styles.boxSizing === 'border-box') {
        // Following conditions are required to handle Internet Explorer which
        // doesn't include paddings and borders to computed CSS dimensions.
        //
        // We can say that if CSS dimensions + paddings are equal to the "client"
        // properties then it's either IE, and thus we don't need to subtract
        // anything, or an element merely doesn't have paddings/borders styles.
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, 'left', 'right') + horizPad;
        }

        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;
        }
    }

    // Following steps can't be applied to the document's root element as its
    // client[Width/Height] properties represent viewport area of the window.
    // Besides, it's as well not necessary as the <html> itself neither has
    // rendered scroll bars nor it can be clipped.
    if (!isDocumentElement(target)) {
        // In some browsers (only in Firefox, actually) CSS width & height
        // include scroll bars size which can be removed at this step as scroll
        // bars are the only difference between rounded dimensions + paddings
        // and "client" properties, though that is not always true in Chrome.
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;

        // Chrome has a rather weird rounding of "client" properties.
        // E.g. for an element with content width of 314.2px it sometimes gives
        // the client width of 315px and for the width of 314.7px it may give
        // 314px. And it doesn't happen all the time. So just ignore this delta
        // as a non-relevant.
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }

        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }

    return createRectInit(paddings.left, paddings.top, width, height);
}

/**
 * Checks whether provided element is an instance of the SVGGraphicsElement.
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
var isSVGGraphicsElement = (function () {
    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement
    // interface.
    if (typeof SVGGraphicsElement !== 'undefined') {
        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };
    }

    // If it's so, then check that element is at least an instance of the
    // SVGElement and that it has the "getBBox" method.
    // eslint-disable-next-line no-extra-parens
    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };
})();

/**
 * Checks whether provided element is a document element (<html>).
 *
 * @param {Element} target - Element to be checked.
 * @returns {boolean}
 */
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}

/**
 * Calculates an appropriate content rectangle for provided html or svg element.
 *
 * @param {Element} target - Element content rectangle of which needs to be calculated.
 * @returns {DOMRectInit}
 */
function getContentRect(target) {
    if (!isBrowser) {
        return emptyRect;
    }

    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }

    return getHTMLElementContentRect(target);
}

/**
 * Creates rectangle with an interface of the DOMRectReadOnly.
 * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly
 *
 * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.
 * @returns {DOMRectReadOnly}
 */
function createReadOnlyRect(ref) {
    var x = ref.x;
    var y = ref.y;
    var width = ref.width;
    var height = ref.height;

    // If DOMRectReadOnly is available use it as a prototype for the rectangle.
    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);

    // Rectangle's properties are not writable and non-enumerable.
    defineConfigurable(rect, {
        x: x, y: y, width: width, height: height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });

    return rect;
}

/**
 * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.
 * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit
 *
 * @param {number} x - X coordinate.
 * @param {number} y - Y coordinate.
 * @param {number} width - Rectangle's width.
 * @param {number} height - Rectangle's height.
 * @returns {DOMRectInit}
 */
function createRectInit(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}

/**
 * Class that is responsible for computations of the content rectangle of
 * provided DOM element and for keeping track of it's changes.
 */
var ResizeObservation = function(target) {
    this.broadcastWidth = 0;
    this.broadcastHeight = 0;
    this.contentRect_ = createRectInit(0, 0, 0, 0);

    this.target = target;
};

/**
 * Updates content rectangle and tells whether it's width or height properties
 * have changed since the last broadcast.
 *
 * @returns {boolean}
 */


/**
 * Reference to the last observed content rectangle.
 *
 * @private {DOMRectInit}
 */


/**
 * Broadcasted width of content rectangle.
 *
 * @type {number}
 */
ResizeObservation.prototype.isActive = function () {
    var rect = getContentRect(this.target);

    this.contentRect_ = rect;

    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
};

/**
 * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data
 * from the corresponding properties of the last observed content rectangle.
 *
 * @returns {DOMRectInit} Last observed content rectangle.
 */
ResizeObservation.prototype.broadcastRect = function () {
    var rect = this.contentRect_;

    this.broadcastWidth = rect.width;
    this.broadcastHeight = rect.height;

    return rect;
};

var ResizeObserverEntry = function(target, rectInit) {
    var contentRect = createReadOnlyRect(rectInit);

    // According to the specification following properties are not writable
    // and are also not enumerable in the native implementation.
    //
    // Property accessors are not being used as they'd require to define a
    // private WeakMap storage which may cause memory leaks in browsers that
    // don't support this type of collections.
    defineConfigurable(this, { target: target, contentRect: contentRect });
};

var ResizeObserverSPI = function(callback, controller, callbackCtx) {
    this.activeObservations_ = [];
    this.observations_ = new MapShim();

    if (typeof callback !== 'function') {
        throw new TypeError('The callback provided as parameter 1 is not a function.');
    }

    this.callback_ = callback;
    this.controller_ = controller;
    this.callbackCtx_ = callbackCtx;
};

/**
 * Starts observing provided element.
 *
 * @param {Element} target - Element to be observed.
 * @returns {void}
 */


/**
 * Registry of the ResizeObservation instances.
 *
 * @private {Map<Element, ResizeObservation>}
 */


/**
 * Public ResizeObserver instance which will be passed to the callback
 * function and used as a value of it's "this" binding.
 *
 * @private {ResizeObserver}
 */

/**
 * Collection of resize observations that have detected changes in dimensions
 * of elements.
 *
 * @private {Array<ResizeObservation>}
 */
ResizeObserverSPI.prototype.observe = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is already being observed.
    if (observations.has(target)) {
        return;
    }

    observations.set(target, new ResizeObservation(target));

    this.controller_.addObserver(this);

    // Force the update of observations.
    this.controller_.refresh();
};

/**
 * Stops observing provided element.
 *
 * @param {Element} target - Element to stop observing.
 * @returns {void}
 */
ResizeObserverSPI.prototype.unobserve = function (target) {
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    // Do nothing if current environment doesn't have the Element interface.
    if (typeof Element === 'undefined' || !(Element instanceof Object)) {
        return;
    }

    if (!(target instanceof getWindowOf(target).Element)) {
        throw new TypeError('parameter 1 is not of type "Element".');
    }

    var observations = this.observations_;

    // Do nothing if element is not being observed.
    if (!observations.has(target)) {
        return;
    }

    observations.delete(target);

    if (!observations.size) {
        this.controller_.removeObserver(this);
    }
};

/**
 * Stops observing all elements.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.disconnect = function () {
    this.clearActive();
    this.observations_.clear();
    this.controller_.removeObserver(this);
};

/**
 * Collects observation instances the associated element of which has changed
 * it's content rectangle.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.gatherActive = function () {
        var this$1 = this;

    this.clearActive();

    this.observations_.forEach(function (observation) {
        if (observation.isActive()) {
            this$1.activeObservations_.push(observation);
        }
    });
};

/**
 * Invokes initial callback function with a list of ResizeObserverEntry
 * instances collected from active resize observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.broadcastActive = function () {
    // Do nothing if observer doesn't have active observations.
    if (!this.hasActive()) {
        return;
    }

    var ctx = this.callbackCtx_;

    // Create ResizeObserverEntry instance for every active observation.
    var entries = this.activeObservations_.map(function (observation) {
        return new ResizeObserverEntry(observation.target, observation.broadcastRect());
    });

    this.callback_.call(ctx, entries, ctx);
    this.clearActive();
};

/**
 * Clears the collection of active observations.
 *
 * @returns {void}
 */
ResizeObserverSPI.prototype.clearActive = function () {
    this.activeObservations_.splice(0);
};

/**
 * Tells whether observer has active observations.
 *
 * @returns {boolean}
 */
ResizeObserverSPI.prototype.hasActive = function () {
    return this.activeObservations_.length > 0;
};

// Registry of internal observers. If WeakMap is not available use current shim
// for the Map collection as it has all required methods and because WeakMap
// can't be fully polyfilled anyway.
var observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();

/**
 * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation
 * exposing only those methods and properties that are defined in the spec.
 */
var ResizeObserver = function(callback) {
    if (!(this instanceof ResizeObserver)) {
        throw new TypeError('Cannot call a class as a function.');
    }
    if (!arguments.length) {
        throw new TypeError('1 argument required, but only 0 present.');
    }

    var controller = ResizeObserverController.getInstance();
    var observer = new ResizeObserverSPI(callback, controller, this);

    observers.set(this, observer);
};

// Expose public methods of ResizeObserver.
['observe', 'unobserve', 'disconnect'].forEach(function (method) {
    ResizeObserver.prototype[method] = function () {
        return (ref = observers.get(this))[method].apply(ref, arguments);
        var ref;
    };
});

var index = (function () {
    // Export existing implementation if available.
    if (typeof global$1.ResizeObserver !== 'undefined') {
        return global$1.ResizeObserver;
    }

    return ResizeObserver;
})();

/* harmony default export */ const ResizeObserver_es = (index);

// EXTERNAL MODULE: ../../node_modules/dom-to-image/src/dom-to-image.js
var dom_to_image = __webpack_require__(8493);
var dom_to_image_default = /*#__PURE__*/__webpack_require__.n(dom_to_image);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/essentials/dom-utils.js
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports


// D3 Imports


// import the settings for the css prefix

// MISC


var CSS_VERIFIER_ELEMENT_CLASSNAME = 'DONT_STYLE_ME_css_styles_verifier';
var DOMUtils = /** @class */ (function (_super) {
    __extends(DOMUtils, _super);
    function DOMUtils(model, services) {
        var _this = _super.call(this, model, services) || this;
        _this.chartID = Math.floor((1 + Math.random()) * 0x1000000000000).toString(16);
        return _this;
    }
    DOMUtils.getHTMLElementSize = function (element) {
        return {
            width: element.clientWidth,
            height: element.clientHeight,
        };
    };
    DOMUtils.getSVGElementSize = function (svgSelector, options) {
        if (options === void 0) { options = {
            useAttrs: false,
            useClientDimensions: false,
            useBBox: false,
            useBoundingRect: false,
        }; }
        if (!svgSelector.attr) {
            svgSelector = src_select(svgSelector);
        }
        var finalDimensions = {
            width: 0,
            height: 0,
        };
        var validateAndSetDimensions = function (dimensions) {
            if (dimensions) {
                Object.keys(finalDimensions).forEach(function (dimensionKey) {
                    if (dimensions[dimensionKey]) {
                        var dimension = dimensions[dimensionKey];
                        var dimensionNumber = parseFloat(dimension);
                        if (dimension &&
                            dimensionNumber > finalDimensions[dimensionKey] &&
                            ('' + dimension).indexOf('%') === -1) {
                            finalDimensions[dimensionKey] = dimensionNumber;
                        }
                    }
                });
            }
        };
        var attrDimensions = {
            width: svgSelector.attr('width'),
            height: svgSelector.attr('height'),
        };
        var bbox, bboxDimensions, boundingRect, boundingRectDimensions;
        // In many versions of Firefox
        // getBBox will cause an "NSFailure" error
        try {
            bbox = svgSelector.node().getBBox();
            bboxDimensions = {
                width: bbox.width,
                height: bbox.height,
            };
        }
        catch (e) { }
        try {
            boundingRect = svgSelector.node().getBoundingClientRect();
            boundingRectDimensions = {
                width: boundingRect.width,
                height: boundingRect.height,
            };
        }
        catch (e) { }
        var clientDimensions = {
            width: svgSelector.node().clientWidth,
            height: svgSelector.node().clientHeight,
        };
        // If both attribute values are numbers
        // And not percentages or NaN
        if (options) {
            if (options.useAttrs) {
                validateAndSetDimensions(attrDimensions);
                if (finalDimensions.width > 0 && finalDimensions.height > 0) {
                    return finalDimensions;
                }
            }
            if (options.useClientDimensions) {
                validateAndSetDimensions(clientDimensions);
                if (finalDimensions.width > 0 && finalDimensions.height > 0) {
                    return clientDimensions;
                }
            }
            if (options.useBBox) {
                validateAndSetDimensions(bboxDimensions);
                if (finalDimensions.width > 0 && finalDimensions.height > 0) {
                    return bboxDimensions;
                }
            }
            if (options.useBoundingRect) {
                validateAndSetDimensions(boundingRectDimensions);
                if (finalDimensions.width > 0 && finalDimensions.height > 0) {
                    return boundingRectDimensions;
                }
            }
        }
        try {
            var nativeDimensions = {
                width: Tools.getProperty(svgSelector.node(), 'width', 'baseVal', 'value'),
                height: Tools.getProperty(svgSelector.node(), 'height', 'baseVal', 'value'),
            };
            validateAndSetDimensions(nativeDimensions);
        }
        catch (e) {
            validateAndSetDimensions(clientDimensions);
            validateAndSetDimensions(bboxDimensions);
            validateAndSetDimensions(attrDimensions);
        }
        return finalDimensions;
    };
    DOMUtils.appendOrSelect = function (parent, query) {
        var selection = parent.select("" + query);
        if (selection.empty()) {
            // see if there is an id
            var querySections = query.split('#');
            var elementToAppend = void 0;
            var id = void 0;
            // if there is an id
            if (querySections.length === 2) {
                // take out the element to append
                elementToAppend = querySections[0];
                // split it by classes
                querySections = querySections[1].split('.');
                // the first string is the id
                id = querySections[0];
            }
            else {
                querySections = query.split('.');
                elementToAppend = querySections[0];
            }
            return parent
                .append(elementToAppend)
                .attr('id', id)
                .attr('class', querySections.slice(1).join(' '));
        }
        return selection;
    };
    DOMUtils.prototype.init = function () {
        // Add width & height to the chart holder if necessary, and add a classname
        this.styleHolderElement();
        this.addMainContainer();
        this.verifyCSSStylesBeingApplied();
        if (this.model.getOptions().resizable) {
            this.addResizeListener();
        }
        this.addHolderListeners();
        this.handleFullscreenChange();
    };
    DOMUtils.prototype.getChartID = function () {
        return this.chartID;
    };
    DOMUtils.prototype.generateElementIDString = function (originalID) {
        return "chart-" + this.chartID + "-" + originalID;
    };
    DOMUtils.prototype.addMainContainer = function () {
        var options = this.model.getOptions();
        var chartsprefix = Tools.getProperty(options, 'style', 'prefix');
        var mainContainer = src_select(this.getHolder())
            .append('div')
            .classed(js_settings.prefix + "--" + chartsprefix + "--chart-wrapper", true)
            .style('height', '100%')
            .style('width', '100%');
        mainContainer.append('g').attr('class', CSS_VERIFIER_ELEMENT_CLASSNAME);
        this.mainContainer = mainContainer.node();
    };
    DOMUtils.prototype.update = function () {
        this.styleHolderElement();
    };
    DOMUtils.prototype.styleHolderElement = function () {
        var holderElement = this.getHolder();
        // Add class to chart holder
        src_select(this.getHolder()).classed(js_settings.prefix + "--chart-holder", true);
        // In order for resize events to not clash with these updates
        // We'll check if the width & height values passed in options
        // Have changed, before setting them to the holder
        var _a = this.model.getOptions(), width = _a.width, height = _a.height;
        if (width !== this.width) {
            // Apply formatted width attribute to chart
            holderElement.style.width = width;
            this.width = width;
        }
        if (height !== this.height) {
            // Apply formatted width attribute to chart
            holderElement.style.height = height;
            this.height = height;
        }
    };
    DOMUtils.prototype.getHolder = function () {
        return this.model.get('holder');
    };
    DOMUtils.prototype.exportToJPG = function () {
        var self = this;
        var holder = this.getHolder();
        var holderSelection = src_select(holder);
        holderSelection.classed('filled', true);
        dom_to_image_default().toJpeg(this.getMainContainer(), {
            bgcolor: typeof window !== 'undefined'
                ? window
                    .getComputedStyle(holder)
                    .getPropertyValue('background-color')
                : undefined,
            quality: 1,
            // Remove the toolbar
            filter: function (node) {
                if (node.classList &&
                    node.classList.contains('bx--cc--toolbar')) {
                    return false;
                }
                return true;
            },
        })
            .then(function (dataUrl) {
            self.services.files.downloadImage(dataUrl, 'myChart.jpg');
            holderSelection.classed('filled', false);
        });
    };
    DOMUtils.prototype.exportToPNG = function () {
        var self = this;
        var holder = this.getHolder();
        var holderSelection = src_select(holder);
        holderSelection.classed('filled', true);
        dom_to_image_default().toPng(this.getMainContainer(), {
            bgcolor: typeof window !== 'undefined'
                ? window
                    .getComputedStyle(holder)
                    .getPropertyValue('background-color')
                : undefined,
            quality: 1,
            // Remove the toolbar
            filter: function (node) {
                if (node.classList &&
                    node.classList.contains('bx--cc--toolbar')) {
                    return false;
                }
                return true;
            },
        })
            .then(function (dataUrl) {
            self.services.files.downloadImage(dataUrl, 'myChart.png');
            holderSelection.classed('filled', false);
        })
            .catch(function (error) {
            console.error('oops, something went wrong!', error);
        });
    };
    DOMUtils.prototype.toggleFullscreen = function () {
        var holder = this.getHolder();
        var holderSelection = src_select(holder);
        var isFullScreen = holderSelection.classed('fullscreen');
        if (isFullScreen &&
            (document.fullscreenElement ||
                document['webkitFullscreenElement'] ||
                document['mozFullScreenElement'] ||
                document['msFullscreenElement'])) {
            // Call the correct function depending on the browser
            if (document.exitFullscreen) {
                document.exitFullscreen();
            }
            else if (document['webkitExitFullscreen']) {
                document['webkitExitFullscreen']();
            }
            else if (document['mozCancelFullScreen']) {
                document['mozCancelFullScreen']();
            }
            else if (document['msExitFullscreen']) {
                document['msExitFullscreen']();
            }
        }
        else {
            // Call the correct function depending on the browser
            if (holder.requestFullscreen) {
                holder.requestFullscreen();
            }
            else if (holder.webkitRequestFullscreen) {
                holder.webkitRequestFullscreen();
            }
            else if (holder.mozRequestFullScreen) {
                holder.mozRequestFullScreen();
            }
            else if (holder.msRequestFullscreen) {
                holder.msRequestFullscreen();
            }
        }
    };
    DOMUtils.prototype.handleFullscreenChange = function () {
        var _this = this;
        document.addEventListener('fullscreenchange', function () {
            var holderSelection = src_select(_this.getHolder());
            var isFullScreen = holderSelection.classed('fullscreen');
            // Toggle the `fullscreen` classname
            holderSelection.classed('fullscreen', !isFullScreen);
        });
    };
    DOMUtils.prototype.verifyCSSStylesBeingApplied = function () {
        var _this = this;
        // setTimeout is needed here since in `addSVGElement()` we're appending the
        // CSS verifier element, and need to allow some time for it to become available
        // in the DOM
        setTimeout(function () {
            var cssVerifierElement = src_select(_this.mainContainer)
                .select("g." + CSS_VERIFIER_ELEMENT_CLASSNAME)
                .node();
            var computedStyles = getComputedStyle(cssVerifierElement);
            if (computedStyles.getPropertyValue('overflow') !== 'hidden' ||
                computedStyles.getPropertyValue('opacity') !== '0') {
                console.error('Missing CSS styles for Carbon Charts. Please read the Carbon Charts getting started guide.');
            }
        });
    };
    DOMUtils.prototype.setSVGMaxHeight = function () {
        // if there is a set height on the holder, leave the chart svg height at 100%
        if (!this.model.getOptions().height) {
            var chartHeight = DOMUtils.getSVGElementSize(src_select(this.mainContainer), { useBBox: true }).height;
            var chartSVGSelector = src_select(this.mainContainer).attr('class');
            var children = src_select(this.mainContainer).selectAll("." + chartSVGSelector + " > svg");
            // get the height of the children SVGs (spacers, titles, etc)
            var childrenHeight_1 = 0;
            children.nodes().forEach(function (childSVG) {
                childrenHeight_1 += Number(DOMUtils.getSVGElementSize(src_select(childSVG), {
                    useBBox: true,
                }).height);
            });
            // set the chart svg height to the children height
            // forcing the chart not to take up any more space than it requires
            childrenHeight_1 <= chartHeight
                ? src_select(this.mainContainer).attr('height', childrenHeight_1)
                : src_select(this.mainContainer).attr('height', '100%');
        }
    };
    DOMUtils.prototype.getMainContainer = function () {
        return this.mainContainer;
    };
    DOMUtils.prototype.addHolderListeners = function () {
        var _this = this;
        var holder = this.getHolder();
        if (!holder) {
            return;
        }
        src_select(holder)
            .on('mouseover', function () {
            // Dispatch event
            _this.services.events.dispatchEvent(interfaces.Events.Chart.MOUSEOVER);
        })
            .on('mouseout', function () {
            // Dispatch event
            _this.services.events.dispatchEvent(interfaces.Events.Chart.MOUSEOUT);
        });
    };
    DOMUtils.prototype.addResizeListener = function () {
        var _this = this;
        var holder = this.getHolder();
        if (!holder) {
            return;
        }
        // Grab current dimensions of the chart holder
        var containerWidth = holder.clientWidth;
        var containerHeight = holder.clientHeight;
        // The resize callback function
        var resizeCallback = Tools.debounce(function (entries, observer) {
            if (!holder) {
                return;
            }
            if (Math.abs(containerWidth - holder.clientWidth) > 1 ||
                Math.abs(containerHeight - holder.clientHeight) > 1) {
                containerWidth = holder.clientWidth;
                containerHeight = holder.clientHeight;
                _this.services.events.dispatchEvent(interfaces.Events.Chart.RESIZE);
            }
        }, 12.5);
        // Observe the behaviour of resizing on the holder
        var resizeObserver = new ResizeObserver_es(resizeCallback);
        resizeObserver.observe(holder);
    };
    return DOMUtils;
}(Service));

//# sourceMappingURL=../../../src/services/essentials/dom-utils.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/essentials/events.js
var events_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports

var Events = /** @class */ (function (_super) {
    events_extends(Events, _super);
    function Events() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Events.prototype.init = function () {
        // Setup the event fragment on the DOM
        this.documentFragment = document.createDocumentFragment();
    };
    Events.prototype.addEventListener = function (type, listener) {
        // Need the casting to any here since typescript
        // Is expecting a function of type EventListenerOrEventListenerObject here
        // Which seems unreasonable
        this.documentFragment.addEventListener(type, listener);
    };
    Events.prototype.removeEventListener = function (type, listener) {
        // Need the casting to any here since typescript
        // Is expecting a function of type EventListenerOrEventListenerObject here
        // Which seems unreasonable
        this.documentFragment.removeEventListener(type, listener);
    };
    Events.prototype.dispatchEvent = function (eventType, eventDetail) {
        var newEvent;
        if (eventDetail) {
            newEvent = new CustomEvent(eventType, {
                detail: eventDetail,
            });
        }
        else {
            newEvent = document.createEvent('Event');
            newEvent.initEvent(eventType, false, true);
        }
        this.documentFragment.dispatchEvent(newEvent);
    };
    return Events;
}(Service));

//# sourceMappingURL=../../../src/services/essentials/events.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/essentials/files.js
var files_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports

var Files = /** @class */ (function (_super) {
    files_extends(Files, _super);
    function Files(model, services) {
        return _super.call(this, model, services) || this;
    }
    Files.prototype.downloadCSV = function (content, filename) {
        var anchor = document.createElement('a');
        var mimeType = 'text/csv;encoding:utf-8';
        if (navigator['msSaveBlob']) {
            // Internet Explorer 10
            navigator['msSaveBlob'](new Blob([content], {
                type: mimeType,
            }), filename);
        }
        else if (URL && 'download' in anchor) {
            // HTML5
            var href = URL.createObjectURL(new Blob([content], {
                type: mimeType,
            }));
            anchor.href = href;
            anchor.setAttribute('download', filename);
            // Add anchor to body
            document.body.appendChild(anchor);
            // Click anchor
            anchor.click();
            // Remove anchor from body
            document.body.removeChild(anchor);
            URL.revokeObjectURL(href);
        }
        else {
            location.href = "data:application/octet-stream," + encodeURIComponent(content);
        }
    };
    Files.prototype.downloadImage = function (uri, name) {
        var link = document.createElement('a');
        link.download = name;
        link.href = uri;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };
    return Files;
}(Service));

//# sourceMappingURL=../../../src/services/essentials/files.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/essentials/transitions.js
var transitions_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




var Transitions = /** @class */ (function (_super) {
    transitions_extends(Transitions, _super);
    function Transitions() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.pendingTransitions = {};
        return _this;
    }
    Transitions.prototype.init = function () {
        var _this = this;
        this.services.events.addEventListener(interfaces.Events.Model.UPDATE, function () {
            _this.pendingTransitions = {};
        });
    };
    Transitions.prototype.setupTransition = function (_a) {
        var _this = this;
        var t = _a.transition, name = _a.name, animate = _a.animate;
        this.pendingTransitions[t._id] = t;
        t.on('end interrupt cancel', function () {
            delete _this.pendingTransitions[t._id];
        });
        if (this.model.getOptions().animations === false || animate === false) {
            return t.duration(0);
        }
        return t.duration(Tools.getProperty(transitions, name, 'duration') ||
            transitions["default"].duration);
    };
    Transitions.prototype.getPendingTransitions = function () {
        return this.pendingTransitions;
    };
    return Transitions;
}(Service));

//# sourceMappingURL=../../../src/services/essentials/transitions.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/essentials/gradient-utils.js
var gradient_utils_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports

var GradientUtils = /** @class */ (function (_super) {
    gradient_utils_extends(GradientUtils, _super);
    function GradientUtils() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GradientUtils.appendOrUpdateLinearGradient = function (configs) {
        var lg = configs.svg.select("defs linearGradient#" + configs.id);
        if (lg.empty()) {
            lg = configs.svg
                .append('defs')
                .append('linearGradient')
                .attr('id', configs.id)
                .attr('x1', configs.x1)
                .attr('x2', configs.x2)
                .attr('y1', configs.y1)
                .attr('y2', configs.y2);
        }
        lg.selectAll('stop').remove();
        lg.selectAll('stop')
            .data(configs.stops)
            .enter()
            .append('stop')
            .attr('offset', function (d) { return d.offset; })
            .style('stop-color', function (d) { return d.color; })
            .style('stop-opacity', function (d) { return d.opacity; });
    };
    GradientUtils.getOffsetRatio = function (domain) {
        var offsetRatio = ((Math.abs(domain[1]) * 100) /
            Math.abs(domain[0] - domain[1])).toFixed(2) + '%';
        return offsetRatio;
    };
    GradientUtils.getStops = function (domain, color) {
        var need3Stops = domain[0] < 0 && domain[1] > 0;
        var stops = [
            {
                offset: '0%',
                color: color,
                opacity: '0.6',
            },
            {
                offset: '80%',
                color: color,
                opacity: '0',
            },
        ];
        if (need3Stops) {
            stops = [
                {
                    offset: '0%',
                    color: color,
                    opacity: '0.6',
                },
                {
                    offset: GradientUtils.getOffsetRatio(domain),
                    color: color,
                    opacity: '0',
                },
                {
                    offset: '100%',
                    color: color,
                    opacity: '0.6',
                },
            ];
        }
        return stops;
    };
    return GradientUtils;
}(Service));

//# sourceMappingURL=../../../src/services/essentials/gradient-utils.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-time/src/duration.js
const durationSecond = 1000;
const durationMinute = durationSecond * 60;
const durationHour = durationMinute * 60;
const durationDay = durationHour * 24;
const durationWeek = durationDay * 7;
const durationMonth = durationDay * 30;
const durationYear = durationDay * 365;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/interval.js
var t0 = new Date,
    t1 = new Date;

function newInterval(floori, offseti, count, field) {

  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;
  }

  interval.floor = function(date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function(date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function(date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };

  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty
        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty
        }
      }
    });
  };

  if (count) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null
          : !(step > 1) ? interval
          : interval.filter(field
              ? function(d) { return field(d) % step === 0; }
              : function(d) { return interval.count(0, d) % step === 0; });
    };
  }

  return interval;
}

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/millisecond.js


var millisecond = newInterval(function() {
  // noop
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});

// An optimized implementation for this simple case.
millisecond.every = function(k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return newInterval(function(date) {
    date.setTime(Math.floor(date / k) * k);
  }, function(date, step) {
    date.setTime(+date + step * k);
  }, function(start, end) {
    return (end - start) / k;
  });
};

/* harmony default export */ const src_millisecond = (millisecond);
var milliseconds = millisecond.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/second.js



var second = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond);
}, function(start, end) {
  return (end - start) / durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});

/* harmony default export */ const src_second = (second);
var seconds = second.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/minute.js



var minute = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getMinutes();
});

/* harmony default export */ const src_minute = (minute);
var minutes = minute.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/hour.js



var hour = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getHours();
});

/* harmony default export */ const src_hour = (hour);
var hours = hour.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/day.js



var day = newInterval(
  date => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
  date => date.getDate() - 1
);

/* harmony default export */ const src_day = (day);
var days = day.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/week.js



function weekday(i) {
  return newInterval(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}

var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);

var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/month.js


var month = newInterval(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});

/* harmony default export */ const src_month = (month);
var months = month.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/year.js


var year = newInterval(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});

// An optimized implementation for this simple case.
year.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

/* harmony default export */ const src_year = (year);
var years = year.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcMinute.js



var utcMinute = newInterval(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});

/* harmony default export */ const src_utcMinute = (utcMinute);
var utcMinutes = utcMinute.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcHour.js



var utcHour = newInterval(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getUTCHours();
});

/* harmony default export */ const src_utcHour = (utcHour);
var utcHours = utcHour.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcDay.js



var utcDay = newInterval(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});

/* harmony default export */ const src_utcDay = (utcDay);
var utcDays = utcDay.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcWeek.js



function utcWeekday(i) {
  return newInterval(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek;
  });
}

var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);

var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcMonth.js


var utcMonth = newInterval(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});

/* harmony default export */ const src_utcMonth = (utcMonth);
var utcMonths = utcMonth.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/utcYear.js


var utcYear = newInterval(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});

// An optimized implementation for this simple case.
utcYear.every = function(k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

/* harmony default export */ const src_utcYear = (utcYear);
var utcYears = utcYear.range;

;// CONCATENATED MODULE: ../../node_modules/d3-time/src/ticks.js

















function ticker(year, month, week, day, hour, minute) {

  const tickIntervals = [
    [src_second,  1,      durationSecond],
    [src_second,  5,  5 * durationSecond],
    [src_second, 15, 15 * durationSecond],
    [src_second, 30, 30 * durationSecond],
    [minute,  1,      durationMinute],
    [minute,  5,  5 * durationMinute],
    [minute, 15, 15 * durationMinute],
    [minute, 30, 30 * durationMinute],
    [  hour,  1,      durationHour  ],
    [  hour,  3,  3 * durationHour  ],
    [  hour,  6,  6 * durationHour  ],
    [  hour, 12, 12 * durationHour  ],
    [   day,  1,      durationDay   ],
    [   day,  2,  2 * durationDay   ],
    [  week,  1,      durationWeek  ],
    [ month,  1,      durationMonth ],
    [ month,  3,  3 * durationMonth ],
    [  year,  1,      durationYear  ]
  ];

  function ticks(start, stop, count) {
    const reverse = stop < start;
    if (reverse) [start, stop] = [stop, start];
    const interval = count && typeof count.range === "function" ? count : tickInterval(start, stop, count);
    const ticks = interval ? interval.range(start, +stop + 1) : []; // inclusive stop
    return reverse ? ticks.reverse() : ticks;
  }

  function tickInterval(start, stop, count) {
    const target = Math.abs(stop - start) / count;
    const i = bisector(([,, step]) => step).right(tickIntervals, target);
    if (i === tickIntervals.length) return year.every(tickStep(start / durationYear, stop / durationYear, count));
    if (i === 0) return src_millisecond.every(Math.max(tickStep(start, stop, count), 1));
    const [t, step] = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
    return t.every(step);
  }

  return [ticks, tickInterval];
}

const [utcTicks, utcTickInterval] = ticker(src_utcYear, src_utcMonth, utcSunday, src_utcDay, src_utcHour, src_utcMinute);
const [timeTicks, timeTickInterval] = ticker(src_year, src_month, sunday, src_day, src_hour, src_minute);



;// CONCATENATED MODULE: ../../node_modules/d3-time-format/src/locale.js


function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }
  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }
  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;

  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);

  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };

  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };

  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };

  // These recursive directive definitions must be deferred.
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function(date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;

      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
          else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function(string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week, day;
      if (i != string.length) return null;

      // If a UNIX timestamp is specified, return it.
      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0));

      // If this is utcParse, never use the local timezone.
      if (Z && !("Z" in d)) d.Z = 0;

      // The am-pm flag is 0 for AM, and 1 for PM.
      if ("p" in d) d.H = d.H % 12 + d.p * 12;

      // If the month was not specified, inherit from the quarter.
      if (d.m === undefined) d.m = "q" in d ? d.q : 0;

      // Convert day-of-week and week-of-year to day-of-year.
      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;
        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = src_utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? monday.ceil(week) : monday(week);
          week = src_day.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      }

      // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.
      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      }

      // Otherwise, all fields are in local time.
      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);
      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() { return specifier; };
      return f;
    },
    parse: function(specifier) {
      var p = newParse(specifier += "", false);
      p.toString = function() { return specifier; };
      return p;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() { return specifier; };
      return f;
    },
    utcParse: function(specifier) {
      var p = newParse(specifier += "", true);
      p.toString = function() { return specifier; };
      return p;
    }
  };
}

var pads = {"-": "", "_": " ", "0": "0"},
    numberRe = /^\s*\d+/, // note: ignores next directive
    percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  return new Map(names.map((name, i) => [name.toLowerCase(), i]));
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + src_day.count(src_year(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(sunday.count(src_year(d) - 1, d), p, 2);
}

function dISO(d) {
  var day = d.getDay();
  return (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
}

function formatWeekNumberISO(d, p) {
  d = dISO(d);
  return pad(thursday.count(src_year(d), d) + (src_year(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(monday.count(src_year(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatYearISO(d, p) {
  d = dISO(d);
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatFullYearISO(d, p) {
  var day = d.getDay();
  d = (day >= 4 || day === 0) ? thursday(d) : thursday.ceil(d);
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+"))
      + pad(z / 60 | 0, "0", 2)
      + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + src_utcDay.count(src_utcYear(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(utcSunday.count(src_utcYear(d) - 1, d), p, 2);
}

function UTCdISO(d) {
  var day = d.getUTCDay();
  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
}

function formatUTCWeekNumberISO(d, p) {
  d = UTCdISO(d);
  return pad(utcThursday.count(src_utcYear(d), d) + (src_utcYear(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(utcMonday.count(src_utcYear(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCYearISO(d, p) {
  d = UTCdISO(d);
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCFullYearISO(d, p) {
  var day = d.getUTCDay();
  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}

;// CONCATENATED MODULE: ../../node_modules/d3-time-format/src/defaultLocale.js


var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;

defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = formatLocale(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}

;// CONCATENATED MODULE: ../../node_modules/d3-color/src/define.js
/* harmony default export */ function src_define(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}

;// CONCATENATED MODULE: ../../node_modules/d3-color/src/color.js


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

src_define(Color, color_color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color_color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color_color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function color_rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

src_define(Rgb, color_rgb, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color_color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

src_define(Hsl, hsl, extend(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/basis.js
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ function src_basis(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/basisClosed.js


/* harmony default export */ function basisClosed(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/constant.js
/* harmony default export */ const d3_interpolate_src_constant = (x => () => x);

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/color.js


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : d3_interpolate_src_constant(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : d3_interpolate_src_constant(isNaN(a) ? b : a);
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/rgb.js





/* harmony default export */ const rgb = ((function rgbGamma(y) {
  var color = gamma(y);

  function rgb(start, end) {
    var r = color((start = color_rgb(start)).r, (end = color_rgb(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = nogamma(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = color_rgb(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(src_basis);
var rgbBasisClosed = rgbSpline(basisClosed);

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/array.js



/* harmony default export */ function src_array(a, b) {
  return (isNumberArray(b) ? numberArray : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/date.js
/* harmony default export */ function date(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/number.js
/* harmony default export */ function src_number(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/object.js


/* harmony default export */ function object(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = value(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/string.js


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ function string(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: src_number(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/numberArray.js
/* harmony default export */ function src_numberArray(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
}

function numberArray_isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/value.js










/* harmony default export */ function value(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? d3_interpolate_src_constant(b)
      : (t === "number" ? src_number
      : t === "string" ? ((c = color_color(b)) ? (b = c, rgb) : string)
      : b instanceof color_color ? rgb
      : b instanceof Date ? date
      : numberArray_isNumberArray(b) ? src_numberArray
      : Array.isArray(b) ? genericArray
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
      : src_number)(a, b);
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/round.js
/* harmony default export */ function round(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/constant.js
function constants(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/number.js
function src_number_number(x) {
  return +x;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/continuous.js





var unit = [0, 1];

function continuous_identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= (a = +a))
      ? function(x) { return (x - a) / b; }
      : constants(isNaN(b) ? NaN : 0.5);
}

function clamper(a, b) {
  var t;
  if (a > b) t = a, a = b, b = t;
  return function(x) { return Math.max(a, Math.min(b, x)); };
}

// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].
function bimap(domain, range, interpolate) {
  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);
  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function(x) { return r0(d0(x)); };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1;

  // Reverse descending domains.
  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function(x) {
    var i = bisect(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target
      .domain(source.domain())
      .range(source.range())
      .interpolate(source.interpolate())
      .clamp(source.clamp())
      .unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = value,
      transform,
      untransform,
      unknown,
      clamp = continuous_identity,
      piecewise,
      output,
      input;

  function rescale() {
    var n = Math.min(domain.length, range.length);
    if (clamp !== continuous_identity) clamp = clamper(domain[0], domain[n - 1]);
    piecewise = n > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function(y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), src_number)))(y)));
  };

  scale.domain = function(_) {
    return arguments.length ? (domain = Array.from(_, src_number_number), rescale()) : domain.slice();
  };

  scale.range = function(_) {
    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();
  };

  scale.rangeRound = function(_) {
    return range = Array.from(_), interpolate = round, rescale();
  };

  scale.clamp = function(_) {
    return arguments.length ? (clamp = _ ? true : continuous_identity, rescale()) : clamp !== continuous_identity;
  };

  scale.interpolate = function(_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function(t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous() {
  return transformer()(continuous_identity, continuous_identity);
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/nice.js
function nice_nice(domain, interval) {
  domain = domain.slice();

  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/time.js






function time_date(t) {
  return new Date(t);
}

function time_number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format) {
  var scale = continuous(),
      invert = scale.invert,
      domain = scale.domain;

  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond
        : minute(date) < date ? formatSecond
        : hour(date) < date ? formatMinute
        : day(date) < date ? formatHour
        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
        : year(date) < date ? formatMonth
        : formatYear)(date);
  }

  scale.invert = function(y) {
    return new Date(invert(y));
  };

  scale.domain = function(_) {
    return arguments.length ? domain(Array.from(_, time_number)) : domain().map(time_date);
  };

  scale.ticks = function(interval) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], interval == null ? 10 : interval);
  };

  scale.tickFormat = function(count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function(interval) {
    var d = domain();
    if (!interval || typeof interval.range !== "function") interval = tickInterval(d[0], d[d.length - 1], interval == null ? 10 : interval);
    return interval ? domain(nice_nice(d, interval)) : scale;
  };

  scale.copy = function() {
    return copy(scale, calendar(ticks, tickInterval, year, month, week, day, hour, minute, second, format));
  };

  return scale;
}

function time() {
  return initRange.apply(calendar(timeTicks, timeTickInterval, src_year, src_month, sunday, src_day, src_hour, src_minute, src_second, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatSpecifier.js
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function() {
  return this.fill
      + this.align
      + this.sign
      + this.symbol
      + (this.zero ? "0" : "")
      + (this.width === undefined ? "" : Math.max(1, this.width | 0))
      + (this.comma ? "," : "")
      + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
      + (this.trim ? "~" : "")
      + this.type;
};

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatDecimal.js
/* harmony default export */ function formatDecimal(x) {
  return Math.abs(x = Math.round(x)) >= 1e21
      ? x.toLocaleString("en").replace(/,/g, "")
      : x.toString(10);
}

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].
function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
  var i, coefficient = x.slice(0, i);

  // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x.slice(i + 1)
  ];
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/exponent.js


/* harmony default export */ function exponent(x) {
  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatGroup.js
/* harmony default export */ function formatGroup(grouping, thousands) {
  return function(value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatNumerals.js
/* harmony default export */ function formatNumerals(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i) {
      return numerals[+i];
    });
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatTrim.js
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ function formatTrim(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".": i0 = i1 = i; break;
      case "0": if (i0 === 0) i0 = i; i1 = i; break;
      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatPrefixAuto.js


var prefixExponent;

/* harmony default export */ function formatPrefixAuto(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient
      : i > n ? coefficient + new Array(i - n + 1).join("0")
      : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
      : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatRounded.js


/* harmony default export */ function formatRounded(x, p) {
  var d = formatDecimalParts(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
      : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/formatTypes.js




/* harmony default export */ const formatTypes = ({
  "%": (x, p) => (x * 100).toFixed(p),
  "b": (x) => Math.round(x).toString(2),
  "c": (x) => x + "",
  "d": formatDecimal,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": (x) => Math.round(x).toString(8),
  "p": (x, p) => formatRounded(x * 100, p),
  "r": formatRounded,
  "s": formatPrefixAuto,
  "X": (x) => Math.round(x).toString(16).toUpperCase(),
  "x": (x) => Math.round(x).toString(16)
});

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/identity.js
/* harmony default export */ function src_identity(x) {
  return x;
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/locale.js









var locale_map = Array.prototype.map,
    prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];

/* harmony default export */ function src_locale(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? src_identity : formatGroup(locale_map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? src_identity : formatNumerals(locale_map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);

    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type;

    // The "n" type is an alias for ",g".
    if (type === "n") comma = true, type = "g";

    // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = "g";

    // If zero fill is specified, padding goes after sign and before digits.
    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";

    // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";

    // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?
    var formatType = formatTypes[type],
        maybeSuffix = /[defgprs%]/.test(type);

    // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].
    precision = precision === undefined ? 6
        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
        : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i, n, c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;

        // Determine the sign. -0 is not less than 0, but 1 / -0 is!
        var valueNegative = value < 0 || 1 / value < 0;

        // Perform the initial formatting.
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);

        // Trim insignificant zeros.
        if (trim) value = formatTrim(value);

        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;

        // Compute the prefix and suffix.
        valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");

        // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.
        if (maybeSuffix) {
          i = -1, n = value.length;
          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      }

      // If the fill character is not "0", grouping is applied before padding.
      if (comma && !zero) value = group(value, Infinity);

      // Compute the padding.
      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : "";

      // If the fill character is "0", grouping is applied after padding.
      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";

      // Reconstruct the final output based on the desired alignment.
      switch (align) {
        case "<": value = valuePrefix + value + valueSuffix + padding; break;
        case "=": value = valuePrefix + padding + value + valueSuffix; break;
        case "^": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;
        default: value = padding + valuePrefix + value + valueSuffix; break;
      }

      return numerals(value);
    }

    format.toString = function() {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function(value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/defaultLocale.js


var defaultLocale_locale;
var format;
var formatPrefix;

defaultLocale_defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});

function defaultLocale_defaultLocale(definition) {
  defaultLocale_locale = src_locale(definition);
  format = defaultLocale_locale.format;
  formatPrefix = defaultLocale_locale.formatPrefix;
  return defaultLocale_locale;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/log.js






function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10
      : base === Math.E ? Math.exp
      : x => Math.pow(base, x);
}

function logp(base) {
  return base === Math.E ? Math.log
      : base === 10 && Math.log10
      || base === 2 && Math.log2
      || (base = Math.log(base), x => Math.log(x) / base);
}

function reflect(f) {
  return (x, k) => -f(-x, k);
}

function loggish(transform) {
  const scale = transform(transformLog, transformExp);
  const domain = scale.domain;
  let base = 10;
  let logs;
  let pows;

  function rescale() {
    logs = logp(base), pows = powp(base);
    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }
    return scale;
  }

  scale.base = function(_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = count => {
    const d = domain();
    let u = d[0];
    let v = d[d.length - 1];
    const r = v < u;

    if (r) ([u, v] = [v, u]);

    let i = logs(u);
    let j = logs(v);
    let k;
    let t;
    const n = count == null ? 10 : +count;
    let z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.floor(i), j = Math.ceil(j);
      if (u > 0) for (; i <= j; ++i) {
        for (k = 1; k < base; ++k) {
          t = i < 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i <= j; ++i) {
        for (k = base - 1; k >= 1; --k) {
          t = i > 0 ? k / pows(-i) : k * pows(i);
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
      if (z.length * 2 < n) z = ticks(u, v, n);
    } else {
      z = ticks(i, j, Math.min(j - i, n)).map(pows);
    }
    return r ? z.reverse() : z;
  };

  scale.tickFormat = (count, specifier) => {
    if (count == null) count = 10;
    if (specifier == null) specifier = base === 10 ? "s" : ",";
    if (typeof specifier !== "function") {
      if (!(base % 1) && (specifier = formatSpecifier(specifier)).precision == null) specifier.trim = true;
      specifier = format(specifier);
    }
    if (count === Infinity) return specifier;
    const k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
    return d => {
      let i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = () => {
    return domain(nice_nice(domain(), {
      floor: x => pows(Math.floor(logs(x))),
      ceil: x => pows(Math.ceil(logs(x)))
    }));
  };

  return scale;
}

function log() {
  const scale = loggish(transformer()).domain([1, 10]);
  scale.copy = () => copy(scale, log()).base(scale.base());
  initRange.apply(scale, arguments);
  return scale;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/range.js
function range(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/band.js




function band() {
  var scale = ordinal().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      r0 = 0,
      r1 = 1,
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;

  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = r1 < r0,
        start = reverse ? r1 : r0,
        stop = reverse ? r0 : r1;
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = range(n).map(function(i) { return start + step * i; });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function(_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function(_) {
    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];
  };

  scale.rangeRound = function(_) {
    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();
  };

  scale.bandwidth = function() {
    return bandwidth;
  };

  scale.step = function() {
    return step;
  };

  scale.round = function(_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function(_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function(_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function(_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function() {
    return band(domain(), [r0, r1])
        .round(round)
        .paddingInner(paddingInner)
        .paddingOuter(paddingOuter)
        .align(align);
  };

  return initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;

  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function() {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/precisionPrefix.js


/* harmony default export */ function precisionPrefix(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/precisionRound.js


/* harmony default export */ function precisionRound(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, exponent(max) - exponent(step)) + 1;
}

;// CONCATENATED MODULE: ../../node_modules/d3-format/src/precisionFixed.js


/* harmony default export */ function precisionFixed(step) {
  return Math.max(0, -exponent(Math.abs(step)));
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/tickFormat.js



function tickFormat(start, stop, count, specifier) {
  var step = tickStep(start, stop, count),
      precision;
  specifier = formatSpecifier(specifier == null ? ",f" : specifier);
  switch (specifier.type) {
    case "s": {
      var value = Math.max(Math.abs(start), Math.abs(stop));
      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;
      return formatPrefix(specifier, value);
    }
    case "":
    case "e":
    case "g":
    case "p":
    case "r": {
      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
      break;
    }
    case "f":
    case "%": {
      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
      break;
    }
  }
  return format(specifier);
}

;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/linear.js





function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function(count) {
    var d = domain();
    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function(count, specifier) {
    var d = domain();
    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function(count) {
    if (count == null) count = 10;

    var d = domain();
    var i0 = 0;
    var i1 = d.length - 1;
    var start = d[i0];
    var stop = d[i1];
    var prestep;
    var step;
    var maxIter = 10;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }
    
    while (maxIter-- > 0) {
      step = tickIncrement(start, stop, count);
      if (step === prestep) {
        d[i0] = start
        d[i1] = stop
        return domain(d);
      } else if (step > 0) {
        start = Math.floor(start / step) * step;
        stop = Math.ceil(stop / step) * step;
      } else if (step < 0) {
        start = Math.ceil(start * step) / step;
        stop = Math.floor(stop * step) / step;
      } else {
        break;
      }
      prestep = step;
    }

    return scale;
  };

  return scale;
}

function linear_linear() {
  var scale = continuous();

  scale.copy = function() {
    return copy(scale, linear_linear());
  };

  initRange.apply(scale, arguments);

  return linearish(scale);
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/max.js
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}

;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/toDate/index.js
/**
 * @name toDate
 * @category Common Helpers
 * @summary Convert the given argument to an instance of Date.
 *
 * @description
 * Convert the given argument to an instance of Date.
 *
 * If the argument is an instance of Date, the function returns its clone.
 *
 * If the argument is a number, it is treated as a timestamp.
 *
 * If the argument is none of the above, the function returns Invalid Date.
 *
 * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
 *
 * @param {Date|Number} argument - the value to convert
 * @returns {Date} the parsed date in the local time zone
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Clone the date:
 * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
 * //=> Tue Feb 11 2014 11:30:30
 *
 * @example
 * // Convert the timestamp to date:
 * const result = toDate(1392098430000)
 * //=> Tue Feb 11 2014 11:30:30
 */
function toDate(argument) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var argStr = Object.prototype.toString.call(argument); // Clone the date

  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
    // Prevent the date to lose the milliseconds when passed to new Date() in IE10
    return new Date(argument.getTime());
  } else if (typeof argument === 'number' || argStr === '[object Number]') {
    return new Date(argument);
  } else {
    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
      // eslint-disable-next-line no-console
      console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

      console.warn(new Error().stack);
    }

    return new Date(NaN);
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInCalendarYears/index.js

/**
 * @name differenceInCalendarYears
 * @category Year Helpers
 * @summary Get the number of calendar years between the given dates.
 *
 * @description
 * Get the number of calendar years between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar years are between 31 December 2013 and 11 February 2015?
 * var result = differenceInCalendarYears(
 *   new Date(2015, 1, 11),
 *   new Date(2013, 11, 31)
 * )
 * //=> 2
 */

function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getFullYear() - dateRight.getFullYear();
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/compareAsc/index.js

/**
 * @name compareAsc
 * @category Common Helpers
 * @summary Compare the two dates and return -1, 0 or 1.
 *
 * @description
 * Compare the two dates and return 1 if the first date is after the second,
 * -1 if the first date is before the second or 0 if dates are equal.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the first date to compare
 * @param {Date|Number} dateRight - the second date to compare
 * @returns {Number} the result of the comparison
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Compare 11 February 1987 and 10 July 1989:
 * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
 * //=> -1
 *
 * @example
 * // Sort the array of dates:
 * var result = [
 *   new Date(1995, 6, 2),
 *   new Date(1987, 1, 11),
 *   new Date(1989, 6, 10)
 * ].sort(compareAsc)
 * //=> [
 * //   Wed Feb 11 1987 00:00:00,
 * //   Mon Jul 10 1989 00:00:00,
 * //   Sun Jul 02 1995 00:00:00
 * // ]
 */

function compareAsc(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var diff = dateLeft.getTime() - dateRight.getTime();

  if (diff < 0) {
    return -1;
  } else if (diff > 0) {
    return 1; // Return 0 if diff is 0; return NaN if diff is NaN
  } else {
    return diff;
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInYears/index.js



/**
 * @name differenceInYears
 * @category Year Helpers
 * @summary Get the number of full years between the given dates.
 *
 * @description
 * Get the number of full years between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full years
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full years are between 31 December 2013 and 11 February 2015?
 * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
 * //=> 1
 */

function differenceInYears(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight));
  dateLeft.setFullYear(dateLeft.getFullYear() - sign * difference); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
    return NaN;
  }

  var number = Number(dirtyNumber);

  if (isNaN(number)) {
    return number;
  }

  return number < 0 ? Math.ceil(number) : Math.floor(number);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/getDaysInMonth/index.js

/**
 * @name getDaysInMonth
 * @category Month Helpers
 * @summary Get the number of days in a month of the given date.
 *
 * @description
 * Get the number of days in a month of the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the given date
 * @returns {Number} the number of days in a month
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // How many days are in February 2000?
 * var result = getDaysInMonth(new Date(2000, 1))
 * //=> 29
 */

function getDaysInMonth(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var year = date.getFullYear();
  var monthIndex = date.getMonth();
  var lastDayOfMonth = new Date(0);
  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
  lastDayOfMonth.setHours(0, 0, 0, 0);
  return lastDayOfMonth.getDate();
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addMonths/index.js



/**
 * @name addMonths
 * @category Month Helpers
 * @summary Add the specified number of months to the given date.
 *
 * @description
 * Add the specified number of months to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be added
 * @returns {Date} the new date with the months added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 months to 1 September 2014:
 * var result = addMonths(new Date(2014, 8, 1), 5)
 * //=> Sun Feb 01 2015 00:00:00
 */

function addMonths(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  var desiredMonth = date.getMonth() + amount;
  var dateWithDesiredMonth = new Date(0);
  dateWithDesiredMonth.setFullYear(date.getFullYear(), desiredMonth, 1);
  dateWithDesiredMonth.setHours(0, 0, 0, 0);
  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month
  // if the original date was the last day of the longer month

  date.setMonth(desiredMonth, Math.min(daysInMonth, date.getDate()));
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addYears/index.js


/**
 * @name addYears
 * @category Year Helpers
 * @summary Add the specified number of years to the given date.
 *
 * @description
 * Add the specified number of years to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be added
 * @returns {Date} the new date with the years added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 5 years to 1 September 2014:
 * var result = addYears(new Date(2014, 8, 1), 5)
 * //=> Sun Sep 01 2019 00:00:00
 */

function addYears(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, amount * 12);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subYears/index.js


/**
 * @name subYears
 * @category Year Helpers
 * @summary Subtract the specified number of years from the given date.
 *
 * @description
 * Subtract the specified number of years from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of years to be subtracted
 * @returns {Date} the new date with the years subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 years from 1 September 2014:
 * var result = subYears(new Date(2014, 8, 1), 5)
 * //=> Tue Sep 01 2009 00:00:00
 */

function subYears(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addYears(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInCalendarMonths/index.js

/**
 * @name differenceInCalendarMonths
 * @category Month Helpers
 * @summary Get the number of calendar months between the given dates.
 *
 * @description
 * Get the number of calendar months between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInCalendarMonths(
 *   new Date(2014, 8, 1),
 *   new Date(2014, 0, 31)
 * )
 * //=> 8
 */

function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
  return yearDiff * 12 + monthDiff;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInMonths/index.js



/**
 * @name differenceInMonths
 * @category Month Helpers
 * @summary Get the number of full months between the given dates.
 *
 * @description
 * Get the number of full months between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full months
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full months are between 31 January 2014 and 1 September 2014?
 * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
 * //=> 7
 */

function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));
  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subMonths/index.js


/**
 * @name subMonths
 * @category Month Helpers
 * @summary Subtract the specified number of months from the given date.
 *
 * @description
 * Subtract the specified number of months from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of months to be subtracted
 * @returns {Date} the new date with the months subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 5 months from 1 February 2015:
 * var result = subMonths(new Date(2015, 1, 1), 5)
 * //=> Mon Sep 01 2014 00:00:00
 */

function subMonths(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMonths(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
var MILLISECONDS_IN_MINUTE = 60000;
/**
 * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
 * They usually appear for dates that denote time before the timezones were introduced
 * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
 * and GMT+01:00:00 after that date)
 *
 * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
 * which would lead to incorrect calculations.
 *
 * This function returns the timezone offset in milliseconds that takes seconds in account.
 */

function getTimezoneOffsetInMilliseconds(dirtyDate) {
  var date = new Date(dirtyDate.getTime());
  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());
  date.setSeconds(0, 0);
  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;
  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/startOfDay/index.js

/**
 * @name startOfDay
 * @category Day Helpers
 * @summary Return the start of a day for the given date.
 *
 * @description
 * Return the start of a day for the given date.
 * The result will be in the local timezone.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the original date
 * @returns {Date} the start of a day
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // The start of a day for 2 September 2014 11:55:00:
 * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
 * //=> Tue Sep 02 2014 00:00:00
 */

function startOfDay(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  date.setHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInCalendarDays/index.js


var MILLISECONDS_IN_DAY = 86400000;
/**
 * @name differenceInCalendarDays
 * @category Day Helpers
 * @summary Get the number of calendar days between the given dates.
 *
 * @description
 * Get the number of calendar days between the given dates. This means that the times are removed
 * from the dates and then the difference in days is calculated.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of calendar days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many calendar days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * var result = differenceInCalendarDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 366
 * // How many calendar days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * var result = differenceInCalendarDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 1
 */

function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var startOfDayLeft = startOfDay(dirtyDateLeft);
  var startOfDayRight = startOfDay(dirtyDateRight);
  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer
  // because the number of milliseconds in a day is not constant
  // (e.g. it's different in the day of the daylight saving time clock shift)

  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInDays/index.js



/**
 * @name differenceInDays
 * @category Day Helpers
 * @summary Get the number of full days between the given dates.
 *
 * @description
 * Get the number of full day periods between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full days
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * var result = differenceInDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 365
 * // How many days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * var result = differenceInDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 0
 */

function differenceInDays(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  var sign = compareAsc(dateLeft, dateRight);
  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));
  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
  // If so, result must be decreased by 1 in absolute value

  var isLastDayNotFull = compareAsc(dateLeft, dateRight) === -sign;
  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

  return result === 0 ? 0 : result;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addDays/index.js


/**
 * @name addDays
 * @category Day Helpers
 * @summary Add the specified number of days to the given date.
 *
 * @description
 * Add the specified number of days to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be added
 * @returns {Date} the new date with the days added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 10 days to 1 September 2014:
 * var result = addDays(new Date(2014, 8, 1), 10)
 * //=> Thu Sep 11 2014 00:00:00
 */

function addDays(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var amount = toInteger(dirtyAmount);
  date.setDate(date.getDate() + amount);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subDays/index.js


/**
 * @name subDays
 * @category Day Helpers
 * @summary Subtract the specified number of days from the given date.
 *
 * @description
 * Subtract the specified number of days from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of days to be subtracted
 * @returns {Date} the new date with the days subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 10 days from 1 September 2014:
 * var result = subDays(new Date(2014, 8, 1), 10)
 * //=> Fri Aug 22 2014 00:00:00
 */

function subDays(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addDays(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInMilliseconds/index.js

/**
 * @name differenceInMilliseconds
 * @category Millisecond Helpers
 * @summary Get the number of milliseconds between the given dates.
 *
 * @description
 * Get the number of milliseconds between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of milliseconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many milliseconds are between
 * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
 * var result = differenceInMilliseconds(
 *   new Date(2014, 6, 2, 12, 30, 21, 700),
 *   new Date(2014, 6, 2, 12, 30, 20, 600)
 * )
 * //=> 1100
 */

function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var dateLeft = toDate(dirtyDateLeft);
  var dateRight = toDate(dirtyDateRight);
  return dateLeft.getTime() - dateRight.getTime();
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInHours/index.js

var MILLISECONDS_IN_HOUR = 3600000;
/**
 * @name differenceInHours
 * @category Hour Helpers
 * @summary Get the number of hours between the given dates.
 *
 * @description
 * Get the number of hours between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of hours
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
 * var result = differenceInHours(
 *   new Date(2014, 6, 2, 19, 0),
 *   new Date(2014, 6, 2, 6, 50)
 * )
 * //=> 12
 */

function differenceInHours(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addMilliseconds/index.js


/**
 * @name addMilliseconds
 * @category Millisecond Helpers
 * @summary Add the specified number of milliseconds to the given date.
 *
 * @description
 * Add the specified number of milliseconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be added
 * @returns {Date} the new date with the milliseconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
 * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:30.750
 */

function addMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var timestamp = toDate(dirtyDate).getTime();
  var amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addHours/index.js


var addHours_MILLISECONDS_IN_HOUR = 3600000;
/**
 * @name addHours
 * @category Hour Helpers
 * @summary Add the specified number of hours to the given date.
 *
 * @description
 * Add the specified number of hours to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be added
 * @returns {Date} the new date with the hours added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 2 hours to 10 July 2014 23:00:00:
 * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)
 * //=> Fri Jul 11 2014 01:00:00
 */

function addHours(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * addHours_MILLISECONDS_IN_HOUR);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subHours/index.js


/**
 * @name subHours
 * @category Hour Helpers
 * @summary Subtract the specified number of hours from the given date.
 *
 * @description
 * Subtract the specified number of hours from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of hours to be subtracted
 * @returns {Date} the new date with the hours subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 2 hours from 11 July 2014 01:00:00:
 * var result = subHours(new Date(2014, 6, 11, 1, 0), 2)
 * //=> Thu Jul 10 2014 23:00:00
 */

function subHours(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addHours(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInMinutes/index.js

var differenceInMinutes_MILLISECONDS_IN_MINUTE = 60000;
/**
 * @name differenceInMinutes
 * @category Minute Helpers
 * @summary Get the number of minutes between the given dates.
 *
 * @description
 * Get the signed number of full (rounded towards 0) minutes between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of minutes
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
 * var result = differenceInMinutes(
 *   new Date(2014, 6, 2, 12, 20, 0),
 *   new Date(2014, 6, 2, 12, 7, 59)
 * )
 * //=> 12
 *
 * @example
 * // How many minutes are from 10:01:59 to 10:00:00
 * var result = differenceInMinutes(
 *   new Date(2000, 0, 1, 10, 0, 0),
 *   new Date(2000, 0, 1, 10, 1, 59)
 * )
 * //=> -1
 */

function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / differenceInMinutes_MILLISECONDS_IN_MINUTE;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addMinutes/index.js


var addMinutes_MILLISECONDS_IN_MINUTE = 60000;
/**
 * @name addMinutes
 * @category Minute Helpers
 * @summary Add the specified number of minutes to the given date.
 *
 * @description
 * Add the specified number of minutes to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be added
 * @returns {Date} the new date with the minutes added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 minutes to 10 July 2014 12:00:00:
 * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 12:30:00
 */

function addMinutes(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * addMinutes_MILLISECONDS_IN_MINUTE);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subMinutes/index.js


/**
 * @name subMinutes
 * @category Minute Helpers
 * @summary Subtract the specified number of minutes from the given date.
 *
 * @description
 * Subtract the specified number of minutes from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of minutes to be subtracted
 * @returns {Date} the new date with the minutes subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 30 minutes from 10 July 2014 12:00:00:
 * var result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
 * //=> Thu Jul 10 2014 11:30:00
 */

function subMinutes(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMinutes(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/differenceInSeconds/index.js

/**
 * @name differenceInSeconds
 * @category Second Helpers
 * @summary Get the number of seconds between the given dates.
 *
 * @description
 * Get the number of seconds between the given dates.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of seconds
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many seconds are between
 * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
 * var result = differenceInSeconds(
 *   new Date(2014, 6, 2, 12, 30, 20, 0),
 *   new Date(2014, 6, 2, 12, 30, 7, 999)
 * )
 * //=> 12
 */

function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;
  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/addSeconds/index.js


/**
 * @name addSeconds
 * @category Second Helpers
 * @summary Add the specified number of seconds to the given date.
 *
 * @description
 * Add the specified number of seconds to the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of seconds to be added
 * @returns {Date} the new date with the seconds added
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Add 30 seconds to 10 July 2014 12:45:00:
 * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:45:30
 */

function addSeconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, amount * 1000);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subSeconds/index.js


/**
 * @name subSeconds
 * @category Second Helpers
 * @summary Subtract the specified number of seconds from the given date.
 *
 * @description
 * Subtract the specified number of seconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of seconds to be subtracted
 * @returns {Date} the new date with the seconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 30 seconds from 10 July 2014 12:45:00:
 * var result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
 * //=> Thu Jul 10 2014 12:44:30
 */

function subSeconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addSeconds(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/scales-cartesian.js
var scales_cartesian_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var scales_cartesian_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports




// D3 Imports


// Misc

var CartesianScales = /** @class */ (function (_super) {
    scales_cartesian_extends(CartesianScales, _super);
    function CartesianScales() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scaleTypes = {
            top: null,
            right: null,
            bottom: null,
            left: null,
        };
        _this.scales = {
            top: null,
            right: null,
            bottom: null,
            left: null,
        };
        return _this;
    }
    CartesianScales.prototype.getDomainAxisPosition = function (_a) {
        var _b = (_a === void 0 ? {} : _a).datum, datum = _b === void 0 ? null : _b;
        var _c;
        if (this.dualAxes && datum) {
            var options = this.model.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            var axesOptions = Tools.getProperty(options, 'axes', this.secondaryDomainAxisPosition);
            var dataset = datum[groupMapsTo];
            if (((_c = axesOptions) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) &&
                axesOptions.correspondingDatasets.includes(dataset)) {
                return this.secondaryDomainAxisPosition;
            }
        }
        return this.domainAxisPosition;
    };
    CartesianScales.prototype.getRangeAxisPosition = function (_a) {
        var _b = _a === void 0 ? {} : _a, _c = _b.datum, datum = _c === void 0 ? null : _c, _d = _b.groups, groups = _d === void 0 ? null : _d;
        var _e;
        if (this.dualAxes) {
            var options = this.model.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            var axisOptions = Tools.getProperty(options, 'axes', this.secondaryRangeAxisPosition);
            var dataset = void 0;
            if (datum !== null) {
                dataset = datum[groupMapsTo];
            }
            else if (groups && groups.length > 0) {
                dataset = groups[0];
            }
            if (((_e = axisOptions) === null || _e === void 0 ? void 0 : _e.correspondingDatasets) &&
                axisOptions.correspondingDatasets.includes(dataset)) {
                return this.secondaryRangeAxisPosition;
            }
        }
        return this.rangeAxisPosition;
    };
    CartesianScales.prototype.getAxisOptions = function (position) {
        return Tools.getProperty(this.model.getOptions(), 'axes', position);
    };
    CartesianScales.prototype.getDomainAxisOptions = function () {
        var domainAxisPosition = this.getDomainAxisPosition();
        return this.getAxisOptions(domainAxisPosition);
    };
    CartesianScales.prototype.getRangeAxisOptions = function () {
        var rangeAxisPosition = this.getRangeAxisPosition();
        return this.getAxisOptions(rangeAxisPosition);
    };
    CartesianScales.prototype.getScaleLabel = function (position) {
        var axisOptions = this.getAxisOptions(position);
        var title = axisOptions.title;
        if (!title) {
            if (position === interfaces.AxisPositions.BOTTOM ||
                position === interfaces.AxisPositions.TOP) {
                return 'x-value';
            }
            return 'y-value';
        }
        return title;
    };
    CartesianScales.prototype.getDomainLabel = function () {
        return this.getScaleLabel(this.getDomainAxisPosition());
    };
    CartesianScales.prototype.getRangeLabel = function () {
        return this.getScaleLabel(this.getRangeAxisPosition());
    };
    CartesianScales.prototype.update = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        this.determineAxisDuality();
        this.findDomainAndRangeAxes();
        this.determineOrientation();
        var axisPositions = Object.keys(interfaces.AxisPositions).map(function (axisPositionKey) { return interfaces.AxisPositions[axisPositionKey]; });
        axisPositions.forEach(function (axisPosition) {
            _this.scales[axisPosition] = _this.createScale(axisPosition);
        });
    };
    CartesianScales.prototype.findDomainAndRangeAxes = function () {
        // find main axes between (left & right) && (bottom & top)
        var verticalAxesPositions = this.findVerticalAxesPositions();
        var horizontalAxesPositions = this.findHorizontalAxesPositions();
        // Now we have horizontal & vertical main axes to choose domain & range axes from
        var domainAndRangeAxesPositions = this.findDomainAndRangeAxesPositions(verticalAxesPositions, horizontalAxesPositions);
        this.domainAxisPosition =
            domainAndRangeAxesPositions.primaryDomainAxisPosition;
        this.rangeAxisPosition =
            domainAndRangeAxesPositions.primaryRangeAxisPosition;
        if (this.isDualAxes()) {
            this.secondaryDomainAxisPosition =
                domainAndRangeAxesPositions.secondaryDomainAxisPosition;
            this.secondaryRangeAxisPosition =
                domainAndRangeAxesPositions.secondaryRangeAxisPosition;
        }
    };
    CartesianScales.prototype.determineOrientation = function () {
        if ((this.rangeAxisPosition === interfaces.AxisPositions.LEFT ||
            this.rangeAxisPosition === interfaces.AxisPositions.RIGHT) &&
            (this.domainAxisPosition === interfaces.AxisPositions.BOTTOM ||
                this.domainAxisPosition === interfaces.AxisPositions.TOP)) {
            this.orientation = interfaces.CartesianOrientations.VERTICAL;
        }
        else {
            this.orientation = interfaces.CartesianOrientations.HORIZONTAL;
        }
    };
    CartesianScales.prototype.isDualAxes = function () {
        return this.dualAxes;
    };
    // if any of the axes objects have correspondingDatasets [] asserted we flag the chart as dual axes
    // it does not count as dual axes if it just has another axis turned on but is not actually using it to map a dataset
    CartesianScales.prototype.determineAxisDuality = function () {
        var _a, _b, _c, _d;
        var options = this.model.getOptions();
        var axesOptions = Tools.getProperty(options, 'axes');
        if ((((_a = axesOptions[interfaces.AxisPositions.LEFT]) === null || _a === void 0 ? void 0 : _a.correspondingDatasets) &&
            axesOptions[interfaces.AxisPositions.RIGHT]) ||
            (((_b = axesOptions[interfaces.AxisPositions.RIGHT]) === null || _b === void 0 ? void 0 : _b.correspondingDatasets) &&
                axesOptions[interfaces.AxisPositions.LEFT]) ||
            (((_c = axesOptions[interfaces.AxisPositions.TOP]) === null || _c === void 0 ? void 0 : _c.correspondingDatasets) &&
                axesOptions[interfaces.AxisPositions.BOTTOM]) ||
            (((_d = axesOptions[interfaces.AxisPositions.BOTTOM]) === null || _d === void 0 ? void 0 : _d.correspondingDatasets) &&
                axesOptions[interfaces.AxisPositions.TOP])) {
            this.dualAxes = true;
        }
    };
    CartesianScales.prototype.getCustomDomainValuesByposition = function (axisPosition) {
        var domain = Tools.getProperty(this.model.getOptions(), 'axes', axisPosition, 'domain');
        // Check if domain is an array
        if (domain && !Array.isArray(domain)) {
            throw new Error("Domain in " + axisPosition + " axis is not a valid array");
        }
        // Determine number of elements passed in domain depending on scale types
        if (Array.isArray(domain)) {
            if ((this.scaleTypes[axisPosition] === interfaces.ScaleTypes.LINEAR ||
                this.scaleTypes[axisPosition] === interfaces.ScaleTypes.TIME) &&
                domain.length !== 2) {
                throw new Error("There can only be 2 elements in domain for scale type: " + this.scaleTypes[axisPosition]);
            }
        }
        return domain;
    };
    CartesianScales.prototype.getOrientation = function () {
        return this.orientation;
    };
    CartesianScales.prototype.getScaleByPosition = function (axisPosition) {
        return this.scales[axisPosition];
    };
    CartesianScales.prototype.getScaleTypeByPosition = function (axisPosition) {
        return this.scaleTypes[axisPosition];
    };
    CartesianScales.prototype.getDomainAxisScaleType = function () {
        var domainAxisPosition = this.getDomainAxisPosition();
        return this.getScaleTypeByPosition(domainAxisPosition);
    };
    CartesianScales.prototype.getRangeAxisScaleType = function () {
        var rangeAxisPosition = this.getRangeAxisPosition();
        return this.getScaleTypeByPosition(rangeAxisPosition);
    };
    CartesianScales.prototype.getDomainScale = function () {
        return this.scales[this.domainAxisPosition];
    };
    CartesianScales.prototype.getRangeScale = function () {
        return this.scales[this.rangeAxisPosition];
    };
    // Find the main x-axis out of the 2 x-axis on the chart (when 2D axis is used)
    CartesianScales.prototype.getMainXAxisPosition = function () {
        var possibleXAxisPositions = [
            interfaces.AxisPositions.BOTTOM,
            interfaces.AxisPositions.TOP,
        ];
        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleXAxisPositions.indexOf(position) > -1; });
    };
    // Find the main y-axis out of the 2 y-axis on the chart (when 2D axis is used)
    CartesianScales.prototype.getMainYAxisPosition = function () {
        var possibleYAxisPositions = [
            interfaces.AxisPositions.LEFT,
            interfaces.AxisPositions.RIGHT,
        ];
        return [this.domainAxisPosition, this.rangeAxisPosition].find(function (position) { return possibleYAxisPositions.indexOf(position) > -1; });
    };
    CartesianScales.prototype.getMainXScale = function () {
        return this.scales[this.getMainXAxisPosition()];
    };
    CartesianScales.prototype.getMainYScale = function () {
        return this.scales[this.getMainYAxisPosition()];
    };
    CartesianScales.prototype.getValueFromScale = function (scale, scaleType, axisPosition, datum, index) {
        var options = this.model.getOptions();
        var axesOptions = Tools.getProperty(options, 'axes');
        var axisOptions = axesOptions[axisPosition];
        var mapsTo = axisOptions.mapsTo;
        var value = Tools.getProperty(datum, mapsTo) !== null ? datum[mapsTo] : datum;
        var scaledValue;
        switch (scaleType) {
            case interfaces.ScaleTypes.LABELS:
                scaledValue = scale(value) + scale.step() / 2;
                break;
            case interfaces.ScaleTypes.TIME:
                scaledValue = scale(new Date(value));
                break;
            default:
                scaledValue = scale(value);
        }
        return scaledValue;
    };
    CartesianScales.prototype.getBoundedScaledValues = function (datum, index) {
        var bounds = this.model.getOptions().bounds;
        var axisPosition = this.getRangeAxisPosition({ datum: datum });
        var scale = this.scales[axisPosition];
        var options = this.model.getOptions();
        var axesOptions = Tools.getProperty(options, 'axes');
        var axisOptions = axesOptions[axisPosition];
        var mapsTo = axisOptions.mapsTo;
        var value = datum[mapsTo] !== undefined ? datum[mapsTo] : datum;
        var boundedValues = [
            scale(Tools.getProperty(datum, bounds.upperBoundMapsTo) !== null
                ? datum[bounds.upperBoundMapsTo]
                : value),
            scale(Tools.getProperty(datum, bounds.lowerBoundMapsTo) !== null
                ? datum[bounds.lowerBoundMapsTo]
                : value),
        ];
        return boundedValues;
    };
    CartesianScales.prototype.getValueThroughAxisPosition = function (axisPosition, datum, index) {
        var scaleType = this.scaleTypes[axisPosition];
        var scale = this.scales[axisPosition];
        return this.getValueFromScale(scale, scaleType, axisPosition, datum, index);
    };
    CartesianScales.prototype.getDomainValue = function (d, i) {
        var axisPosition = this.getDomainAxisPosition({ datum: d });
        return this.getValueThroughAxisPosition(axisPosition, d, i);
    };
    CartesianScales.prototype.getRangeValue = function (d, i) {
        var axisPosition = this.getRangeAxisPosition({ datum: d });
        return this.getValueThroughAxisPosition(axisPosition, d, i);
    };
    CartesianScales.prototype.getMainXScaleType = function () {
        return this.getScaleTypeByPosition(this.getMainXAxisPosition());
    };
    CartesianScales.prototype.getMainYScaleType = function () {
        return this.getScaleTypeByPosition(this.getMainYAxisPosition());
    };
    CartesianScales.prototype.getDomainIdentifier = function (datum) {
        var options = this.model.getOptions();
        return Tools.getProperty(options, 'axes', this.getDomainAxisPosition({ datum: datum }), 'mapsTo');
    };
    CartesianScales.prototype.getRangeIdentifier = function (datum) {
        var options = this.model.getOptions();
        return Tools.getProperty(options, 'axes', this.getRangeAxisPosition({ datum: datum }), 'mapsTo');
    };
    CartesianScales.prototype.extendsDomain = function (axisPosition, domain) {
        var options = this.model.getOptions();
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        if (axisOptions.scaleType === interfaces.ScaleTypes.TIME) {
            var spaceToAddToEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');
            return addSpacingToTimeDomain(domain, spaceToAddToEdges);
        }
        else {
            return addSpacingToContinuousDomain(domain, configuration_non_customizable_axis.paddingRatio, axisOptions.scaleType);
        }
    };
    CartesianScales.prototype.findVerticalAxesPositions = function () {
        var options = this.model.getOptions();
        var axesOptions = Tools.getProperty(options, 'axes');
        var dualAxes = this.isDualAxes();
        // If right axis has been specified as `main`
        if ((Tools.getProperty(axesOptions, interfaces.AxisPositions.LEFT) === null &&
            Tools.getProperty(axesOptions, interfaces.AxisPositions.RIGHT) !== null) ||
            Tools.getProperty(axesOptions, interfaces.AxisPositions.RIGHT, 'main') ===
                true ||
            (dualAxes &&
                Tools.getProperty(axesOptions, interfaces.AxisPositions.LEFT, 'correspondingDatasets'))) {
            return {
                primary: interfaces.AxisPositions.RIGHT,
                secondary: interfaces.AxisPositions.LEFT,
            };
        }
        return { primary: interfaces.AxisPositions.LEFT, secondary: interfaces.AxisPositions.RIGHT };
    };
    CartesianScales.prototype.findHorizontalAxesPositions = function () {
        var options = this.model.getOptions();
        var axesOptions = Tools.getProperty(options, 'axes');
        var dualAxes = this.isDualAxes();
        // If top axis has been specified as `main`
        if ((Tools.getProperty(axesOptions, interfaces.AxisPositions.BOTTOM) === null &&
            Tools.getProperty(axesOptions, interfaces.AxisPositions.TOP) !== null) ||
            Tools.getProperty(axesOptions, interfaces.AxisPositions.TOP, 'main') ===
                true ||
            (dualAxes &&
                Tools.getProperty(axesOptions, interfaces.AxisPositions.BOTTOM, 'correspondingDatasets'))) {
            return {
                primary: interfaces.AxisPositions.TOP,
                secondary: interfaces.AxisPositions.BOTTOM,
            };
        }
        return { primary: interfaces.AxisPositions.BOTTOM, secondary: interfaces.AxisPositions.TOP };
    };
    CartesianScales.prototype.findDomainAndRangeAxesPositions = function (verticalAxesPositions, horizontalAxesPositions) {
        var options = this.model.getOptions();
        var mainVerticalAxisOptions = Tools.getProperty(options, 'axes', verticalAxesPositions.primary);
        var mainHorizontalAxisOptions = Tools.getProperty(options, 'axes', horizontalAxesPositions.primary);
        var mainVerticalScaleType = mainVerticalAxisOptions.scaleType || interfaces.ScaleTypes.LINEAR;
        var mainHorizontalScaleType = mainHorizontalAxisOptions.scaleType || interfaces.ScaleTypes.LINEAR;
        var result = {
            primaryDomainAxisPosition: null,
            secondaryDomainAxisPosition: null,
            primaryRangeAxisPosition: null,
            secondaryRangeAxisPosition: null,
        };
        // assign to to be a vertical chart by default
        result.primaryDomainAxisPosition = horizontalAxesPositions.primary;
        result.primaryRangeAxisPosition = verticalAxesPositions.primary;
        // secondary axes
        result.secondaryDomainAxisPosition = horizontalAxesPositions.secondary;
        result.secondaryRangeAxisPosition = verticalAxesPositions.secondary;
        // if neither the horizontal axes are label or time
        // and atleast  one of the main vertical ones are labels or time then it should be horizontal
        if ((!(mainHorizontalScaleType === interfaces.ScaleTypes.LABELS ||
            mainHorizontalScaleType === interfaces.ScaleTypes.TIME) &&
            mainVerticalScaleType === interfaces.ScaleTypes.LABELS) ||
            mainVerticalScaleType === interfaces.ScaleTypes.TIME) {
            result.primaryDomainAxisPosition = verticalAxesPositions.primary;
            result.primaryRangeAxisPosition = horizontalAxesPositions.primary;
            // secondary axes
            result.secondaryDomainAxisPosition =
                verticalAxesPositions.secondary;
            result.secondaryRangeAxisPosition =
                horizontalAxesPositions.secondary;
        }
        return result;
    };
    CartesianScales.prototype.getScaleDomain = function (axisPosition) {
        var options = this.model.getOptions();
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        var bounds = Tools.getProperty(options, 'bounds');
        var includeZero = axisOptions.includeZero;
        var scaleType = Tools.getProperty(axisOptions, 'scaleType') || interfaces.ScaleTypes.LINEAR;
        if (this.model.isDataEmpty()) {
            return [];
        }
        if (axisOptions.binned) {
            var bins = this.model.getBinConfigurations().bins;
            return [0, max(bins, function (d) { return d.length; })];
        }
        else if (axisOptions.limitDomainToBins) {
            var bins = this.model.getBinConfigurations().bins;
            var stackKeys = this.model.getStackKeys({ bins: bins });
            return [
                stackKeys[0].split('-')[0],
                stackKeys[stackKeys.length - 1].split('-')[1],
            ];
        }
        var displayData = this.model.getDisplayData();
        var extendLinearDomainBy = axisOptions.extendLinearDomainBy, mapsTo = axisOptions.mapsTo, percentage = axisOptions.percentage, thresholds = axisOptions.thresholds;
        var _a = configuration_non_customizable_axis.ratio, ratioReference = _a.reference, ratioCompareTo = _a.compareTo;
        // If domain is specified return that domain
        if (axisOptions.domain) {
            if (scaleType === interfaces.ScaleTypes.LABELS) {
                return axisOptions.domain;
            }
            else if (scaleType === interfaces.ScaleTypes.TIME) {
                axisOptions.domain = axisOptions.domain.map(function (d) {
                    return d.getTime === undefined ? new Date(d) : d;
                });
            }
            return this.extendsDomain(axisPosition, axisOptions.domain);
        }
        // Return [0, 100] for percentage axis scale
        if (percentage) {
            return [0, 100];
        }
        // If scale is a LABELS scale, return some labels as the domain
        if (axisOptions && scaleType === interfaces.ScaleTypes.LABELS) {
            // Get unique values
            return Tools.removeArrayDuplicates(displayData.map(function (d) { return d[mapsTo]; }));
        }
        // Get the extent of the domain
        var domain;
        var allDataValues;
        var dataGroupNames = this.model.getDataGroupNames();
        if (scaleType === interfaces.ScaleTypes.LABELS_RATIO) {
            return displayData.map(function (datum) { return datum[ratioReference] + "/" + datum[ratioCompareTo]; });
        }
        else if (scaleType === interfaces.ScaleTypes.TIME) {
            allDataValues = displayData.map(function (datum) { return +new Date(datum[mapsTo]); });
        }
        else if (bounds && options.axes) {
            allDataValues = [];
            displayData.forEach(function (datum) {
                allDataValues.push(datum[mapsTo]);
                if (datum[bounds.upperBoundMapsTo]) {
                    allDataValues.push(datum[bounds.upperBoundMapsTo]);
                }
                if (datum[bounds.lowerBoundMapsTo]) {
                    allDataValues.push(datum[bounds.lowerBoundMapsTo]);
                }
            });
        }
        else if (axisOptions.stacked === true &&
            dataGroupNames &&
            axisPosition === this.getRangeAxisPosition()) {
            var groupMapsTo_1 = options.data.groupMapsTo;
            var dataValuesGroupedByKeys = this.model.getDataValuesGroupedByKeys({
                groups: dataGroupNames,
            });
            var nonStackedGroupsData = displayData.filter(function (datum) { return !dataGroupNames.includes(datum[groupMapsTo_1]); });
            var stackedValues_1 = [];
            dataValuesGroupedByKeys.forEach(function (dataValues) {
                var sharedStackKey = dataValues.sharedStackKey, numericalValues = __rest(dataValues, ["sharedStackKey"]);
                var positiveSum = 0, negativeSum = 0;
                Object.values(numericalValues).forEach(function (value) {
                    if (!isNaN(value)) {
                        if (value < 0) {
                            negativeSum += value;
                        }
                        else {
                            positiveSum += value;
                        }
                    }
                });
                stackedValues_1.push([negativeSum, positiveSum]);
            });
            allDataValues = scales_cartesian_spreadArrays(Tools.flatten(stackedValues_1), nonStackedGroupsData.map(function (datum) { return datum[mapsTo]; }));
        }
        else {
            allDataValues = [];
            displayData.forEach(function (datum) {
                var value = datum[mapsTo];
                if (Array.isArray(value) && value.length === 2) {
                    allDataValues.push(value[0]);
                    allDataValues.push(value[1]);
                }
                else {
                    if (extendLinearDomainBy) {
                        allDataValues.push(Math.max(datum[mapsTo], datum[extendLinearDomainBy]));
                    }
                    allDataValues.push(value);
                }
            });
        }
        // Time can never be 0 and log of base 0 is -Infinity
        if (scaleType !== interfaces.ScaleTypes.TIME &&
            scaleType !== interfaces.ScaleTypes.LOG &&
            includeZero) {
            allDataValues.push(0);
        }
        // Add threshold values into the scale
        if (thresholds && thresholds.length > 0) {
            thresholds.forEach(function (threshold) {
                var thresholdValue = Tools.getProperty(threshold, 'value');
                if (thresholdValue !== null)
                    allDataValues.push(thresholdValue);
            });
        }
        domain = extent(allDataValues);
        domain = this.extendsDomain(axisPosition, domain);
        return domain;
    };
    CartesianScales.prototype.createScale = function (axisPosition) {
        var options = this.model.getOptions();
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        if (!axisOptions) {
            return null;
        }
        var scaleType = Tools.getProperty(axisOptions, 'scaleType') || interfaces.ScaleTypes.LINEAR;
        this.scaleTypes[axisPosition] = scaleType;
        var scale;
        if (scaleType === interfaces.ScaleTypes.TIME) {
            scale = time();
        }
        else if (scaleType === interfaces.ScaleTypes.LOG) {
            scale = log().base(axisOptions.base || 10);
        }
        else if (scaleType === interfaces.ScaleTypes.LABELS ||
            scaleType === interfaces.ScaleTypes.LABELS_RATIO) {
            scale = band();
        }
        else {
            scale = linear_linear();
        }
        scale.domain(this.getScaleDomain(axisPosition));
        return scale;
    };
    CartesianScales.prototype.getHighestDomainThreshold = function () {
        var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');
        var domainAxisPosition = this.getDomainAxisPosition();
        var thresholds = axesOptions[domainAxisPosition].thresholds;
        // Check if thresholds exist & is not empty
        if (!Array.isArray(thresholds) ||
            (Array.isArray(thresholds) && !thresholds.length)) {
            return null;
        }
        var domainScale = this.getDomainScale();
        // Find the highest threshold for the domain
        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];
        var scaleType = this.getScaleTypeByPosition(domainAxisPosition);
        if (scaleType === interfaces.ScaleTypes.TIME &&
            (typeof highestThreshold.value === 'string' ||
                highestThreshold.value.getTime === undefined)) {
            highestThreshold.value = new Date(highestThreshold.value);
        }
        return {
            threshold: highestThreshold,
            scaleValue: domainScale(highestThreshold.value),
        };
    };
    CartesianScales.prototype.getHighestRangeThreshold = function () {
        var axesOptions = Tools.getProperty(this.model.getOptions(), 'axes');
        var rangeAxisPosition = this.getRangeAxisPosition();
        var thresholds = axesOptions[rangeAxisPosition].thresholds;
        // Check if thresholds exist & is not empty
        if (!Array.isArray(thresholds) ||
            (Array.isArray(thresholds) && !thresholds.length)) {
            return null;
        }
        var rangeScale = this.getRangeScale();
        // Find the highest threshold for the range
        var highestThreshold = thresholds.sort(function (a, b) { return b.value - a.value; })[0];
        return {
            threshold: highestThreshold,
            scaleValue: rangeScale(highestThreshold.value),
        };
    };
    return CartesianScales;
}(Service));

function addSpacingToTimeDomain(domain, spaceToAddToEdges) {
    var startDate = new Date(domain[0]);
    var endDate = new Date(domain[1]);
    if (differenceInYears(endDate, startDate) > 1) {
        return [
            subYears(startDate, spaceToAddToEdges),
            addYears(endDate, spaceToAddToEdges),
        ];
    }
    if (differenceInMonths(endDate, startDate) > 1) {
        return [
            subMonths(startDate, spaceToAddToEdges),
            addMonths(endDate, spaceToAddToEdges),
        ];
    }
    if (differenceInDays(endDate, startDate) > 1) {
        return [
            subDays(startDate, spaceToAddToEdges),
            addDays(endDate, spaceToAddToEdges),
        ];
    }
    if (differenceInHours(endDate, startDate) > 1) {
        return [
            subHours(startDate, spaceToAddToEdges),
            addHours(endDate, spaceToAddToEdges),
        ];
    }
    if (differenceInMinutes(endDate, startDate) > 30) {
        return [
            subMinutes(startDate, spaceToAddToEdges * 30),
            addMinutes(endDate, spaceToAddToEdges * 30),
        ];
    }
    if (differenceInMinutes(endDate, startDate) > 1) {
        return [
            subMinutes(startDate, spaceToAddToEdges),
            addMinutes(endDate, spaceToAddToEdges),
        ];
    }
    if (differenceInSeconds(endDate, startDate) > 15) {
        return [
            subSeconds(startDate, spaceToAddToEdges * 15),
            addSeconds(endDate, spaceToAddToEdges * 15),
        ];
    }
    if (differenceInSeconds(endDate, startDate) > 1) {
        return [
            subSeconds(startDate, spaceToAddToEdges),
            addSeconds(endDate, spaceToAddToEdges),
        ];
    }
    return [startDate, endDate];
}
function addSpacingToContinuousDomain(_a, paddingRatio, scaleType) {
    var lower = _a[0], upper = _a[1];
    var domainLength = upper - lower;
    var padding = domainLength * paddingRatio;
    // If padding crosses 0, keep 0 as new upper bound
    var newUpper = upper <= 0 && upper + padding > 0 ? 0 : upper + padding;
    // If padding crosses 0, keep 0 as new lower bound
    var newLower = lower >= 0 && lower - padding < 0 ? 0 : lower - padding;
    // Log of base 0 or a negative number is -Infinity
    if (scaleType === interfaces.ScaleTypes.LOG && newLower <= 0) {
        if (lower <= 0) {
            throw Error('Data must have values greater than 0 if log scale type is used.');
        }
        newLower = lower;
    }
    return [newLower, newUpper];
}
//# sourceMappingURL=../../src/services/scales-cartesian.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/linear.js
function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // falls through
      default: this._context.lineTo(x, y); break;
    }
  }
};

/* harmony default export */ function curve_linear(context) {
  return new Linear(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/noop.js
/* harmony default export */ function src_noop() {}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/linearClosed.js


function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: src_noop,
  areaEnd: src_noop,
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._point) this._context.closePath();
  },
  point: function(x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);
    else this._point = 1, this._context.moveTo(x, y);
  }
};

/* harmony default export */ function linearClosed(context) {
  return new LinearClosed(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/basis.js
function basis_point(that, x, y) {
  that._context.bezierCurveTo(
    (2 * that._x0 + that._x1) / 3,
    (2 * that._y0 + that._y1) / 3,
    (that._x0 + 2 * that._x1) / 3,
    (that._y0 + 2 * that._y1) / 3,
    (that._x0 + 4 * that._x1 + x) / 6,
    (that._y0 + 4 * that._y1 + y) / 6
  );
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 3: basis_point(this, this._x1, this._y1); // falls through
      case 2: this._context.lineTo(this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // falls through
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function curve_basis(context) {
  return new Basis(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/basisClosed.js



function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: src_noop,
  areaEnd: src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x2, this._y2);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x2, this._y2);
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function curve_basisClosed(context) {
  return new BasisClosed(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/basisOpen.js


function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
      case 3: this._point = 4; // falls through
      default: basis_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

/* harmony default export */ function basisOpen(context) {
  return new BasisOpen(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/bundle.js


function Bundle(context, beta) {
  this._basis = new Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function() {
    this._x = [];
    this._y = [];
    this._basis.lineStart();
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;
        this._basis.point(
          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
        );
      }
    }

    this._x = this._y = null;
    this._basis.lineEnd();
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

/* harmony default export */ const bundle = ((function custom(beta) {

  function bundle(context) {
    return beta === 1 ? new Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function(beta) {
    return custom(+beta);
  };

  return bundle;
})(0.85));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/cardinal.js
function cardinal_point(that, x, y) {
  that._context.bezierCurveTo(
    that._x1 + that._k * (that._x2 - that._x0),
    that._y1 + that._k * (that._y2 - that._y0),
    that._x2 + that._k * (that._x1 - x),
    that._y2 + that._k * (that._y1 - y),
    that._x2,
    that._y2
  );
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: cardinal_point(this, this._x1, this._y1); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
      case 2: this._point = 3; // falls through
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinal = ((function custom(tension) {

  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/cardinalClosed.js



function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: src_noop,
  areaEnd: src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinalClosed = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/cardinalOpen.js


function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // falls through
      default: cardinal_point(this, x, y); break;
    }
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const cardinalOpen = ((function custom(tension) {

  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function(tension) {
    return custom(+tension);
  };

  return cardinal;
})(0));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/math.js
const abs = Math.abs;
const atan2 = Math.atan2;
const cos = Math.cos;
const math_max = Math.max;
const math_min = Math.min;
const sin = Math.sin;
const sqrt = Math.sqrt;

const epsilon = 1e-12;
const pi = Math.PI;
const halfPi = pi / 2;
const tau = 2 * pi;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/catmullRom.js



function catmullRom_point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x2, this._y2); break;
      case 3: this.point(this._x2, this._y2); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; // falls through
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRom = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/catmullRomClosed.js




function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: src_noop,
  areaEnd: src_noop,
  lineStart: function() {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 1: {
        this._context.moveTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 2: {
        this._context.lineTo(this._x3, this._y3);
        this._context.closePath();
        break;
      }
      case 3: {
        this.point(this._x3, this._y3);
        this.point(this._x4, this._y4);
        this.point(this._x5, this._y5);
        break;
      }
    }
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRomClosed = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/catmullRomOpen.js



function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 = this._x2 =
    this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a =
    this._l01_2a = this._l12_2a = this._l23_2a =
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0: this._point = 1; break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
      case 3: this._point = 4; // falls through
      default: catmullRom_point(this, x, y); break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

/* harmony default export */ const catmullRomOpen = ((function custom(alpha) {

  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
  }

  catmullRom.alpha = function(alpha) {
    return custom(+alpha);
  };

  return catmullRom;
})(0.5));

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/monotone.js
function sign(x) {
  return x < 0 ? -1 : 1;
}

// Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.
function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
}

// Calculate a one-sided slope.
function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
}

// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
function monotone_point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;
  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x0 = this._x1 =
    this._y0 = this._y1 =
    this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    switch (this._point) {
      case 2: this._context.lineTo(this._x1, this._y1); break;
      case 3: monotone_point(this, this._t0, slope2(this, this._t0)); break;
    }
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function(x, y) {
    var t1 = NaN;

    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; break;
      case 2: this._point = 3; monotone_point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
      default: monotone_point(this, this._t0, t1 = slope3(this, x, y)); break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
}

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function(x, y) { this._context.moveTo(y, x); },
  closePath: function() { this._context.closePath(); },
  lineTo: function(x, y) { this._context.lineTo(y, x); },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/natural.js
function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = [];
    this._y = [];
  },
  lineEnd: function() {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);
        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function(x, y) {
    this._x.push(+x);
    this._y.push(+y);
  }
};

// See https://www.particleincell.com/2012/bezier-splines/ for derivation.
function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
  a[n - 1] = r[n - 1] / b[n - 1];
  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
  b[n - 1] = (x[n] + a[n - 1]) / 2;
  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
  return [a, b];
}

/* harmony default export */ function natural(context) {
  return new Natural(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/step.js
function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function() {
    this._line = 0;
  },
  areaEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function() {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
      case 1: this._point = 2; // falls through
      default: {
        if (this._t <= 0) {
          this._context.lineTo(this._x, y);
          this._context.lineTo(x, y);
        } else {
          var x1 = this._x * (1 - this._t) + x * this._t;
          this._context.lineTo(x1, this._y);
          this._context.lineTo(x1, y);
        }
        break;
      }
    }
    this._x = x, this._y = y;
  }
};

/* harmony default export */ function step(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/curves.js
var curves_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

// Internal Imports

var Curves = /** @class */ (function (_super) {
    curves_extends(Curves, _super);
    function Curves() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.curveTypes = {
            curveLinear: curve_linear,
            curveLinearClosed: linearClosed,
            curveBasis: curve_basis,
            curveBasisClosed: curve_basisClosed,
            curveBasisOpen: basisOpen,
            curveBundle: bundle,
            curveCardinal: cardinal,
            curveCardinalClosed: cardinalClosed,
            curveCardinalOpen: cardinalOpen,
            curveCatmullRom: catmullRom,
            curveCatmullRomClosed: catmullRomClosed,
            curveCatmullRomOpen: catmullRomOpen,
            curveMonotoneX: monotoneX,
            curveMonotoneY: monotoneY,
            curveNatural: natural,
            curveStep: step,
            curveStepAfter: stepAfter,
            curveStepBefore: stepBefore,
        };
        return _this;
    }
    Curves.prototype.getD3Curve = function () {
        var curveName = 'curveLinear';
        var curveOptions = this.model.getOptions().curve;
        // Parse curve type whether the user provided a string
        // Or an object with more options
        if (curveOptions) {
            if (typeof curveOptions === 'string') {
                // curve: 'string'
                curveName = curveOptions;
            }
            else {
                // curve: { name: 'string' }
                curveName = curveOptions.name;
            }
        }
        if (this.curveTypes[curveName]) {
            // Grab correct d3 curve function
            var curve_1 = this.curveTypes[curveName];
            // Apply user-provided options to the d3 curve
            if (curveOptions) {
                Object.keys(curveOptions).forEach(function (optionName) {
                    if (curve_1[optionName]) {
                        curve_1 = curve_1[optionName](curveOptions[optionName]);
                    }
                });
            }
            return curve_1;
        }
        console.warn("The curve type '" + curveName + "' is invalid, using 'curveLinear' instead");
        return this.curveTypes['curveLinear'];
    };
    return Curves;
}(Service));

//# sourceMappingURL=../../src/services/curves.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/zoom.js
var zoom_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 imports

var Zoom = /** @class */ (function (_super) {
    zoom_extends(Zoom, _super);
    function Zoom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Zoom.prototype.isZoomBarEnabled = function () {
        // CartesianScales service is only available in axis charts
        if (!this.services.cartesianScales) {
            return false;
        }
        // @todo - need to update this if zoom bar in other position (bottom, left, right) is supported
        // check configuration
        if (!Tools.getProperty(this.model.getOptions(), 'zoomBar', 'top', 'enabled')) {
            return false;
        }
        // @todo - Zoom Bar only supports main axis at BOTTOM axis and time scale for now
        this.services.cartesianScales.findDomainAndRangeAxes(); // need to do this before getMainXAxisPosition()
        var mainXAxisPosition = this.services.cartesianScales.getMainXAxisPosition();
        var mainXScaleType = Tools.getProperty(this.model.getOptions(), 'axes', mainXAxisPosition, 'scaleType');
        return (mainXAxisPosition === interfaces.AxisPositions.BOTTOM &&
            mainXScaleType === interfaces.ScaleTypes.TIME);
    };
    // get display data for zoom bar
    // basically it's sum of value grouped by time
    Zoom.prototype.getZoomBarData = function () {
        var customZoomBarData = this.model.getZoomBarData();
        // if user already defines zoom bar data, use it
        if (customZoomBarData && customZoomBarData.length > 1) {
            return customZoomBarData;
        }
        else {
            // use displayData if not defined
            return this.model.getDisplayData();
        }
    };
    Zoom.prototype.getDefaultZoomBarDomain = function (zoomBarData) {
        var allZoomBarData = zoomBarData || this.services.zoom.getZoomBarData();
        var cartesianScales = this.services.cartesianScales;
        var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
        var domainIdentifier = cartesianScales.getDomainIdentifier();
        var customDomain = Tools.getProperty(this.model.getOptions(), 'axes', mainXAxisPosition, 'domain');
        // return custom domain if exists && valid
        if (Array.isArray(customDomain) && customDomain.length === 2) {
            return customDomain;
        }
        // default to full range with extended domain
        return cartesianScales.extendsDomain(mainXAxisPosition, extent(allZoomBarData, function (d) { return d[domainIdentifier]; }));
    };
    Zoom.prototype.handleDomainChange = function (newDomain, configs) {
        if (configs === void 0) { configs = { dispatchEvent: true }; }
        this.model.set({ zoomDomain: newDomain }, { animate: false });
        if (configs.dispatchEvent) {
            this.services.events.dispatchEvent(interfaces.Events.ZoomDomain.CHANGE, {
                newDomain: newDomain,
            });
        }
    };
    Zoom.prototype.getZoomRatio = function () {
        return Tools.getProperty(this.model.getOptions(), 'zoomBar', 'zoomRatio');
    };
    // filter out data not inside zoom domain
    // to get better range value for axis label
    Zoom.prototype.filterDataForRangeAxis = function (displayData, configs) {
        var zoomDomain = this.model.get('zoomDomain');
        var mergedConfigs = Object.assign({ stacked: false }, // default configs
        configs);
        var shouldUpdateRangeAxis = Tools.getProperty(this.model.getOptions(), 'zoomBar', 'updateRangeAxis');
        if (this.isZoomBarEnabled() && shouldUpdateRangeAxis && zoomDomain) {
            var domainIdentifier_1 = mergedConfigs.stacked
                ? 'sharedStackKey'
                : this.services.cartesianScales.getDomainIdentifier();
            var filteredData = displayData.filter(function (datum) {
                return new Date(datum[domainIdentifier_1]) >= zoomDomain[0] &&
                    new Date(datum[domainIdentifier_1]) <= zoomDomain[1];
            });
            // if no data in zoom domain, use all data to get full range value
            // so only return filteredData if length > 0
            if (filteredData.length > 0) {
                return filteredData;
            }
        }
        // return original data by default
        return displayData;
    };
    Zoom.prototype.zoomIn = function (zoomRatio) {
        if (zoomRatio === void 0) { zoomRatio = this.getZoomRatio(); }
        // get current zoomDomain
        var currentZoomDomain = this.model.get('zoomDomain');
        var handleWidth = zoomBar.handleWidth;
        var xScale = this.services.cartesianScales.getMainXScale().copy();
        xScale.domain(this.getDefaultZoomBarDomain()); // reset domain to default full domain
        // use scale range (rather than domain) to calculate
        // current zoom bar handle x position
        var currentX0 = xScale(currentZoomDomain[0]);
        var currentX1 = xScale(currentZoomDomain[1]);
        // zoom bar handles are already too close
        if (currentX1 - currentX0 < handleWidth + 1) {
            return;
        }
        var fullRange = xScale.range();
        var gap = currentX1 - currentX0;
        var diff = Math.min(((fullRange[1] - fullRange[0]) / 2) * (zoomRatio / 2), gap / 2);
        // new zoom bar handle x position
        var newX0 = currentX0 + diff;
        var newX1 = currentX1 - diff;
        // if left handle becomes right side of right handle, just make them close to each other
        if (newX0 >= newX1) {
            newX0 = currentX0 + gap / 2 - handleWidth / 2;
            newX1 = currentX1 - gap / 2 + handleWidth / 2;
        }
        var newDomain = [xScale.invert(newX0), xScale.invert(newX1)];
        // only if zoomDomain needs update
        if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||
            currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
            this.handleDomainChange(newDomain);
        }
    };
    Zoom.prototype.zoomOut = function (zoomRatio) {
        if (zoomRatio === void 0) { zoomRatio = this.getZoomRatio(); }
        // get current zoomDomain
        var currentZoomDomain = this.model.get('zoomDomain');
        var xScale = this.services.cartesianScales.getMainXScale().copy();
        xScale.domain(this.getDefaultZoomBarDomain()); // reset domain to default full domain
        // use scale range (rather than domain) to calculate
        // current zoom bar handle x position
        var currentX0 = xScale(currentZoomDomain[0]);
        var currentX1 = xScale(currentZoomDomain[1]);
        var fullRange = xScale.range();
        var diff = ((fullRange[1] - fullRange[0]) / 2) * (zoomRatio / 2);
        // new zoom bar handle x position
        // max to full range
        var newX0 = Math.max(currentX0 - diff, fullRange[0]);
        var newX1 = Math.min(currentX1 + diff, fullRange[1]);
        var newDomain = [xScale.invert(newX0), xScale.invert(newX1)];
        // only if zoomDomain needs update
        if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||
            currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
            this.handleDomainChange(newDomain);
        }
    };
    Zoom.prototype.resetZoomDomain = function () {
        // get current zoomDomain
        var currentZoomDomain = this.model.get('zoomDomain');
        var newDomain = this.getDefaultZoomBarDomain();
        // only if zoomDomain needs update
        if (currentZoomDomain[0].valueOf() !== newDomain[0].valueOf() ||
            currentZoomDomain[1].valueOf() !== newDomain[1].valueOf()) {
            this.handleDomainChange(newDomain);
        }
    };
    // check if current zoom domain is already the min zoom domain
    // when toolbar is rendered, we don't render chart yet
    // don't depend on scale range
    Zoom.prototype.isMinZoomDomain = function () {
        // get current zoomDomain
        var currentZoomDomain = this.model.get('zoomDomain');
        // assume the max zoom domain is the default zoom bar domain
        var maxZoomDomain = this.getDefaultZoomBarDomain();
        if (!currentZoomDomain || !maxZoomDomain) {
            return false;
        }
        var currentZoomDomainPeriod = currentZoomDomain[1].valueOf() - currentZoomDomain[0].valueOf();
        var maxZoomDomainPeriod = maxZoomDomain[1].valueOf() - maxZoomDomain[0].valueOf();
        var minZoomRatio = Tools.getProperty(this.model.getOptions(), 'zoomBar', 'minZoomRatio');
        // if current zoom domain is already smaller than minZoomRatio
        if (currentZoomDomainPeriod / maxZoomDomainPeriod < minZoomRatio) {
            return true;
        }
        return false;
    };
    // check if current zoom domain is already the max zoom domain
    Zoom.prototype.isMaxZoomDomain = function () {
        // get current zoom domain
        var currentZoomDomain = this.model.get('zoomDomain');
        // assume the max zoom domain is the default zoom bar domain
        var maxZoomDomain = this.getDefaultZoomBarDomain();
        if (currentZoomDomain &&
            maxZoomDomain &&
            currentZoomDomain[0].valueOf() === maxZoomDomain[0].valueOf() &&
            currentZoomDomain[1].valueOf() === maxZoomDomain[1].valueOf()) {
            return true;
        }
        return false;
    };
    Zoom.prototype.isEmptyState = function () {
        return this.getZoomBarData().length === 0;
    };
    Zoom.prototype.isZoomBarLoading = function (position) {
        return Tools.getProperty(this.model.getOptions(), 'zoomBar', position, 'loading');
    };
    Zoom.prototype.isZoomBarLocked = function (position) {
        return Tools.getProperty(this.model.getOptions(), 'zoomBar', position, 'locked');
    };
    return Zoom;
}(Service));

//# sourceMappingURL=../../src/services/zoom.js.map
// EXTERNAL MODULE: ../../node_modules/@carbon/charts/interfaces/enums.js + 1 modules
var enums = __webpack_require__(4891);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/canvas-zoom.js
var canvas_zoom_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// Services


var CanvasZoom = /** @class */ (function (_super) {
    canvas_zoom_extends(CanvasZoom, _super);
    function CanvasZoom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * focal:  object to zoom into
     * canvasElements: all the elements to translate and zoom on the chart area
     * zoomSettings: object containing duration, easing and zoomlevel for the zoom behaviours
     *  */
    CanvasZoom.prototype.zoomIn = function (focal, canvasElements, zoomSettings) {
        var x;
        var y;
        var zoomLevel;
        var settings = zoomSettings
            ? zoomSettings
            : canvasZoomSettings;
        if (focal) {
            x = focal.x;
            y = focal.y;
            zoomLevel = 2;
        }
        // the 'viewport' size of the chart
        var _a = DOMUtils.getSVGElementSize(this.services.domUtils.getHolder(), {
            useClientDimensions: true,
        }), width = _a.width, height = _a.height;
        canvasElements
            .transition()
            .duration(settings.duration)
            .ease(settings.ease)
            .attr('transform', "translate(" + width / 2 + ", " + height / 2 + ") scale(" + zoomLevel + ") translate(" + -x + "," + -y + ")");
        // Dispatch canvas zoom in event
        this.services.events.dispatchEvent(enums/* Events.CanvasZoom.CANVAS_ZOOM_IN */.zW.CanvasZoom.CANVAS_ZOOM_IN, {
            element: src_select(focal),
        });
    };
    CanvasZoom.prototype.zoomOut = function (canvasElements, zoomSettings) {
        var settings = zoomSettings
            ? zoomSettings
            : canvasZoomSettings;
        canvasElements
            .transition()
            .duration(settings.duration)
            .ease(settings.ease)
            .attr('transform', '');
        // Dispatch canvas zoom out event
        this.services.events.dispatchEvent(enums/* Events.CanvasZoom.CANVAS_ZOOM_OUT */.zW.CanvasZoom.CANVAS_ZOOM_OUT);
    };
    return CanvasZoom;
}(Service));

//# sourceMappingURL=../../src/services/canvas-zoom.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/index.js
// Essentials





// MISC




//# sourceMappingURL=../../src/services/index.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/component.js



// D3 Imports

// import the settings for the css prefix

var Component = /** @class */ (function () {
    function Component(model, services, configs) {
        this.renderType = interfaces.RenderTypes.HTML;
        this.configs = {};
        this.model = model;
        this.services = services;
        if (configs) {
            this.configs = configs;
            if (this.configs.id) {
                var chartprefix = Tools.getProperty(this.model.getOptions(), 'style', 'prefix');
                this.id = chartprefix + "--" + this.configs.id;
            }
        }
        // Set parent element to shell SVG if no parent exists for component
        if (!this.parent) {
            this.setParent(src_select(this.services.domUtils.getMainContainer()));
        }
    }
    Component.prototype.init = function () {
        // do nothing.
    };
    Component.prototype.render = function (animate) {
        if (animate === void 0) { animate = true; }
        console.error('render() method is not implemented');
    };
    Component.prototype.destroy = function () {
        // do nothing.
    };
    // Used to pass down information to the components
    Component.prototype.setModel = function (newObj) {
        this.model = newObj;
    };
    // Used to pass down information to the components
    Component.prototype.setServices = function (newObj) {
        this.services = newObj;
    };
    Component.prototype.setParent = function (parent) {
        var oldParent = this.parent;
        this.parent = parent;
        if (oldParent && oldParent.node() === parent.node()) {
            return;
        }
        if (this.type) {
            var chartprefix = Tools.getProperty(this.model.getOptions(), 'style', 'prefix');
            this.parent.classed(js_settings.prefix + "--" + chartprefix + "--" + this.type, true);
            if (oldParent) {
                oldParent.classed(js_settings.prefix + "--" + chartprefix + "--" + this.type, false);
            }
        }
    };
    Component.prototype.getParent = function () {
        return this.parent;
    };
    Component.prototype.getComponentContainer = function (configs) {
        if (configs === void 0) { configs = { withinChartClip: false }; }
        if (this.type) {
            var chartprefix = Tools.getProperty(this.model.getOptions(), 'style', 'prefix');
            var idSelector = this.id ? "#" + this.id : '';
            var container = DOMUtils.appendOrSelect(this.parent, "" + (this.renderType === interfaces.RenderTypes.SVG ? 'svg' : 'div') + idSelector + "." + js_settings.prefix + "--" + chartprefix + "--" + this.type);
            if (configs.withinChartClip) {
                // get unique chartClipId int this chart from model
                var chartClipId = this.model.get('chartClipId');
                if (chartClipId) {
                    var chartClipSelection = src_select("#" + chartClipId);
                    var chartClipRectSelection = chartClipSelection.select('rect');
                    /*
                     * these checks are needed because of a chrome bug
                     * related to the rendering of the clip path
                     */
                    if (chartClipRectSelection.size() !== 0 &&
                        parseFloat(chartClipRectSelection.attr('height')) > 0) {
                        container.attr('clip-path', "url(#" + chartClipId + ")");
                    }
                }
            }
            return container.attr('width', '100%').attr('height', '100%');
        }
        return this.parent;
    };
    /**
     * graphs used in combo charts share a model with global options but can receive their own local options.
     * this function retrieves the global options and merges it with any options passed into this
     * component's config.options object.
     */
    Component.prototype.getOptions = function () {
        if (this.configs.options) {
            var options = Tools.merge({}, this.model.getOptions(), this.configs.options);
            return options;
        }
        return this.model.getOptions();
    };
    return Component;
}());

//# sourceMappingURL=../../src/components/component.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/legend.js
var legend_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var Legend = /** @class */ (function (_super) {
    legend_extends(Legend, _super);
    function Legend() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'legend';
        _this.renderType = interfaces.RenderTypes.HTML;
        return _this;
    }
    Legend.prototype.render = function () {
        var _this = this;
        var options = this.getOptions();
        var legendOptions = Tools.getProperty(options, 'legend');
        var alignment = Tools.getProperty(legendOptions, 'alignment');
        var legendOrientation = Tools.getProperty(options, 'legend', 'orientation');
        var dataGroups = this.model.getDataGroups();
        // Check if there are disabled legend items
        var DISABLED = configuration_non_customizable_legend.items.status.DISABLED;
        var hasDeactivatedItems = dataGroups.some(function (dataGroup) { return dataGroup.status === DISABLED; });
        var userProvidedOrder = Tools.getProperty(legendOptions, 'order');
        var svg = this.getComponentContainer()
            .classed('center-aligned', alignment === interfaces.Alignments.CENTER)
            .classed('right-aligned', alignment === interfaces.Alignments.RIGHT)
            .classed(legendOrientation, true)
            .classed('has-deactivated-items', hasDeactivatedItems)
            .attr('role', interfaces.Roles.GROUP)
            .attr('aria-label', 'Data groups')
            .attr('data-name', 'legend-items');
        if (userProvidedOrder) {
            dataGroups = this.sortDataGroups(dataGroups, userProvidedOrder);
        }
        var legendItems = svg
            .selectAll('div.legend-item')
            .data(dataGroups, function (dataGroup) { return dataGroup.name; });
        var addedLegendItems = legendItems
            .enter()
            .append('div')
            .attr('class', 'legend-item');
        addedLegendItems
            .merge(svg.selectAll('div.legend-item'))
            .classed('active', function (d, i) {
            return d.status === configuration_non_customizable_legend.items.status.ACTIVE;
        });
        var legendClickable = Tools.getProperty(this.getOptions(), 'legend', 'clickable');
        svg.classed('clickable', legendClickable && dataGroups.length > 1);
        var checkboxRadius = configuration_non_customizable_legend.checkbox.radius;
        var addedCheckboxes = addedLegendItems
            .append('div')
            .classed('checkbox', true);
        var allCheckboxes = addedCheckboxes
            .merge(legendItems.select('div.checkbox'))
            .attr('role', interfaces.Roles.CHECKBOX)
            .attr('tabindex', legendClickable ? 0 : -1)
            .attr('aria-labelledby', function (d, i) {
            return _this.services.domUtils.generateElementIDString("legend-datagroup-" + i + "-title");
        })
            .attr('aria-checked', function (_a) {
            var status = _a.status;
            return status === configuration_non_customizable_legend.items.status.ACTIVE;
        })
            .attr('width', checkboxRadius * 2)
            .attr('height', checkboxRadius * 2)
            .attr('class', function (d, i) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.BACKGROUND],
                dataGroupName: d.name,
                originalClassName: 'checkbox',
            });
        })
            .style('background', function (d) {
            return d.status === configuration_non_customizable_legend.items.status.ACTIVE
                ? _this.model.getFillColor(d.name) ||
                    _this.model.getStrokeColor(d.name)
                : null;
        })
            .classed('active', function (d, i) {
            return d.status === configuration_non_customizable_legend.items.status.ACTIVE;
        });
        var addedCheckIcons = addedCheckboxes
            .append('svg')
            .attr('focusable', false)
            .attr('preserveAspectRatio', 'xMidYMid meet')
            .attr('xmlns', 'http://www.w3.org/2000/svg')
            .attr('width', '11')
            .attr('height', '11')
            .attr('viewBox', '0 0 31 28')
            .attr('aria-hidden', true)
            .style('will-change', 'transform')
            .append('path')
            .attr('d', 'M13 21.2l-7.1-7.1-1.4 1.4 7.1 7.1L13 24 27.1 9.9l-1.4-1.5z');
        var addedLegendItemsText = addedLegendItems
            .append('p')
            .merge(legendItems.select('p'));
        var additionalItemsOption = Tools.getProperty(options, 'legend', 'additionalItems');
        // add additional legend items
        if (additionalItemsOption && dataGroups.length) {
            var self_1 = this;
            var additionalItems = svg
                .selectAll('div.additional-item')
                .data(additionalItemsOption);
            additionalItems.exit().remove();
            var addedAdditionalItems = additionalItems
                .enter()
                .append('div')
                .merge(additionalItems)
                .classed('legend-item', true)
                .classed('additional', true)
                .attr('aria-labelledby', function (d, i) {
                return _this.services.domUtils.generateElementIDString("legend-datagroup-" + (allCheckboxes.size() + i) + "-title");
            });
            // remove nested child elements that no longer needed
            addedAdditionalItems.selectAll('*').remove();
            // get index of item with same type to assign distinct classname
            var previousType_1;
            var indexOfItem_1 = 1;
            // add different type of legend items
            addedAdditionalItems
                .append('svg')
                .classed('icon', true)
                .each(function (d, i) {
                var additionalItem = src_select(this);
                if (!previousType_1 || previousType_1 != d.type) {
                    previousType_1 = d.type;
                    indexOfItem_1 = 1;
                }
                else {
                    indexOfItem_1++;
                }
                self_1.addAdditionalItem(additionalItem, d, indexOfItem_1);
            });
            var addedAdditionalItemsText = addedAdditionalItems
                .append('p')
                .merge(addedAdditionalItems.select('p'));
            this.truncateLegendText();
        }
        // Remove old elements as needed.
        legendItems
            .exit()
            .on('mouseover', null)
            .on('click', null)
            .on('mouseout', null)
            .remove();
        if (legendClickable && addedLegendItems.size() > 1) {
            this.addEventListeners();
        }
    };
    Legend.prototype.sortDataGroups = function (dataGroups, legendOrder) {
        // Sort data in user defined order
        dataGroups.sort(function (dataA, dataB) {
            return legendOrder.indexOf(dataA.name) -
                legendOrder.indexOf(dataB.name);
        });
        // If user only defined partial ordering, ordered items are placed before unordered ones
        if (legendOrder.length < dataGroups.length) {
            var definedOrderIndex = dataGroups.length - legendOrder.length;
            var definedOrder = dataGroups.slice(definedOrderIndex);
            return definedOrder.concat(dataGroups.slice(0, definedOrderIndex));
        }
        return dataGroups;
    };
    Legend.prototype.addAdditionalItem = function (additionalItem, itemConfig, indexOfItem) {
        var _a = configuration_non_customizable_legend.area, width = _a.width, height = _a.height;
        if (itemConfig.type === interfaces.LegendItemType.RADIUS) {
            // Circular icon
            additionalItem
                .style('width', height + "px")
                .style('height', height + "px");
        }
        else {
            additionalItem
                .style('width', width + "px")
                .style('height', height + "px");
        }
        if (itemConfig.type === interfaces.LegendItemType.RADIUS) {
            var _b = configuration_non_customizable_legend.radius, iconData = _b.iconData, fill = _b.fill, stroke = _b.stroke;
            var circleEnter = additionalItem
                .attr('fill', 'none')
                .selectAll('circle')
                .data(iconData)
                .enter();
            circleEnter
                .append('circle')
                .classed('radius', true)
                .attr('role', interfaces.Roles.IMG)
                .attr('aria-label', 'radius')
                .attr('cx', function (d) { return d.cx; })
                .attr('cy', function (d) { return d.cy; })
                .attr('r', function (d) { return d.r; })
                .style('fill', itemConfig.fill ? itemConfig.fill : fill)
                .style('stroke', itemConfig.stroke ? itemConfig.stroke : stroke);
        }
        else if (itemConfig.type === interfaces.LegendItemType.LINE) {
            var lineConfig = configuration_non_customizable_legend.line;
            if (additionalItem.select('line.line').empty()) {
                additionalItem
                    .append('line')
                    .classed("line-" + indexOfItem, true)
                    .attr('role', interfaces.Roles.IMG)
                    .attr('aria-label', 'line')
                    .attr('x1', 0)
                    .attr('y1', lineConfig.yPosition)
                    .attr('x2', width)
                    .attr('y2', lineConfig.yPosition)
                    .style('stroke', itemConfig.stroke
                    ? itemConfig.stroke
                    : lineConfig.stroke)
                    .style('stroke-width', lineConfig.strokeWidth);
            }
        }
        else if (itemConfig.type === interfaces.LegendItemType.AREA) {
            if (additionalItem.select('rect.area').empty()) {
                additionalItem
                    .append('rect')
                    .classed("area-" + indexOfItem, true)
                    .attr('role', interfaces.Roles.IMG)
                    .attr('aria-label', 'area')
                    .attr('width', width)
                    .attr('height', height)
                    .style('fill', indexOfItem > 3 && !itemConfig.fill
                    ? configuration_non_customizable_legend.area.fill
                    : itemConfig.fill)
                    .style('stroke', itemConfig.stroke);
            }
        }
        else if (itemConfig.type === interfaces.LegendItemType.SIZE) {
            var _c = configuration_non_customizable_legend.size, iconData = _c.iconData, fill = _c.fill, stroke = _c.stroke;
            var sizeEnter = additionalItem
                .attr('fill', 'none')
                .attr('role', interfaces.Roles.IMG)
                .attr('aria-label', 'size')
                .selectAll('rect')
                .data(iconData)
                .enter();
            sizeEnter
                .append('rect')
                .classed('size', true)
                .attr('width', function (d) { return d.width; })
                .attr('height', function (d) { return d.height; })
                .attr('y', function (d) { return 0; })
                .style('fill', itemConfig.fill ? itemConfig.fill : fill)
                .style('stroke', itemConfig.stroke ? itemConfig.stroke : stroke)
                .style('stroke-width', 1);
        }
        else if (itemConfig.type === interfaces.LegendItemType.QUARTILE) {
            var iconData = configuration_non_customizable_legend.quartile.iconData;
            var quartileEnter = additionalItem
                .selectAll('rect')
                .attr('role', interfaces.Roles.IMG)
                .attr('aria-label', 'quartile')
                .data(iconData)
                .enter();
            quartileEnter
                .append('rect')
                .attr('class', function (d, i) { return "quartile-" + (i === 0 ? 'wrapper' : 'line'); })
                .attr('x', function (d) { return d.x; })
                .attr('y', function (d) { return d.y; })
                .attr('width', function (d) { return d.width; })
                .attr('height', function (d) { return d.height; });
        }
        else if (itemConfig.type === interfaces.LegendItemType.ZOOM) {
            var _d = Tools.getProperty(configuration_namespaceObject, 'legend', 'zoom'), iconData = _d.iconData, color_1 = _d.color;
            var zoomEnter = additionalItem
                .attr('role', interfaces.Roles.IMG)
                .attr('aria-label', 'zoom')
                .selectAll('g.icon')
                .data(iconData)
                .enter();
            // add '+' for the magnifying icon
            zoomEnter
                .append('g')
                .attr('x', function (d) { return d.x; })
                .attr('y', function (d) { return d.y; })
                .attr('width', function (d) { return d.width; })
                .attr('height', function (d) { return d.height; })
                .append('polygon')
                .attr('points', '7.7 4.82 5.78 4.82 5.78 2.89 4.82 2.89 4.82 4.82 2.89 4.82 2.89 5.78 4.82 5.78 4.82 7.7 5.78 7.7 5.78 5.78 7.7 5.78 7.7 4.82')
                .attr('fill', function (d) {
                return itemConfig.color ? itemConfig.color : color_1;
            });
            // add the magnifying zoom icon handle/circle
            zoomEnter
                .append('path')
                .attr('d', 'M9.36,8.67A5.22,5.22,0,0,0,10.59,5.3,5.3,5.3,0,1,0,5.3,10.59,5.22,5.22,0,0,0,8.67,9.36L12.32,13l.68-.68Zm-4.06,1A4.34,4.34,0,1,1,9.63,5.3,4.33,4.33,0,0,1,5.3,9.63Z')
                .attr('fill', function (d) {
                return itemConfig.color ? itemConfig.color : color_1;
            });
        }
    };
    Legend.prototype.truncateLegendText = function () {
        var svg = this.getComponentContainer();
        var truncationOptions = Tools.getProperty(this.getOptions(), 'legend', 'truncation');
        // Truncation
        // get user provided custom values for truncation
        var truncationType = Tools.getProperty(truncationOptions, 'type');
        var truncationThreshold = Tools.getProperty(truncationOptions, 'threshold');
        var truncationNumCharacter = Tools.getProperty(truncationOptions, 'numCharacter');
        var addedLegendItemsText = svg.selectAll('div.legend-item p');
        var self = this;
        // Add an ID for the checkbox to use through `aria-labelledby`
        addedLegendItemsText.attr('id', function (d, i) {
            var elementToReference = this.parentNode.querySelector('div.checkbox') ||
                this.parentNode;
            return elementToReference.getAttribute('aria-labelledby');
        });
        // truncate the legend label if it's too long
        if (truncationType !== interfaces.TruncationTypes.NONE) {
            addedLegendItemsText.html(function (d) {
                if (d.name.length > truncationThreshold) {
                    return Tools.truncateLabel(d.name, truncationType, truncationNumCharacter);
                }
                else {
                    return d.name;
                }
            });
        }
        else {
            addedLegendItemsText.html(function (d) { return d.name; });
        }
    };
    Legend.prototype.addEventListeners = function () {
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var legendOptions = Tools.getProperty(options, 'legend');
        var truncationThreshold = Tools.getProperty(legendOptions, 'truncation', 'threshold');
        svg.selectAll('div.legend-item')
            .on('mouseover', function (event) {
            self.services.events.dispatchEvent(interfaces.Events.Legend.ITEM_HOVER, {
                hoveredElement: src_select(this),
            });
            var hoveredItem = src_select(this);
            hoveredItem.select('div.checkbox').classed('hovered', true);
            var hoveredItemData = hoveredItem.datum();
            if (hoveredItemData.name.length > truncationThreshold) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: hoveredItem,
                    content: hoveredItemData.name,
                });
            }
        })
            .on('mousemove', function (event) {
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function () {
            self.services.events.dispatchEvent(interfaces.Events.Legend.ITEM_CLICK, {
                clickedElement: src_select(this),
            });
            var clickedItem = src_select(this);
            var clickedItemData = clickedItem.datum();
            self.model.toggleDataLabel(clickedItemData.name);
        })
            .on('mouseout', function () {
            var hoveredItem = src_select(this);
            hoveredItem.select('div.checkbox').classed('hovered', false);
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
            self.services.events.dispatchEvent(interfaces.Events.Legend.ITEM_MOUSEOUT, {
                hoveredElement: hoveredItem,
            });
        });
        svg.selectAll('div.legend-item div.checkbox').on('keyup', function (event) {
            if (event.key && event.key === 'Tab') {
                // Higlight group
                self.services.events.dispatchEvent(interfaces.Events.Legend.ITEM_HOVER, {
                    hoveredElement: src_select(this),
                });
            }
        });
        svg.selectAll('div.legend-item div.checkbox').on('keydown', function (event, d) {
            if (event.key && event.key === ' ') {
                event.preventDefault();
                self.model.toggleDataLabel(d.name);
            }
            else if (event.key && event.key === 'Tab') {
                // Unhiglight group
                self.services.events.dispatchEvent(interfaces.Events.Legend.ITEM_MOUSEOUT, {
                    hoveredElement: src_select(this),
                });
            }
        });
        svg.selectAll('g.additional-item').on('mouseover', function (event) {
            var hoveredItem = src_select(this);
            var hoveredItemData = hoveredItem.datum();
            if (hoveredItemData.name.length > truncationThreshold) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: hoveredItem,
                    content: hoveredItemData.name,
                });
            }
        });
    };
    return Legend;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/legend.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-axis/src/identity.js
/* harmony default export */ function d3_axis_src_identity(x) {
  return x;
}

;// CONCATENATED MODULE: ../../node_modules/d3-axis/src/axis.js


var axis_top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    axis_epsilon = 1e-6;

function translateX(x) {
  return "translate(" + x + ",0)";
}

function translateY(y) {
  return "translate(0," + y + ")";
}

function axis_number(scale) {
  return d => +scale(d);
}

function center(scale, offset) {
  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;
  if (scale.round()) offset = Math.round(offset);
  return d => +scale(d) + offset;
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      offset = typeof window !== "undefined" && window.devicePixelRatio > 1 ? 0 : 0.5,
      k = orient === axis_top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === axis_top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,
        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : d3_axis_src_identity) : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + offset,
        range1 = +range[range.length - 1] + offset,
        position = (scale.bandwidth ? center : axis_number)(scale.copy(), offset),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");

    path = path.merge(path.enter().insert("path", ".tick")
        .attr("class", "domain")
        .attr("stroke", "currentColor"));

    tick = tick.merge(tickEnter);

    line = line.merge(tickEnter.append("line")
        .attr("stroke", "currentColor")
        .attr(x + "2", k * tickSizeInner));

    text = text.merge(tickEnter.append("text")
        .attr("fill", "currentColor")
        .attr(x, k * spacing)
        .attr("dy", orient === axis_top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);

      tickExit = tickExit.transition(context)
          .attr("opacity", axis_epsilon)
          .attr("transform", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute("transform"); });

      tickEnter
          .attr("opacity", axis_epsilon)
          .attr("transform", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });
    }

    tickExit.remove();

    path
        .attr("d", orient === left || orient === right
            ? (tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H" + offset + "V" + range1 + "H" + k * tickSizeOuter : "M" + offset + "," + range0 + "V" + range1)
            : (tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V" + offset + "H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + "," + offset + "H" + range1));

    tick
        .attr("opacity", 1)
        .attr("transform", function(d) { return transform(position(d) + offset); });

    line
        .attr(x + "2", k * tickSizeInner);

    text
        .attr(x, k * spacing)
        .text(format);

    selection.filter(entering)
        .attr("fill", "none")
        .attr("font-size", 10)
        .attr("font-family", "sans-serif")
        .attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");

    selection
        .each(function() { this.__axis = position; });
  }

  axis.scale = function(_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function() {
    return tickArguments = Array.from(arguments), axis;
  };

  axis.tickArguments = function(_) {
    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function(_) {
    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function(_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function(_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function(_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function(_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function(_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  axis.offset = function(_) {
    return arguments.length ? (offset = +_, axis) : offset;
  };

  return axis;
}

function axisTop(scale) {
  return axis(axis_top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/quantize.js
/* harmony default export */ function quantize(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/color-scale-legend.js
var color_scale_legend_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// D3 imports



var ColorScaleLegend = /** @class */ (function (_super) {
    color_scale_legend_extends(ColorScaleLegend, _super);
    function ColorScaleLegend() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'color-legend';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.gradient_id = 'gradient-id-' + Math.floor(Math.random() * 99999999999);
        _this.handleAxisComplete = function (event) {
            var svg = _this.getComponentContainer();
            var width = DOMUtils.getSVGElementSize(svg, {
                useAttrs: true,
            }).width;
            var isDataLoading = Tools.getProperty(_this.getOptions(), 'data', 'loading');
            if (width > configuration_non_customizable_legend.color.barWidth && !isDataLoading) {
                var title = Tools.getProperty(_this.getOptions(), 'heatmap', 'colorLegend', 'title');
                var cartesianScales = _this.services.cartesianScales;
                // Get available chart area
                var mainXScale = cartesianScales.getMainXScale();
                var xDimensions = mainXScale.range();
                // Align legend with the axis
                if (xDimensions[0] > 1) {
                    svg.select('g.legend').attr('transform', "translate(" + xDimensions[0] + ", 0)");
                    if (title) {
                        var textWidth = DOMUtils.getSVGElementSize(svg.select('g.legend-title').select('text'), { useBBox: true }).width;
                        // -9 since LEFT y-axis labels are moved towards the left by 9 by d3
                        var availableSpace = xDimensions[0] - textWidth - 9;
                        // If space is available align the the label with the axis labels
                        if (availableSpace > 1) {
                            svg.select('g.legend-title').attr('transform', "translate(" + availableSpace + ", 0)");
                        }
                        else {
                            // Move the legend down by 16 pixels to display legend text on top
                            svg.select('g.legend').attr('transform', "translate(" + xDimensions[0] + ", 16)");
                            // Align legend title with start of axis
                            svg.select('g.legend-title').attr('transform', "translate(" + xDimensions[0] + ", 0)");
                        }
                    }
                }
            }
        };
        return _this;
    }
    ColorScaleLegend.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Axis.RENDER_COMPLETE, this.handleAxisComplete);
    };
    ColorScaleLegend.prototype.render = function (animate) {
        if (animate === void 0) { animate = false; }
        var options = this.getOptions();
        var customColors = Tools.getProperty(options, 'color', 'gradient', 'colors');
        var colorScaleType = Tools.getProperty(options, 'heatmap', 'colorLegend', 'type');
        var colorPairingOption = Tools.getProperty(options, 'color', 'pairing', 'option');
        var title = Tools.getProperty(options, 'heatmap', 'colorLegend', 'title');
        var customColorsEnabled = !Tools.isEmpty(customColors);
        var domain = this.model.getValueDomain();
        var svg = this.getComponentContainer();
        // Clear DOM if loading
        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');
        if (isDataLoading) {
            svg.html('');
            return;
        }
        var legend = DOMUtils.appendOrSelect(svg, 'g.legend');
        var axis = DOMUtils.appendOrSelect(legend, 'g.legend-axis');
        var width = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }).width;
        var barWidth = configuration_non_customizable_legend.color.barWidth;
        if (width <= configuration_non_customizable_legend.color.barWidth) {
            barWidth = width;
        }
        if (title) {
            var legendTitleGroup = DOMUtils.appendOrSelect(svg, 'g.legend-title');
            var legendTitle = DOMUtils.appendOrSelect(legendTitleGroup, 'text');
            legendTitle.text(title).attr('dy', '0.7em');
            // Move the legend down by 16 pixels to display legend text on top
            legend.attr('transform', "translate(0, 16)");
        }
        // If domain consists of negative and positive values, use diverging palettes
        var colorScheme = domain[0] < 0 && domain[1] > 0 ? 'diverge' : 'mono';
        // Use default color pairing options if not in defined range
        if (colorPairingOption < 1 &&
            colorPairingOption > 4 &&
            colorScheme === 'mono') {
            colorPairingOption = 1;
        }
        else if (colorPairingOption < 1 &&
            colorPairingOption > 2 &&
            colorScheme === 'diverge') {
            colorPairingOption = 1;
        }
        var colorPairing = [];
        // Carbon charts has 11 colors for a single monochromatic palette & 17 for a divergent palette
        var colorGroupingLength = colorScheme === 'diverge' ? 17 : 11;
        if (!customColorsEnabled) {
            // Add class names to list and the amount based on the color scheme
            for (var i = 1; i < colorGroupingLength + 1; i++) {
                colorPairing.push(colorScaleType === interfaces.ColorLegendType.LINEAR
                    ? "stop-color-" + colorScheme + "-" + colorPairingOption + "-" + i
                    : "fill-" + colorScheme + "-" + colorPairingOption + "-" + i);
            }
        }
        else {
            // Use custom colors
            colorPairing = customColors;
        }
        if (colorScaleType === interfaces.ColorLegendType.LINEAR) {
            var stopLengthPercentage_1 = 100 / (colorPairing.length - 1);
            // Generate the gradient
            var linearGradient = DOMUtils.appendOrSelect(legend, 'linearGradient');
            linearGradient
                .attr('id', this.gradient_id + "-legend")
                .selectAll('stop')
                .data(colorPairing)
                .enter()
                .append('stop')
                .attr('offset', function (_, i) { return i * stopLengthPercentage_1 + "%"; })
                .attr('class', function (_, i) { return colorPairing[i]; })
                .attr('stop-color', function (d) { return d; });
            // Create the legend container
            var rectangle = DOMUtils.appendOrSelect(legend, 'rect');
            rectangle
                .attr('width', barWidth)
                .attr('height', configuration_non_customizable_legend.color.barHeight)
                .style('fill', "url(#" + this.gradient_id + "-legend)");
            // Create scale & ticks
            var linearScale = linear_linear()
                .domain(domain)
                .range([0, barWidth]);
            domain.splice(1, 0, (domain[0] + domain[1]) / 2);
            var xAxis = axisBottom(linearScale)
                .tickSize(0)
                .tickValues(domain);
            // Align axes at the bottom of the rectangle and delete the domain line
            axis.attr('transform', "translate(0," + configuration_non_customizable_legend.color.axisYTranslation + ")").call(xAxis);
            // Remove domain
            axis.select('.domain').remove();
            // Align text to fit in container
            axis.style('text-anchor', 'start');
        }
        else if (colorScaleType === interfaces.ColorLegendType.QUANTIZE) {
            // Generate equal chunks between range to act as ticks
            var interpolator = round(domain[0], domain[1]);
            var quant_1 = quantize(interpolator, colorPairing.length);
            // If divergent && non-custom color, remove 0/white from being displayed
            if (!customColorsEnabled && colorScheme === 'diverge') {
                colorPairing.splice(colorPairing.length / 2, 1);
            }
            var colorScaleBand_1 = band()
                .domain(colorPairing)
                .range([0, barWidth]);
            // Render the quantized rectangles
            var rectangle = DOMUtils.appendOrSelect(legend, 'g.quantized-rect');
            rectangle
                .selectAll('rect')
                .data(colorScaleBand_1.domain())
                .join('rect')
                .attr('x', function (d) { return colorScaleBand_1(d); })
                .attr('y', 0)
                .attr('width', Math.max(0, colorScaleBand_1.bandwidth()) - 1)
                .attr('height', configuration_non_customizable_legend.color.barHeight)
                .attr('class', function (d) { return d; })
                .attr('fill', function (d) { return d; });
            var xAxis = axisBottom(colorScaleBand_1)
                .tickSize(0)
                .tickValues(colorPairing)
                .tickFormat(function (_, i) {
                // Display every other tick to create space
                if (!customColorsEnabled &&
                    ((i + 1) % 2 === 0 || i === colorPairing.length - 1)) {
                    return null;
                }
                // Use the quant interpolators as ticks
                return quant_1[i].toString();
            });
            // Align axis to match bandwidth start after initial (white)
            var axisTranslation = colorScaleBand_1.bandwidth() / 2;
            axis.attr('transform', "translate(" + (!customColorsEnabled && colorScheme === 'diverge' ? '-' : '') + axisTranslation + ", " + configuration_non_customizable_legend.color.axisYTranslation + ")").call(xAxis);
            // Append the last tick
            var firstTick = axis.select('g.tick').clone(true);
            firstTick
                .attr('transform', "translate(" + (barWidth +
                (!customColorsEnabled && colorScheme === 'diverge'
                    ? axisTranslation
                    : -axisTranslation)) + ", 0)")
                .classed('final-tick', true)
                .select('text')
                .text(quant_1[quant_1.length - 1]);
            axis.enter().append(firstTick.node());
            axis.select('.domain').remove();
        }
        else {
            throw Error('Entered color legend type is not supported.');
        }
        // Translate last axis tick if barWidth equals chart width
        if (width <= configuration_non_customizable_legend.color.barWidth) {
            var lastTick = axis.select('g.tick:last-of-type text');
            var width_1 = DOMUtils.getSVGElementSize(lastTick, {
                useBBox: true,
            }).width;
            lastTick.attr('x', "-" + width_1);
        }
    };
    ColorScaleLegend.prototype.destroy = function () {
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Axis.RENDER_COMPLETE, this.handleAxisComplete);
    };
    return ColorScaleLegend;
}(Legend));

//# sourceMappingURL=../../../src/components/essentials/color-scale-legend.js.map
// EXTERNAL MODULE: ../../node_modules/warning/browser.js
var browser = __webpack_require__(2564);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/misc/mixin.js
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {Array} a An array.
 * @returns {Array} The flattened version of the given array.
 */


function mixin_flatten(a) {
  return a.reduce(function (result, item) {
    if (Array.isArray(item)) {
      result.push.apply(result, _toConsumableArray(mixin_flatten(item)));
    } else {
      result.push(item);
    }

    return result;
  }, []);
}
/**
 * An interface for defining mix-in classes. Used with {@link mixin}.
 * @function mixinfn
 * @param {Class} ToMix The class to mix.
 * @returns {Class} The class mixed-in with the given ToMix class.
 */

/**
 * @function mixin
 * @param {...mixinfn} mixinfns The functions generating mix-ins.
 * @returns {Class} The class generated with the given mix-ins.
 */


function mixin() {
  for (var _len = arguments.length, mixinfns = new Array(_len), _key = 0; _key < _len; _key++) {
    mixinfns[_key] = arguments[_key];
  }

  return mixin_flatten(mixinfns).reduce(function (Class, mixinfn) {
    return mixinfn(Class);
  }, /*#__PURE__*/function () {
    function _class() {
      _classCallCheck(this, _class);
    }

    return _class;
  }());
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/mixins/create-component.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function create_component_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = _getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = _getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return _possibleConstructorReturn(this, result);
  };
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ function create_component(ToMix) {
  var CreateComponent = /*#__PURE__*/function (_ToMix) {
    _inherits(CreateComponent, _ToMix);

    var _super = _createSuper(CreateComponent);
    /**
     * The component instances managed by this component.
     * Releasing this component also releases the components in `this.children`.
     * @type {Component[]}
     */

    /**
     * Mix-in class to manage lifecycle of component.
     * The constructor sets up this component's effective options,
     * and registers this component't instance associated to an element.
     * @implements Handle
     * @param {HTMLElement} element The element working as this component.
     * @param {object} [options] The component options.
     */


    function CreateComponent(element) {
      var _this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      create_component_classCallCheck(this, CreateComponent);

      _this = _super.call(this, element, options);
      _this.children = [];

      if (!element || element.nodeType !== Node.ELEMENT_NODE) {
        throw new TypeError('DOM element should be given to initialize this widget.');
      }
      /**
       * The element the component is of.
       * @type {Element}
       */


      _this.element = element;
      /**
       * The component options.
       * @type {object}
       */

      _this.options = Object.assign(Object.create(_this.constructor.options), options);

      _this.constructor.components.set(_this.element, _assertThisInitialized(_this));

      return _this;
    }
    /**
     * Instantiates this component of the given element.
     * @param {HTMLElement} element The element.
     */


    _createClass(CreateComponent, [{
      key: "release",
      value:
      /**
       * Releases this component's instance from the associated element.
       */
      function release() {
        for (var child = this.children.pop(); child; child = this.children.pop()) {
          child.release();
        }

        this.constructor.components.delete(this.element);
        return null;
      }
    }], [{
      key: "create",
      value: function create(element, options) {
        return this.components.get(element) || new this(element, options);
      }
    }]);

    return CreateComponent;
  }(ToMix);

  return CreateComponent;
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/misc/event-matches.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {Event} event The event.
 * @param {string} selector The selector.
 * @returns {Element}
 *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.
 */
function eventMatches(event, selector) {
  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).
  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.
  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.
  var target = event.target,
      currentTarget = event.currentTarget;

  if (typeof target.matches === 'function') {
    if (target.matches(selector)) {
      // If event target itself matches the given selector, return it
      return target;
    }

    if (target.matches("".concat(selector, " *"))) {
      var closest = target.closest(selector);

      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {
        return closest;
      }
    }
  }

  return undefined;
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/misc/on.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
function on_on(element) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  element.addEventListener.apply(element, args);
  return {
    release: function release() {
      element.removeEventListener.apply(element, args);
      return null;
    }
  };
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/mixins/init-component-by-launcher.js
function init_component_by_launcher_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    init_component_by_launcher_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    init_component_by_launcher_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return init_component_by_launcher_typeof(obj);
}

function init_component_by_launcher_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function init_component_by_launcher_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function init_component_by_launcher_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) init_component_by_launcher_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) init_component_by_launcher_defineProperties(Constructor, staticProps);
  return Constructor;
}

function init_component_by_launcher_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) init_component_by_launcher_setPrototypeOf(subClass, superClass);
}

function init_component_by_launcher_setPrototypeOf(o, p) {
  init_component_by_launcher_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return init_component_by_launcher_setPrototypeOf(o, p);
}

function init_component_by_launcher_createSuper(Derived) {
  var hasNativeReflectConstruct = init_component_by_launcher_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = init_component_by_launcher_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = init_component_by_launcher_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return init_component_by_launcher_possibleConstructorReturn(this, result);
  };
}

function init_component_by_launcher_possibleConstructorReturn(self, call) {
  if (call && (init_component_by_launcher_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return init_component_by_launcher_assertThisInitialized(self);
}

function init_component_by_launcher_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function init_component_by_launcher_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function init_component_by_launcher_getPrototypeOf(o) {
  init_component_by_launcher_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return init_component_by_launcher_getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */




/* harmony default export */ function init_component_by_launcher(ToMix) {
  /**
   * Mix-in class to instantiate components events on launcher button.
   * @class InitComponentByLauncher
   */
  var InitComponentByLauncher = /*#__PURE__*/function (_ToMix) {
    init_component_by_launcher_inherits(InitComponentByLauncher, _ToMix);

    var _super = init_component_by_launcher_createSuper(InitComponentByLauncher);

    function InitComponentByLauncher() {
      init_component_by_launcher_classCallCheck(this, InitComponentByLauncher);

      return _super.apply(this, arguments);
    }

    init_component_by_launcher_createClass(InitComponentByLauncher, null, [{
      key: "init",
      value:
      /**
       * `true` suggests that this component is lazily initialized upon an action/event, etc.
       * @type {boolean}
       */

      /**
       * Instantiates this component in the given element.
       * If the given element indicates that it's an component of this class, instantiates it.
       * Otherwise, instantiates this component by clicking on launcher buttons
       * (buttons with attribute that `options.attribInitTarget` points to) of this component in the given node.
       * @param {Node} target The DOM node to instantiate this component in. Should be a document or an element.
       * @param {object} [options] The component options.
       * @param {string} [options.selectorInit] The CSS selector to find this component.
       * @param {string} [options.attribInitTarget] The attribute name in the launcher buttons to find target component.
       * @returns {Handle} The handle to remove the event listener to handle clicking.
       */
      function init() {
        var _this = this;

        var target = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var effectiveOptions = Object.assign(Object.create(this.options), options);

        if (!target || target.nodeType !== Node.ELEMENT_NODE && target.nodeType !== Node.DOCUMENT_NODE) {
          throw new TypeError('DOM document or DOM element should be given to search for and initialize this widget.');
        }

        if (target.nodeType === Node.ELEMENT_NODE && target.matches(effectiveOptions.selectorInit)) {
          this.create(target, options);
        } else {
          var handles = effectiveOptions.initEventNames.map(function (name) {
            return on_on(target, name, function (event) {
              var launcher = eventMatches(event, "[".concat(effectiveOptions.attribInitTarget, "]"));

              if (launcher) {
                event.delegateTarget = launcher; // eslint-disable-line no-param-reassign

                // eslint-disable-line no-param-reassign
                var elements = launcher.ownerDocument.querySelectorAll(launcher.getAttribute(effectiveOptions.attribInitTarget));

                if (elements.length > 1) {
                  throw new Error('Target widget must be unique.');
                }

                if (elements.length === 1) {
                  if (launcher.tagName === 'A') {
                    event.preventDefault();
                  }

                  var component = _this.create(elements[0], options);

                  if (typeof component.createdByLauncher === 'function') {
                    component.createdByLauncher(event);
                  }
                }
              }
            });
          });
          return {
            release: function release() {
              for (var handle = handles.pop(); handle; handle = handles.pop()) {
                handle.release();
              }
            }
          };
        }

        return '';
      }
    }]);

    InitComponentByLauncher.forLazyInit = true;
    return InitComponentByLauncher;
  }(ToMix);

  return InitComponentByLauncher;
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/mixins/evented-state.js
function evented_state_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    evented_state_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    evented_state_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return evented_state_typeof(obj);
}

function evented_state_toConsumableArray(arr) {
  return evented_state_arrayWithoutHoles(arr) || evented_state_iterableToArray(arr) || evented_state_unsupportedIterableToArray(arr) || evented_state_nonIterableSpread();
}

function evented_state_nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function evented_state_unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return evented_state_arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return evented_state_arrayLikeToArray(o, minLen);
}

function evented_state_iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

function evented_state_arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return evented_state_arrayLikeToArray(arr);
}

function evented_state_arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function evented_state_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function evented_state_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function evented_state_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) evented_state_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) evented_state_defineProperties(Constructor, staticProps);
  return Constructor;
}

function evented_state_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) evented_state_setPrototypeOf(subClass, superClass);
}

function evented_state_setPrototypeOf(o, p) {
  evented_state_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return evented_state_setPrototypeOf(o, p);
}

function evented_state_createSuper(Derived) {
  var hasNativeReflectConstruct = evented_state_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = evented_state_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = evented_state_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return evented_state_possibleConstructorReturn(this, result);
  };
}

function evented_state_possibleConstructorReturn(self, call) {
  if (call && (evented_state_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return evented_state_assertThisInitialized(self);
}

function evented_state_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function evented_state_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function evented_state_getPrototypeOf(o) {
  evented_state_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return evented_state_getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ function evented_state(ToMix) {
  /**
   * Mix-in class to manage events associated with states.
   * @class EventedState
   */
  var EventedState = /*#__PURE__*/function (_ToMix) {
    evented_state_inherits(EventedState, _ToMix);

    var _super = evented_state_createSuper(EventedState);

    function EventedState() {
      evented_state_classCallCheck(this, EventedState);

      return _super.apply(this, arguments);
    }

    evented_state_createClass(EventedState, [{
      key: "_changeState",
      value:
      /* eslint-disable jsdoc/check-param-names */

      /**
       * The internal implementation for {@link EventedState#changeState `.changeState()`}, performing actual change in state.
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @param {EventedState~changeStateCallback} callback The callback called once changing state is finished or is canceled.
       * @private
       */
      function _changeState() {
        throw new Error('_changeState() should be overriden to perform actual change in state.');
      }
      /**
       * Changes the state of this component.
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @param {EventedState~changeStateCallback} [callback] The callback called once changing state is finished or is canceled.
       */

    }, {
      key: "changeState",
      value: function changeState() {
        var _this = this;

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var state = typeof args[0] === 'string' ? args.shift() : undefined;
        var detail = Object(args[0]) === args[0] && typeof args[0] !== 'function' ? args.shift() : undefined;
        var callback = typeof args[0] === 'function' ? args.shift() : undefined;

        if (typeof this.shouldStateBeChanged === 'function' && !this.shouldStateBeChanged(state, detail)) {
          if (callback) {
            callback(null, true);
          }

          return;
        }

        var data = {
          group: detail && detail.group,
          state: state
        };
        var eventNameSuffix = [data.group, state].filter(Boolean).join('-').split('-') // Group or state may contain hyphen
        .map(function (item) {
          return item[0].toUpperCase() + item.substr(1);
        }).join('');
        var eventStart = new CustomEvent(this.options["eventBefore".concat(eventNameSuffix)], {
          bubbles: true,
          cancelable: true,
          detail: detail
        });
        var fireOnNode = detail && detail.delegatorNode || this.element;
        var canceled = !fireOnNode.dispatchEvent(eventStart);

        if (canceled) {
          if (callback) {
            var error = new Error("Changing state (".concat(JSON.stringify(data), ") has been canceled."));
            error.canceled = true;
            callback(error);
          }
        } else {
          var changeStateArgs = [state, detail].filter(Boolean);

          this._changeState.apply(this, evented_state_toConsumableArray(changeStateArgs).concat([function () {
            fireOnNode.dispatchEvent(new CustomEvent(_this.options["eventAfter".concat(eventNameSuffix)], {
              bubbles: true,
              cancelable: true,
              detail: detail
            }));

            if (callback) {
              callback();
            }
          }]));
        }
      }
      /* eslint-enable jsdoc/check-param-names */

      /**
       * Tests if change in state should happen or not.
       * Classes inheriting {@link EventedState `EventedState`} should override this function.
       * @function EventedState#shouldStateBeChanged
       * @param {string} [state] The new state. Can be an omitted, which means toggling.
       * @param {object} [detail]
       *   The object that should be put to event details that is fired before/after changing state.
       *   Can have a `group` property, which specifies what state to be changed.
       * @returns {boolean}
       *   `false` if change in state shouldn't happen, e.g. when the given new state is the same as the current one.
       */

    }]);

    return EventedState;
  }(ToMix);
  /**
   * The callback called once changing state is finished or is canceled.
   * @callback EventedState~changeStateCallback
   * @param {Error} error
   *   An error object with `true` in its `canceled` property if changing state is canceled.
   *   Cancellation happens if the handler of a custom event, that is fired before changing state happens,
   *   calls `.preventDefault()` against the event.
   * @param {boolean} keptState
   *   `true` if the call to {@link EventedState#changeState `.changeState()`} didn't cause actual change in state.
   */


  return EventedState;
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/misc/get-launching-details.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
function getLaunchingDetails(evt) {
  if (!evt || typeof evt === 'function') {
    return {
      launchingElement: null,
      launchingEvent: null
    };
  }

  var launchingElement = evt.delegateTarget || evt.currentTarget || evt;
  var launchingEvent = evt.currentTarget && evt;

  if (launchingElement && !launchingElement.nodeType) {
    throw new TypeError('DOM Node should be given for launching element.');
  }

  if (launchingEvent && !launchingEvent.type) {
    throw new TypeError('DOM event should be given for launching event.');
  }

  return {
    launchingElement: launchingElement,
    launchingEvent: launchingEvent
  };
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/mixins/evented-show-hide-state.js
function evented_show_hide_state_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    evented_show_hide_state_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    evented_show_hide_state_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return evented_show_hide_state_typeof(obj);
}

function evented_show_hide_state_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function evented_show_hide_state_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function evented_show_hide_state_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) evented_show_hide_state_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) evented_show_hide_state_defineProperties(Constructor, staticProps);
  return Constructor;
}

function evented_show_hide_state_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) evented_show_hide_state_setPrototypeOf(subClass, superClass);
}

function evented_show_hide_state_setPrototypeOf(o, p) {
  evented_show_hide_state_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return evented_show_hide_state_setPrototypeOf(o, p);
}

function evented_show_hide_state_createSuper(Derived) {
  var hasNativeReflectConstruct = evented_show_hide_state_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = evented_show_hide_state_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = evented_show_hide_state_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return evented_show_hide_state_possibleConstructorReturn(this, result);
  };
}

function evented_show_hide_state_possibleConstructorReturn(self, call) {
  if (call && (evented_show_hide_state_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return evented_show_hide_state_assertThisInitialized(self);
}

function evented_show_hide_state_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function evented_show_hide_state_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function evented_show_hide_state_getPrototypeOf(o) {
  evented_show_hide_state_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return evented_show_hide_state_getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





function eventedShowHideState(ToMix) {
  /**
   * Mix-in class to launch a floating menu.
   * @class EventedShowHideState
   */
  var EventedShowHideState = /*#__PURE__*/function (_ToMix) {
    evented_show_hide_state_inherits(EventedShowHideState, _ToMix);

    var _super = evented_show_hide_state_createSuper(EventedShowHideState);

    function EventedShowHideState() {
      evented_show_hide_state_classCallCheck(this, EventedShowHideState);

      return _super.apply(this, arguments);
    }

    evented_show_hide_state_createClass(EventedShowHideState, [{
      key: "show",
      value:
      /**
       */

      /**
       * Switch to 'shown' state.
       * @param [evtOrElem] The launching event or element.
       * @param {EventedState~changeStateCallback} [callback] The callback.
       */
      function show(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === 'function') {
          callback = evtOrElem; // eslint-disable-line no-param-reassign
        }

        this.changeState('shown', getLaunchingDetails(evtOrElem), callback);
      }
      /**
       * Switch to 'hidden' state.
       * @param [evtOrElem] The launching event or element.
       * @param {EventedState~changeStateCallback} [callback] The callback.
       */

    }, {
      key: "hide",
      value: function hide(evtOrElem, callback) {
        if (!evtOrElem || typeof evtOrElem === 'function') {
          callback = evtOrElem; // eslint-disable-line no-param-reassign
        }

        this.changeState('hidden', getLaunchingDetails(evtOrElem), callback);
      }
    }]);

    return EventedShowHideState;
  }(ToMix);

  return EventedShowHideState;
}

var evented_show_hide_state_exports = [evented_state, eventedShowHideState];
/* harmony default export */ const evented_show_hide_state = (evented_show_hide_state_exports);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/globals/js/mixins/handles.js
function handles_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    handles_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    handles_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return handles_typeof(obj);
}

function handles_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function handles_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function handles_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) handles_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) handles_defineProperties(Constructor, staticProps);
  return Constructor;
}

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    _get = Reflect.get;
  } else {
    _get = function _get(target, property, receiver) {
      var base = _superPropBase(target, property);

      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = handles_getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

function handles_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) handles_setPrototypeOf(subClass, superClass);
}

function handles_setPrototypeOf(o, p) {
  handles_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return handles_setPrototypeOf(o, p);
}

function handles_createSuper(Derived) {
  var hasNativeReflectConstruct = handles_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = handles_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = handles_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return handles_possibleConstructorReturn(this, result);
  };
}

function handles_possibleConstructorReturn(self, call) {
  if (call && (handles_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return handles_assertThisInitialized(self);
}

function handles_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function handles_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function handles_getPrototypeOf(o) {
  handles_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return handles_getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/* harmony default export */ function handles(ToMix) {
  /**
   * Mix-in class to manage handles in component.
   * Managed handles are automatically released when the component with this class mixed in is released.
   * @class Handles
   * @implements Handle
   */
  var Handles = /*#__PURE__*/function (_ToMix) {
    handles_inherits(Handles, _ToMix);

    var _super = handles_createSuper(Handles);

    function Handles() {
      var _this;

      handles_classCallCheck(this, Handles);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      _this.handles = new Set();
      return _this;
    }

    handles_createClass(Handles, [{
      key: "manage",
      value:
      /**
       * Manages the given handle.
       * @param {Handle} handle The handle to manage.
       * @returns {Handle} The given handle.
       */
      function manage(handle) {
        this.handles.add(handle);
        return handle;
      }
      /**
       * Stop managing the given handle.
       * @param {Handle} handle The handle to stop managing.
       * @returns {Handle} The given handle.
       */

    }, {
      key: "unmanage",
      value: function unmanage(handle) {
        this.handles.delete(handle);
        return handle;
      }
    }, {
      key: "release",
      value: function release() {
        var _this2 = this;

        this.handles.forEach(function (handle) {
          handle.release();

          _this2.handles.delete(handle);
        });
        return _get(handles_getPrototypeOf(Handles.prototype), "release", this).call(this);
      }
    }]);

    return Handles;
  }(ToMix);

  return Handles;
}
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/node_modules/carbon-components/es/components/modal/modal.js
function modal_typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    modal_typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    modal_typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return modal_typeof(obj);
}

function modal_classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function modal_defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function modal_createClass(Constructor, protoProps, staticProps) {
  if (protoProps) modal_defineProperties(Constructor.prototype, protoProps);
  if (staticProps) modal_defineProperties(Constructor, staticProps);
  return Constructor;
}

function modal_inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) modal_setPrototypeOf(subClass, superClass);
}

function modal_setPrototypeOf(o, p) {
  modal_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return modal_setPrototypeOf(o, p);
}

function modal_createSuper(Derived) {
  var hasNativeReflectConstruct = modal_isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = modal_getPrototypeOf(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = modal_getPrototypeOf(this).constructor;

      result = Reflect.construct(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return modal_possibleConstructorReturn(this, result);
  };
}

function modal_possibleConstructorReturn(self, call) {
  if (call && (modal_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return modal_assertThisInitialized(self);
}

function modal_assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function modal_isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function modal_getPrototypeOf(o) {
  modal_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return modal_getPrototypeOf(o);
}
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












var Modal = /*#__PURE__*/function (_mixin) {
  modal_inherits(Modal, _mixin);

  var _super = modal_createSuper(Modal);
  /**
   * Modal dialog.
   * @extends CreateComponent
   * @extends InitComponentByLauncher
   * @extends EventedShowHideState
   * @extends Handles
   * @param {HTMLElement} element The element working as a modal dialog.
   * @param {object} [options] The component options.
   * @param {string} [options.classVisible] The CSS class for the visible state.
   * @param {string} [options.classBody] The CSS class for `<body>` with open modal.
   * @param {string} [options.eventBeforeShown]
   *   The name of the custom event fired before this modal is shown.
   *   Cancellation of this event stops showing the modal.
   * @param {string} [options.eventAfterShown]
   *   The name of the custom event telling that modal is sure shown
   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).
   * @param {string} [options.eventBeforeHidden]
   *   The name of the custom event fired before this modal is hidden.
   *   Cancellation of this event stops hiding the modal.
   * @param {string} [options.eventAfterHidden]
   *   The name of the custom event telling that modal is sure hidden
   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).
   */


  /**
   * Modal dialog.
   * @extends CreateComponent
   * @extends InitComponentByLauncher
   * @extends EventedShowHideState
   * @extends Handles
   * @param {HTMLElement} element The element working as a modal dialog.
   * @param {object} [options] The component options.
   * @param {string} [options.classVisible] The CSS class for the visible state.
   * @param {string} [options.classBody] The CSS class for `<body>` with open modal.
   * @param {string} [options.eventBeforeShown]
   *   The name of the custom event fired before this modal is shown.
   *   Cancellation of this event stops showing the modal.
   * @param {string} [options.eventAfterShown]
   *   The name of the custom event telling that modal is sure shown
   *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).
   * @param {string} [options.eventBeforeHidden]
   *   The name of the custom event fired before this modal is hidden.
   *   Cancellation of this event stops hiding the modal.
   * @param {string} [options.eventAfterHidden]
   *   The name of the custom event telling that modal is sure hidden
   *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).
   */
  function Modal(element, options) {
    var _this;

    modal_classCallCheck(this, Modal);

    _this = _super.call(this, element, options);
    _this._handleFocusinListener = void 0;
    _this._handleKeydownListener = void 0;

    _this._handleFocusin = function (evt) {
      var focusWrapNode = _this.element.querySelector(_this.options.selectorModalContainer) || _this.element;

      if (_this.element.classList.contains(_this.options.classVisible) && !focusWrapNode.contains(evt.target) && _this.options.selectorsFloatingMenus.every(function (selector) {
        return !eventMatches(evt, selector);
      })) {
        _this.element.querySelector(js_settings.selectorTabbable).focus();
      }
    };

    _this._hookCloseActions();

    return _this;
  }
  /**
   * The handle for `focusin` event listener.
   * Used for "focus-wrap" feature.
   * @type {Handle}
   * @private
   */


  /**
   * The handle for `focusin` event listener.
   * Used for "focus-wrap" feature.
   * @type {Handle}
   * @private
   */
  modal_createClass(Modal, [{
    key: "createdByLauncher",
    value:
    /**
     * A method that runs when `.init()` is called from `initComponentByLauncher`.
     * @param {Event} evt The event fired on the launcher button.
     */
    function createdByLauncher(evt) {
      this.show(evt);
    }
    /**
     * Determines whether or not to emit events and callback function when `.changeState()` is called from `eventedState`.
     * @param {string} state The new state.
     * @returns {boolean} `true` if the given `state` is different from current state.
     */

  }, {
    key: "shouldStateBeChanged",
    value: function shouldStateBeChanged(state) {
      if (state === 'shown') {
        return !this.element.classList.contains(this.options.classVisible);
      }

      return this.element.classList.contains(this.options.classVisible);
    }
    /**
     * Changes the shown/hidden state.
     * @private
     * @param {string} state The new state.
     * @param {object} detail The detail data to be included in the event that will be fired.
     * @param {Function} callback Callback called when change in state completes.
     */

  }, {
    key: "_changeState",
    value: function _changeState(state, detail, callback) {
      var _this2 = this;

      var handleTransitionEnd;

      var transitionEnd = function transitionEnd() {
        if (handleTransitionEnd) {
          handleTransitionEnd = _this2.unmanage(handleTransitionEnd).release();
        }

        if (state === 'shown' && _this2.element.offsetWidth > 0 && _this2.element.offsetHeight > 0) {
          _this2.previouslyFocusedNode = _this2.element.ownerDocument.activeElement;

          var focusableItem = _this2.element.querySelector(_this2.options.selectorPrimaryFocus) || _this2.element.querySelector(js_settings.selectorTabbable);

          focusableItem.focus();

          if (false) {}
        }

        callback();
      };

      if (this._handleFocusinListener) {
        this._handleFocusinListener = this.unmanage(this._handleFocusinListener).release();
      }

      if (state === 'shown') {
        var hasFocusin = ('onfocusin' in this.element.ownerDocument.defaultView);
        var focusinEventName = hasFocusin ? 'focusin' : 'focus';
        this._handleFocusinListener = this.manage(on_on(this.element.ownerDocument, focusinEventName, this._handleFocusin, !hasFocusin));
      }

      if (state === 'hidden') {
        this.element.classList.toggle(this.options.classVisible, false);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, false);

        if (this.options.selectorFocusOnClose || this.previouslyFocusedNode) {
          (this.element.ownerDocument.querySelector(this.options.selectorFocusOnClose) || this.previouslyFocusedNode).focus();
        }
      } else if (state === 'shown') {
        this.element.classList.toggle(this.options.classVisible, true);
        this.element.ownerDocument.body.classList.toggle(this.options.classBody, true);
      }

      handleTransitionEnd = this.manage(on_on(this.element, 'transitionend', transitionEnd));
    }
  }, {
    key: "_hookCloseActions",
    value: function _hookCloseActions() {
      var _this3 = this;

      this.manage(on_on(this.element, 'click', function (evt) {
        var closeButton = eventMatches(evt, _this3.options.selectorModalClose);

        if (closeButton) {
          evt.delegateTarget = closeButton; // eslint-disable-line no-param-reassign
        }

        if (closeButton || evt.target === _this3.element) {
          _this3.hide(evt);
        }
      }));

      if (this._handleKeydownListener) {
        this._handleKeydownListener = this.unmanage(this._handleKeydownListener).release();
      }

      this._handleKeydownListener = this.manage(on_on(this.element.ownerDocument.body, 'keydown', function (evt) {
        // Avoid running `evt.stopPropagation()` only when modal is shown
        if (evt.which === 27 && _this3.shouldStateBeChanged('hidden')) {
          evt.stopPropagation();

          _this3.hide(evt);
        }
      }));
    }
    /**
     * Handles `focusin` (or `focus` depending on browser support of `focusin`) event to do wrap-focus behavior.
     * @param {Event} evt The event.
     * @private
     */

  }], [{
    key: "options",
    get:
    /**
     * The component options.
     * If `options` is specified in the constructor, {@linkcode Modal.create .create()}, or {@linkcode Modal.init .init()},
     * properties in this object are overriden for the instance being create and how {@linkcode Modal.init .init()} works.
     * @member Modal.options
     * @type {object}
     * @property {string} selectorInit The CSS class to find modal dialogs.
     * @property {string} [selectorModalClose] The selector to find elements that close the modal.
     * @property {string} [selectorPrimaryFocus] The CSS selector to determine the element to put focus when modal gets open.
     * @property {string} [selectorFocusOnClose] The CSS selector to determine the element to put focus when modal closes.
     *   If undefined, focus returns to the previously focused element prior to the modal opening.
     * @property {string} [selectorModalContainer] The CSS selector for the content container of the modal for focus wrap feature.
     * @property {string} attribInitTarget The attribute name in the launcher buttons to find target modal dialogs.
     * @property {string[]} [selectorsFloatingMenu]
     *   The CSS selectors of floating menus.
     *   Used for detecting if focus-wrap behavior should be disabled temporarily.
     * @property {string} [classVisible] The CSS class for the visible state.
     * @property {string} [classBody] The CSS class for `<body>` with open modal.
     * @property {string} [classNoScroll] The CSS class for hiding scroll bar in body element while modal is shown.
     * @property {string} [eventBeforeShown]
     *   The name of the custom event fired before this modal is shown.
     *   Cancellation of this event stops showing the modal.
     * @property {string} [eventAfterShown]
     *   The name of the custom event telling that modal is sure shown
     *   without being canceled by the event handler named by `eventBeforeShown` option (`modal-beingshown`).
     * @property {string} [eventBeforeHidden]
     *   The name of the custom event fired before this modal is hidden.
     *   Cancellation of this event stops hiding the modal.
     * @property {string} [eventAfterHidden]
     *   The name of the custom event telling that modal is sure hidden
     *   without being canceled by the event handler named by `eventBeforeHidden` option (`modal-beinghidden`).
     */
    function get() {
      var prefix = js_settings.prefix;
      return {
        selectorInit: '[data-modal]',
        selectorModalClose: '[data-modal-close]',
        selectorPrimaryFocus: '[data-modal-primary-focus]',
        selectorsFloatingMenus: [".".concat(prefix, "--overflow-menu-options"), ".".concat(prefix, "--tooltip"), '.flatpickr-calendar'],
        selectorModalContainer: ".".concat(prefix, "--modal-container"),
        classVisible: 'is-visible',
        classBody: "".concat(prefix, "--body--with-modal-open"),
        attribInitTarget: 'data-modal-target',
        initEventNames: ['click'],
        eventBeforeShown: 'modal-beingshown',
        eventAfterShown: 'modal-shown',
        eventBeforeHidden: 'modal-beinghidden',
        eventAfterHidden: 'modal-hidden'
      };
    }
  }]);

  Modal.components = new WeakMap();
  return Modal;
}(mixin(create_component, init_component_by_launcher, evented_show_hide_state, handles));

/* harmony default export */ const modal = (Modal);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/modal.js
var modal_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




// Carbon modal

// import the settings for the css prefix

// D3 Imports


var modal_Modal = /** @class */ (function (_super) {
    modal_extends(Modal, _super);
    function Modal(model, services, configs) {
        var _this = _super.call(this, model, services, configs) || this;
        _this.type = 'modal';
        // flag for checking whether tooltip event listener is added or not
        _this.isEventListenerAdded = false;
        _this.handleShowModal = function () {
            _this.modal.html(_this.getModalHTML());
            _this.modal
                .select('div.bx--modal-footer button.bx--btn')
                .on('click', function () { return _this.model.exportToCSV(); });
            var modalInstance = modal.create(_this.modal.node());
            modalInstance.show();
        };
        _this.init();
        return _this;
    }
    Modal.prototype.addEventListeners = function () {
        // listen to show-modal Custom Events to render the modal
        this.services.events.addEventListener(interfaces.Events.Modal.SHOW, this.handleShowModal);
    };
    Modal.prototype.removeEventListeners = function () {
        // remove show-modal Custom Events
        this.services.events.removeEventListener(interfaces.Events.Modal.SHOW, this.handleShowModal);
    };
    Modal.prototype.getModalHTML = function () {
        var options = this.model.getOptions();
        var chartprefix = Tools.getProperty(options, 'style', 'prefix');
        var tableArray = this.model.getTabularDataArray();
        return "\n\t\t<div class=\"bx--modal-container\">\n\t\t\t<div class=\"bx--modal-header\">\n\t\t\t\t<p class=\"bx--modal-header__label bx--type-delta\" id=\"modal-title\">Tabular representation</p>\n\t\t\t\t<p class=\"bx--modal-header__heading bx--type-beta\" id=\"modal-description\">" + options.title + "</p>\n\t\t\t\t<button class=\"bx--modal-close\" type=\"button\" data-modal-close aria-label=\"close modal\"  data-modal-primary-focus>\n\t\t\t\t\t<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" aria-label=\"Close\" width=\"20\" height=\"20\" viewBox=\"0 0 32 32\" role=\"img\" class=\"bx--modal-close__icon\">\n\t\t\t\t\t\t<path d=\"M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div class=\"bx--modal-content\"><table class=\"bx--data-table bx--data-table--no-border\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t" + lodash_es_get(tableArray, 0)
            .map(function (heading) { return "<th scope=\"col\">\n\t\t\t\t\t\t\t\t<div class=\"bx--table-header-label\">" + heading + "</div>\n\t\t\t\t\t\t\t</th>"; })
            .join('') + "\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>" + tableArray
            .slice(1)
            .map(function (row) { return "\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t" + row.map(function (column) { return "<td>" + column + "</td>"; }).join('') + "\n\t\t\t\t\t\t\t</tr>"; })
            .join('') + "\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t\t<div class=\"bx--modal-footer\">\n\t\t\t  <div class=\"" + js_settings.prefix + "--" + chartprefix + "-modal-footer-spacer\"></div>\n\t\t\t  <button class=\"bx--btn bx--btn--primary\" type=\"button\" data-modal-primary-focus>Download as CSV</button>\n\t\t\t</div>\n\t\t</div>";
    };
    Modal.prototype.render = function () {
        var options = this.model.getOptions();
        if (!this.isEventListenerAdded) {
            // Grab the tooltip element
            var holder = src_select(this.services.domUtils.getHolder());
            var chartprefix = Tools.getProperty(options, 'style', 'prefix');
            this.modal = DOMUtils.appendOrSelect(holder, "div." + js_settings.prefix + "--" + chartprefix + "--modal");
            this.addEventListeners();
            this.isEventListenerAdded = true;
            this.modal
                .attr('data-modal', true)
                .attr('class', 'bx--modal')
                .attr('role', 'dialog')
                .attr('aria-modal', true)
                .attr('aria-labelledby', 'modal-title')
                .attr('aria-describedby', 'modal-description')
                .attr('tabindex', -1);
        }
    };
    Modal.prototype.destroy = function () {
        // remove tooltip eventListener
        this.removeEventListeners();
        this.isEventListenerAdded = false;
    };
    return Modal;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/modal.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/utils-position/index.js
/**
 * Utilites to manipulate the position of elements relative to other elements
 */
var utils_position_a;
var PLACEMENTS;
(function (PLACEMENTS) {
    PLACEMENTS["LEFT"] = "left";
    PLACEMENTS["RIGHT"] = "right";
    PLACEMENTS["TOP"] = "top";
    PLACEMENTS["BOTTOM"] = "bottom";
})(PLACEMENTS || (PLACEMENTS = {}));
var defaultPositions = (utils_position_a = {},
    utils_position_a[PLACEMENTS.LEFT] = function (referenceOffset, target, referenceRect) { return ({
        top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),
        left: Math.round(referenceOffset.left - target.offsetWidth)
    }); },
    utils_position_a[PLACEMENTS.RIGHT] = function (referenceOffset, target, referenceRect) { return ({
        top: referenceOffset.top - Math.round(target.offsetHeight / 2) + Math.round(referenceRect.height / 2),
        left: Math.round(referenceOffset.left + referenceRect.width)
    }); },
    utils_position_a[PLACEMENTS.TOP] = function (referenceOffset, target, referenceRect) { return ({
        top: Math.round(referenceOffset.top - target.offsetHeight),
        left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)
    }); },
    utils_position_a[PLACEMENTS.BOTTOM] = function (referenceOffset, target, referenceRect) { return ({
        top: Math.round(referenceOffset.top + referenceRect.height),
        left: referenceOffset.left - Math.round(target.offsetWidth / 2) + Math.round(referenceRect.width / 2)
    }); },
    utils_position_a);
var windowRef = typeof window !== "undefined" ? window : {
    innerHeight: 0,
    scrollY: 0,
    innerWidth: 0,
    scrollX: 0
};
var Position = /** @class */ (function () {
    function Position(positions) {
        if (positions === void 0) { positions = {}; }
        this.positions = defaultPositions;
        this.positions = Object.assign({}, defaultPositions, positions);
    }
    Position.prototype.getRelativeOffset = function (target) {
        // start with the initial element offsets
        var offsets = {
            left: target.offsetLeft,
            top: target.offsetTop
        };
        // get each static (i.e. not absolute or relative) offsetParent and sum the left/right offsets
        while (target.offsetParent && getComputedStyle(target.offsetParent).position === "static") {
            offsets.left += target.offsetLeft;
            offsets.top += target.offsetTop;
            target = target.offsetParent;
        }
        return offsets;
    };
    Position.prototype.getAbsoluteOffset = function (target) {
        var currentNode = target;
        var margins = {
            top: 0,
            left: 0
        };
        // searches for containing elements with additional margins
        while (currentNode.offsetParent) {
            var computed = getComputedStyle(currentNode.offsetParent);
            // find static elements with additional margins
            // since they tend to throw off our positioning
            // (usually this is just the body)
            if (computed.position === "static" &&
                computed.marginLeft &&
                computed.marginTop) {
                if (parseInt(computed.marginTop, 10)) {
                    margins.top += parseInt(computed.marginTop, 10);
                }
                if (parseInt(computed.marginLeft, 10)) {
                    margins.left += parseInt(computed.marginLeft, 10);
                }
            }
            currentNode = currentNode.offsetParent;
        }
        var targetRect = target.getBoundingClientRect();
        var relativeRect = document.body.getBoundingClientRect();
        return {
            top: targetRect.top - relativeRect.top + margins.top,
            left: targetRect.left - relativeRect.left + margins.left
        };
    };
    // finds the position relative to the `reference` element
    Position.prototype.findRelative = function (reference, target, placement) {
        var referenceOffset = this.getRelativeOffset(reference);
        var referenceRect = reference.getBoundingClientRect();
        return this.calculatePosition(referenceOffset, referenceRect, target, placement);
    };
    Position.prototype.findAbsolute = function (reference, target, placement) {
        var referenceOffset = this.getAbsoluteOffset(reference);
        var referenceRect = reference.getBoundingClientRect();
        return this.calculatePosition(referenceOffset, referenceRect, target, placement);
    };
    Position.prototype.findPosition = function (reference, target, placement, offsetFunction) {
        if (offsetFunction === void 0) { offsetFunction = this.getAbsoluteOffset; }
        var referenceOffset = offsetFunction(reference);
        var referenceRect = reference.getBoundingClientRect();
        return this.calculatePosition(referenceOffset, referenceRect, target, placement);
    };
    Position.prototype.findPositionAt = function (offset, target, placement) {
        return this.calculatePosition(offset, { height: 0, width: 0 }, target, placement);
    };
    /**
     * Get the dimensions of an element from an AbsolutePosition and a reference element
     */
    Position.prototype.getPlacementBox = function (target, position) {
        var targetBottom = target.offsetHeight + position.top;
        var targetRight = target.offsetWidth + position.left;
        return {
            top: position.top,
            bottom: targetBottom,
            left: position.left,
            right: targetRight
        };
    };
    Position.prototype.addOffset = function (position, top, left) {
        if (top === void 0) { top = 0; }
        if (left === void 0) { left = 0; }
        return Object.assign({}, position, {
            top: position.top + top,
            left: position.left + left
        });
    };
    Position.prototype.setElement = function (element, position) {
        element.style.top = position.top + "px";
        element.style.left = position.left + "px";
    };
    Position.prototype.findBestPlacement = function (reference, target, placements, containerFunction, positionFunction) {
        var _this = this;
        if (containerFunction === void 0) { containerFunction = this.defaultContainerFunction; }
        if (positionFunction === void 0) { positionFunction = this.findPosition; }
        /**
         * map over the array of placements and weight them based on the percentage of visible area
         * where visible area is defined as the area not obscured by the window borders
         */
        var weightedPlacements = placements.map(function (placement) {
            var pos = positionFunction(reference, target, placement);
            var box = _this.getPlacementBox(target, pos);
            var hiddenHeight = box.bottom - containerFunction().height;
            var hiddenWidth = box.right - containerFunction().width;
            // if the hiddenHeight or hiddenWidth is negative, reset to offsetHeight or offsetWidth
            hiddenHeight = hiddenHeight < 0 ? target.offsetHeight : hiddenHeight;
            hiddenWidth = hiddenWidth < 0 ? target.offsetWidth : hiddenWidth;
            var area = target.offsetHeight * target.offsetWidth;
            var hiddenArea = hiddenHeight * hiddenWidth;
            var visibleArea = area - hiddenArea;
            // if the visibleArea is 0 set it back to area (to calculate the percentage in a useful way)
            visibleArea = visibleArea === 0 ? area : visibleArea;
            var visiblePercent = visibleArea / area;
            return {
                placement: placement,
                weight: visiblePercent
            };
        });
        // sort the placements from best to worst
        weightedPlacements.sort(function (a, b) { return b.weight - a.weight; });
        // pick the best!
        return weightedPlacements[0].placement;
    };
    Position.prototype.findBestPlacementAt = function (offset, target, placements, containerFunction) {
        var _this = this;
        if (containerFunction === void 0) { containerFunction = this.defaultContainerFunction; }
        var positionAt = function (_, target, placement) {
            return _this.findPositionAt(offset, target, placement);
        };
        return this.findBestPlacement(null, target, placements, containerFunction, positionAt);
    };
    Position.prototype.defaultContainerFunction = function () {
        return {
            // we go with window here, because that's going to be the simple/common case
            width: windowRef.innerHeight - windowRef.scrollY,
            height: windowRef.innerWidth - windowRef.scrollX
        };
    };
    Position.prototype.calculatePosition = function (referenceOffset, referenceRect, target, placement) {
        if (this.positions[placement]) {
            return this.positions[placement](referenceOffset, target, referenceRect);
        }
        console.error("No function found for placement, defaulting to 0,0");
        return { left: 0, top: 0 };
    };
    return Position;
}());

var position = new Position();
/* harmony default export */ const utils_position = (Position);
//# sourceMappingURL=../src/index.js.map
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/isValid/index.js

/**
 * @name isValid
 * @category Common Helpers
 * @summary Is the given date valid?
 *
 * @description
 * Returns false if argument is Invalid Date and true otherwise.
 * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
 * Invalid Date is a Date, whose time value is NaN.
 *
 * Time value of Date: http://es5.github.io/#x15.9.1.1
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - Now `isValid` doesn't throw an exception
 *   if the first argument is not an instance of Date.
 *   Instead, argument is converted beforehand using `toDate`.
 *
 *   Examples:
 *
 *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
 *   |---------------------------|---------------|---------------|
 *   | `new Date()`              | `true`        | `true`        |
 *   | `new Date('2016-01-01')`  | `true`        | `true`        |
 *   | `new Date('')`            | `false`       | `false`       |
 *   | `new Date(1488370835081)` | `true`        | `true`        |
 *   | `new Date(NaN)`           | `false`       | `false`       |
 *   | `'2016-01-01'`            | `TypeError`   | `false`       |
 *   | `''`                      | `TypeError`   | `false`       |
 *   | `1488370835081`           | `TypeError`   | `true`        |
 *   | `NaN`                     | `TypeError`   | `false`       |
 *
 *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
 *   that try to coerce arguments to the expected type
 *   (which is also the case with other *date-fns* functions).
 *
 * @param {*} date - the date to check
 * @returns {Boolean} the date is valid
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // For the valid date:
 * var result = isValid(new Date(2014, 1, 31))
 * //=> true
 *
 * @example
 * // For the value, convertable into a date:
 * var result = isValid(1393804800000)
 * //=> true
 *
 * @example
 * // For the invalid date:
 * var result = isValid(new Date(''))
 * //=> false
 */

function isValid(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  return !isNaN(date);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};
function formatDistance(token, count, options) {
  options = options || {};
  var result;

  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function (dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
/* harmony default export */ const _lib_formatLong = (formatLong);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};
function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.

};
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
}

var localize = {
  ordinalNumber: ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
/* harmony default export */ const _lib_localize = (localize);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var matchResult = string.match(args.matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);

    if (!parseResult) {
      return null;
    }

    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var value;

    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
      value = findIndex(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    } else {
      value = findKey(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    }

    value = args.valueCallback ? args.valueCallback(value) : value;
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js


var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
/* harmony default export */ const _lib_match = (match);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/locale/en-US/index.js





/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */

var en_US_locale = {
  code: 'en-US',
  formatDistance: formatDistance,
  formatLong: _lib_formatLong,
  formatRelative: formatRelative,
  localize: _lib_localize,
  match: _lib_match,
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};
/* harmony default export */ const locale_en_US = (en_US_locale);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/subMilliseconds/index.js


/**
 * @name subMilliseconds
 * @category Millisecond Helpers
 * @summary Subtract the specified number of milliseconds from the given date.
 *
 * @description
 * Subtract the specified number of milliseconds from the given date.
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} date - the date to be changed
 * @param {Number} amount - the amount of milliseconds to be subtracted
 * @returns {Date} the new date with the milliseconds subtracted
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
 * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
 * //=> Thu Jul 10 2014 12:45:29.250
 */

function subMilliseconds(dirtyDate, dirtyAmount) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number, targetLength) {
  var sign = number < 0 ? '-' : '';
  var output = Math.abs(number).toString();

  while (output.length < targetLength) {
    output = '0' + output;
  }

  return sign + output;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js

/*
 * |     | Unit                           |     | Unit                           |
 * |-----|--------------------------------|-----|--------------------------------|
 * |  a  | AM, PM                         |  A* |                                |
 * |  d  | Day of month                   |  D  |                                |
 * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
 * |  m  | Minute                         |  M  | Month                          |
 * |  s  | Second                         |  S  | Fraction of second             |
 * |  y  | Year (abs)                     |  Y  |                                |
 *
 * Letters marked by * are not implemented but reserved by Unicode standard.
 */

var formatters = {
  // Year
  y: function (date, token) {
    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
    // |----------|-------|----|-------|-------|-------|
    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
  },
  // Month
  M: function (date, token) {
    var month = date.getUTCMonth();
    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function (date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function (date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return dayPeriodEnumValue.toUpperCase();

      case 'aaaaa':
        return dayPeriodEnumValue[0];

      case 'aaaa':
      default:
        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
    }
  },
  // Hour [1-12]
  h: function (date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function (date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function (date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function (date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function (date, token) {
    var numberOfDigits = token.length;
    var milliseconds = date.getUTCMilliseconds();
    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
};
/* harmony default export */ const lightFormatters = (formatters);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js

var getUTCDayOfYear_MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCDayOfYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var timestamp = date.getTime();
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime();
  var difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / getUTCDayOfYear_MILLISECONDS_IN_DAY) + 1;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var weekStartsOn = 1;
  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var year = date.getUTCFullYear();
  var fourthOfJanuaryOfNextYear = new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
  var fourthOfJanuaryOfThisYear = new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCISOWeekYear(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var year = getUTCISOWeekYear(dirtyDate);
  var fourthOfJanuary = new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4);
  fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js



var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCISOWeek(dirtyDate) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js

 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeek(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  var date = toDate(dirtyDate);
  var day = date.getUTCDay();
  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  date.setUTCDate(date.getUTCDate() - diff);
  date.setUTCHours(0, 0, 0, 0);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate, dirtyOptions);
  var year = date.getUTCFullYear();
  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var firstWeekOfNextYear = new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
  var firstWeekOfThisYear = new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);

  if (date.getTime() >= startOfNextYear.getTime()) {
    return year + 1;
  } else if (date.getTime() >= startOfThisYear.getTime()) {
    return year;
  } else {
    return year - 1;
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js


 // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var options = dirtyOptions || {};
  var locale = options.locale;
  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
  var year = getUTCWeekYear(dirtyDate, dirtyOptions);
  var firstWeek = new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
  firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, dirtyOptions);
  return date;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/getUTCWeek/index.js



var getUTCWeek_MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
// See issue: https://github.com/date-fns/date-fns/issues/376

function getUTCWeek(dirtyDate, options) {
  if (arguments.length < 1) {
    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');
  }

  var date = toDate(dirtyDate);
  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
  // because the number of milliseconds in a week is not constant
  // (e.g. it's different in the week of the daylight saving time clock shift)

  return Math.round(diff / getUTCWeek_MILLISECONDS_IN_WEEK) + 1;
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/format/formatters/index.js







var dayPeriodEnum = {
  am: 'am',
  pm: 'pm',
  midnight: 'midnight',
  noon: 'noon',
  morning: 'morning',
  afternoon: 'afternoon',
  evening: 'evening',
  night: 'night'
  /*
   * |     | Unit                           |     | Unit                           |
   * |-----|--------------------------------|-----|--------------------------------|
   * |  a  | AM, PM                         |  A* | Milliseconds in day            |
   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
   * |  d  | Day of month                   |  D  | Day of year                    |
   * |  e  | Local day of week              |  E  | Day of week                    |
   * |  f  |                                |  F* | Day of week in month           |
   * |  g* | Modified Julian day            |  G  | Era                            |
   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
   * |  i! | ISO day of week                |  I! | ISO week of year               |
   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
   * |  l* | (deprecated)                   |  L  | Stand-alone month              |
   * |  m  | Minute                         |  M  | Month                          |
   * |  n  |                                |  N  |                                |
   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
   * |  p! | Long localized time            |  P! | Long localized date            |
   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
   * |  s  | Second                         |  S  | Fraction of second             |
   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
   * |  u  | Extended year                  |  U* | Cyclic year                    |
   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
   * |  w  | Local week of year             |  W* | Week of month                  |
   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
   *
   * Letters marked by * are not implemented but reserved by Unicode standard.
   *
   * Letters marked by ! are non-standard, but implemented by date-fns:
   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
   *   i.e. 7 for Sunday, 1 for Monday, etc.
   * - `I` is ISO week of year, as opposed to `w` which is local week of year.
   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
   *   `R` is supposed to be used in conjunction with `I` and `i`
   *   for universal ISO week-numbering date, whereas
   *   `Y` is supposed to be used in conjunction with `w` and `e`
   *   for week-numbering date specific to the locale.
   * - `P` is long localized date format
   * - `p` is long localized time format
   */

};
var formatters_formatters = {
  // Era
  G: function (date, token, localize) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;

    switch (token) {
      // AD, BC
      case 'G':
      case 'GG':
      case 'GGG':
        return localize.era(era, {
          width: 'abbreviated'
        });
      // A, B

      case 'GGGGG':
        return localize.era(era, {
          width: 'narrow'
        });
      // Anno Domini, Before Christ

      case 'GGGG':
      default:
        return localize.era(era, {
          width: 'wide'
        });
    }
  },
  // Year
  y: function (date, token, localize) {
    // Ordinal number
    if (token === 'yo') {
      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

      var year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize.ordinalNumber(year, {
        unit: 'year'
      });
    }

    return lightFormatters.y(date, token);
  },
  // Local week-numbering year
  Y: function (date, token, localize, options) {
    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

    if (token === 'YY') {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    } // Ordinal number


    if (token === 'Yo') {
      return localize.ordinalNumber(weekYear, {
        unit: 'year'
      });
    } // Padding


    return addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function (date, token) {
    var isoWeekYear = getUTCISOWeekYear(date); // Padding

    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function (date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'Q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'QQ':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'Qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'QQQ':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'QQQQQ':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'formatting'
        });
      // 1st quarter, 2nd quarter, ...

      case 'QQQQ':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone quarter
  q: function (date, token, localize) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

    switch (token) {
      // 1, 2, 3, 4
      case 'q':
        return String(quarter);
      // 01, 02, 03, 04

      case 'qq':
        return addLeadingZeros(quarter, 2);
      // 1st, 2nd, 3rd, 4th

      case 'qo':
        return localize.ordinalNumber(quarter, {
          unit: 'quarter'
        });
      // Q1, Q2, Q3, Q4

      case 'qqq':
        return localize.quarter(quarter, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)

      case 'qqqqq':
        return localize.quarter(quarter, {
          width: 'narrow',
          context: 'standalone'
        });
      // 1st quarter, 2nd quarter, ...

      case 'qqqq':
      default:
        return localize.quarter(quarter, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Month
  M: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      case 'M':
      case 'MM':
        return lightFormatters.M(date, token);
      // 1st, 2nd, ..., 12th

      case 'Mo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'MMM':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // J, F, ..., D

      case 'MMMMM':
        return localize.month(month, {
          width: 'narrow',
          context: 'formatting'
        });
      // January, February, ..., December

      case 'MMMM':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone month
  L: function (date, token, localize) {
    var month = date.getUTCMonth();

    switch (token) {
      // 1, 2, ..., 12
      case 'L':
        return String(month + 1);
      // 01, 02, ..., 12

      case 'LL':
        return addLeadingZeros(month + 1, 2);
      // 1st, 2nd, ..., 12th

      case 'Lo':
        return localize.ordinalNumber(month + 1, {
          unit: 'month'
        });
      // Jan, Feb, ..., Dec

      case 'LLL':
        return localize.month(month, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // J, F, ..., D

      case 'LLLLL':
        return localize.month(month, {
          width: 'narrow',
          context: 'standalone'
        });
      // January, February, ..., December

      case 'LLLL':
      default:
        return localize.month(month, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // Local week of year
  w: function (date, token, localize, options) {
    var week = getUTCWeek(date, options);

    if (token === 'wo') {
      return localize.ordinalNumber(week, {
        unit: 'week'
      });
    }

    return addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function (date, token, localize) {
    var isoWeek = getUTCISOWeek(date);

    if (token === 'Io') {
      return localize.ordinalNumber(isoWeek, {
        unit: 'week'
      });
    }

    return addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function (date, token, localize) {
    if (token === 'do') {
      return localize.ordinalNumber(date.getUTCDate(), {
        unit: 'date'
      });
    }

    return lightFormatters.d(date, token);
  },
  // Day of year
  D: function (date, token, localize) {
    var dayOfYear = getUTCDayOfYear(date);

    if (token === 'Do') {
      return localize.ordinalNumber(dayOfYear, {
        unit: 'dayOfYear'
      });
    }

    return addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();

    switch (token) {
      // Tue
      case 'E':
      case 'EE':
      case 'EEE':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'EEEEE':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'EEEEEE':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'EEEE':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Local day of week
  e: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case 'e':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'ee':
        return addLeadingZeros(localDayOfWeek, 2);
      // 1st, 2nd, ..., 7th

      case 'eo':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'eee':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'eeeee':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'eeeeee':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'eeee':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Stand-alone local day of week
  c: function (date, token, localize, options) {
    var dayOfWeek = date.getUTCDay();
    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

    switch (token) {
      // Numerical value (same as in `e`)
      case 'c':
        return String(localDayOfWeek);
      // Padded numerical value

      case 'cc':
        return addLeadingZeros(localDayOfWeek, token.length);
      // 1st, 2nd, ..., 7th

      case 'co':
        return localize.ordinalNumber(localDayOfWeek, {
          unit: 'day'
        });

      case 'ccc':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'standalone'
        });
      // T

      case 'ccccc':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'standalone'
        });
      // Tu

      case 'cccccc':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'standalone'
        });
      // Tuesday

      case 'cccc':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'standalone'
        });
    }
  },
  // ISO day of week
  i: function (date, token, localize) {
    var dayOfWeek = date.getUTCDay();
    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

    switch (token) {
      // 2
      case 'i':
        return String(isoDayOfWeek);
      // 02

      case 'ii':
        return addLeadingZeros(isoDayOfWeek, token.length);
      // 2nd

      case 'io':
        return localize.ordinalNumber(isoDayOfWeek, {
          unit: 'day'
        });
      // Tue

      case 'iii':
        return localize.day(dayOfWeek, {
          width: 'abbreviated',
          context: 'formatting'
        });
      // T

      case 'iiiii':
        return localize.day(dayOfWeek, {
          width: 'narrow',
          context: 'formatting'
        });
      // Tu

      case 'iiiiii':
        return localize.day(dayOfWeek, {
          width: 'short',
          context: 'formatting'
        });
      // Tuesday

      case 'iiii':
      default:
        return localize.day(dayOfWeek, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM or PM
  a: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

    switch (token) {
      case 'a':
      case 'aa':
      case 'aaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'aaaaa':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'aaaa':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // AM, PM, midnight, noon
  b: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours === 12) {
      dayPeriodEnumValue = dayPeriodEnum.noon;
    } else if (hours === 0) {
      dayPeriodEnumValue = dayPeriodEnum.midnight;
    } else {
      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
    }

    switch (token) {
      case 'b':
      case 'bb':
      case 'bbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'bbbbb':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'bbbb':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function (date, token, localize) {
    var hours = date.getUTCHours();
    var dayPeriodEnumValue;

    if (hours >= 17) {
      dayPeriodEnumValue = dayPeriodEnum.evening;
    } else if (hours >= 12) {
      dayPeriodEnumValue = dayPeriodEnum.afternoon;
    } else if (hours >= 4) {
      dayPeriodEnumValue = dayPeriodEnum.morning;
    } else {
      dayPeriodEnumValue = dayPeriodEnum.night;
    }

    switch (token) {
      case 'B':
      case 'BB':
      case 'BBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'abbreviated',
          context: 'formatting'
        });

      case 'BBBBB':
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'narrow',
          context: 'formatting'
        });

      case 'BBBB':
      default:
        return localize.dayPeriod(dayPeriodEnumValue, {
          width: 'wide',
          context: 'formatting'
        });
    }
  },
  // Hour [1-12]
  h: function (date, token, localize) {
    if (token === 'ho') {
      var hours = date.getUTCHours() % 12;
      if (hours === 0) hours = 12;
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return lightFormatters.h(date, token);
  },
  // Hour [0-23]
  H: function (date, token, localize) {
    if (token === 'Ho') {
      return localize.ordinalNumber(date.getUTCHours(), {
        unit: 'hour'
      });
    }

    return lightFormatters.H(date, token);
  },
  // Hour [0-11]
  K: function (date, token, localize) {
    var hours = date.getUTCHours() % 12;

    if (token === 'Ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function (date, token, localize) {
    var hours = date.getUTCHours();
    if (hours === 0) hours = 24;

    if (token === 'ko') {
      return localize.ordinalNumber(hours, {
        unit: 'hour'
      });
    }

    return addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function (date, token, localize) {
    if (token === 'mo') {
      return localize.ordinalNumber(date.getUTCMinutes(), {
        unit: 'minute'
      });
    }

    return lightFormatters.m(date, token);
  },
  // Second
  s: function (date, token, localize) {
    if (token === 'so') {
      return localize.ordinalNumber(date.getUTCSeconds(), {
        unit: 'second'
      });
    }

    return lightFormatters.s(date, token);
  },
  // Fraction of second
  S: function (date, token) {
    return lightFormatters.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    if (timezoneOffset === 0) {
      return 'Z';
    }

    switch (token) {
      // Hours and optional minutes
      case 'X':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`

      case 'XXXX':
      case 'XX':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`

      case 'XXXXX':
      case 'XXX': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Hours and optional minutes
      case 'x':
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`

      case 'xxxx':
      case 'xx':
        // Hours and minutes without `:` delimiter
        return formatTimezone(timezoneOffset);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`

      case 'xxxxx':
      case 'xxx': // Hours and minutes with `:` delimiter

      default:
        return formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (GMT)
  O: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'O':
      case 'OO':
      case 'OOO':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'OOOO':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Timezone (specific non-location)
  z: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timezoneOffset = originalDate.getTimezoneOffset();

    switch (token) {
      // Short
      case 'z':
      case 'zz':
      case 'zzz':
        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
      // Long

      case 'zzzz':
      default:
        return 'GMT' + formatTimezone(timezoneOffset, ':');
    }
  },
  // Seconds timestamp
  t: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = Math.floor(originalDate.getTime() / 1000);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function (date, token, _localize, options) {
    var originalDate = options._originalDate || date;
    var timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};

function formatTimezoneShort(offset, dirtyDelimiter) {
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = Math.floor(absOffset / 60);
  var minutes = absOffset % 60;

  if (minutes === 0) {
    return sign + String(hours);
  }

  var delimiter = dirtyDelimiter || '';
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}

function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
  if (offset % 60 === 0) {
    var sign = offset > 0 ? '-' : '+';
    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
  }

  return formatTimezone(offset, dirtyDelimiter);
}

function formatTimezone(offset, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || '';
  var sign = offset > 0 ? '-' : '+';
  var absOffset = Math.abs(offset);
  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
  var minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}

/* harmony default export */ const format_formatters = (formatters_formatters);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/format/longFormatters/index.js
function dateLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'P':
      return formatLong.date({
        width: 'short'
      });

    case 'PP':
      return formatLong.date({
        width: 'medium'
      });

    case 'PPP':
      return formatLong.date({
        width: 'long'
      });

    case 'PPPP':
    default:
      return formatLong.date({
        width: 'full'
      });
  }
}

function timeLongFormatter(pattern, formatLong) {
  switch (pattern) {
    case 'p':
      return formatLong.time({
        width: 'short'
      });

    case 'pp':
      return formatLong.time({
        width: 'medium'
      });

    case 'ppp':
      return formatLong.time({
        width: 'long'
      });

    case 'pppp':
    default:
      return formatLong.time({
        width: 'full'
      });
  }
}

function dateTimeLongFormatter(pattern, formatLong) {
  var matchResult = pattern.match(/(P+)(p+)?/);
  var datePattern = matchResult[1];
  var timePattern = matchResult[2];

  if (!timePattern) {
    return dateLongFormatter(pattern, formatLong);
  }

  var dateTimeFormat;

  switch (datePattern) {
    case 'P':
      dateTimeFormat = formatLong.dateTime({
        width: 'short'
      });
      break;

    case 'PP':
      dateTimeFormat = formatLong.dateTime({
        width: 'medium'
      });
      break;

    case 'PPP':
      dateTimeFormat = formatLong.dateTime({
        width: 'long'
      });
      break;

    case 'PPPP':
    default:
      dateTimeFormat = formatLong.dateTime({
        width: 'full'
      });
      break;
  }

  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
}

var longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
};
/* harmony default export */ const format_longFormatters = (longFormatters);
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ['D', 'DD'];
var protectedWeekYearTokens = ['YY', 'YYYY'];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token) {
  if (token === 'YYYY') {
    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');
  } else if (token === 'YY') {
    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');
  } else if (token === 'D') {
    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');
  } else if (token === 'DD') {
    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');
  }
}
;// CONCATENATED MODULE: ../../node_modules/date-fns/esm/format/index.js








 // This RegExp consists of three parts separated by `|`:
// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
//   (one of the certain letters followed by `o`)
// - (\w)\1* matches any sequences of the same letter
// - '' matches two quote characters in a row
// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
//   except a single quote symbol, which ends the sequence.
//   Two quote characters do not end the sequence.
//   If there is no matching single quote
//   then the sequence will continue until the end of the string.
// - . matches any single character unmatched by previous parts of the RegExps

var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
var escapedStringRegExp = /^'([^]*?)'?$/;
var doubleQuoteRegExp = /''/g;
var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
/**
 * @name format
 * @category Common Helpers
 * @summary Format the date.
 *
 * @description
 * Return the formatted date string in the given format. The result may vary by locale.
 *
 * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
 * > See: https://git.io/fxCyr
 *
 * The characters wrapped between two single quotes characters (') are escaped.
 * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
 * (see the last example)
 *
 * Format of the string is based on Unicode Technical Standard #35:
 * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
 * with a few additions (see note 7 below the table).
 *
 * Accepted patterns:
 * | Unit                            | Pattern | Result examples                   | Notes |
 * |---------------------------------|---------|-----------------------------------|-------|
 * | Era                             | G..GGG  | AD, BC                            |       |
 * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
 * |                                 | GGGGG   | A, B                              |       |
 * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
 * |                                 | yy      | 44, 01, 00, 17                    | 5     |
 * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
 * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
 * |                                 | yyyyy   | ...                               | 3,5   |
 * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
 * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
 * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
 * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
 * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
 * |                                 | YYYYY   | ...                               | 3,5   |
 * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
 * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
 * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
 * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
 * |                                 | RRRRR   | ...                               | 3,5,7 |
 * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
 * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
 * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
 * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
 * |                                 | uuuuu   | ...                               | 3,5   |
 * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
 * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | QQ      | 01, 02, 03, 04                    |       |
 * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
 * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
 * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
 * |                                 | qq      | 01, 02, 03, 04                    |       |
 * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
 * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
 * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
 * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
 * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | MM      | 01, 02, ..., 12                   |       |
 * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
 * |                                 | MMMM    | January, February, ..., December  | 2     |
 * |                                 | MMMMM   | J, F, ..., D                      |       |
 * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
 * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
 * |                                 | LL      | 01, 02, ..., 12                   |       |
 * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
 * |                                 | LLLL    | January, February, ..., December  | 2     |
 * |                                 | LLLLL   | J, F, ..., D                      |       |
 * | Local week of year              | w       | 1, 2, ..., 53                     |       |
 * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | ww      | 01, 02, ..., 53                   |       |
 * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
 * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
 * |                                 | II      | 01, 02, ..., 53                   | 7     |
 * | Day of month                    | d       | 1, 2, ..., 31                     |       |
 * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
 * |                                 | dd      | 01, 02, ..., 31                   |       |
 * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
 * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
 * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
 * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
 * |                                 | DDDD    | ...                               | 3     |
 * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
 * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
 * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
 * |                                 | ii      | 01, 02, ..., 07                   | 7     |
 * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |
 * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
 * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
 * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
 * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
 * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | ee      | 02, 03, ..., 01                   |       |
 * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
 * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
 * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
 * |                                 | cc      | 02, 03, ..., 01                   |       |
 * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |
 * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
 * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
 * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
 * | AM, PM                          | a..aaa  | AM, PM                            |       |
 * |                                 | aaaa    | a.m., p.m.                        | 2     |
 * |                                 | aaaaa   | a, p                              |       |
 * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |
 * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
 * |                                 | bbbbb   | a, p, n, mi                       |       |
 * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
 * |                                 | BBBB    | at night, in the morning, ...     | 2     |
 * |                                 | BBBBB   | at night, in the morning, ...     |       |
 * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
 * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
 * |                                 | hh      | 01, 02, ..., 11, 12               |       |
 * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
 * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
 * |                                 | HH      | 00, 01, 02, ..., 23               |       |
 * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
 * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
 * |                                 | KK      | 1, 2, ..., 11, 0                  |       |
 * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
 * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
 * |                                 | kk      | 24, 01, 02, ..., 23               |       |
 * | Minute                          | m       | 0, 1, ..., 59                     |       |
 * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | mm      | 00, 01, ..., 59                   |       |
 * | Second                          | s       | 0, 1, ..., 59                     |       |
 * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
 * |                                 | ss      | 00, 01, ..., 59                   |       |
 * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
 * |                                 | SS      | 00, 01, ..., 99                   |       |
 * |                                 | SSS     | 000, 0001, ..., 999               |       |
 * |                                 | SSSS    | ...                               | 3     |
 * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
 * |                                 | XX      | -0800, +0530, Z                   |       |
 * |                                 | XXX     | -08:00, +05:30, Z                 |       |
 * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
 * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
 * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
 * |                                 | xx      | -0800, +0530, +0000               |       |
 * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
 * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
 * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
 * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
 * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
 * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
 * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
 * | Seconds timestamp               | t       | 512969520                         | 7     |
 * |                                 | tt      | ...                               | 3,7   |
 * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
 * |                                 | TT      | ...                               | 3,7   |
 * | Long localized date             | P       | 05/29/1453                        | 7     |
 * |                                 | PP      | May 29, 1453                      | 7     |
 * |                                 | PPP     | May 29th, 1453                    | 7     |
 * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |
 * | Long localized time             | p       | 12:00 AM                          | 7     |
 * |                                 | pp      | 12:00:00 AM                       | 7     |
 * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
 * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
 * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |
 * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |
 * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |
 * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |
 * Notes:
 * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
 *    are the same as "stand-alone" units, but are different in some languages.
 *    "Formatting" units are declined according to the rules of the language
 *    in the context of a date. "Stand-alone" units are always nominative singular:
 *
 *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
 *
 *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
 *
 * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
 *    the single quote characters (see below).
 *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
 *    the output will be the same as default pattern for this unit, usually
 *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
 *    are marked with "2" in the last column of the table.
 *
 *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
 *
 *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
 *
 * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
 *    The output will be padded with zeros to match the length of the pattern.
 *
 *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
 *
 * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
 *    These tokens represent the shortest form of the quarter.
 *
 * 5. The main difference between `y` and `u` patterns are B.C. years:
 *
 *    | Year | `y` | `u` |
 *    |------|-----|-----|
 *    | AC 1 |   1 |   1 |
 *    | BC 1 |   1 |   0 |
 *    | BC 2 |   2 |  -1 |
 *
 *    Also `yy` always returns the last two digits of a year,
 *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
 *
 *    | Year | `yy` | `uu` |
 *    |------|------|------|
 *    | 1    |   01 |   01 |
 *    | 14   |   14 |   14 |
 *    | 376  |   76 |  376 |
 *    | 1453 |   53 | 1453 |
 *
 *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
 *    except local week-numbering years are dependent on `options.weekStartsOn`
 *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
 *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
 *
 * 6. Specific non-location timezones are currently unavailable in `date-fns`,
 *    so right now these tokens fall back to GMT timezones.
 *
 * 7. These patterns are not in the Unicode Technical Standard #35:
 *    - `i`: ISO day of week
 *    - `I`: ISO week of year
 *    - `R`: ISO week-numbering year
 *    - `t`: seconds timestamp
 *    - `T`: milliseconds timestamp
 *    - `o`: ordinal number modifier
 *    - `P`: long localized date
 *    - `p`: long localized time
 *
 * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
 *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
 *
 * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
 *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * - The second argument is now required for the sake of explicitness.
 *
 *   ```javascript
 *   // Before v2.0.0
 *   format(new Date(2016, 0, 1))
 *
 *   // v2.0.0 onward
 *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
 *   ```
 *
 * - New format string API for `format` function
 *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
 *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
 *
 * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
 *
 * @param {Date|Number} date - the original date
 * @param {String} format - the string of tokens
 * @param {Object} [options] - an object with options.
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
 * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
 * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
 *   see: https://git.io/fxCyr
 * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
 *   see: https://git.io/fxCyr
 * @returns {String} the formatted date string
 * @throws {TypeError} 2 arguments required
 * @throws {RangeError} `date` must not be Invalid Date
 * @throws {RangeError} `options.locale` must contain `localize` property
 * @throws {RangeError} `options.locale` must contain `formatLong` property
 * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
 * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
 * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
 * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
 * @throws {RangeError} format string contains an unescaped latin alphabet character
 *
 * @example
 * // Represent 11 February 2014 in middle-endian format:
 * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
 * //=> '02/11/2014'
 *
 * @example
 * // Represent 2 July 2014 in Esperanto:
 * import { eoLocale } from 'date-fns/locale/eo'
 * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
 *   locale: eoLocale
 * })
 * //=> '2-a de julio 2014'
 *
 * @example
 * // Escape string by single quote characters:
 * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
 * //=> "3 o'clock"
 */

function format_format(dirtyDate, dirtyFormatStr, dirtyOptions) {
  if (arguments.length < 2) {
    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');
  }

  var formatStr = String(dirtyFormatStr);
  var options = dirtyOptions || {};
  var locale = options.locale || locale_en_US;
  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
  }

  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
  }

  if (!locale.localize) {
    throw new RangeError('locale must contain localize property');
  }

  if (!locale.formatLong) {
    throw new RangeError('locale must contain formatLong property');
  }

  var originalDate = toDate(dirtyDate);

  if (!isValid(originalDate)) {
    throw new RangeError('Invalid time value');
  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
  // This ensures that when UTC functions will be implemented, locales will be compatible with them.
  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
  var utcDate = subMilliseconds(originalDate, timezoneOffset);
  var formatterOptions = {
    firstWeekContainsDate: firstWeekContainsDate,
    weekStartsOn: weekStartsOn,
    locale: locale,
    _originalDate: originalDate
  };
  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
    var firstCharacter = substring[0];

    if (firstCharacter === 'p' || firstCharacter === 'P') {
      var longFormatter = format_longFormatters[firstCharacter];
      return longFormatter(substring, locale.formatLong, formatterOptions);
    }

    return substring;
  }).join('').match(formattingTokensRegExp).map(function (substring) {
    // Replace two single quote characters with one single quote character
    if (substring === "''") {
      return "'";
    }

    var firstCharacter = substring[0];

    if (firstCharacter === "'") {
      return cleanEscapedString(substring);
    }

    var formatter = format_formatters[firstCharacter];

    if (formatter) {
      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
        throwProtectedError(substring);
      }

      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
        throwProtectedError(substring);
      }

      return formatter(utcDate, substring, locale.localize, formatterOptions);
    }

    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
    }

    return substring;
  }).join('');
  return result;
}

function cleanEscapedString(input) {
  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
}
;// CONCATENATED MODULE: ../../node_modules/d3-array/src/min.js
function min_min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/time-series.js


// D3 Imports

var TIME_INTERVALS = [
    ['15seconds', 15 * 1000],
    ['minute', 60 * 1000],
    ['30minutes', 30 * 60 * 1000],
    ['hourly', 60 * 60 * 1000],
    ['daily', 24 * 60 * 60 * 1000],
    ['monthly', 30 * 24 * 60 * 60 * 1000],
    ['quarterly', 3 * 30 * 24 * 60 * 60 * 1000],
    ['yearly', 12 * 30 * 24 * 60 * 60 * 1000],
];
// Return true if the tick is a primary tick, false otherwise
function isTickPrimary(tick, i, allTicks, interval, showDayName) {
    var isFirstTick = i === 0;
    var hasANewWeekStarted = Number(format_format(new Date(tick), 'c')) === 2;
    var isFirstQuarter = Number(format_format(new Date(tick), 'q')) === 1;
    var previousTick = i !== 0 ? allTicks[i - 1] : null;
    switch (interval) {
        case '15seconds':
            return (isFirstTick ||
                isDayOfMonthChanged(tick) ||
                isMonthChanged(tick, previousTick) ||
                isYearChanged(tick));
        case 'minute':
            return (isFirstTick ||
                isDayOfMonthChanged(tick) ||
                isMonthChanged(tick, previousTick) ||
                isYearChanged(tick));
        case '30minutes':
            return (isFirstTick ||
                isDayOfMonthChanged(tick) ||
                isMonthChanged(tick, previousTick) ||
                isYearChanged(tick));
        case 'hourly':
            return (isFirstTick ||
                isDayOfMonthChanged(tick) ||
                isMonthChanged(tick, previousTick) ||
                isYearChanged(tick));
        case 'daily':
            if (!showDayName) {
                // daily
                return (isFirstTick ||
                    isMonthChanged(tick, previousTick) ||
                    isYearChanged(tick));
            }
            else {
                // weekly
                return isFirstTick || hasANewWeekStarted || isYearChanged(tick);
            }
        case 'monthly':
            return isFirstTick || isYearChanged(tick);
        case 'quarterly':
            return isFirstTick || isFirstQuarter;
        case 'yearly':
            return false;
        default:
            throw new Error(interval + " is not a valid time interval.");
    }
}
// Return the formatted current tick
function formatTick(tick, i, allTicks, interval, timeScaleOptions) {
    var showDayName = timeScaleOptions.showDayName;
    var intervalConsideringAlsoShowDayNameOption = interval === 'daily' && showDayName ? 'weekly' : interval;
    var date = new Date(tick);
    var formats = Tools.getProperty(timeScaleOptions, 'timeIntervalFormats')[intervalConsideringAlsoShowDayNameOption];
    var primary = Tools.getProperty(formats, 'primary');
    var secondary = Tools.getProperty(formats, 'secondary');
    var formatString = isTickPrimary(tick, i, allTicks, interval, showDayName)
        ? primary
        : secondary;
    var locale = timeScaleOptions.localeObject;
    return format_format(date, formatString, { locale: locale });
}
// Given a timestamp, return an object of useful time formats
// Use Unicode date field symbol (https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table)
function getTimeformats(timestamp) {
    var date = new Date(timestamp);
    return {
        M: date.getMonth() + 1,
        d: date.getDate(),
        H: date.getHours(),
        m: date.getMinutes(),
        s: date.getSeconds(),
    };
}
// Find the differences between consecutive numbers in an array
function getConsecutiveDifferences(elements) {
    if (!elements) {
        return;
    }
    return elements.slice(1).map(function (elem, i) { return elem - elements[i]; });
}
// Given a duration in ms, return the closest TIME_INTERVAL name
function closestTimeIntervalName(duration) {
    var index = TIME_INTERVALS.reduce(function (nearestIndex, _a, i) {
        var intervalName = _a[0], delta = _a[1];
        var deltaNearest = TIME_INTERVALS[nearestIndex][1];
        var oldNearestSpan = Math.abs(deltaNearest - duration);
        var currentSpan = Math.abs(delta - duration);
        return oldNearestSpan < currentSpan ? nearestIndex : i;
    }, 0);
    return TIME_INTERVALS[index][0];
}
// Given an array of timestamps, return the interval name
// between 15seconds, minute, 30minutes, hourly, daily, weekly, monthly, quarterly, yearly
function computeTimeIntervalName(ticks) {
    // special case: if the dataset has only one datum, we show the tick in the most detailed way possible
    if (ticks.length === 1) {
        return '15seconds';
    }
    var differences = getConsecutiveDifferences(ticks);
    var minDifference = min_min(differences);
    return closestTimeIntervalName(minDifference);
}
// Return true if the day of the month (D = 1-31) is changed, false otherwise
function isDayOfMonthChanged(timestamp) {
    var _a = getTimeformats(timestamp), s = _a.s, m = _a.m, H = _a.H;
    return H === 0 && m === 0 && s === 0;
}
// Return true if the month (M = 1-12) is changed from previous tick's timestamp, false otherwise
function isMonthChanged(timestamp, previousTimestamp) {
    var currentMonth = getTimeformats(timestamp).M;
    var previousMonth = getTimeformats(previousTimestamp).M;
    return currentMonth !== previousMonth;
}
// Return true if the year (YYYY) is changed, false otherwise
function isYearChanged(timestamp) {
    var _a = getTimeformats(timestamp), M = _a.M, d = _a.d, s = _a.s, m = _a.m, H = _a.H;
    return M === 1 && d === 1 && H === 0 && m === 0 && s === 0;
}
//# sourceMappingURL=../../src/services/time-series.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/threshold.js
var threshold_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




// D3 Imports
// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function

// Carbon position service

// import the settings for the css prefix


var Threshold = /** @class */ (function (_super) {
    threshold_extends(Threshold, _super);
    function Threshold(model, services) {
        var _this = _super.call(this, model, services) || this;
        _this.type = 'threshold';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.positionService = new utils_position();
        return _this;
    }
    Threshold.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = false; }
        var axesOptions = Tools.getProperty(this.getOptions(), 'axes');
        var thresholdData = [];
        Object.keys(axesOptions).forEach(function (axisPosition) {
            var _a, _b;
            if (Object.values(interfaces.AxisPositions).includes(axisPosition)) {
                var axisOptions = axesOptions[axisPosition];
                if (axisOptions.thresholds &&
                    axisOptions.thresholds.length > 0) {
                    thresholdData.push({
                        axisPosition: axisPosition,
                        thresholds: axisOptions.thresholds,
                        correspondingDatasets: (_a = axisOptions) === null || _a === void 0 ? void 0 : _a.correspondingDatasets,
                        mapsTo: (_b = axisOptions) === null || _b === void 0 ? void 0 : _b.mapsTo,
                    });
                }
            }
        });
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        // Update data on all axis threshold groups
        var thresholdAxisGroups = svg
            .selectAll('g.axis-thresholds')
            .data(thresholdData, function (thresholdData) { return thresholdData.axisPosition; });
        // Remove axis threshold groups that are no longer needed
        thresholdAxisGroups.exit().attr('opacity', 0).remove();
        // Add the axis threshold groups that need to be introduced
        var thresholdAxisGroupsEnter = thresholdAxisGroups
            .enter()
            .append('g');
        var thresholdAxisGroupsMerge = thresholdAxisGroupsEnter.merge(thresholdAxisGroups);
        thresholdAxisGroupsMerge.attr('class', function (d) { return "axis-thresholds " + d.axisPosition; });
        var thresholdGroups = thresholdAxisGroupsMerge
            .selectAll('g.threshold-group')
            .data(function (d) {
            return d.thresholds.map(function (threshold) {
                // Merge relevant keys into the threshold object
                threshold.axisPosition = d.axisPosition;
                threshold.datum = _this.constructDatumObj(d, threshold);
                return threshold;
            });
        });
        // Remove threshold groups that are no longer needed
        thresholdGroups.exit().attr('opacity', 0).remove();
        // Add the threshold groups that need to be introduced
        var thresholdGroupsEnter = thresholdGroups.enter().append('g');
        thresholdGroupsEnter.append('line').attr('class', 'threshold-line');
        thresholdGroupsEnter
            .append('rect')
            .attr('class', 'threshold-hoverable-area');
        var thresholdGroupsMerge = thresholdGroupsEnter.merge(thresholdGroups);
        thresholdGroupsMerge.attr('class', 'threshold-group');
        var self = this;
        thresholdAxisGroupsMerge.each(function (_a) {
            var axisPosition = _a.axisPosition;
            var scale = self.services.cartesianScales.getScaleByPosition(axisPosition);
            var scaleType = self.services.cartesianScales.getScaleTypeByPosition(axisPosition);
            var xScale = null;
            var yScale = null;
            // Depending on type of axis position, assign scale and main perpendicular axis
            if (axisPosition === interfaces.AxisPositions.LEFT ||
                axisPosition === interfaces.AxisPositions.RIGHT) {
                yScale = scale;
                xScale = self.services.cartesianScales.getMainXScale();
            }
            else {
                xScale = scale;
                yScale = self.services.cartesianScales.getMainYScale();
            }
            var isScaleTypeLabels = scaleType === interfaces.ScaleTypes.LABELS;
            var _b = xScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
            var _c = yScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
            var cartesianScales = self.services.cartesianScales;
            var orientation = cartesianScales.getOrientation();
            var getDomainValue = function (d) { return cartesianScales.getDomainValue(d); };
            var getRangeValue = function (d) { return cartesianScales.getRangeValue(d); };
            var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];
            var group = src_select(this);
            if (axisPosition === interfaces.AxisPositions.TOP ||
                axisPosition === interfaces.AxisPositions.BOTTOM) {
                group
                    .selectAll('line.threshold-line')
                    .transition()
                    .call(function (t) {
                    return self.services.transitions.setupTransition({
                        transition: t,
                        name: 'threshold-line-update',
                        animate: animate,
                    });
                })
                    .attr('y1', yScaleStart)
                    .attr('y2', yScaleEnd)
                    .attr('x1', function (_a) {
                    var datum = _a.datum;
                    return getXValue(datum) +
                        (isScaleTypeLabels ? scale.step() / 2 : 0);
                })
                    .attr('x2', function (_a) {
                    var datum = _a.datum;
                    return getXValue(datum) +
                        (isScaleTypeLabels ? scale.step() / 2 : 0);
                })
                    .style('stroke', function (_a) {
                    var fillColor = _a.fillColor;
                    return fillColor;
                });
                // Set hoverable area width and rotate it
                group
                    .selectAll('rect.threshold-hoverable-area')
                    .attr('x', 0)
                    .attr('y', function (_a) {
                    var datum = _a.datum;
                    return -getXValue(datum);
                })
                    .attr('width', Math.abs(yScaleEnd - yScaleStart))
                    .classed('rotate', true);
            }
            else {
                group
                    .selectAll('line.threshold-line')
                    .transition()
                    .call(function (t) {
                    return self.services.transitions.setupTransition({
                        transition: t,
                        name: 'threshold-line-update',
                        animate: animate,
                    });
                })
                    .attr('x1', xScaleStart)
                    .attr('x2', xScaleEnd)
                    .attr('y1', function (_a) {
                    var datum = _a.datum;
                    return getYValue(datum) +
                        (isScaleTypeLabels ? scale.step() / 2 : 0);
                })
                    .attr('y2', function (_a) {
                    var datum = _a.datum;
                    return getYValue(datum) +
                        (isScaleTypeLabels ? scale.step() / 2 : 0);
                })
                    .style('stroke', function (_a) {
                    var fillColor = _a.fillColor;
                    return fillColor;
                });
                // Set hoverable area width
                group
                    .selectAll('rect.threshold-hoverable-area')
                    .attr('x', xScaleStart)
                    .attr('y', function (_a) {
                    var datum = _a.datum;
                    return getYValue(datum);
                })
                    .attr('width', Math.abs(xScaleEnd - xScaleStart))
                    .classed('rotate', false);
            }
        });
        // Add event listener for showing the threshold tooltip
        this.services.events.addEventListener(interfaces.Events.Threshold.SHOW, function (e) {
            _this.setThresholdLabelPosition(e.detail);
            _this.label.classed('hidden', false);
        });
        // Add event listener for hiding the threshold tooltip
        this.services.events.addEventListener(interfaces.Events.Threshold.HIDE, function (e) {
            _this.label.classed('hidden', true);
        });
        this.appendThresholdLabel();
        this.addEventListeners();
    };
    Threshold.prototype.getFormattedValue = function (datum) {
        var value = datum.value, axisPosition = datum.axisPosition;
        var options = this.getOptions();
        var scaleType = this.services.cartesianScales.getScaleTypeByPosition(axisPosition);
        // If scale is time, format the threshold date as the ticks format
        if (scaleType === interfaces.ScaleTypes.TIME) {
            var isVertical = [
                interfaces.AxisPositions.LEFT,
                interfaces.AxisPositions.RIGHT,
            ].includes(axisPosition);
            var mainXScale = this.services.cartesianScales.getMainXScale();
            var mainYScale = this.services.cartesianScales.getMainYScale();
            var scale = isVertical ? mainYScale : mainXScale;
            var timeScaleOptions = Tools.getProperty(options, 'timeScale');
            var timeInterval = computeTimeIntervalName(scale.ticks());
            return formatTick(value, 0, scale.ticks(), timeInterval, timeScaleOptions);
        }
        return value.toLocaleString('en');
    };
    Threshold.prototype.appendThresholdLabel = function () {
        var holder = src_select(this.services.domUtils.getHolder());
        var chartprefix = Tools.getProperty(this.getOptions(), 'style', 'prefix');
        this.label = DOMUtils.appendOrSelect(holder, "div." + js_settings.prefix + "--" + chartprefix + "--threshold--label").classed('hidden', true);
    };
    Threshold.prototype.setThresholdLabelPosition = function (_a) {
        var event = _a.event, datum = _a.datum;
        var holder = this.services.domUtils.getHolder();
        var mouseRelativePos = pointer(event, holder);
        // Format the threshold value using valueFormatter if defined in user-provided options
        var formattedValue = datum.valueFormatter
            ? datum.valueFormatter(datum.value)
            : this.getFormattedValue(datum);
        this.label
            .html((datum.label || 'Threshold') + ": " + formattedValue)
            .style('background-color', datum.fillColor);
        var target = this.label.node();
        // Find out whether threshold label should be shown on the left or right side
        var bestPlacementOption = this.positionService.findBestPlacementAt({
            left: mouseRelativePos[0],
            top: mouseRelativePos[1],
        }, target, [
            PLACEMENTS.RIGHT,
            PLACEMENTS.LEFT,
            PLACEMENTS.TOP,
            PLACEMENTS.BOTTOM,
        ], function () { return ({
            width: holder.offsetWidth,
            height: holder.offsetHeight,
        }); });
        // Get coordinates to where label should be positioned
        var pos = this.positionService.findPositionAt({
            left: mouseRelativePos[0],
            top: mouseRelativePos[1],
        }, target, bestPlacementOption);
        this.positionService.setElement(target, pos);
    };
    // Constructs object to pass in scale functions
    Threshold.prototype.constructDatumObj = function (d, element) {
        var datum = {};
        // We only need to specify group only if correpsonding dataset is defined
        if (d.correspondingDatasets) {
            datum['group'] = Tools.getProperty(d, 'correspondingDatasets', 0);
        }
        // Add attribute with the mapsTo value as key
        datum[d['mapsTo']] = element.value;
        return datum;
    };
    Threshold.prototype.addEventListeners = function () {
        var self = this;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        // Add events to the threshold hoverable area
        svg.selectAll('rect.threshold-hoverable-area')
            .on('mouseover mousemove', function (event) {
            src_select(this.parentNode)
                .select('line.threshold-line')
                .classed('active', true);
            self.services.events.dispatchEvent(interfaces.Events.Threshold.SHOW, {
                event: event,
                hoveredElement: src_select(this),
                datum: src_select(this).datum(),
            });
        })
            .on('mouseout', function (event) {
            src_select(this.parentNode)
                .select('line.threshold-line')
                .classed('active', false);
            self.services.events.dispatchEvent(interfaces.Events.Threshold.HIDE, {
                event: event,
                hoveredElement: src_select(this),
                datum: src_select(this).datum(),
            });
        });
    };
    return Threshold;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/threshold.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/title.js
var title_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




var Title = /** @class */ (function (_super) {
    title_extends(Title, _super);
    function Title() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'title';
        _this.renderType = interfaces.RenderTypes.HTML;
        return _this;
    }
    Title.prototype.render = function () {
        var svg = this.getComponentContainer();
        var title = Tools.getProperty(this.getOptions(), 'title');
        var text = svg.selectAll('p.title').data([title]);
        text.enter()
            .append('p')
            .classed('title', true)
            .attr('role', 'heading')
            .attr('aria-level', 2)
            .merge(text)
            .html(function (d) { return d; });
        // check if title needs truncation (and tooltip support)
        if (text.node() && text.node().offsetWidth < text.node().scrollWidth) {
            // add events for displaying the tooltip with the title
            var self_1 = this;
            text.on('mouseover', function (event) {
                self_1.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: text,
                    content: text.text(),
                });
            })
                .on('mousemove', function (event) {
                self_1.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                    event: event,
                });
            })
                .on('mouseout', function () {
                self_1.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
            });
        }
        text.exit().remove();
    };
    /**
     * Truncates title creating ellipses and attaching tooltip for exposing full title.
     */
    Title.prototype.truncateTitle = function (title, maxWidth) {
        // sanity check to prevent stack overflow on binary search
        if (maxWidth <= 0) {
            return;
        }
        var untruncatedTitle = title.text();
        // check if the title is too big for the containing svg
        if (title.node().getComputedTextLength() > maxWidth) {
            // append the ellipses to their own tspan to calculate the text length
            title.append('tspan').text('...');
            // get the bounding width including the elipses '...'
            var tspanLength = DOMUtils.appendOrSelect(title, 'tspan')
                .node()
                .getComputedTextLength();
            // with elipses
            var titleString = title.text();
            // get the index for creating the max length substring that fit within the svg
            // use one less than the index to avoid crowding (the elipsis)
            var substringIndex = this.getSubstringIndex(title.node(), 0, titleString.length - 1, maxWidth - tspanLength);
            // use the substring as the title
            title
                .html(titleString.substring(0, substringIndex - 1))
                .append('tspan')
                .text('...');
            // add events for displaying the tooltip with the title
            var self_2 = this;
            title
                .on('mouseover', function (event) {
                self_2.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: title,
                    content: untruncatedTitle,
                });
            })
                .on('mousemove', function (event) {
                self_2.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                    event: event,
                });
            })
                .on('mouseout', function () {
                self_2.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
            });
        }
    };
    // computes the maximum space a title can take
    Title.prototype.getMaxTitleWidth = function () {
        return DOMUtils.getSVGElementSize(this.parent.node(), {
            useAttrs: true,
        }).width;
    };
    /**
     * Returns the index for a maximum length substring that is less than the width parameter.
     * @param title the title node used for getting the text lengths of substrings
     * @param start the start index for the binary search
     * @param end the end index for the binary search
     * @param width the width of the svg container that holds the title
     */
    Title.prototype.getSubstringIndex = function (title, start, end, width) {
        var mid = Math.floor((end + start) / 2);
        if (title.getSubStringLength(0, mid) > width) {
            return this.getSubstringIndex(title, start, mid, width);
        }
        else if (title.getSubStringLength(0, mid) < width) {
            if (title.getSubStringLength(0, mid + 1) > width) {
                return mid;
            }
            return this.getSubstringIndex(title, mid, end, width);
        }
        else {
            return mid;
        }
    };
    return Title;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/title.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/title-meter.js
var title_meter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





var MeterTitle = /** @class */ (function (_super) {
    title_meter_extends(MeterTitle, _super);
    function MeterTitle() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'meter-title';
        _this.renderType = enums/* RenderTypes.SVG */.WJ.SVG;
        return _this;
    }
    MeterTitle.prototype.render = function () {
        var dataset = Tools.getProperty(this.model.getDisplayData(), 0);
        var options = this.getOptions();
        var svg = this.getComponentContainer();
        var groupMapsTo = options.data.groupMapsTo;
        var proportional = Tools.getProperty(options, 'meter', 'proportional');
        if (proportional) {
            this.displayTotal();
            this.displayBreakdownTitle();
        }
        else {
            // the title for a meter, is the label for that dataset
            var title = svg
                .selectAll('text.meter-title')
                .data([dataset[groupMapsTo]]);
            title
                .enter()
                .append('text')
                .classed('meter-title', true)
                .merge(title)
                .attr('x', 0)
                .attr('y', '1em')
                .text(function (d) { return d; });
            title.exit().remove();
            // appends the associated percentage after title
            this.appendPercentage();
        }
        // if status ranges are provided (custom or default), display indicator
        this.displayStatus();
        // get the max width of a title (with consideration for the status/percentage)
        var maxWidth = this.getMaxTitleWidth();
        var titleElement = DOMUtils.appendOrSelect(svg, 'text.meter-title');
        if (maxWidth > 0 &&
            titleElement.node().getComputedTextLength() > maxWidth) {
            this.truncateTitle(titleElement, maxWidth);
        }
    };
    MeterTitle.prototype.displayBreakdownTitle = function () {
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var datasetsTotal = this.model.getMaximumDomain(this.model.getDisplayData());
        var total = Tools.getProperty(options, 'meter', 'proportional', 'total');
        var unit = Tools.getProperty(options, 'meter', 'proportional', 'unit')
            ? Tools.getProperty(options, 'meter', 'proportional', 'unit')
            : '';
        var data;
        if (datasetsTotal === total) {
            data = null;
        }
        else {
            var difference = total !== null ? total - datasetsTotal : datasetsTotal;
            //breakdownFormatter
            var breakdownFormatter = Tools.getProperty(options, 'meter', 'proportional', 'breakdownFormatter');
            data =
                breakdownFormatter !== null
                    ? breakdownFormatter({
                        datasetsTotal: datasetsTotal,
                        total: total,
                    })
                    : datasetsTotal + " " + unit + " used (" + difference + " " + unit + " available)";
        }
        // the breakdown part to whole of the datasets to the overall total
        var title = svg
            .selectAll('text.proportional-meter-title')
            .data([data]);
        title
            .enter()
            .append('text')
            .classed('proportional-meter-title', true)
            .merge(title)
            .attr('x', 0)
            .attr('y', '1em')
            .text(function (d) { return d; });
        title.exit().remove();
        var maxWidth = this.getMaxTitleWidth();
        var titleElement = DOMUtils.appendOrSelect(svg, 'text.proportional-meter-title');
        if (maxWidth > 0 &&
            titleElement.node().getComputedTextLength() > maxWidth) {
            this.truncateTitle(titleElement, maxWidth);
        }
    };
    // show the total for prop meter
    MeterTitle.prototype.displayTotal = function () {
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var total = Tools.getProperty(options, 'meter', 'proportional', 'total');
        var totalValue = total
            ? Tools.getProperty(options, 'meter', 'proportional', 'total')
            : this.model.getMaximumDomain(this.model.getDisplayData());
        var unit = Tools.getProperty(options, 'meter', 'proportional', 'unit')
            ? Tools.getProperty(options, 'meter', 'proportional', 'unit')
            : '';
        // totalFormatter function
        var totalFormatter = Tools.getProperty(options, 'meter', 'proportional', 'totalFormatter');
        var totalString = totalFormatter !== null
            ? totalFormatter(totalValue)
            : total + " " + unit + " total";
        var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
        // need to check if the width is 0, and try to use the parent attribute
        // this can happen if the chart is toggled on/off and the height is 0 for the parent, it wont validateDimensions
        var containerWidth = containerBounds.width
            ? containerBounds.width
            : this.parent.node().getAttribute('width');
        var title = svg
            .selectAll('text.proportional-meter-total')
            .data([totalString]);
        title
            .enter()
            .append('text')
            .classed('proportional-meter-total', true)
            .merge(title)
            // Position the total text -24 pixels to add spacing between text and status icon (if status exists)
            .attr('x', this.model.getStatus()
            ? containerWidth - meter.total.paddingRight
            : containerWidth)
            .attr('y', '1em')
            .attr('text-anchor', 'end')
            .text(function (d) { return d; });
        title.exit().remove();
    };
    /**
     * Appends the corresponding status based on the value and the peak.
     */
    MeterTitle.prototype.displayStatus = function () {
        var self = this;
        var svg = this.getComponentContainer();
        var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
        // need to check if the width is 0, and try to use the parent attribute
        // this can happen if the chart is toggled on/off and the height is 0 for the parent, it wont validateDimensions
        var containerWidth = containerBounds.width
            ? containerBounds.width
            : 0;
        // get the status from the model
        var status = this.model.getStatus();
        var radius = meter.status.indicatorSize / 2;
        // create a group for the icon/inner path
        var statusGroup = DOMUtils.appendOrSelect(svg, "g.status-indicator")
            .attr('class', status !== null ? "status-indicator status--" + status : '')
            .attr('transform', "translate(" + (containerWidth - radius) + ", 0)");
        var data = status ? [status] : [];
        var icon = statusGroup.selectAll('circle.status').data(data);
        icon.enter()
            .append('circle')
            .merge(icon)
            .attr('class', 'status')
            .attr('r', radius)
            .attr('cx', 0)
            .attr('cy', "calc(1em / 2)");
        var innerIcon = statusGroup.selectAll('path.innerFill').data(data);
        innerIcon
            .enter()
            .append('path')
            .merge(innerIcon)
            .attr('d', self.getStatusIconPathString(status))
            .attr('transform', "translate(-" + radius + ", 0)")
            .attr('class', 'innerFill');
        innerIcon.exit().remove();
        icon.exit().remove();
    };
    /**
     * Appends the associated percentage to the end of the title
     */
    MeterTitle.prototype.appendPercentage = function () {
        var dataValue = Tools.getProperty(this.model.getDisplayData(), 0, 'value');
        // use the title's position to append the percentage to the end
        var svg = this.getComponentContainer();
        var title = DOMUtils.appendOrSelect(svg, 'text.meter-title');
        // check if it is enabled
        var data = Tools.getProperty(this.getOptions(), 'meter', 'statusBar', 'percentageIndicator', 'enabled') === true
            ? [dataValue]
            : [];
        // append a percentage if it is enabled, update it
        var percentage = svg.selectAll('text.percent-value').data(data);
        // the horizontal offset of the percentage value from the title
        var offset = meter.statusBar.paddingRight;
        percentage
            .enter()
            .append('text')
            .classed('percent-value', true)
            .merge(percentage)
            .text(function (d) { return d + "%"; })
            .attr('x', +title.attr('x') + title.node().getComputedTextLength() + offset) // set the position to after the title
            .attr('y', title.attr('y'));
        percentage.exit().remove();
    };
    /**
     * Uses the parent class truncate logic
     * @param title d3 selection of title element that will be truncated
     * @param titlestring the original string that needs truncation
     * @param maxWidth the max width the title can take
     */
    MeterTitle.prototype.truncateTitle = function (title, maxWidth) {
        _super.prototype.truncateTitle.call(this, title, maxWidth);
        // update the position on the percentage to be inline with the title
        var tspan = DOMUtils.appendOrSelect(this.parent, 'tspan');
        var offset = meter.statusBar.paddingRight;
        var tspanLength = Math.ceil(tspan.node().getComputedTextLength());
        var percentage = DOMUtils.appendOrSelect(this.parent, 'text.percent-value');
        percentage.attr('x', +title.attr('x') +
            title.node().getComputedTextLength() +
            tspanLength +
            offset);
    };
    // computes the maximum space a title can take
    MeterTitle.prototype.getMaxTitleWidth = function () {
        // get a reference to the title elements to calculate the size the title can be
        var containerBounds = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
        var proportional = Tools.getProperty(this.getOptions(), 'meter', 'proportional');
        // need to check if the width is 0, and try to use the parent attribute
        var containerWidth = containerBounds.width
            ? containerBounds.width
            : this.parent.node().getAttribute('width');
        if (proportional !== null) {
            var total = DOMUtils.appendOrSelect(this.parent, 'text.proportional-meter-total').node();
            var totalWidth = DOMUtils.getSVGElementSize(total, {
                useBBox: true,
            }).width;
            return (containerWidth -
                totalWidth -
                meter.total.paddingLeft);
        }
        else {
            var percentage = DOMUtils.appendOrSelect(this.parent, 'text.percent-value');
            // the title needs to fit the width of the container without crowding the status, and percentage value
            var offset = meter.statusBar.paddingRight;
            var percentageWidth = percentage.node().getComputedTextLength();
            var statusGroup = DOMUtils.appendOrSelect(this.parent, 'g.status-indicator').node();
            var statusWidth = DOMUtils.getSVGElementSize(statusGroup, { useBBox: true })
                .width + meter.status.paddingLeft;
            return containerWidth - percentageWidth - offset - statusWidth;
        }
    };
    /**
     * Get the associated status icon for the data
     * @param status the active status for the meter chart
     */
    MeterTitle.prototype.getStatusIconPathString = function (status) {
        switch (status) {
            case enums/* Statuses.SUCCESS */.t3.SUCCESS:
                return 'M6.875 11.3125 3.75 8.1875 4.74375 7.25 6.875 9.34375 11.50625 4.75 12.5 5.7375 Z';
            case enums/* Statuses.DANGER */.t3.DANGER:
                return 'M10.7 11.5 4.5 5.3 5.3 4.5 11.5 10.7 Z';
            case enums/* Statuses.WARNING */.t3.WARNING:
                return 'M7.9375,11.125 C7.41973305,11.125 7,11.544733 7,12.0625 C7,12.580267 7.41973305,13 7.9375,13 C8.45526695,13 8.875,12.580267 8.875,12.0625 C8.875,11.544733 8.45526695,11.125 7.9375,11.125 M7.3125, 3 8.5625, 3 8.5625, 9.875 7.3125, 9.875, 7.3125, 3 Z';
        }
    };
    return MeterTitle;
}(Title));

//# sourceMappingURL=../../../src/components/essentials/title-meter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/tooltip.js
var tooltip_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();





// Carbon position service

// import the settings for the css prefix

// D3 Imports
// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function


var Tooltip = /** @class */ (function (_super) {
    tooltip_extends(Tooltip, _super);
    function Tooltip(model, services, configs) {
        var _this = _super.call(this, model, services, configs) || this;
        _this.type = 'tooltip';
        _this.renderType = interfaces.RenderTypes.HTML;
        // flag for checking whether tooltip event listener is added or not
        _this.isEventListenerAdded = false;
        _this.positionService = new utils_position();
        _this.handleShowTooltip = function (e) {
            var data = e.detail.data || e.detail.items;
            var defaultHTML = _this.getTooltipHTML(e);
            var tooltipTextContainer = DOMUtils.appendOrSelect(_this.tooltip, 'div.content-box');
            // if there is a provided tooltip HTML function call it
            if (Tools.getProperty(_this.getOptions(), 'tooltip', 'customHTML')) {
                if (e.detail.content) {
                    var labelHTML = "<div class=\"title-tooltip\"><p>" + e.detail.content + "</p></div>";
                    tooltipTextContainer.html(labelHTML);
                }
                else {
                    tooltipTextContainer.html(_this.model
                        .getOptions()
                        .tooltip.customHTML(data, defaultHTML));
                }
            }
            else {
                // Use default tooltip
                tooltipTextContainer.html(defaultHTML);
            }
            // Position the tooltip
            _this.positionTooltip(e);
            // Fade in
            _this.tooltip.classed('hidden', false).attr('aria-hidden', false);
        };
        _this.handleHideTooltip = function () {
            _this.tooltip.classed('hidden', true).attr('aria-hidden', true);
        };
        _this.init();
        return _this;
    }
    Tooltip.prototype.addTooltipEventListener = function () {
        var _this = this;
        // listen to move-tooltip Custom Events to move the tooltip
        this.services.events.addEventListener(interfaces.Events.Tooltip.MOVE, function (e) {
            if (_this.tooltip.classed('hidden') === false) {
                _this.positionTooltip(e);
            }
        });
        // listen to show-tooltip Custom Events to render the tooltip
        this.services.events.addEventListener(interfaces.Events.Tooltip.SHOW, this.handleShowTooltip);
        // listen to hide-tooltip Custom Events to hide the tooltip
        this.services.events.addEventListener(interfaces.Events.Tooltip.HIDE, this.handleHideTooltip);
        // listen to chart-mouseout event to hide the tooltip
        this.services.events.addEventListener(interfaces.Events.Chart.MOUSEOUT, this.handleHideTooltip);
    };
    Tooltip.prototype.removeTooltipEventListener = function () {
        // remove move-tooltip Custom Events
        this.services.events.removeEventListener(interfaces.Events.Tooltip.MOVE, null);
        // remove show-tooltip Custom Events
        this.services.events.removeEventListener(interfaces.Events.Tooltip.SHOW, this.handleShowTooltip);
        // remove hide-tooltip Custom Events
        this.services.events.removeEventListener(interfaces.Events.Tooltip.HIDE, this.handleHideTooltip);
        // remove the listener on chart-mouseout
        this.services.events.removeEventListener(interfaces.Events.Chart.MOUSEOUT, this.handleHideTooltip);
    };
    Tooltip.prototype.getItems = function (e) {
        if (e.detail.items) {
            return e.detail.items;
        }
        return [];
    };
    Tooltip.prototype.formatItems = function (items) {
        var _this = this;
        var options = this.getOptions();
        // get user provided custom values for truncation
        var truncationType = Tools.getProperty(options, 'tooltip', 'truncation', 'type');
        var truncationThreshold = Tools.getProperty(options, 'tooltip', 'truncation', 'threshold');
        var truncationNumCharacter = Tools.getProperty(options, 'tooltip', 'truncation', 'numCharacter');
        // truncate the label if it's too long
        // only applies to discrete type
        if (truncationType !== interfaces.TruncationTypes.NONE) {
            return items.map(function (item) {
                // get width of the label icon if it exists
                var labelIconSize = item.labelIcon ? 12 : 0;
                item.value = item.value
                    ? _this.valueFormatter(item.value, item.label)
                    : item.value;
                if (item.label &&
                    item.label.length + labelIconSize > truncationThreshold) {
                    item.label = Tools.truncateLabel(item.label, truncationType, truncationNumCharacter);
                }
                if (item.value && item.value.length > truncationThreshold) {
                    item.value = Tools.truncateLabel(item.value, truncationType, truncationNumCharacter);
                }
                return item;
            });
        }
        return items;
    };
    Tooltip.prototype.getTooltipHTML = function (e) {
        var defaultHTML;
        if (e.detail.content) {
            defaultHTML = "<div class=\"title-tooltip\"><p>" + e.detail.content + "</p></div>";
        }
        else {
            var items = this.getItems(e);
            var formattedItems = this.formatItems(items);
            defaultHTML =
                "<ul class=\"multi-tooltip\">" +
                    formattedItems
                        .map(function (item) {
                        return "<li>\n\t\t\t\t\t\t\t<div class=\"datapoint-tooltip " + (item.bold ? 'bold' : '') + "\">\n\t\t\t\t\t\t\t\t" + (item.class ? "<div class=\"tooltip-color " + item.class + "\"></div>" : '') + "\n\t\t\t\t\t\t\t\t" + (item.color
                            ? '<div style="background-color: ' +
                                item.color +
                                '" class="tooltip-color"></div>'
                            : '') + "\n\t\t\t\t\t\t\t\t<div class=\"label\">\n\t\t\t\t\t\t\t\t<p>" + (item.label || '') + "</p>\n\t\t\t\t\t\t\t\t" + (item.labelIcon ? "<span class=\"label-icon\"/>" + item.labelIcon + "</span>" : '') + "\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t" + (item.value === undefined ||
                            item.value === null
                            ? ''
                            : "<p class=\"value\"/>" + item.value + "</p>") + "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>";
                    })
                        .join('') +
                    "</ul>";
        }
        return defaultHTML;
    };
    Tooltip.prototype.valueFormatter = function (value, label) {
        var options = this.getOptions();
        var valueFormatter = Tools.getProperty(options, 'tooltip', 'valueFormatter');
        if (valueFormatter) {
            return valueFormatter(value, label);
        }
        if (typeof value.getTime === 'function') {
            return format_format(value, 'MMM d, yyyy');
        }
        return value.toLocaleString();
    };
    Tooltip.prototype.render = function () {
        var options = this.getOptions();
        var isTooltipEnabled = Tools.getProperty(options, 'tooltip', 'enabled');
        if (isTooltipEnabled) {
            // Grab the tooltip element
            var holder = src_select(this.services.domUtils.getHolder());
            var chartprefix = Tools.getProperty(options, 'style', 'prefix');
            this.tooltip = DOMUtils.appendOrSelect(holder, "div." + js_settings.prefix + "--" + chartprefix + "--tooltip");
            this.tooltip.style('max-width', null).attr('role', 'tooltip');
            if (!this.isEventListenerAdded) {
                this.addTooltipEventListener();
                this.isEventListenerAdded = true;
            }
            this.tooltip.classed('hidden', true);
        }
        else if (!isTooltipEnabled && this.isEventListenerAdded) {
            // remove tooltip eventListener
            this.removeTooltipEventListener();
            this.isEventListenerAdded = false;
        }
    };
    Tooltip.prototype.positionTooltip = function (e) {
        var holder = this.services.domUtils.getHolder();
        var target = this.tooltip.node();
        var options = this.getOptions();
        var isTopZoomBarEnabled = Tools.getProperty(options, 'zoomBar', 'top', 'enabled');
        var mouseRelativePos = Tools.getProperty(e, 'detail', 'mousePosition');
        if (!mouseRelativePos) {
            mouseRelativePos = pointer(Tools.getProperty(e, 'detail', 'event'), holder);
        }
        else {
            var zoombarType = Tools.getProperty(options, 'zoomBar', 'top', 'type');
            var zoombarHeight = zoomBar.height[zoombarType];
            // if the mouse position is from event (ruler)
            // we need add zoom bar height
            if (isTopZoomBarEnabled) {
                mouseRelativePos[1] +=
                    zoombarHeight + zoomBar.spacerHeight;
                // TODO - we need to add toolbar height when toolbar is available
            }
        }
        var pos;
        var holderWidth = holder.offsetWidth;
        var holderHeight = holder.offsetHeight;
        var bestPlacementOption;
        if (mouseRelativePos[0] / holderWidth > 0.9) {
            bestPlacementOption = PLACEMENTS.LEFT;
        }
        else if (mouseRelativePos[0] / holderWidth < 0.1) {
            bestPlacementOption = PLACEMENTS.RIGHT;
        }
        else {
            // Find out whether tooltip should be shown on the left or right side
            bestPlacementOption = this.positionService.findBestPlacementAt({
                left: mouseRelativePos[0],
                top: mouseRelativePos[1],
            }, target, [
                PLACEMENTS.RIGHT,
                PLACEMENTS.LEFT,
                PLACEMENTS.TOP,
                PLACEMENTS.BOTTOM,
            ], function () { return ({
                width: holderWidth,
                height: holderHeight,
            }); });
        }
        var horizontalOffset = tooltips.horizontalOffset;
        if (bestPlacementOption === PLACEMENTS.LEFT) {
            horizontalOffset *= -1;
        }
        // Get coordinates to where tooltip should be positioned
        pos = this.positionService.findPositionAt({
            left: mouseRelativePos[0] + horizontalOffset,
            top: mouseRelativePos[1],
        }, target, bestPlacementOption);
        this.positionService.setElement(target, pos);
    };
    return Tooltip;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/tooltip.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/tooltip-axis.js
var tooltip_axis_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var tooltip_axis_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};




var AxisChartsTooltip = /** @class */ (function (_super) {
    tooltip_axis_extends(AxisChartsTooltip, _super);
    function AxisChartsTooltip() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AxisChartsTooltip.prototype.getItems = function (e) {
        var _this = this;
        if (e.detail.items) {
            return e.detail.items;
        }
        var data = e.detail.data;
        if (!data.length || !data[0]) {
            return [];
        }
        var options = this.getOptions();
        var cartesianScales = this.services.cartesianScales;
        var domainIdentifier = cartesianScales.getDomainIdentifier();
        var dualAxes = cartesianScales.isDualAxes();
        // Generate default tooltip
        var groupMapsTo = options.data.groupMapsTo;
        var domainLabel = cartesianScales.getDomainLabel();
        var rangeLabel = cartesianScales.getRangeLabel();
        var domainValue = data[0][domainIdentifier];
        var items;
        if (data.length === 1) {
            var datum = data[0];
            var rangeIdentifier = cartesianScales.getRangeIdentifier(datum);
            if (dualAxes) {
                var position = cartesianScales.getRangeAxisPosition({
                    datum: datum,
                    groups: [datum[groupMapsTo]],
                });
                rangeLabel = cartesianScales.getScaleLabel(position);
            }
            var value = datum[rangeIdentifier];
            items = tooltip_axis_spreadArrays([
                {
                    label: domainLabel,
                    value: domainValue,
                }
            ], (Array.isArray(value) && value.length === 2
                ? [
                    {
                        label: 'Start',
                        value: value[0],
                    },
                    {
                        label: 'End',
                        value: value[1],
                    },
                ]
                : [
                    {
                        label: rangeLabel,
                        value: datum[rangeIdentifier],
                    },
                ]));
            if (e.detail.additionalItems) {
                e.detail.additionalItems.forEach(function (additionalItem) {
                    return items.push({
                        label: additionalItem.label,
                        value: additionalItem.value,
                    });
                });
            }
            items.push({
                label: options.tooltip.groupLabel,
                value: datum[groupMapsTo],
                color: this.model.getFillColor(datum[groupMapsTo]),
                class: this.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                    dataGroupName: datum[groupMapsTo],
                }),
            });
        }
        else if (data.length > 1) {
            items = [
                {
                    label: domainLabel,
                    value: domainValue,
                },
            ];
            items = items.concat(data
                .map(function (datum) {
                // Format value if is array
                var value = datum[cartesianScales.getRangeIdentifier(datum)];
                return {
                    label: datum[groupMapsTo],
                    value: Array.isArray(value) && value.length === 2
                        ? value[0] + " - " + value[1]
                        : value,
                    color: _this.model.getFillColor(datum[groupMapsTo]),
                    class: _this.model.getColorClassName({
                        classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                        dataGroupName: datum[groupMapsTo],
                    }),
                };
            })
                .sort(function (a, b) { return b.value - a.value; }));
            if (!dualAxes &&
                Tools.getProperty(options, 'tooltip', 'showTotal') === true) {
                // use the primary/only range id
                var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
                items.push({
                    label: lodash_es_get(options, 'tooltip.totalLabel') || 'Total',
                    value: data.reduce(function (accumulator, datum) {
                        return accumulator + datum[rangeIdentifier_1];
                    }, 0),
                    bold: true,
                });
            }
        }
        return items;
    };
    return AxisChartsTooltip;
}(Tooltip));

//# sourceMappingURL=../../../src/components/essentials/tooltip-axis.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/chart-clip.js
var chart_clip_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// This class is used to create the clipPath to clip the chart components
// It's necessary for zoom in/out behavior
var ChartClip = /** @class */ (function (_super) {
    chart_clip_extends(ChartClip, _super);
    function ChartClip(model, services, configs) {
        var _this = _super.call(this, model, services, configs) || this;
        _this.type = 'chart-clip';
        _this.renderType = interfaces.RenderTypes.SVG;
        // Give every chart-clip a distinct ID
        // so they don't interfere each other in a page with multiple charts
        _this.chartClipId = 'chart-clip-id-' + Math.floor(Math.random() * 99999999999);
        _this.init();
        return _this;
    }
    ChartClip.prototype.init = function () {
        // set unique chartClipId in this chart to model
        this.model.set({ chartClipId: this.chartClipId }, { skipUpdate: true });
    };
    ChartClip.prototype.render = function (animate) {
        if (animate === void 0) { animate = true; }
        // Create the clipPath
        this.createClipPath();
    };
    ChartClip.prototype.createClipPath = function () {
        var svg = this.parent;
        var cartesianScales = this.services.cartesianScales;
        var mainXScale = cartesianScales.getMainXScale();
        var mainYScale = cartesianScales.getMainYScale();
        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];
        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
        // Get height
        this.chartClipPath = DOMUtils.appendOrSelect(svg, "clipPath." + this.type).attr('id', this.chartClipId);
        var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, "rect." + this.type);
        clipRect
            .attr('x', xScaleStart)
            .attr('y', yScaleStart)
            .attr('width', xScaleEnd - xScaleStart)
            .attr('height', yScaleEnd - yScaleStart);
        this.chartClipPath.merge(clipRect).lower();
    };
    return ChartClip;
}(Component));

//# sourceMappingURL=../../../src/components/axes/chart-clip.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/canvas-chart-clip.js
var canvas_chart_clip_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports


// This class is used to create the clipPath to clip the chart components
// It's necessary for zoom in/out behavior
var CanvasChartClip = /** @class */ (function (_super) {
    canvas_chart_clip_extends(CanvasChartClip, _super);
    function CanvasChartClip() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'canvas-chart-clip';
        // Give every chart-clip a distinct ID
        // so they don't interfere each other in a page with multiple charts
        _this.chartClipId = 'canvas-chart-clip-id-' + Math.floor(Math.random() * 99999999999);
        return _this;
    }
    CanvasChartClip.prototype.createClipPath = function () {
        var svg = this.parent;
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        this.chartClipPath = DOMUtils.appendOrSelect(svg, "clipPath." + this.type).attr('id', this.chartClipId);
        var clipRect = DOMUtils.appendOrSelect(this.chartClipPath, "rect." + this.type);
        clipRect
            .attr('x', 0)
            .attr('y', 0)
            .attr('width', width)
            .attr('height', height);
        this.chartClipPath.merge(clipRect).lower();
    };
    return CanvasChartClip;
}(ChartClip));

//# sourceMappingURL=../../../src/components/essentials/canvas-chart-clip.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/essentials/highlights.js
var highlights_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var highlights_rest = (undefined && undefined.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};



// D3 Imports
// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function

// Carbon position service

var Highlight = /** @class */ (function (_super) {
    highlights_extends(Highlight, _super);
    function Highlight(model, services) {
        var _this = _super.call(this, model, services) || this;
        _this.type = 'highlight';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.positionService = new utils_position();
        _this.highlightStrokeWidth = 1;
        return _this;
    }
    Highlight.prototype.render = function (animate) {
        if (animate === void 0) { animate = false; }
        var axesOptions = Tools.getProperty(this.getOptions(), 'axes');
        var highlightData = [];
        Object.keys(axesOptions).forEach(function (axisPosition) {
            if (Object.values(interfaces.AxisPositions).includes(axisPosition)) {
                var axisOptions = axesOptions[axisPosition];
                if (axisOptions.highlights &&
                    axisOptions.highlights.data.length > 0) {
                    highlightData.push({
                        axisPosition: axisPosition,
                        highlightStartMapsTo: axisOptions.highlights.highlightStartMapsTo,
                        highlightEndMapsTo: axisOptions.highlights.highlightEndMapsTo,
                        labelMapsTo: axisOptions.highlights.labelMapsTo,
                        highlight: axisOptions.highlights.data,
                        color: axisOptions.highlights.color,
                    });
                }
            }
        });
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        // Update data on all axis highlight groups
        var highlightAxisGroups = svg
            .selectAll('g.axis-highlight')
            .data(highlightData, function (highlightData) { return highlightData.axisPosition; });
        // Remove axis highlight groups that are no longer needed
        highlightAxisGroups.exit().attr('opacity', 0).remove();
        // Add the axis highlight groups that need to be introduced
        var highlightAxisGroupsEnter = highlightAxisGroups
            .enter()
            .append('g');
        var highlightAxisGroupsMerge = highlightAxisGroupsEnter.merge(highlightAxisGroups);
        highlightAxisGroupsMerge.attr('class', function (d) { return "axis-highlight " + d.axisPosition; });
        var highlightGroups = highlightAxisGroupsMerge
            .selectAll('g.highlight-group')
            .data(function (d) {
            return d.highlight.map(function (highlight) {
                highlight.axisPosition = d.axisPosition;
                highlight.highlightStartMapsTo = d.highlightStartMapsTo;
                highlight.labelMapsTo = d.labelMapsTo;
                highlight.color = d.color;
                highlight.highlightEndMapsTo = d.highlightEndMapsTo;
                return highlight;
            });
        });
        // Remove highlight groups that are no longer needed
        highlightGroups.exit().attr('opacity', 0).remove();
        // Add the highlight groups that need to be introduced
        var highlightGroupsEnter = highlightGroups.enter().append('g');
        highlightGroupsEnter.append('rect').attr('class', 'highlight-bar');
        highlightGroupsEnter.append('line').attr('class', 'highlight-line');
        var highlightGroupsMerge = highlightGroupsEnter.merge(highlightGroups);
        highlightGroupsMerge.attr('class', 'highlight-group');
        var self = this;
        highlightAxisGroupsMerge.each(function (_a) {
            var axisPosition = _a.axisPosition;
            var mainXScale = self.services.cartesianScales.getMainXScale();
            var mainYScale = self.services.cartesianScales.getMainYScale();
            var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
            var _c = mainYScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
            var cartesianScales = self.services.cartesianScales;
            var orientation = cartesianScales.getOrientation();
            var getDomainValue = function (d) { return cartesianScales.getDomainValue(d); };
            var getRangeValue = function (d) { return cartesianScales.getRangeValue(d); };
            var _d = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _d[0], getYValue = _d[1];
            var group = src_select(this);
            if (axisPosition === interfaces.AxisPositions.TOP ||
                axisPosition === interfaces.AxisPositions.BOTTOM) {
                group
                    .selectAll('rect.highlight-bar')
                    .transition()
                    .call(function (t) {
                    return self.services.transitions.setupTransition({
                        transition: t,
                        name: 'highlight-bar-update',
                        animate: animate,
                    });
                })
                    // Stroke width added to stop overflow of highlight
                    .attr('y', Math.max(yScaleStart + self.highlightStrokeWidth, 0))
                    // Stroke width subtracted to stop overflow of highlight
                    .attr('height', Math.max(yScaleEnd - 2 * self.highlightStrokeWidth, 0))
                    .attr('x', function (_a) {
                    var highlightStartMapsTo = _a.highlightStartMapsTo, d = highlights_rest(_a, ["highlightStartMapsTo"]);
                    return getXValue(d[highlightStartMapsTo]);
                })
                    .attr('width', function (_a) {
                    var highlightStartMapsTo = _a.highlightStartMapsTo, highlightEndMapsTo = _a.highlightEndMapsTo, d = highlights_rest(_a, ["highlightStartMapsTo", "highlightEndMapsTo"]);
                    return Math.max(getXValue(d[highlightEndMapsTo]) -
                        getXValue(d[highlightStartMapsTo]), 0);
                })
                    .style('stroke', function (_a) {
                    var color = _a.color, labelMapsTo = _a.labelMapsTo, data = highlights_rest(_a, ["color", "labelMapsTo"]);
                    return color && color.scale[data[labelMapsTo]]
                        ? color.scale[data[labelMapsTo]]
                        : null;
                })
                    .style('stroke-dasharray', '2, 2')
                    .attr('stroke-width', self.highlightStrokeWidth + 'px')
                    .style('fill-opacity', 0.1)
                    .style('fill', function (_a) {
                    var color = _a.color, labelMapsTo = _a.labelMapsTo, data = highlights_rest(_a, ["color", "labelMapsTo"]);
                    return color && color.scale[data[labelMapsTo]]
                        ? color.scale[data[labelMapsTo]]
                        : null;
                });
            }
            else {
                group
                    .selectAll('rect.highlight-bar')
                    .transition()
                    .call(function (t) {
                    return self.services.transitions.setupTransition({
                        transition: t,
                        name: 'highlight-bar-update',
                        animate: animate,
                    });
                })
                    .attr('x', xScaleStart)
                    .attr('width', Math.max(xScaleEnd - xScaleStart, 0))
                    .attr('y', function (_a) {
                    var highlightEndMapsTo = _a.highlightEndMapsTo, d = highlights_rest(_a, ["highlightEndMapsTo"]);
                    return getYValue(d[highlightEndMapsTo]);
                })
                    .attr('height', function (_a) {
                    var highlightStartMapsTo = _a.highlightStartMapsTo, highlightEndMapsTo = _a.highlightEndMapsTo, d = highlights_rest(_a, ["highlightStartMapsTo", "highlightEndMapsTo"]);
                    return Math.max(getYValue(d[highlightStartMapsTo]) -
                        getYValue(d[highlightEndMapsTo]), 0);
                })
                    .style('stroke', function (_a) {
                    var color = _a.color, labelMapsTo = _a.labelMapsTo, data = highlights_rest(_a, ["color", "labelMapsTo"]);
                    return color && color.scale[data[labelMapsTo]]
                        ? color.scale[data[labelMapsTo]]
                        : null;
                })
                    .style('stroke-dasharray', '2, 2')
                    .attr('stroke-width', self.highlightStrokeWidth + 'px')
                    .style('fill-opacity', 0.1)
                    .style('fill', function (_a) {
                    var color = _a.color, labelMapsTo = _a.labelMapsTo, data = highlights_rest(_a, ["color", "labelMapsTo"]);
                    return color && color.scale[data[labelMapsTo]]
                        ? color.scale[data[labelMapsTo]]
                        : null;
                });
            }
        });
    };
    return Highlight;
}(Component));

//# sourceMappingURL=../../../src/components/essentials/highlights.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-path/src/path.js
const path_pi = Math.PI,
    path_tau = 2 * path_pi,
    path_epsilon = 1e-6,
    tauEpsilon = path_tau - path_epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path() {
  return new Path;
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > path_epsilon));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > path_epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((path_pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > path_epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > path_epsilon || Math.abs(this._y1 - y0) > path_epsilon) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % path_tau + path_tau;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > path_epsilon) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= path_pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

/* harmony default export */ const src_path = (path);

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/point.js
function point_x(p) {
  return p[0];
}

function point_y(p) {
  return p[1];
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/line.js






/* harmony default export */ function line(x, y) {
  var defined = src_constant(true),
      context = null,
      curve = curve_linear,
      output = null;

  x = typeof x === "function" ? x : (x === undefined) ? point_x : src_constant(x);
  y = typeof y === "function" ? y : (y === undefined) ? point_y : src_constant(y);

  function line(data) {
    var i,
        n = (data = array(data)).length,
        d,
        defined0 = false,
        buffer;

    if (context == null) output = curve(buffer = src_path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();
        else output.lineEnd();
      }
      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : src_constant(+_), line) : x;
  };

  line.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : src_constant(+_), line) : y;
  };

  line.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : src_constant(!!_), line) : defined;
  };

  line.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/area.js







/* harmony default export */ function src_area(x0, y0, y1) {
  var x1 = null,
      defined = src_constant(true),
      context = null,
      curve = curve_linear,
      output = null;

  x0 = typeof x0 === "function" ? x0 : (x0 === undefined) ? point_x : src_constant(+x0);
  y0 = typeof y0 === "function" ? y0 : (y0 === undefined) ? src_constant(0) : src_constant(+y0);
  y1 = typeof y1 === "function" ? y1 : (y1 === undefined) ? point_y : src_constant(+y1);

  function area(data) {
    var i,
        j,
        k,
        n = (data = array(data)).length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);

    if (context == null) output = curve(buffer = src_path());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();
          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }
          output.lineEnd();
          output.areaEnd();
        }
      }
      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return line().defined(defined).curve(curve).context(context);
  }

  area.x = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : src_constant(+_), x1 = null, area) : x0;
  };

  area.x0 = function(_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : src_constant(+_), area) : x0;
  };

  area.x1 = function(_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : src_constant(+_), area) : x1;
  };

  area.y = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : src_constant(+_), y1 = null, area) : y0;
  };

  area.y0 = function(_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : src_constant(+_), area) : y0;
  };

  area.y1 = function(_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : src_constant(+_), area) : y1;
  };

  area.lineX0 =
  area.lineY0 = function() {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function() {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function() {
    return arealine().x(x1).y(y0);
  };

  area.defined = function(_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : src_constant(!!_), area) : defined;
  };

  area.curve = function(_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/area.js
var area_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// D3 Imports


var Area = /** @class */ (function (_super) {
    area_extends(Area, _super);
    function Area() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'area';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.gradient_id = 'gradient-id-' + Math.floor(Math.random() * 99999999999);
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            _this.parent
                .selectAll('path.area')
                .transition('legend-hover-area')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-area',
                });
            })
                .attr('opacity', function (group) {
                if (group.name !== hoveredElement.datum()['name']) {
                    return configuration_non_customizable_area.opacity.unselected;
                }
                return configuration_non_customizable_area.opacity.selected;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.area')
                .transition('legend-mouseout-area')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-area',
                });
            })
                .attr('opacity', configuration_non_customizable_area.opacity.selected);
        };
        return _this;
    }
    Area.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct area on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight area on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Area.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer({ withinChartClip: true });
        var options = this.getOptions();
        var domain = [0, 0];
        var cartesianScales = this.services.cartesianScales;
        var orientation = cartesianScales.getOrientation();
        var areaGenerator = src_area()
            .curve(this.services.curves.getD3Curve())
            .defined(function (datum, i) {
            var rangeIdentifier = cartesianScales.getRangeIdentifier();
            var value = datum[rangeIdentifier];
            if (value === null || value === undefined) {
                return false;
            }
            return true;
        });
        // Update the bound data on area groups
        var groupedData = this.model.getGroupedData(this.configs.groups);
        var bounds = Tools.getProperty(options, 'bounds');
        var boundsEnabled = bounds && groupedData && groupedData.length === 1;
        if (!boundsEnabled && bounds) {
            console.warn("Bounds can only be shown when having 1 single datagroup, you've supplied " + groupedData.length); // eslint-disable-line no-console
        }
        var upperBoundRangeValue = 0;
        // If includeZero is enabled, we want to replace upperBoundRange from 0 to domain value
        var includeZeroInRangeValue = function (position, domain) {
            if (Tools.getProperty(options, 'axes', position, 'includeZero') ===
                false) {
                // Replace upperBoundRangeValue if domain is positive
                if (domain[0] > 0 && domain[1] > 0) {
                    upperBoundRangeValue = domain[0];
                }
            }
        };
        var upperBound = function (d, i) {
            return boundsEnabled
                ? cartesianScales.getBoundedScaledValues(d, i)[0]
                : cartesianScales.getRangeValue(upperBoundRangeValue);
        };
        var lowerBound = function (d, i) {
            return boundsEnabled
                ? cartesianScales.getBoundedScaledValues(d, i)[1]
                : cartesianScales.getRangeValue(d, i);
        };
        if (orientation === interfaces.CartesianOrientations.VERTICAL) {
            domain = cartesianScales.getMainYScale().domain();
            includeZeroInRangeValue(cartesianScales.getMainYAxisPosition(), domain);
            areaGenerator
                .x(function (d, i) { return cartesianScales.getDomainValue(d, i); })
                .y0(function (d, i) { return upperBound(d, i); })
                .y1(function (d, i) { return lowerBound(d, i); });
        }
        else {
            domain = cartesianScales.getMainXScale().domain();
            includeZeroInRangeValue(cartesianScales.getMainXAxisPosition(), domain);
            areaGenerator
                .x0(function (d, i) { return upperBound(d, i); })
                .x1(function (d, i) { return lowerBound(d, i); })
                .y(function (d, i) { return cartesianScales.getDomainValue(d, i); });
        }
        // Is gradient enabled or not
        var isGradientEnabled = Tools.getProperty(options, 'color', 'gradient', 'enabled');
        // Should gradient style be applicable
        var isGradientAllowed = groupedData && groupedData.length === 1 && isGradientEnabled;
        if (groupedData.length > 1 && isGradientEnabled) {
            console.error('Gradients can only be enabled when having 1 single dataset');
        }
        var areas = svg
            .selectAll('path.area')
            .data(groupedData, function (group) { return group.name; });
        var chartMainContainer = src_select(this.services.domUtils.getMainContainer());
        // Remove elements that need to be exited
        // We need exit at the top here to make sure that
        // Data filters are processed before entering new elements
        // Or updating existing ones
        areas.exit().attr('opacity', 0).remove();
        // if there is no grouped data (if all data groups are turned OFF with legend which can happen in the case of combo charts)
        if (!groupedData.length) {
            return;
        }
        if (isGradientAllowed) {
            // The fill value of area has been overwritten, get color value from stroke color class instead
            var strokePathElement = chartMainContainer
                .select("path." + this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                dataGroupName: groupedData[0].name,
            }))
                .node();
            var colorValue = void 0;
            if (strokePathElement) {
                colorValue = getComputedStyle(strokePathElement, null).getPropertyValue('stroke');
            }
            else {
                var sparklineColorObject = Tools.getProperty(this.model.getOptions(), 'color', 'scale');
                if (sparklineColorObject !== null) {
                    var sparklineColorObjectKeys = Object.keys(sparklineColorObject);
                    colorValue =
                        sparklineColorObject[sparklineColorObjectKeys[0]];
                }
            }
            GradientUtils.appendOrUpdateLinearGradient({
                svg: this.parent,
                id: this.services.domUtils.generateElementIDString(groupedData[0].name.replace(' ', '') + "_" + this.gradient_id),
                x1: '0%',
                x2: '0%',
                y1: '0%',
                y2: '100%',
                stops: GradientUtils.getStops(domain, colorValue),
            });
        }
        else {
            // make sure there is no linearGradient if no gradient is allowed
            if (!this.parent.selectAll('defs linearGradient').empty()) {
                this.parent.selectAll('defs linearGradient').each(function () {
                    this.parentNode.remove();
                });
            }
        }
        var self = this;
        // Enter paths that need to be introduced
        var enteringAreas = areas.enter().append('path');
        if (isGradientAllowed) {
            enteringAreas
                .merge(areas)
                .style('fill', function (group) {
                return "url(#" + _this.services.domUtils.generateElementIDString(group.name.replace(' ', '') + "_" + _this.gradient_id) + ")";
            })
                .attr('class', 'area')
                .attr('class', function (group) {
                return _this.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                    dataGroupName: group.name,
                    originalClassName: 'area',
                });
            })
                .attr('d', function (group) {
                var data = group.data;
                return areaGenerator(data);
            });
        }
        else {
            enteringAreas
                .attr('opacity', 0)
                .merge(areas)
                .attr('class', 'area')
                .attr('class', function (group) {
                return _this.model.getColorClassName({
                    classNameTypes: [
                        interfaces.ColorClassNameTypes.FILL,
                        interfaces.ColorClassNameTypes.STROKE,
                    ],
                    dataGroupName: group.name,
                    originalClassName: 'area',
                });
            })
                .style('fill', function (group) { return self.model.getFillColor(group.name); })
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'area-update-enter',
                    animate: animate,
                });
            })
                .attr('opacity', boundsEnabled ? 1 : configuration_non_customizable_area.opacity.selected)
                .attr('d', function (group) {
                var data = group.data;
                return areaGenerator(data);
            });
            if (boundsEnabled) {
                enteringAreas
                    .attr('fill-opacity', configuration_non_customizable_area.opacity.selected)
                    .style('stroke', function (group) {
                    return self.model.getStrokeColor(group.name);
                })
                    .style('stroke-dasharray', '2, 2')
                    .attr('stroke-width', 0.7 + 'px');
            }
        }
    };
    Area.prototype.destroy = function () {
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return Area;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/area.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/area-stacked.js
var area_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var StackedArea = /** @class */ (function (_super) {
    area_stacked_extends(StackedArea, _super);
    function StackedArea() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'area-stacked';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var options = _this.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            _this.parent
                .selectAll('path.area')
                .transition('legend-hover-area')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-area',
                });
            })
                .attr('opacity', function (d) {
                if (Tools.getProperty(d, 0, groupMapsTo) !==
                    hoveredElement.datum().name) {
                    return configuration_non_customizable_area.opacity.unselected;
                }
                return configuration_non_customizable_area.opacity.selected;
            });
        };
        _this.handleLegendMouseOut = function () {
            _this.parent
                .selectAll('path.area')
                .transition('legend-mouseout-area')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-area',
                });
            })
                .attr('opacity', configuration_non_customizable_area.opacity.selected);
        };
        return _this;
    }
    StackedArea.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct area on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight area on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    StackedArea.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer({ withinChartClip: true });
        var self = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });
        var stackedData = this.model.getStackedData({
            percentage: percentage,
            groups: this.configs.groups,
        });
        var firstDatum = Tools.getProperty(stackedData, 0, 0);
        // area doesnt have to use the main range and domain axes - they can be mapped to the secondary (in the case of a combo chart)
        // however area _cannot_ have multiple datasets that are mapped to _different_ ranges and domains so we can use the first data item
        var domainAxisPosition = this.services.cartesianScales.getDomainAxisPosition({ firstDatum: firstDatum });
        var rangeAxisPosition = this.services.cartesianScales.getRangeAxisPosition({ firstDatum: firstDatum });
        var mainYScale = this.services.cartesianScales.getScaleByPosition(rangeAxisPosition);
        var areas = svg
            .selectAll('path.area')
            .data(stackedData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); });
        // D3 area generator function
        this.areaGenerator = src_area()
            .x(function (d, i) {
            return _this.services.cartesianScales.getValueThroughAxisPosition(domainAxisPosition, d.data.sharedStackKey, i);
        })
            .y0(function (d) { return mainYScale(d[0]); })
            .y1(function (d) { return mainYScale(d[1]); })
            .curve(this.services.curves.getD3Curve());
        areas.exit().attr('opacity', 0).remove();
        var enteringAreas = areas.enter().append('path').attr('opacity', 0);
        enteringAreas
            .merge(areas)
            .data(stackedData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); })
            .attr('class', 'area')
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: Tools.getProperty(d, 0, groupMapsTo),
                originalClassName: 'area',
            });
        })
            .style('fill', function (d) {
            return self.model.getFillColor(Tools.getProperty(d, 0, groupMapsTo));
        })
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'area')
            .attr('aria-label', function (d) { return Tools.getProperty(d, 0, groupMapsTo); })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'area-update-enter',
                animate: animate,
            });
        })
            .attr('opacity', configuration_non_customizable_area.opacity.selected)
            .attr('d', this.areaGenerator);
    };
    return StackedArea;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/area-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bar.js
var bar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports


var Bar = /** @class */ (function (_super) {
    bar_extends(Bar, _super);
    function Bar() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // Gets the correct width for bars based on options & configurations
    Bar.prototype.getBarWidth = function (allDataLabels) {
        var options = this.getOptions();
        if (options.bars.width) {
            return options.bars.width;
        }
        var numberOfDatapoints = this.model.getDisplayData().length;
        var mainXScale = this.services.cartesianScales.getMainXScale();
        var chartWidth = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }).width;
        if (!mainXScale.step) {
            return Math.min(options.bars.maxWidth, (chartWidth * 0.25) / numberOfDatapoints);
        }
        return Math.min(options.bars.maxWidth, mainXScale.step() / 2);
    };
    Bar.prototype.isOutsideZoomedDomain = function (x0, x1) {
        var dataCount = this.model.getDisplayData().length;
        // if only one data point, never out of zoom domain
        // or it becomes a blank chart
        if (dataCount <= 1) {
            return false;
        }
        var zoomDomain = this.model.get('zoomDomain');
        if (zoomDomain !== undefined) {
            var domainScale = this.services.cartesianScales.getDomainScale();
            return (x0 < domainScale(zoomDomain[0]) ||
                x1 > domainScale(zoomDomain[1]));
        }
        return false;
    };
    return Bar;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/bar.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bar-simple.js
var bar_simple_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports

var SimpleBar = /** @class */ (function (_super) {
    bar_simple_extends(SimpleBar, _super);
    function SimpleBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'simple-bar';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('path.bar')
                .transition('legend-hover-simple-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-simple-bar',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.bar')
                .transition('legend-mouseout-simple-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-simple-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    SimpleBar.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    SimpleBar.prototype.render = function (animate) {
        var _this = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var data = this.model.getDisplayData(this.configs.groups);
        var orientation = this.services.cartesianScales.getOrientation();
        // Update data on all bars
        var bars = svg
            .selectAll('path.bar')
            .data(data, function (datum) { return datum[groupMapsTo]; });
        // Remove bars that are no longer needed
        bars.exit().attr('opacity', 0).remove();
        // Add the paths that need to be introduced
        var barsEnter = bars.enter().append('path').attr('opacity', 0);
        barsEnter
            .merge(bars)
            .classed('bar', true)
            .attr('width', this.getBarWidth.bind(this))
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'bar-update-enter',
                animate: animate,
            });
        })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'bar',
            });
        })
            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })
            .attr('d', function (d, i) {
            /*
             * Orientation support for horizontal/vertical bar charts
             * Determine coordinates needed for a vertical set of paths
             * to draw the bars needed, and pass those coordinates down to
             * generateSVGPathString() to decide whether it needs to flip them
             */
            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier();
            var barWidth = _this.getBarWidth();
            var value = d[rangeIdentifier];
            var x0 = _this.services.cartesianScales.getDomainValue(d, i) -
                barWidth / 2;
            var x1 = x0 + barWidth;
            var y0, y1;
            if (Array.isArray(value) && value.length === 2) {
                y0 = _this.services.cartesianScales.getRangeValue(value[0]);
                y1 = _this.services.cartesianScales.getRangeValue(value[1], i);
            }
            else {
                var rangeScale = _this.services.cartesianScales.getRangeScale();
                var yScaleDomainStart = rangeScale.domain()[0];
                y0 = _this.services.cartesianScales.getRangeValue(Math.max(0, yScaleDomainStart));
                y1 = _this.services.cartesianScales.getRangeValue(d, i);
            }
            var difference = Math.abs(y1 - y0);
            // Set a min-2px size for the bar
            if (difference !== 0 && difference < 2) {
                if ((value > 0 &&
                    orientation === interfaces.CartesianOrientations.VERTICAL) ||
                    (value < 0 &&
                        orientation === interfaces.CartesianOrientations.HORIZONTAL)) {
                    y1 = y0 - 2;
                }
                else {
                    y1 = y0 + 2;
                }
            }
            // don't show if part of bar is out of zoom domain
            if (_this.isOutsideZoomedDomain(x0, x1)) {
                return;
            }
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        })
            .attr('opacity', 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'bar')
            .attr('aria-label', function (d) { return d.value; });
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    SimpleBar.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('path.bar')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                data: [datum],
            });
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    SimpleBar.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('path.bar')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return SimpleBar;
}(Bar));

//# sourceMappingURL=../../../src/components/graphs/bar-simple.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bar-grouped.js
var bar_grouped_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports


var GroupedBar = /** @class */ (function (_super) {
    bar_grouped_extends(GroupedBar, _super);
    function GroupedBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'grouped-bar';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.padding = 5;
        // Highlight elements that match the hovered legend item
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('path.bar')
                .transition('legend-hover-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-bar',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        // Un-highlight all elements
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.bar')
                .transition('legend-mouseout-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    GroupedBar.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    GroupedBar.prototype.render = function (animate) {
        var _this = this;
        // Chart options mixed with the internal configurations
        var displayData = this.model.getDisplayData(this.configs.groups);
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        // Get unique labels
        this.setGroupScale();
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var allDataLabels = Tools.removeArrayDuplicates(displayData.map(function (datum) {
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);
            return datum[domainIdentifier] &&
                typeof datum[domainIdentifier].toString === 'function'
                ? datum[domainIdentifier].toString()
                : datum[domainIdentifier];
        }));
        // Update data on bar groups
        var barGroups = svg
            .selectAll('g.bars')
            .data(allDataLabels, function (label) { return label; });
        // Remove dot groups that need to be removed
        barGroups.exit().attr('opacity', 0).remove();
        // Add the bar groups that need to be introduced
        var barGroupsEnter = barGroups
            .enter()
            .append('g')
            .classed('bars', true)
            .attr('role', interfaces.Roles.GROUP)
            .attr('data-name', 'bars');
        // Update data on all bars
        var allBarGroups = barGroupsEnter.merge(barGroups);
        allBarGroups
            // Transition
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'bar-group-update-enter',
                animate: animate,
            });
        })
            .attr('transform', function (label, i) {
            var scaleValue = _this.services.cartesianScales.getDomainValue(label, i);
            var translateBy = scaleValue - _this.getGroupWidth() / 2;
            // const translateBy = scaleValue - this.getGroupWidth(null) / 2 + this.getBarWidth(null);
            if (_this.services.cartesianScales.getOrientation() ===
                interfaces.CartesianOrientations.VERTICAL) {
                return "translate(" + translateBy + ", 0)";
            }
            else {
                // translate in the y direction for horizontal groups
                return "translate(0, " + translateBy + ")";
            }
        });
        var bars = allBarGroups.selectAll('path.bar').data(function (label) { return _this.getDataCorrespondingToLabel(label); }, function (d) { return d[groupMapsTo]; });
        // Remove bars that are no longer needed
        bars.exit().attr('opacity', 0).remove();
        // Add the bars that need to be introduced
        var barsEnter = bars.enter().append('path').attr('opacity', 0);
        // code for vertical grouped bar charts
        barsEnter
            .merge(bars)
            .classed('bar', true)
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'bar-update-enter',
                animate: animate,
            });
        })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'bar',
            });
        })
            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })
            .attr('d', function (d) {
            /*
             * Orientation support for horizontal/vertical bar charts
             * Determine coordinates needed for a vertical set of paths
             * to draw the bars needed, and pass those coordinates down to
             * generateSVGPathString() to decide whether it needs to flip them
             */
            var startX = _this.groupScale(d[groupMapsTo]);
            var barWidth = _this.getBarWidth();
            var x0 = startX;
            var x1 = startX + barWidth;
            var rangeAxis = _this.services.cartesianScales.getRangeAxisPosition({ datum: d });
            var y0 = _this.services.cartesianScales.getValueThroughAxisPosition(rangeAxis, 0);
            var y1 = _this.services.cartesianScales.getRangeValue(d);
            // don't show if part of bar is out of zoom domain
            if (_this.isOutsideZoomedDomain(x0, x1)) {
                return;
            }
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
        })
            .attr('opacity', 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'bar')
            .attr('aria-label', function (d) { return d.value; });
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    GroupedBar.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('path.bar')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                data: [datum],
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    GroupedBar.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('path.bar')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    GroupedBar.prototype.getDataCorrespondingToLabel = function (label) {
        var _this = this;
        var displayData = this.model.getDisplayData(this.configs.groups);
        return displayData.filter(function (datum) {
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);
            return datum[domainIdentifier] === label;
        });
    };
    GroupedBar.prototype.getGroupWidth = function () {
        var activeData = this.model.getGroupedData(this.configs.groups);
        var totalGroupPadding = this.getTotalGroupPadding();
        return this.getBarWidth() * activeData.length + totalGroupPadding;
    };
    GroupedBar.prototype.getTotalGroupPadding = function () {
        var activeData = this.model.getGroupedData(this.configs.groups);
        if (activeData.length === 1) {
            return 0;
        }
        var domainScale = this.services.cartesianScales.getDomainScale();
        var padding = Math.min(5, 5 * (domainScale.step() / 70));
        return padding * (activeData.length - 1);
    };
    // Gets the correct width for bars based on options & configurations
    GroupedBar.prototype.getBarWidth = function () {
        var options = this.getOptions();
        var providedWidth = Tools.getProperty(options, 'bars', 'width');
        var providedMaxWidth = Tools.getProperty(options, 'bars', 'maxWidth');
        // If there's a provided width, compare with maxWidth and
        // Determine which to return
        if (providedWidth !== null) {
            if (providedMaxWidth === null ||
                providedWidth <= providedMaxWidth) {
                return providedWidth;
            }
        }
        var activeData = this.model.getGroupedData(this.configs.groups);
        var numOfActiveDataGroups = activeData.length;
        var totalGroupPadding = this.getTotalGroupPadding();
        var domainScale = this.services.cartesianScales.getDomainScale();
        return Math.min(providedMaxWidth, (domainScale.step() - totalGroupPadding) / numOfActiveDataGroups);
    };
    GroupedBar.prototype.setGroupScale = function () {
        var activeData = this.model.getActiveDataGroupNames(this.configs.groups);
        this.groupScale = band()
            .domain(activeData)
            .rangeRound([0, this.getGroupWidth()]);
    };
    return GroupedBar;
}(Bar));

//# sourceMappingURL=../../../src/components/graphs/bar-grouped.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bar-stacked.js
var bar_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var StackedBar = /** @class */ (function (_super) {
    bar_stacked_extends(StackedBar, _super);
    function StackedBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'stacked-bar';
        _this.renderType = interfaces.RenderTypes.SVG;
        // Highlight elements that match the hovered legend item
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.model.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('path.bar')
                .transition('legend-hover-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-bar',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        // Un-highlight all elements
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.bar')
                .transition('legend-mouseout-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    StackedBar.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    StackedBar.prototype.render = function (animate) {
        var _this = this;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        // Chart options mixed with the internal configurations
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        // Create the data and keys that'll be used by the stack layout
        var stackData = this.model.getStackedData({
            groups: this.configs.groups,
            divergent: true,
        });
        var activeDataGroupNames = this.model.getActiveDataGroupNames();
        // Update data on all bar groups
        var barGroups = svg
            .selectAll('g.bars')
            .data(stackData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); });
        // Remove elements that need to be exited
        // We need exit at the top here to make sure that
        // Data filters are processed before entering new elements
        // Or updating existing ones
        barGroups.exit().attr('opacity', 0).remove();
        // Add bar groups that need to be introduced
        barGroups
            .enter()
            .append('g')
            .classed('bars', true)
            .attr('role', interfaces.Roles.GROUP)
            .attr('data-name', 'bars');
        // Update data on all bars
        var bars = svg
            .selectAll('g.bars')
            .selectAll('path.bar')
            .data(function (d) { return d; }, function (d) { return d.data.sharedStackKey; });
        // Remove bars that need to be removed
        bars.exit().remove();
        bars.enter()
            .append('path')
            .merge(bars)
            .classed('bar', true)
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'bar-update-enter',
                animate: animate,
            });
        })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'bar',
            });
        })
            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })
            .attr('d', function (d, i) {
            var key = d.data.sharedStackKey;
            /*
             * Orientation support for horizontal/vertical bar charts
             * Determine coordinates needed for a vertical set of paths
             * to draw the bars needed, and pass those coordinates down to
             * generateSVGPathString() to decide whether it needs to flip them
             */
            var barWidth = _this.getBarWidth();
            var x0 = _this.services.cartesianScales.getDomainValue(key, i) -
                barWidth / 2;
            var x1 = x0 + barWidth;
            var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);
            var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);
            // don't show if part of bar is out of zoom domain
            if (_this.isOutsideZoomedDomain(x0, x1)) {
                return;
            }
            // Add the divider gap
            if (Math.abs(y1 - y0) > 0 &&
                Math.abs(y1 - y0) > options.bars.dividerSize) {
                var barIsNegative = d[0] < 0 && d[1] <= 0;
                if (barIsNegative && activeDataGroupNames.length > 1) {
                    if (_this.services.cartesianScales.getOrientation() ===
                        interfaces.CartesianOrientations.VERTICAL) {
                        y1 += d[1] === 0 ? 2 : 1;
                    }
                    else {
                        y1 -= 1;
                    }
                }
                else if (!barIsNegative) {
                    if (_this.services.cartesianScales.getOrientation() ===
                        interfaces.CartesianOrientations.VERTICAL) {
                        y1 += 1;
                    }
                    else {
                        y1 -= 1;
                    }
                }
            }
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
        })
            .attr('opacity', 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'bar')
            .attr('aria-label', function (d) { return d[1] - d[0]; });
        // Add event listeners for the above elements
        this.addEventListeners();
    };
    StackedBar.prototype.addEventListeners = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var self = this;
        this.parent
            .selectAll('path.bar')
            .on('mouseover', function (event, datum) {
            var _a;
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            var displayData = self.model.getDisplayData(self.configs.groups);
            var matchingDataPoint = displayData.find(function (d) {
                var domainIdentifier = self.services.cartesianScales.getDomainIdentifier(d);
                var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier(d);
                return (d[rangeIdentifier] === datum.data[datum[groupMapsTo]] &&
                    d[domainIdentifier].toString() ===
                        datum.data.sharedStackKey &&
                    d[groupMapsTo] === datum[groupMapsTo]);
            });
            if (matchingDataPoint === undefined) {
                // use the primary range and domain ids
                var domainIdentifier = self.services.cartesianScales.getDomainIdentifier();
                var rangeIdentifier = self.services.cartesianScales.getRangeIdentifier();
                matchingDataPoint = (_a = {},
                    _a[domainIdentifier] = datum.data.sharedStackKey,
                    _a[rangeIdentifier] = datum.data[datum[groupMapsTo]],
                    _a[groupMapsTo] = datum[groupMapsTo],
                    _a);
            }
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                data: [matchingDataPoint],
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    StackedBar.prototype.getBarWidth = function () {
        var options = this.getOptions();
        if (Tools.getProperty(options, 'bars', 'width')) {
            return options.bars.width;
        }
        var mainXScale = this.services.cartesianScales.getMainXScale();
        var chartWidth = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }).width;
        var numberOfDomainValues = this.model.getStackKeys().length;
        if (!mainXScale.step) {
            return Math.min(options.bars.maxWidth, (chartWidth * 0.25) / numberOfDomainValues);
        }
        return Math.min(options.bars.maxWidth, mainXScale.step() / 2);
    };
    StackedBar.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('path.bar')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return StackedBar;
}(Bar));

//# sourceMappingURL=../../../src/components/graphs/bar-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/boxplot.js
var boxplot_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var Boxplot = /** @class */ (function (_super) {
    boxplot_extends(Boxplot, _super);
    function Boxplot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'boxplot';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Boxplot.prototype.render = function (animate) {
        var _this = this;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var dataGroupNames = this.model.getDataGroupNames();
        /*
         * Get graphable dimensions
         */
        var mainXScale = this.services.cartesianScales.getMainXScale();
        var mainYScale = this.services.cartesianScales.getMainYScale();
        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];
        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
        var width = xScaleEnd - xScaleStart;
        var height = yScaleEnd - yScaleStart;
        if (width === 0) {
            return;
        }
        // Get orientation of the chart
        var cartesianScales = this.services.cartesianScales;
        var orientation = cartesianScales.getOrientation();
        var isInVerticalOrientation = orientation === interfaces.CartesianOrientations.VERTICAL;
        var _c = Tools.flipDomainAndRangeBasedOnOrientation(function (d, i) { return _this.services.cartesianScales.getDomainValue(d, i); }, function (d, i) { return _this.services.cartesianScales.getRangeValue(d, i); }, orientation), getXValue = _c[0], getYValue = _c[1];
        var gridSize = Math.floor((isInVerticalOrientation ? width : height) / dataGroupNames.length);
        var boxWidth = Math.min(gridSize / 2, 16);
        var boxplotData = this.model.getBoxplotData();
        /*
         * update or initialize all box groups
         */
        var boxGroups = svg.selectAll('.box-group').data(boxplotData);
        boxGroups.exit().remove();
        var boxGroupsEnter = boxGroups
            .enter()
            .append('g')
            .attr('class', 'box-group');
        var allBoxGroups = boxGroups.merge(boxGroupsEnter);
        /*
         * draw the 2 range lines for each box
         */
        // Start range line
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.vertical-line.start'))
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                originalClassName: 'vertical-line start',
            });
        })
            .attr('stroke-width', boxplot.strokeWidth["default"])
            .attr('fill', 'none')
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-verticalstartline',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);
            var x1 = x0;
            var y0 = cartesianScales.getRangeValue(d.whiskers.min);
            var y1 = cartesianScales.getRangeValue(d.quartiles.q_25);
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        // End range line
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.vertical-line.end'))
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                originalClassName: 'vertical-line end',
            });
        })
            .attr('stroke-width', boxplot.strokeWidth["default"])
            .attr('fill', 'none')
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-verticalendline',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]);
            var x1 = x0;
            var y0 = cartesianScales.getRangeValue(d.whiskers.max);
            var y1 = cartesianScales.getRangeValue(d.quartiles.q_75);
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update the boxes
         */
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.box'))
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [
                    interfaces.ColorClassNameTypes.FILL,
                    interfaces.ColorClassNameTypes.STROKE,
                ],
                originalClassName: 'box',
            });
        })
            .attr('fill-opacity', boxplot.box.opacity["default"])
            .attr('stroke-width', boxplot.strokeWidth["default"])
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'box')
            .attr('aria-label', function (d) { return d[groupMapsTo]; })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-quartiles',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -
                boxWidth / 2;
            var x1 = x0 + boxWidth;
            var y0 = cartesianScales.getRangeValue(Math[isInVerticalOrientation ? 'max' : 'min'](d.quartiles.q_75, d.quartiles.q_25));
            var y1 = y0 +
                Math.abs(cartesianScales.getRangeValue(d.quartiles.q_75) -
                    cartesianScales.getRangeValue(d.quartiles.q_25));
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update highlight areas
         */
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.highlight-area'))
            .attr('class', 'highlight-area')
            .attr('opacity', 0)
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -
                boxWidth / 2;
            var x1 = x0 + boxWidth;
            var y0 = cartesianScales.getRangeValue(d.whiskers.min);
            var y1 = cartesianScales.getRangeValue(d.whiskers.max);
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update the starting whisker
         */
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.whisker.start'))
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                originalClassName: 'whisker start',
            });
        })
            .attr('stroke-width', boxplot.strokeWidth.thicker)
            .attr('fill', 'none')
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-startingwhisker',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -
                boxWidth / 4;
            var x1 = x0 + boxWidth / 2;
            var y0 = cartesianScales.getRangeValue(d.whiskers.min);
            var y1 = cartesianScales.getRangeValue(d.whiskers.min);
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update the median line
         */
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.median'))
            .attr('fill', 'none')
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                originalClassName: 'median',
            });
        })
            .attr('stroke-width', 2)
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-median',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -
                boxWidth / 2;
            var x1 = x0 + boxWidth;
            var y0 = cartesianScales.getRangeValue(d.quartiles.q_50);
            var y1 = y0;
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update the ending whisker
         */
        boxGroupsEnter
            .append('path')
            .merge(boxGroups.select('path.whisker.end'))
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                originalClassName: 'whisker end',
            });
        })
            .attr('stroke-width', boxplot.strokeWidth.thicker)
            .attr('fill', 'none')
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-endingwhisker',
                animate: animate,
            });
        })
            .attr('d', function (d) {
            var x0 = cartesianScales.getDomainValue(d[groupMapsTo]) -
                boxWidth / 4;
            var x1 = x0 + boxWidth / 2;
            var y0 = cartesianScales.getRangeValue(d.whiskers.max);
            var y1 = cartesianScales.getRangeValue(d.whiskers.max);
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, orientation);
        });
        /*
         * Draw out and update the outlier circles
         */
        var circles = allBoxGroups.selectAll('circle.outlier').data(function (d) {
            return d.outliers.map(function (outlier) {
                var _a;
                return _a = {
                        min: d.whiskers.min,
                        max: d.whiskers.max
                    },
                    _a[groupMapsTo] = d[groupMapsTo],
                    _a.value = outlier,
                    _a;
            });
        });
        circles.exit().remove();
        var circlesEnter = circles.enter().append('circle');
        circles
            .merge(circlesEnter)
            .attr('r', boxplot.circle.radius)
            .attr('class', function () {
            return _this.model.getColorClassName({
                classNameTypes: [
                    interfaces.ColorClassNameTypes.FILL,
                    interfaces.ColorClassNameTypes.STROKE,
                ],
                originalClassName: 'outlier',
            });
        })
            .attr('fill-opacity', boxplot.circle.opacity["default"])
            .attr('cx', getXValue)
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'boxplot-update-circles',
                animate: animate,
            });
        })
            .attr('cy', getYValue);
        this.addBoxEventListeners();
        this.addCircleEventListeners();
    };
    Boxplot.prototype.addBoxEventListeners = function () {
        var self = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        this.parent
            .selectAll('path.highlight-area')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            var parentElement = src_select(this.parentNode);
            parentElement
                .select('path.box')
                .classed('hovered', true)
                .attr('fill-opacity', boxplot.box.opacity.hovered);
            // Show tooltip for single datapoint
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: options.tooltip.groupLabel,
                        value: datum[groupMapsTo],
                        class: self.model.getColorClassName({
                            classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                        }),
                    },
                    {
                        label: 'Minimum',
                        value: datum.whiskers.min,
                    },
                    {
                        label: 'Q1',
                        value: datum.quartiles.q_25,
                    },
                    {
                        label: 'Median',
                        value: datum.quartiles.q_50,
                    },
                    {
                        label: 'Q3',
                        value: datum.quartiles.q_75,
                    },
                    {
                        label: 'Maximum',
                        value: datum.whiskers.max,
                    },
                    {
                        label: 'IQR',
                        value: datum.quartiles.q_75 - datum.quartiles.q_25,
                    },
                ],
            });
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.BOX_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.BOX_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.BOX_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            var parentElement = src_select(this.parentNode);
            parentElement
                .select('path.box')
                .classed('hovered', false)
                .attr('fill-opacity', boxplot.box.opacity["default"]);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.BOX_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    Boxplot.prototype.addCircleEventListeners = function () {
        var self = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        this.parent
            .selectAll('circle')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement
                .classed('hovered', true)
                .attr('fill-opacity', boxplot.circle.opacity.hovered)
                .classed('unfilled', false);
            // Show tooltip for single datapoint
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: options.tooltip.groupLabel,
                        value: datum[groupMapsTo],
                        class: self.model.getColorClassName({
                            classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                        }),
                    },
                    {
                        label: 'Outlier',
                        value: datum[rangeIdentifier],
                    },
                ],
            });
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.OUTLIER_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.OUTLIER_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.OUTLIER_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement
                .classed('hovered', false)
                .attr('fill-opacity', boxplot.circle.opacity["default"]);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Boxplot.OUTLIER_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    return Boxplot;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/boxplot.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/scatter.js
var scatter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports

var Scatter = /** @class */ (function (_super) {
    scatter_extends(Scatter, _super);
    function Scatter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'scatter';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleChartHolderOnHover = function (event) {
            _this.parent
                .selectAll('circle.dot')
                .transition('chart-holder-hover-scatter')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'chart-holder-hover-scatter',
                });
            })
                .attr('opacity', 1);
        };
        _this.handleChartHolderOnMouseOut = function (event) {
            _this.parent
                .selectAll('circle.dot')
                .transition('chart-holder-mouseout-scatter')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'chart-holder-mouseout-scatter',
                });
            })
                .attr('opacity', 0);
        };
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('circle.dot')
                .transition('legend-hover-scatter')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-scatter',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('circle.dot')
                .transition('legend-mouseout-scatter')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-scatter',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    Scatter.prototype.init = function () {
        var events = this.services.events;
        // Highlight correct circle on legend item hovers
        events.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        events.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
        var fadeInOnChartHolderMouseover = this.configs.fadeInOnChartHolderMouseover;
        if (fadeInOnChartHolderMouseover) {
            // Fade-in scatter circles
            events.addEventListener(interfaces.Events.Chart.MOUSEOVER, this.handleChartHolderOnHover);
            // Fade-out scatter circles
            events.addEventListener(interfaces.Events.Chart.MOUSEOUT, this.handleChartHolderOnMouseOut);
        }
    };
    Scatter.prototype.filterBasedOnZoomDomain = function (data) {
        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier(data);
        var zoomDomain = this.model.get('zoomDomain');
        if (zoomDomain !== undefined) {
            return data.filter(function (d) {
                return d[domainIdentifier].getTime() >= zoomDomain[0].getTime() &&
                    d[domainIdentifier].getTime() <= zoomDomain[1].getTime();
            });
        }
        return data;
    };
    Scatter.prototype.getScatterData = function () {
        var _this = this;
        var options = this.getOptions();
        var stacked = this.configs.stacked;
        var scatterData;
        if (stacked) {
            var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });
            scatterData = this.model.getStackedData({
                groups: this.configs.groups,
                percentage: percentage,
            });
        }
        else {
            scatterData = this.model
                .getDisplayData(this.configs.groups)
                .filter(function (d) {
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
                return (d[rangeIdentifier] !== undefined &&
                    d[rangeIdentifier] !== null);
            });
        }
        // filter out datapoints that aren't part of the zoomed domain
        return this.filterBasedOnZoomDomain(scatterData);
    };
    Scatter.prototype.render = function (animate) {
        var isScatterEnabled = Tools.getProperty(this.getOptions(), 'points', 'enabled') ||
            Tools.getProperty(this.getOptions(), 'bubble', 'enabled');
        if (!isScatterEnabled) {
            return;
        }
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
        // Update data on dot groups
        var circles = svg
            .selectAll('circle.dot')
            .data(this.getScatterData(), function (datum) { return datum[groupMapsTo] + "-" + datum[domainIdentifier]; });
        // Remove circles that need to be removed
        circles.exit().attr('opacity', 0).remove();
        // Add the dot groups that need to be introduced
        var enteringCircles = circles
            .enter()
            .append('circle')
            .classed('dot', true)
            .attr('opacity', 0);
        // Apply styling & position
        var circlesToStyle = enteringCircles.merge(circles);
        this.styleCircles(circlesToStyle, animate);
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    // A value is an anomaly if is above all defined domain and range thresholds
    Scatter.prototype.isDatapointThresholdAnomaly = function (datum, index) {
        var _this = this;
        var handleThresholds = this.configs.handleThresholds;
        if (!handleThresholds) {
            return false;
        }
        var cartesianScales = this.services.cartesianScales;
        var orientation = cartesianScales.getOrientation();
        // Get highest domain and range thresholds
        var _a = Tools.flipDomainAndRangeBasedOnOrientation(this.services.cartesianScales.getHighestDomainThreshold(), this.services.cartesianScales.getHighestRangeThreshold(), orientation), xThreshold = _a[0], yThreshold = _a[1];
        var _b = Tools.flipDomainAndRangeBasedOnOrientation(function (d, i) { return _this.services.cartesianScales.getDomainValue(d, i); }, function (d, i) { return _this.services.cartesianScales.getRangeValue(d, i); }, orientation), getXValue = _b[0], getYValue = _b[1];
        // Get datum x and y values
        var xValue = getXValue(datum, index);
        var yValue = getYValue(datum, index);
        // To be an anomaly, the value has to be higher or equal than the threshold value
        // (if are present, both range and domain threshold values)
        if (yThreshold && xThreshold) {
            return (yValue <= yThreshold.scaleValue &&
                xValue >= xThreshold.scaleValue);
        }
        if (yThreshold) {
            return yValue <= yThreshold.scaleValue;
        }
        if (xThreshold) {
            return xValue >= xThreshold.scaleValue;
        }
    };
    Scatter.prototype.styleCircles = function (selection, animate) {
        var _this = this;
        // Chart options mixed with the internal configurations
        var options = this.getOptions();
        var _a = options.points, filled = _a.filled, fillOpacity = _a.fillOpacity;
        var _b = this.services, cartesianScales = _b.cartesianScales, transitions = _b.transitions;
        var groupMapsTo = options.data.groupMapsTo;
        var getDomainValue = function (d, i) { return cartesianScales.getDomainValue(d, i); };
        var getRangeValue = function (d, i) { return cartesianScales.getRangeValue(d, i); };
        var _c = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _c[0], getYValue = _c[1];
        var fadeInOnChartHolderMouseover = this.configs.fadeInOnChartHolderMouseover;
        selection
            .raise()
            .classed('dot', true)
            .attr('class', function (d) {
            var domainIdentifier = cartesianScales.getDomainIdentifier(d);
            var isFilled = _this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
            var classNamesNeeded = isFilled
                ? [interfaces.ColorClassNameTypes.FILL, interfaces.ColorClassNameTypes.STROKE]
                : [interfaces.ColorClassNameTypes.STROKE];
            return _this.model.getColorClassName({
                classNameTypes: classNamesNeeded,
                dataGroupName: d[groupMapsTo],
                originalClassName: 'dot',
            });
        })
            // Set class to highlight the dots that are above all the thresholds, in both directions (vertical and horizontal)
            .classed('threshold-anomaly', function (d, i) {
            return _this.isDatapointThresholdAnomaly(d, i);
        })
            .classed('filled', function (d) {
            var domainIdentifier = cartesianScales.getDomainIdentifier(d);
            return _this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
        })
            .classed('unfilled', function (d) {
            var domainIdentifier = cartesianScales.getDomainIdentifier(d);
            return !_this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled);
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'scatter-update-enter',
                animate: animate,
            });
        })
            .attr('cx', getXValue)
            .attr('cy', getYValue)
            .attr('r', options.points.radius)
            .style('fill', function (d) {
            var domainIdentifier = cartesianScales.getDomainIdentifier(d);
            if (_this.model.getIsFilled(d[groupMapsTo], d[domainIdentifier], d, filled)) {
                return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
            }
        })
            .style('stroke', function (d) {
            var domainIdentifier = cartesianScales.getDomainIdentifier(d);
            return _this.model.getStrokeColor(d[groupMapsTo], d[domainIdentifier], d);
        })
            .attr('fill-opacity', filled ? fillOpacity : 1)
            .attr('opacity', fadeInOnChartHolderMouseover ? 0 : 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'point')
            .attr('aria-label', function (d) {
            var rangeIdentifier = cartesianScales.getRangeIdentifier(d);
            return d[rangeIdentifier];
        });
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    // This is extended in bubble graphs
    Scatter.prototype.getTooltipAdditionalItems = function (datum) {
        return null;
    };
    Scatter.prototype.addEventListeners = function () {
        var self = this;
        var groupMapsTo = self.getOptions().data.groupMapsTo;
        this.parent
            .selectAll('circle')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement
                .classed('hovered', true)
                .attr('class', function (d) {
                return self.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                    dataGroupName: d[groupMapsTo],
                    originalClassName: hoveredElement.attr('class'),
                });
            })
                .style('fill', function (d) {
                var domainIdentifier = self.services.cartesianScales.getDomainIdentifier(d);
                return self.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
            })
                .classed('unfilled', false);
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                data: [datum],
                additionalItems: self.getTooltipAdditionalItems(datum),
            });
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Scatter.SCATTER_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Scatter.SCATTER_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Scatter.SCATTER_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            if (!self.configs.filled) {
                var filled_1 = self.getOptions().points.filled;
                var domainIdentifier_1 = self.services.cartesianScales.getDomainIdentifier(datum);
                var isFilled_1 = self.model.getIsFilled(datum[groupMapsTo], datum[domainIdentifier_1], datum, filled_1);
                hoveredElement
                    .classed('unfilled', !isFilled_1)
                    .style('fill', function (d) {
                    if (isFilled_1 || filled_1) {
                        return self.model.getFillColor(d[groupMapsTo], d[domainIdentifier_1], d);
                    }
                    return null;
                });
            }
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Scatter.SCATTER_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    Scatter.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('circle')
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var events = this.services.events;
        events.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        events.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
        events.removeEventListener(interfaces.Events.Chart.MOUSEOVER, this.handleChartHolderOnHover);
        events.removeEventListener(interfaces.Events.Chart.MOUSEOUT, this.handleChartHolderOnMouseOut);
    };
    return Scatter;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/scatter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bubble.js
var bubble_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports






var Bubble = /** @class */ (function (_super) {
    bubble_extends(Bubble, _super);
    function Bubble() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'bubble';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Bubble.prototype.getRadiusScale = function (selection) {
        var options = this.getOptions();
        var radiusMapsTo = options.bubble.radiusMapsTo;
        var data = selection.data();
        // Filter out any null/undefined values
        var allRadii = data
            .map(function (d) { return d[radiusMapsTo]; })
            .filter(function (radius) { return radius; });
        var chartSize = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
        // We need the ternary operator here in case the user
        // doesn't provide radius values in data
        var radiusDataIsValid = allRadii.length > 0;
        var domain = radiusDataIsValid ? extent(allRadii) : [1, 1];
        return linear_linear()
            .domain(domain)
            .range(radiusDataIsValid
            ? options.bubble.radiusRange(chartSize, data)
            : [4, 4]);
    };
    Bubble.prototype.styleCircles = function (selection, animate) {
        var _this = this;
        // Chart options mixed with the internal configurations
        var options = this.getOptions();
        var radiusMapsTo = options.bubble.radiusMapsTo;
        var radiusScale = this.getRadiusScale(selection);
        var groupMapsTo = options.data.groupMapsTo;
        var cartesianScales = this.services.cartesianScales;
        var getDomainValue = function (d, i) { return cartesianScales.getDomainValue(d, i); };
        var getRangeValue = function (d, i) { return cartesianScales.getRangeValue(d, i); };
        var _a = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _a[0], getYValue = _a[1];
        selection
            .raise()
            .classed('dot', true)
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-label', function (d) {
            var rangeIdentifier = cartesianScales.getRangeIdentifier(d);
            return d[rangeIdentifier];
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'bubble-update-enter',
                animate: animate,
            });
        })
            .attr('cx', getXValue)
            .attr('cy', getYValue)
            // We need `|| 1` here in case the user doesn't provide radius values in data
            .attr('r', function (d) { return radiusScale(d[radiusMapsTo] || 1); })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [
                    interfaces.ColorClassNameTypes.FILL,
                    interfaces.ColorClassNameTypes.STROKE,
                ],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'dot',
            });
        })
            .style('fill', function (d) {
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
            return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
        })
            .style('stroke', function (d) {
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
            return _this.model.getStrokeColor(d[groupMapsTo], d[domainIdentifier], d);
        })
            .attr('fill-opacity', options.bubble.fillOpacity)
            .attr('opacity', 1);
    };
    Bubble.prototype.getTooltipAdditionalItems = function (datum) {
        var bubbleOptions = Tools.getProperty(this.getOptions(), 'bubble');
        return [
            {
                label: Tools.getProperty(bubbleOptions, 'radiusLabel'),
                value: datum[Tools.getProperty(bubbleOptions, 'radiusMapsTo')],
            },
        ];
    };
    return Bubble;
}(Scatter));

//# sourceMappingURL=../../../src/components/graphs/bubble.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/bullet.js
var bullet_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var Bullet = /** @class */ (function (_super) {
    bullet_extends(Bullet, _super);
    function Bullet() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'bullet';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('path.bar')
                .transition('legend-hover-simple-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-simple-bar',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.bar')
                .transition('legend-mouseout-simple-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-simple-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    Bullet.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Bullet.prototype.render = function (animate) {
        var _this = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var data = this.model.getDisplayData(this.configs.groups);
        var rangeScale = this.services.cartesianScales.getRangeScale();
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        var _a = rangeScale.range(), rangeScaleStart = _a[0], rangeScaleEnd = _a[1];
        var _b = rangeScale.domain(), rangeScaleDomainMin = _b[0], rangeScaleDomainMax = _b[1];
        var renderRangeBoxes = function () {
            var rangeBoxData = [];
            data.forEach(function (datum) {
                if (datum.ranges) {
                    datum.ranges.forEach(function (range, i) {
                        if (range !== null &&
                            range !== undefined &&
                            range < rangeScaleDomainMax) {
                            rangeBoxData.push({
                                datum: datum,
                                value: range,
                                order: i + 1,
                            });
                        }
                    });
                }
                else {
                    rangeBoxData.push({
                        datum: datum,
                        order: 1,
                    });
                }
            });
            // Update data on all lines
            var rangeBoxes = DOMUtils.appendOrSelect(svg, 'g.range-boxes')
                .selectAll('path.range-box')
                .data(rangeBoxData, function (datum) { return datum[groupMapsTo] + "-" + datum.order; });
            // Remove lines that are no longer needed
            rangeBoxes.exit().attr('opacity', 0).remove();
            // Add the paths that need to be introduced
            var rangeBoxesEnter = rangeBoxes
                .enter()
                .append('path')
                .attr('opacity', 0);
            rangeBoxesEnter
                .merge(rangeBoxes)
                .attr('class', function (d) { return "range-box order-" + d.order; })
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'bullet-range-box-update-enter',
                    animate: animate,
                });
            })
                .attr('d', function (d, i) {
                /*
                 * Orientation support for horizontal/vertical bar charts
                 * Determine coordinates needed for a vertical set of paths
                 * to draw the bars needed, and pass those coordinates down to
                 * generateSVGPathString() to decide whether it needs to flip them
                 */
                var lineHeight = 16;
                var x0, x1, y0, y1;
                if (d.order === 1) {
                    x0 =
                        _this.services.cartesianScales.getDomainValue(d.datum, i) -
                            lineHeight / 2;
                    x1 = x0 + lineHeight;
                    y0 = rangeScaleEnd - 2;
                    y1 = rangeScaleStart + 1;
                }
                else {
                    x0 =
                        _this.services.cartesianScales.getDomainValue(d.datum, i) -
                            lineHeight / 2;
                    x1 = x0 + lineHeight;
                    y0 = _this.services.cartesianScales.getRangeValue(d.value, i);
                    y1 = rangeScaleEnd;
                }
                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
            })
                .attr('opacity', 1);
        };
        var renderBars = function () {
            // Update data on all bars
            var bars = DOMUtils.appendOrSelect(svg, 'g.bars')
                .selectAll('path.bar')
                .data(data, function (datum) { return datum[groupMapsTo]; });
            // Remove bars that are no longer needed
            bars.exit().attr('opacity', 0).remove();
            // Add the paths that need to be introduced
            var barsEnter = bars.enter().append('path').attr('opacity', 0);
            barsEnter
                .merge(bars)
                .classed('bar', true)
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'bullet-bar-update-enter',
                    animate: animate,
                });
            })
                .attr('class', function (d) {
                return _this.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                    dataGroupName: d[groupMapsTo],
                    originalClassName: 'bar',
                });
            })
                .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })
                .attr('d', function (d, i) {
                /*
                 * Orientation support for horizontal/vertical bar charts
                 * Determine coordinates needed for a vertical set of paths
                 * to draw the bars needed, and pass those coordinates down to
                 * generateSVGPathString() to decide whether it needs to flip them
                 */
                var barWidth = 8;
                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -
                    barWidth / 2;
                var x1 = x0 + barWidth;
                var y0 = _this.services.cartesianScales.getRangeValue(0) + 1;
                var y1 = _this.services.cartesianScales.getRangeValue(d, i);
                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
            })
                .attr('opacity', 1)
                // a11y
                .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
                .attr('aria-roledescription', 'bar')
                .attr('aria-label', function (d) { return d.value; });
        };
        var renderTargetLines = function () {
            // Update data on all lines
            var lines = DOMUtils.appendOrSelect(svg, 'g.markers')
                .selectAll('path.marker')
                .data(data.filter(function (d) { return Tools.getProperty(d, 'marker') !== null; }), function (datum) { return datum[groupMapsTo]; });
            // Remove lines that are no longer needed
            lines.exit().attr('opacity', 0).remove();
            // Add the paths that need to be introduced
            var linesEnter = lines.enter().append('path').attr('opacity', 0);
            linesEnter
                .merge(lines)
                .classed('marker', true)
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'bullet-marker-update-enter',
                    animate: animate,
                });
            })
                .attr('d', function (d, i) {
                /*
                 * Orientation support for horizontal/vertical bar charts
                 * Determine coordinates needed for a vertical set of paths
                 * to draw the bars needed, and pass those coordinates down to
                 * generateSVGPathString() to decide whether it needs to flip them
                 */
                var lineHeight = 24;
                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -
                    lineHeight / 2;
                var x1 = x0 + lineHeight;
                var y0 = _this.services.cartesianScales.getRangeValue(d.marker, i);
                var y1 = y0;
                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
            })
                .attr('opacity', 1);
        };
        var renderTargetQuartiles = function () {
            var quartilesData = [];
            data.filter(function (d) { return Tools.getProperty(d, 'marker') !== null; }).forEach(function (d) {
                var value = d.marker;
                var barValue = d[rangeIdentifier];
                quartilesData = quartilesData.concat([
                    { datum: d, value: value * 0.25, barValue: barValue },
                    { datum: d, value: value * 0.5, barValue: barValue },
                    { datum: d, value: value * 0.75, barValue: barValue },
                ]);
            });
            // Update data on all lines
            var lines = DOMUtils.appendOrSelect(svg, 'g.quartiles')
                .selectAll('path.quartile')
                .data(quartilesData, function (datum) { return datum[groupMapsTo]; });
            // Remove lines that are no longer needed
            lines.exit().attr('opacity', 0).remove();
            // Add the paths that need to be introduced
            var linesEnter = lines.enter().append('path').attr('opacity', 0);
            linesEnter
                .merge(lines)
                .attr('class', function (d) {
                return "quartile " + (d.value <= d.barValue ? 'over-bar' : '');
            })
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'bullet-quartile-update-enter',
                    animate: animate,
                });
            })
                .attr('d', function (_a, i) {
                var d = _a.datum, value = _a.value;
                /*
                 * Orientation support for horizontal/vertical bar charts
                 * Determine coordinates needed for a vertical set of paths
                 * to draw the bars needed, and pass those coordinates down to
                 * generateSVGPathString() to decide whether it needs to flip them
                 */
                var lineHeight = 4;
                // if it lines up with a performance area border
                // make the line taller
                if (d.ranges && d.ranges.indexOf(value) !== -1) {
                    lineHeight = 8;
                }
                var x0 = _this.services.cartesianScales.getDomainValue(d, i) -
                    lineHeight / 2;
                var x1 = x0 + lineHeight;
                var y0 = _this.services.cartesianScales.getRangeValue(value, i);
                var y1 = y0;
                return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
            })
                .attr('opacity', 1);
        };
        renderRangeBoxes();
        renderBars();
        renderTargetLines();
        renderTargetQuartiles();
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    Bullet.prototype.addEventListeners = function () {
        var self = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        this.parent
            .selectAll('path.bar')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            var performanceAreaTitles = Tools.getProperty(options, 'bullet', 'performanceAreaTitles');
            var matchingRangeIndex = self.model.getMatchingRangeIndexForDatapoint(datum);
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: options.tooltip.groupLabel || 'Group',
                        value: datum[groupMapsTo],
                        class: self.model.getColorClassName({
                            classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                            dataGroupName: datum[groupMapsTo],
                        }),
                    },
                    {
                        label: 'Value',
                        value: datum[rangeIdentifier],
                    },
                    {
                        label: 'Target',
                        value: datum.marker,
                    },
                    {
                        label: 'Percentage',
                        value: Math.floor((datum[rangeIdentifier] / datum.marker) * 100) + "%",
                    },
                    {
                        label: 'Performance',
                        value: performanceAreaTitles[matchingRangeIndex],
                    },
                ],
            });
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Bar.BAR_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    Bullet.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('path.bar')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return Bullet;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/bullet.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/histogram.js
var histogram_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports


var Histogram = /** @class */ (function (_super) {
    histogram_extends(Histogram, _super);
    function Histogram() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'histogram';
        _this.renderType = interfaces.RenderTypes.SVG;
        // Highlight elements that match the hovered legend item
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var options = _this.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            _this.parent
                .selectAll('path.bar')
                .transition('legend-hover-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-bar',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        // Un-highlight all elements
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.bar')
                .transition('legend-mouseout-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    Histogram.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Histogram.prototype.render = function (animate) {
        var _this = this;
        // Grab container SVG
        var svg = this.getComponentContainer();
        // Chart options mixed with the internal configurations
        var options = this.model.getOptions();
        var groupIdentifier = options.groupIdentifier;
        var groupMapsTo = options.data.groupMapsTo;
        var binnedStackedData = this.model.getBinnedStackedData();
        var x = this.services.cartesianScales.getMainXScale();
        // Update data on all bar groups
        var barGroups = svg
            .selectAll('g.bars')
            .data(binnedStackedData, function (d) { return lodash_es_get(d, "0." + groupMapsTo); });
        barGroups.exit().attr('opacity', 0).remove();
        // Add bar groups that need to be introduced
        barGroups
            .enter()
            .append('g')
            .classed('bars', true)
            .attr('role', interfaces.Roles.GROUP);
        // Update data on all bars
        var bars = svg
            .selectAll('g.bars')
            .selectAll('path.bar')
            .data(function (data) { return data; });
        // Remove bars that need to be removed
        bars.exit().remove();
        bars.enter()
            .append('path')
            .merge(bars)
            .classed('bar', true)
            .attr(groupIdentifier, function (d, i) { return i; })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'histogram-bar-update-enter',
                animate: animate,
            });
        })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'bar',
            });
        })
            .style('fill', function (d) { return _this.model.getFillColor(d[groupMapsTo]); })
            .attr('d', function (d, i) {
            var bin = lodash_es_get(d, 'data');
            if (!bin) {
                return;
            }
            /*
             * Orientation support for horizontal/vertical bar charts
             * Determine coordinates needed for a vertical set of paths
             * to draw the bars needed, and pass those coordinates down to
             * generateSVGPathString() to decide whether it needs to flip them
             */
            var barWidth = x(bin.x1) - x(bin.x0) - 1;
            var x0 = _this.services.cartesianScales.getDomainValue(bin.x0, i);
            var x1 = x0 + barWidth;
            var y0 = _this.services.cartesianScales.getRangeValue(d[0], i);
            var y1 = _this.services.cartesianScales.getRangeValue(d[1], i);
            // Add the divider gap
            if (Math.abs(y1 - y0) > 0 &&
                Math.abs(y1 - y0) > options.bars.dividerSize) {
                if (_this.services.cartesianScales.getOrientation() ===
                    interfaces.CartesianOrientations.VERTICAL) {
                    y1 += 1;
                }
                else {
                    y1 -= 1;
                }
            }
            return Tools.generateSVGPathString({ x0: x0, x1: x1, y0: y0, y1: y1 }, _this.services.cartesianScales.getOrientation());
        })
            .attr('opacity', 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'bar')
            .attr('aria-label', function (d) {
            return Tools.getProperty(d, 'data', d[groupMapsTo]);
        });
        // Add event listeners for the above elements
        this.addEventListeners();
    };
    Histogram.prototype.addEventListeners = function () {
        var options = this.model.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var self = this;
        this.parent
            .selectAll('path.bar')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            var x0 = parseFloat(lodash_es_get(datum, 'data.x0'));
            var x1 = parseFloat(lodash_es_get(datum, 'data.x1'));
            var rangeAxisPosition = self.services.cartesianScales.getRangeAxisPosition();
            var rangeScaleLabel = self.services.cartesianScales.getScaleLabel(rangeAxisPosition);
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: lodash_es_get(options, 'bins.rangeLabel') || 'Range',
                        value: x0 + " \u2013 " + x1,
                    },
                    {
                        label: options.tooltip.groupLabel || 'Group',
                        value: datum[groupMapsTo],
                        class: self.model.getColorClassName({
                            classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                            dataGroupName: datum[groupMapsTo],
                        }),
                    },
                    {
                        label: rangeScaleLabel,
                        value: lodash_es_get(datum, "data." + datum[groupMapsTo]),
                    },
                ],
            });
        })
            .on('mousemove', function (event, datum) {
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            // Select all same group elements
            hoveredElement.classed('hovered', false);
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
        });
    };
    Histogram.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('path.bar')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return Histogram;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/histogram.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/line.js
var line_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var Line = /** @class */ (function (_super) {
    line_extends(Line, _super);
    function Line() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'line';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            _this.parent
                .selectAll('path.line')
                .transition('legend-hover-line')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-line',
                });
            })
                .attr('opacity', function (group) {
                if (group.name !== hoveredElement.datum()['name']) {
                    return lines.opacity.unselected;
                }
                return lines.opacity.selected;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.line')
                .transition('legend-mouseout-line')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-line',
                });
            })
                .attr('opacity', lines.opacity.selected);
        };
        return _this;
    }
    Line.prototype.init = function () {
        var events = this.services.events;
        // Highlight correct line legend item hovers
        events.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight lines on legend item mouseouts
        events.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Line.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer({ withinChartClip: true });
        var _a = this.services, cartesianScales = _a.cartesianScales, curves = _a.curves;
        var getDomainValue = function (d, i) { return cartesianScales.getDomainValue(d, i); };
        var getRangeValue = function (d, i) { return cartesianScales.getRangeValue(d, i); };
        var _b = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, cartesianScales.getOrientation()), getXValue = _b[0], getYValue = _b[1];
        var options = this.getOptions();
        // D3 line generator function
        var lineGenerator = line()
            .x(getXValue)
            .y(getYValue)
            .curve(curves.getD3Curve())
            .defined(function (datum, i) {
            var rangeIdentifier = cartesianScales.getRangeIdentifier(datum);
            var value = datum[rangeIdentifier];
            if (value === null || value === undefined) {
                return false;
            }
            return true;
        });
        var data = [];
        if (this.configs.stacked) {
            var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });
            var groupMapsTo_1 = options.data.groupMapsTo;
            var stackedData = this.model.getStackedData({
                groups: this.configs.groups,
                percentage: percentage,
            });
            data = stackedData.map(function (d) {
                var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
                return {
                    name: Tools.getProperty(d, 0, groupMapsTo_1),
                    data: d.map(function (datum) {
                        var _a;
                        return (_a = {},
                            _a[domainIdentifier] = datum.data.sharedStackKey,
                            _a[groupMapsTo_1] = datum[groupMapsTo_1],
                            _a[rangeIdentifier] = datum[1],
                            _a);
                    }),
                    hidden: !Tools.some(d, function (datum) { return datum[0] !== datum[1]; }),
                };
            });
        }
        else {
            data = this.model.getGroupedData(this.configs.groups);
        }
        // Update the bound data on lines
        var lines = svg
            .selectAll('path.line')
            .data(data, function (group) { return group.name; });
        // Remove elements that need to be exited
        // We need exit at the top here to make sure that
        // Data filters are processed before entering new elements
        // Or updating existing ones
        lines.exit().attr('opacity', 0).remove();
        // Add lines that need to be introduced
        var enteringLines = lines
            .enter()
            .append('path')
            .classed('line', true)
            .attr('opacity', 0);
        // Apply styles and datum
        enteringLines
            .merge(lines)
            .data(data, function (group) { return group.name; })
            .attr('class', function (group) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                dataGroupName: group.name,
                originalClassName: 'line',
            });
        })
            .style('stroke', function (group) { return _this.model.getStrokeColor(group.name); })
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'line')
            .attr('aria-label', function (group) {
            var groupData = group.data;
            return groupData
                .map(function (datum) {
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum);
                return datum[rangeIdentifier];
            })
                .join(',');
        })
            // Transition
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'line-update-enter',
                animate: animate,
            });
        })
            .attr('opacity', function (d) { return (d.hidden ? 0 : 1); })
            .attr('d', function (group) {
            var groupData = group.data;
            return lineGenerator(groupData);
        });
    };
    Line.prototype.destroy = function () {
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    return Line;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/line.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/lollipop.js
var lollipop_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




var Lollipop = /** @class */ (function (_super) {
    lollipop_extends(Lollipop, _super);
    function Lollipop() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'lollipop';
        _this.renderType = interfaces.RenderTypes.SVG;
        // on hover, bolden the line associated with the scatter
        _this.handleScatterOnHover = function (event) {
            var hoveredElement = event.detail;
            var options = _this.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            _this.parent.selectAll('line.line').attr('stroke-width', function (d) {
                if (d[groupMapsTo] !== hoveredElement.datum[groupMapsTo]) {
                    return lines.weight.unselected;
                }
                // apply selected weight
                return lines.weight.selected;
            });
        };
        // on mouse out remove the stroke width assertion
        _this.handleScatterOnMouseOut = function (event) {
            _this.parent
                .selectAll('line.line')
                .attr('stroke-width', lines.weight.unselected);
        };
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var options = _this.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            _this.parent
                .selectAll('line.line')
                .transition('legend-hover-line')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-line',
                });
            })
                .attr('opacity', function (d) {
                if (d[groupMapsTo] !== hoveredElement.datum()['name']) {
                    return lines.opacity.unselected;
                }
                return lines.opacity.selected;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('line.line')
                .transition('legend-mouseout-line')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-line',
                });
            })
                .attr('opacity', lines.opacity.selected);
        };
        return _this;
    }
    Lollipop.prototype.init = function () {
        var events = this.services.events;
        // Highlight correct line legend item hovers
        events.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight lines on legend item mouseouts
        events.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Lollipop.prototype.render = function (animate) {
        var _this = this;
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var options = this.model.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var cartesianScales = this.services.cartesianScales;
        var mainXScale = cartesianScales.getMainXScale();
        var mainYScale = cartesianScales.getMainYScale();
        var domainIdentifier = cartesianScales.getDomainIdentifier();
        var getDomainValue = function (d, i) { return cartesianScales.getDomainValue(d, i); };
        var getRangeValue = function (d, i) { return cartesianScales.getRangeValue(d, i); };
        var orientation = cartesianScales.getOrientation();
        var _a = Tools.flipDomainAndRangeBasedOnOrientation(getDomainValue, getRangeValue, orientation), getXValue = _a[0], getYValue = _a[1];
        // Update data on lines
        var lines = svg
            .selectAll('line.line')
            .data(this.getScatterData(), function (datum) { return datum[groupMapsTo] + "-" + datum[domainIdentifier]; });
        // Remove lines that are no longer needed
        lines.exit().attr('opacity', 0).remove();
        // Remove lines that need to be removed
        var enteringLines = lines.enter().append('line').attr('opacity', 0);
        var allLines = enteringLines
            .merge(lines)
            .classed('line', true)
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                dataGroupName: d[groupMapsTo],
                originalClassName: 'line',
            });
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'lollipop-line-update-enter',
                animate: animate,
            });
        })
            .style('stroke', function (d) {
            return _this.model.getFillColor(d[groupMapsTo], d[domainIdentifier], d);
        })
            .attr('opacity', 1);
        if (orientation === interfaces.CartesianOrientations.HORIZONTAL) {
            allLines
                .attr('y1', getYValue)
                .attr('y2', getYValue)
                .attr('x1', mainXScale.range()[0])
                .attr('x2', function (d, i) { return getXValue(d, i) - options.points.radius; });
        }
        else {
            allLines
                .attr('x1', getXValue)
                .attr('x2', getXValue)
                .attr('y1', mainYScale.range()[0])
                .attr('y2', function (d, i) { return getYValue(d, i) + options.points.radius; });
        }
        this.addScatterPointEventListeners();
    };
    // listen for when individual datapoints are hovered
    Lollipop.prototype.addScatterPointEventListeners = function () {
        // Highlight correct line associated when hovering on a scatter point
        this.services.events.addEventListener(interfaces.Events.Scatter.SCATTER_MOUSEOVER, this.handleScatterOnHover);
        // unbolden the line when not hovered on the lollipop scatter point
        this.services.events.addEventListener(interfaces.Events.Scatter.SCATTER_MOUSEOUT, this.handleScatterOnMouseOut);
    };
    Lollipop.prototype.destroy = function () {
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
        // remove scatter listeners
        eventsFragment.removeEventListener(interfaces.Events.Scatter.SCATTER_MOUSEOVER, this.handleScatterOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Scatter.SCATTER_MOUSEOUT, this.handleScatterOnMouseOut);
    };
    return Lollipop;
}(Scatter));

//# sourceMappingURL=../../../src/components/graphs/lollipop.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/scatter-stacked.js
var scatter_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



var StackedScatter = /** @class */ (function (_super) {
    scatter_stacked_extends(StackedScatter, _super);
    function StackedScatter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'scatter-stacked';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    StackedScatter.prototype.render = function (animate) {
        var _this = this;
        var isScatterEnabled = Tools.getProperty(this.getOptions(), 'points', 'enabled');
        if (!isScatterEnabled) {
            return;
        }
        // Grab container SVG
        var svg = this.getComponentContainer({ withinChartClip: true });
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });
        var stackedData = this.model.getStackedData({
            groups: this.configs.groups,
            percentage: percentage,
        });
        // Update data on dot groups
        var circleGroups = svg
            .selectAll('g.dots')
            .data(stackedData, function (d) { return Tools.getProperty(d, 0, groupMapsTo); });
        // Remove dot groups that need to be removed
        circleGroups.exit().attr('opacity', 0).remove();
        // Add the dot groups that need to be introduced
        var circleGroupsEnter = circleGroups
            .enter()
            .append('g')
            .classed('dots', true)
            .attr('role', interfaces.Roles.GROUP);
        // Update data on all circles
        var circles = circleGroupsEnter
            .merge(circleGroups)
            .selectAll('circle.dot')
            .data(function (d) { return d; });
        // Remove circles that need to be removed
        circles.exit().attr('opacity', 0).remove();
        // Add the dot groups that need to be introduced
        var enteringCircles = circles
            .enter()
            .append('circle')
            .classed('dot', true)
            .attr('opacity', 0);
        // Apply styling & position
        var circlesToStyle = enteringCircles.merge(circles).datum(function (d) {
            var _a;
            var group = d[groupMapsTo];
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(d);
            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
            return _a = {},
                _a[groupMapsTo] = group,
                _a[domainIdentifier] = d['data']['sharedStackKey'],
                _a[rangeIdentifier] = d[1],
                _a;
        });
        this.styleCircles(circlesToStyle, animate);
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    StackedScatter.prototype.getTooltipData = function (hoveredX, hoveredY) {
        var _this = this;
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var percentage = Object.keys(options.axes).some(function (axis) { return options.axes[axis].percentage; });
        var stackedData = this.model.getStackedData({
            groups: this.configs.groups,
            percentage: percentage,
        });
        var tooltipData = [];
        stackedData.forEach(function (groupData, groupDataIndex) {
            groupData.forEach(function (datum, dataIndex) {
                var _a;
                var group = datum[groupMapsTo];
                var domainValue = datum['data']['sharedStackKey'];
                var rangeValue = datum['data'][group];
                var stackedRangeValue = datum[1];
                var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datum);
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datum);
                if (rangeValue !== null &&
                    rangeValue !== undefined &&
                    hoveredX ===
                        _this.services.cartesianScales.getDomainValue(domainValue) &&
                    hoveredY ===
                        _this.services.cartesianScales.getRangeValue(stackedRangeValue)) {
                    if (percentage) {
                        rangeValue = _this.model.getStackedData({
                            groups: _this.configs.groups,
                        })[groupDataIndex][dataIndex]['data'][group];
                    }
                    if (rangeValue !== null) {
                        tooltipData.push((_a = {},
                            _a[groupMapsTo] = group,
                            _a[domainIdentifier] = domainValue,
                            _a[rangeIdentifier] = rangeValue,
                            _a));
                    }
                }
            });
        });
        return this.model
            .getDisplayData(this.configs.groups)
            .filter(function (datapoint) {
            var domainIdentifier = _this.services.cartesianScales.getDomainIdentifier(datapoint);
            var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(datapoint);
            return (tooltipData.find(function (tooltipDatapoint) {
                return (tooltipDatapoint[groupMapsTo] ==
                    datapoint[groupMapsTo] &&
                    tooltipDatapoint[domainIdentifier] ==
                        datapoint[domainIdentifier] &&
                    tooltipDatapoint[rangeIdentifier] ==
                        datapoint[rangeIdentifier]);
            }) !== undefined);
        });
    };
    return StackedScatter;
}(Scatter));

//# sourceMappingURL=../../../src/components/graphs/scatter-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/arc.js




function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0, y10 = y1 - y0,
      x32 = x3 - x2, y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
}

// Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html
function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * sqrt(math_max(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00;

  // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?
  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;

  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

/* harmony default export */ function arc() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = src_constant(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - halfPi,
        a1 = endAngle.apply(this, arguments) - halfPi,
        da = abs(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = src_path();

    // Ensure that the outer radius is always larger than the inner radius.
    if (r1 < r0) r = r1, r1 = r0, r0 = r;

    // Is it a point?
    if (!(r1 > epsilon)) context.moveTo(0, 0);

    // Or is it a circle or annulus?
    else if (da > tau - epsilon) {
      context.moveTo(r1 * cos(a0), r1 * sin(a0));
      context.arc(0, 0, r1, a0, a1, !cw);
      if (r0 > epsilon) {
        context.moveTo(r0 * cos(a1), r0 * sin(a1));
        context.arc(0, 0, r0, a1, a0, cw);
      }
    }

    // Or is it a circular or annular sector?
    else {
      var a01 = a0,
          a11 = a1,
          a00 = a0,
          a10 = a1,
          da0 = da,
          da1 = da,
          ap = padAngle.apply(this, arguments) / 2,
          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),
          rc = math_min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
          rc0 = rc,
          rc1 = rc,
          t0,
          t1;

      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
      if (rp > epsilon) {
        var p0 = asin(rp / r0 * sin(ap)),
            p1 = asin(rp / r1 * sin(ap));
        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
        else da0 = 0, a00 = a10 = (a0 + a1) / 2;
        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
        else da1 = 0, a01 = a11 = (a0 + a1) / 2;
      }

      var x01 = r1 * cos(a01),
          y01 = r1 * sin(a01),
          x10 = r0 * cos(a10),
          y10 = r0 * sin(a10);

      // Apply rounded corners?
      if (rc > epsilon) {
        var x11 = r1 * cos(a11),
            y11 = r1 * sin(a11),
            x00 = r0 * cos(a00),
            y00 = r0 * sin(a00),
            oc;

        // Restrict the corner radius according to the sector angle.
        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
          var ax = x01 - oc[0],
              ay = y01 - oc[1],
              bx = x11 - oc[0],
              by = y11 - oc[1],
              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),
              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = math_min(rc, (r0 - lc) / (kc - 1));
          rc1 = math_min(rc, (r1 - lc) / (kc + 1));
        }
      }

      // Is the sector collapsed to a line?
      if (!(da1 > epsilon)) context.moveTo(x01, y01);

      // Does the sector’s outer ring have rounded corners?
      else if (rc1 > epsilon) {
        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);

        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the outer ring just a circular arc?
      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);

      // Is there no inner ring, and it’s a circular sector?
      // Or perhaps it’s an annular sector collapsed due to padding?
      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);

      // Does the sector’s inner ring (or point) have rounded corners?
      else if (rc0 > epsilon) {
        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);

        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);

        // Have the corners merged?
        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);

        // Otherwise, draw the two corners and the ring.
        else {
          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);
          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);
        }
      }

      // Or is the inner ring just a circular arc?
      else context.arc(0, 0, r0, a10, a00, cw);
    }

    context.closePath();

    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function() {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
    return [cos(a) * r, sin(a) * r];
  };

  arc.innerRadius = function(_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : src_constant(+_), arc) : innerRadius;
  };

  arc.outerRadius = function(_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : src_constant(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function(_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : src_constant(+_), arc) : cornerRadius;
  };

  arc.padRadius = function(_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : src_constant(+_), arc) : padRadius;
  };

  arc.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : src_constant(+_), arc) : startAngle;
  };

  arc.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : src_constant(+_), arc) : endAngle;
  };

  arc.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : src_constant(+_), arc) : padAngle;
  };

  arc.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), arc) : context;
  };

  return arc;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/descending.js
/* harmony default export */ function descending(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/identity.js
/* harmony default export */ function d3_shape_src_identity(d) {
  return d;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/pie.js






/* harmony default export */ function src_pie() {
  var value = d3_shape_src_identity,
      sortValues = descending,
      sort = null,
      startAngle = src_constant(0),
      endAngle = src_constant(tau),
      padAngle = src_constant(0);

  function pie(data) {
    var i,
        n = (data = array(data)).length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    }

    // Optionally sort the arcs by previously-computed values or by data.
    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });

    // Compute the arcs! They are stored in the original data's order.
    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : src_constant(+_), pie) : value;
  };

  pie.sortValues = function(_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function(_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function(_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : src_constant(+_), pie) : startAngle;
  };

  pie.endAngle = function(_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : src_constant(+_), pie) : endAngle;
  };

  pie.padAngle = function(_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : src_constant(+_), pie) : padAngle;
  };

  return pie;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/pie.js
var pie_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// D3 Imports



// Pie slice tween function
function arcTween(a, arcFunc) {
    var _this = this;
    var i = value(this._current, a);
    return function (t) {
        _this._current = i(t);
        return arcFunc(_this._current);
    };
}
var Pie = /** @class */ (function (_super) {
    pie_extends(Pie, _super);
    function Pie() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'pie';
        _this.renderType = interfaces.RenderTypes.SVG;
        // Highlight elements that match the hovered legend item
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('path.slice')
                .transition('legend-hover-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-bar',
                });
            })
                .attr('opacity', function (d) {
                return d.data[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        // Un-highlight all elements
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('path.slice')
                .transition('legend-mouseout-bar')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-bar',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    Pie.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct circle on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Pie.prototype.getInnerRadius = function () {
        return pie.innerRadius;
    };
    Pie.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var valueMapsTo = options.pie.valueMapsTo;
        // remove any slices that are valued at 0 because they dont need to be rendered and will create extra padding
        var displayData = this.model
            .getDisplayData()
            .filter(function (data) { return data[valueMapsTo] > 0; });
        // Compute the outer radius needed
        var radius = this.computeRadius();
        this.arc = arc().innerRadius(this.getInnerRadius()).outerRadius(radius);
        // Set the hover arc radius
        this.hoverArc = arc()
            .innerRadius(this.getInnerRadius())
            .outerRadius(radius + pie.hoverArc.outerRadiusOffset);
        // Setup the pie layout
        var pieLayout = src_pie()
            .value(function (d) { return d[valueMapsTo]; })
            .sort(Tools.getProperty(options, 'pie', 'sortFunction'))
            .padAngle(pie.padAngle);
        // Add data to pie layout
        var pieLayoutData = pieLayout(displayData);
        // Update data on all slices
        var slicesGroup = DOMUtils.appendOrSelect(svg, 'g.slices')
            .attr('role', interfaces.Roles.GROUP)
            .attr('data-name', 'slices');
        var paths = slicesGroup
            .selectAll('path.slice')
            .data(pieLayoutData, function (d) { return d.data[groupMapsTo]; });
        // Remove slices that need to be exited
        paths.exit().attr('opacity', 0).remove();
        // Add new slices that are being introduced
        var enteringPaths = paths
            .enter()
            .append('path')
            .classed('slice', true)
            .attr('opacity', 0);
        // Update styles & position on existing and entering slices
        var allPaths = enteringPaths
            .merge(paths)
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d.data[groupMapsTo],
                originalClassName: 'slice',
            });
        })
            .style('fill', function (d) { return self.model.getFillColor(d.data[groupMapsTo]); })
            .attr('d', this.arc);
        allPaths
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'pie_slice_enter_update',
                animate: animate,
            });
        })
            .attr('opacity', 1)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'slice')
            .attr('aria-label', function (d) {
            return d[valueMapsTo] + ", " + (Tools.convertValueToPercentage(d.data[valueMapsTo], displayData, valueMapsTo) + '%');
        })
            // Tween
            .attrTween('d', function (a) {
            return arcTween.bind(this)(a, self.arc);
        });
        // Draw the slice labels
        var renderLabels = options.pie.labels.enabled;
        var labelData = renderLabels
            ? pieLayoutData.filter(function (x) { return x.data[valueMapsTo] > 0; })
            : [];
        var labelsGroup = DOMUtils.appendOrSelect(svg, 'g.labels')
            .attr('role', interfaces.Roles.GROUP)
            .attr('data-name', 'labels');
        var labels = labelsGroup
            .selectAll('text.pie-label')
            .data(labelData, function (d) { return d.data[groupMapsTo]; });
        // Remove labels that are existing
        labels.exit().attr('opacity', 0).remove();
        // Add labels that are being introduced
        var enteringLabels = labels
            .enter()
            .append('text')
            .classed('pie-label', true);
        // Update styles & position on existing & entering labels
        var calloutData = [];
        enteringLabels
            .merge(labels)
            .style('text-anchor', 'middle')
            .text(function (d) {
            if (options.pie.labels.formatter) {
                return options.pie.labels.formatter(d);
            }
            return (Tools.convertValueToPercentage(d.data[valueMapsTo], displayData, valueMapsTo) + '%');
        })
            // Calculate dimensions in order to transform
            .datum(function (d) {
            var marginedRadius = radius + 7;
            var theta = (d.endAngle - d.startAngle) / 2 + d.startAngle;
            var deg = (theta / Math.PI) * 180;
            var textLength = this.getComputedTextLength();
            d.textOffsetX = textLength / 2;
            d.textOffsetY = deg > 90 && deg < 270 ? 10 : 0;
            d.xPosition =
                (d.textOffsetX + marginedRadius) * Math.sin(theta);
            d.yPosition =
                (d.textOffsetY + marginedRadius) * -Math.cos(theta);
            return d;
        })
            .attr('transform', function (d, i) {
            var totalSlices = labelData.length;
            var sliceAngleDeg = (d.endAngle - d.startAngle) * (180 / Math.PI);
            // check if last 2 slices (or just last) are < the threshold
            if (i >= totalSlices - 2) {
                if (sliceAngleDeg < pie.callout.minSliceDegree) {
                    var labelTranslateX = void 0, labelTranslateY = void 0;
                    if (d.index === totalSlices - 1) {
                        labelTranslateX =
                            d.xPosition +
                                pie.callout.offsetX +
                                pie.callout.textMargin +
                                d.textOffsetX;
                        labelTranslateY =
                            d.yPosition - pie.callout.offsetY;
                        // Set direction of callout
                        d.direction = interfaces.CalloutDirections.RIGHT;
                        calloutData.push(d);
                    }
                    else {
                        labelTranslateX =
                            d.xPosition -
                                pie.callout.offsetX -
                                d.textOffsetX -
                                pie.callout.textMargin;
                        labelTranslateY =
                            d.yPosition - pie.callout.offsetY;
                        // Set direction of callout
                        d.direction = interfaces.CalloutDirections.LEFT;
                        calloutData.push(d);
                    }
                    return "translate(" + labelTranslateX + ", " + labelTranslateY + ")";
                }
            }
            return "translate(" + d.xPosition + ", " + d.yPosition + ")";
        });
        // Render pie label callouts
        this.renderCallouts(calloutData);
        var optionName = Tools.getProperty(options, 'donut')
            ? 'donut'
            : 'pie';
        var alignment = Tools.getProperty(options, optionName, 'alignment');
        var width = DOMUtils.getSVGElementSize(this.getParent(), {
            useAttrs: true,
        }).width;
        // don't add padding for labels & callouts if they are disabled
        var xOffset = renderLabels ? pie.xOffset : 0;
        var yOffset = renderLabels ? pie.yOffset : 0;
        // Position Pie
        var pieTranslateX = radius + xOffset;
        if (alignment === interfaces.Alignments.CENTER) {
            pieTranslateX = width / 2;
        }
        else if (alignment === interfaces.Alignments.RIGHT) {
            pieTranslateX = width - radius - pie.xOffset;
        }
        var pieTranslateY = radius + yOffset;
        if (calloutData.length > 0) {
            pieTranslateY += pie.yOffsetCallout;
        }
        svg.attr('x', pieTranslateX + 7).attr('y', pieTranslateY);
        // Add event listeners
        this.addEventListeners();
    };
    Pie.prototype.renderCallouts = function (calloutData) {
        var svg = DOMUtils.appendOrSelect(this.getComponentContainer(), 'g.callouts')
            .attr('role', interfaces.Roles.GROUP)
            .attr('data-name', 'callouts');
        // Update data on callouts
        var callouts = svg.selectAll('g.callout').data(calloutData);
        callouts.exit().remove();
        var enteringCallouts = callouts
            .enter()
            .append('g')
            .classed('callout', true)
            // a11y
            .attr('role', interfaces.Roles.GROUP)
            .attr('aria-roledescription', 'label callout');
        // Update data values for each callout
        // For the horizontal and vertical lines to use
        enteringCallouts.merge(callouts).datum(function (d) {
            var xPosition = d.xPosition, yPosition = d.yPosition, direction = d.direction;
            if (direction === interfaces.CalloutDirections.RIGHT) {
                d.startPos = {
                    x: xPosition,
                    y: yPosition + d.textOffsetY,
                };
                // end position for the callout line
                d.endPos = {
                    x: xPosition + pie.callout.offsetX,
                    y: yPosition -
                        pie.callout.offsetY +
                        d.textOffsetY,
                };
                // the intersection point of the vertical and horizontal line
                d.intersectPointX =
                    d.endPos.x - pie.callout.horizontalLineLength;
            }
            else {
                // start position for the callout line
                d.startPos = {
                    x: xPosition,
                    y: yPosition + d.textOffsetY,
                };
                // end position for the callout line should be bottom aligned to the title
                d.endPos = {
                    x: xPosition - pie.callout.offsetX,
                    y: yPosition -
                        pie.callout.offsetY +
                        d.textOffsetY,
                };
                // the intersection point of the vertical and horizontal line
                d.intersectPointX =
                    d.endPos.x + pie.callout.horizontalLineLength;
            }
            // Store the necessary data in the DOM element
            return d;
        });
        // draw vertical line
        var enteringVerticalLines = enteringCallouts
            .append('line')
            .classed('vertical-line', true);
        enteringVerticalLines
            .merge(svg.selectAll('line.vertical-line'))
            .datum(function (d) {
            return src_select(this.parentNode).datum();
        })
            .style('stroke-width', '1px')
            .attr('x1', function (d) { return d.startPos.x; })
            .attr('y1', function (d) { return d.startPos.y; })
            .attr('x2', function (d) { return d.intersectPointX; })
            .attr('y2', function (d) { return d.endPos.y; });
        // draw horizontal line
        var enteringHorizontalLines = enteringCallouts
            .append('line')
            .classed('horizontal-line', true);
        enteringHorizontalLines
            .merge(svg.selectAll('line.horizontal-line'))
            .datum(function (d) {
            return src_select(this.parentNode).datum();
        })
            .style('stroke-width', '1px')
            .attr('x1', function (d) { return d.intersectPointX; })
            .attr('y1', function (d) { return d.endPos.y; })
            .attr('x2', function (d) { return d.endPos.x; })
            .attr('y2', function (d) { return d.endPos.y; });
    };
    Pie.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('path.slice')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement
                .classed('hovered', true)
                .transition('pie_slice_mouseover')
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'pie_slice_mouseover',
                });
            })
                .attr('d', self.hoverArc);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Pie.SLICE_MOUSEOVER, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            var groupMapsTo = self.getOptions().data.groupMapsTo;
            var valueMapsTo = self.getOptions().pie.valueMapsTo;
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: datum.data[groupMapsTo],
                        value: datum.data[valueMapsTo],
                    },
                ],
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Pie.SLICE_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Pie.SLICE_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement
                .classed('hovered', false)
                .transition('pie_slice_mouseout')
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'pie_slice_mouseout',
                });
            })
                .attr('d', self.arc);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Pie.SLICE_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    // Helper functions
    Pie.prototype.computeRadius = function () {
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var options = this.getOptions();
        var radius = Math.min(width, height) / 2;
        var renderLabels = options.pie.labels.enabled;
        return renderLabels ? radius + pie.radiusOffset : radius;
    };
    return Pie;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/pie.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/gauge.js
var gauge_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports


// arrow paths for delta
var ARROW_UP_PATH_STRING = '4,10 8,6 12,10';
var ARROW_DOWN_PATH_STRING = '12,6 8,10 4,6';
var Gauge = /** @class */ (function (_super) {
    gauge_extends(Gauge, _super);
    function Gauge() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'gauge';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Gauge.prototype.getValue = function () {
        var _a, _b;
        var data = this.model.getData();
        var value = (_b = (_a = data.find(function (d) { return d.group === 'value'; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));
        return value;
    };
    Gauge.prototype.getValueRatio = function () {
        var value = Tools.clamp(this.getValue(), 0, 100);
        return value / 100;
    };
    Gauge.prototype.getDelta = function () {
        var _a, _b;
        var data = this.model.getData();
        var delta = (_b = (_a = data.find(function (d) { return d.group === 'delta'; })) === null || _a === void 0 ? void 0 : _a.value, (_b !== null && _b !== void 0 ? _b : null));
        return delta;
    };
    Gauge.prototype.getArcRatio = function () {
        var options = this.getOptions();
        var type = Tools.getProperty(options, 'gauge', 'type');
        var arcRatio = type === interfaces.GaugeTypes.FULL ? 1 : 0.5;
        return arcRatio;
    };
    Gauge.prototype.getArcSize = function () {
        return this.getArcRatio() * Math.PI * 2;
    };
    Gauge.prototype.getStartAngle = function () {
        var arcSize = this.getArcSize();
        if (arcSize === 2 * Math.PI) {
            return 0;
        }
        return -arcSize / 2;
    };
    // use provided arrow direction or default to using the delta
    Gauge.prototype.getArrow = function (delta) {
        var options = this.getOptions();
        var arrowDirection = Tools.getProperty(options, 'gauge', 'deltaArrow', 'direction');
        switch (arrowDirection) {
            case interfaces.ArrowDirections.UP:
                return ARROW_UP_PATH_STRING;
            case interfaces.ArrowDirections.DOWN:
                return ARROW_DOWN_PATH_STRING;
            default:
                return delta > 0
                    ? ARROW_UP_PATH_STRING
                    : ARROW_DOWN_PATH_STRING;
        }
    };
    Gauge.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer()
            .attr('width', '100%')
            .attr('height', '100%');
        var options = this.getOptions();
        var value = this.getValue();
        var valueRatio = this.getValueRatio();
        var arcSize = this.getArcSize();
        // angles for drawing the gauge
        var startAngle = this.getStartAngle();
        var rotationAngle = valueRatio * arcSize;
        var currentAngle = startAngle + rotationAngle;
        var endAngle = startAngle + arcSize;
        // Compute the outer radius needed
        var radius = this.computeRadius();
        var innerRadius = this.getInnerRadius();
        // draw the container and arc
        this.backgroundArc = arc()
            .innerRadius(innerRadius)
            .outerRadius(radius)
            .startAngle(currentAngle)
            .endAngle(endAngle);
        this.arc = arc()
            .innerRadius(innerRadius)
            .outerRadius(radius)
            .startAngle(startAngle)
            .endAngle(currentAngle);
        // draw the container
        DOMUtils.appendOrSelect(svg, 'path.arc-background').attr('d', this.backgroundArc);
        // Add data arc
        var arcValue = svg.selectAll('path.arc-foreground').data([value]);
        var arcEnter = arcValue.enter().append('path');
        arcEnter
            .merge(arcValue)
            .attr('class', this.model.getColorClassName({
            classNameTypes: [interfaces.ColorClassNameTypes.FILL],
            dataGroupName: 'value',
            originalClassName: 'arc-foreground',
        }))
            .style('fill', function (d) {
            return Tools.getProperty(_this.getOptions(), 'color', 'scale', 'value');
        })
            .attr('d', this.arc)
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'value')
            .attr('aria-label', function (d) { return d; });
        // draw the value and delta to the center
        this.drawValueNumber();
        this.drawDelta();
        arcValue.exit().remove();
        var alignment = Tools.getProperty(options, 'gauge', 'alignment');
        var width = DOMUtils.getSVGElementSize(this.getParent(), {
            useAttrs: true,
        }).width;
        // Position gauge
        var gaugeTranslateX = radius;
        if (alignment === interfaces.Alignments.CENTER) {
            gaugeTranslateX = width / 2;
        }
        else if (alignment === interfaces.Alignments.RIGHT) {
            gaugeTranslateX = width - radius;
        }
        svg.attr('x', gaugeTranslateX).attr('y', radius);
        // Add event listeners
        this.addEventListeners();
    };
    /**
     * draws the value number associated with the Gauge component in the center
     */
    Gauge.prototype.drawValueNumber = function () {
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var arcType = Tools.getProperty(options, 'gauge', 'type');
        var value = this.getValue();
        var delta = this.getDelta();
        // Sizing and positions relative to the radius
        var radius = this.computeRadius();
        var valueFontSize = Tools.getProperty(options, 'gauge', 'valueFontSize');
        // if there is a delta, use the size to center the numbers, otherwise center the valueNumber
        var deltaFontSize = Tools.getProperty(options, 'gauge', 'deltaFontSize');
        var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');
        var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol');
        // circular gauge without delta should have valueNumber centered
        var numbersYPosition = 0;
        if (arcType === interfaces.GaugeTypes.FULL && !delta) {
            numbersYPosition = deltaFontSize(radius);
        }
        else if (arcType === interfaces.GaugeTypes.SEMI && delta) {
            // semi circular gauge we want the numbers aligned to the chart container
            numbersYPosition = -(deltaFontSize(radius) + numberSpacing);
        }
        // Add the numbers at the center
        var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers').attr('transform', "translate(0, " + numbersYPosition + ")");
        var fontSize = valueFontSize(radius);
        // Add the big number
        var valueNumberGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-value-number');
        var numberFormatter = Tools.getProperty(options, 'gauge', 'numberFormatter');
        var valueNumber = valueNumberGroup
            .selectAll('text.gauge-value-number')
            .data([value]);
        valueNumber
            .enter()
            .append('text')
            .attr('class', 'gauge-value-number')
            .merge(valueNumber)
            .style('font-size', fontSize + "px")
            .attr('text-anchor', 'middle')
            .text(function (d) { return numberFormatter(d); });
        // add the percentage symbol beside the valueNumber
        var valueNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, 'text.gauge-value-number'), { useBBox: true }).width;
        var symbolFontSize = fontSize / 2;
        var gaugeSymbol = showPercentageSymbol ? '%' : '';
        var symbol = DOMUtils.appendOrSelect(valueNumberGroup, 'text.gauge-value-symbol')
            .style('font-size', symbolFontSize + "px")
            .attr('x', valueNumberWidth / 2)
            .text(gaugeSymbol);
        var _a = DOMUtils.getSVGElementSize(symbol, { useBBox: true }), symbolWidth = _a.width, symbolHeight = _a.height;
        // adjust the symbol to superscript using the bbox instead of the font-size cause
        // we want to align the actual character to the value number
        symbol.attr('y', "-" + symbolHeight / 2 + "px");
        // move the value group depending on the symbol's drawn size
        valueNumberGroup.attr('transform', "translate(-" + symbolWidth / 2 + ", 0)"); // Optical centering for the presence of the smaller % symbol
    };
    /**
     * adds the delta number for the gauge
     */
    Gauge.prototype.drawDelta = function () {
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var delta = this.getDelta();
        // Sizing and positions relative to the radius
        var radius = this.computeRadius();
        var deltaFontSize = delta
            ? Tools.getProperty(options, 'gauge', 'deltaFontSize')
            : function () { return 0; };
        // use numberFormatter here only if there is a delta supplied
        var numberFormatter = delta
            ? Tools.getProperty(options, 'gauge', 'numberFormatter')
            : function () { return null; };
        var arrowSize = Tools.getProperty(options, 'gauge', 'deltaArrow', 'size');
        var numberSpacing = Tools.getProperty(options, 'gauge', 'numberSpacing');
        var showPercentageSymbol = Tools.getProperty(options, 'gauge', 'showPercentageSymbol');
        var numbersGroup = DOMUtils.appendOrSelect(svg, 'g.gauge-numbers');
        // Add the smaller number of the delta
        var deltaGroup = DOMUtils.appendOrSelect(numbersGroup, 'g.gauge-delta').attr('transform', "translate(0, " + (deltaFontSize(radius) + numberSpacing) + ")");
        var deltaNumber = DOMUtils.appendOrSelect(deltaGroup, 'text.gauge-delta-number');
        var gaugeSymbol = showPercentageSymbol ? '%' : '';
        deltaNumber.data(delta === null ? [] : [delta]);
        deltaNumber
            .enter()
            .append('text')
            .classed('gauge-delta-number', true)
            .merge(deltaNumber)
            .attr('text-anchor', 'middle')
            .style('font-size', deltaFontSize(radius) + "px")
            .text(function (d) { return "" + numberFormatter(d) + gaugeSymbol; });
        // Add the caret for the delta number
        var deltaNumberWidth = DOMUtils.getSVGElementSize(DOMUtils.appendOrSelect(svg, '.gauge-delta-number'), { useBBox: true }).width;
        // check if delta arrow is disabled
        var arrowEnabled = Tools.getProperty(options, 'gauge', 'deltaArrow', 'enabled');
        var deltaArrow = deltaGroup
            .selectAll('svg.gauge-delta-arrow')
            .data(delta !== null && arrowEnabled ? [delta] : []);
        deltaArrow
            .enter()
            .append('svg')
            .merge(deltaArrow)
            .attr('class', 'gauge-delta-arrow')
            .attr('x', -arrowSize(radius) - deltaNumberWidth / 2)
            .attr('y', -arrowSize(radius) / 2 - deltaFontSize(radius) * 0.35)
            .attr('width', arrowSize(radius))
            .attr('height', arrowSize(radius))
            .attr('viewBox', '0 0 16 16')
            /*
             * using .each() here to ensure that the below function runs
             * after svg.gauge-delta-arrow has been mounted onto the DOM
             */
            .each(function () {
            var deltaArrowSelection = src_select(this);
            // Needed to correctly size SVG in Firefox
            DOMUtils.appendOrSelect(deltaArrowSelection, 'rect.gauge-delta-arrow-backdrop')
                .attr('width', '16')
                .attr('height', '16')
                .attr('fill', 'none');
            // Draw the arrow with status
            var status = Tools.getProperty(options, 'gauge', 'status');
            DOMUtils.appendOrSelect(deltaArrowSelection, 'polygon.gauge-delta-arrow')
                .attr('class', status !== null
                ? "gauge-delta-arrow status--" + status
                : '')
                .attr('points', self.getArrow(delta));
        });
        deltaArrow.exit().remove();
        deltaNumber.exit().remove();
    };
    Gauge.prototype.getInnerRadius = function () {
        // Compute the outer radius needed
        var radius = this.computeRadius();
        var arcWidth = Tools.getProperty(this.getOptions(), 'gauge', 'arcWidth');
        return radius - arcWidth;
    };
    Gauge.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('path.arc-foreground')
            .on('mouseover', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Gauge.ARC_MOUSEOVER, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Gauge.ARC_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Gauge.ARC_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Gauge.ARC_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        });
    };
    // Helper functions
    Gauge.prototype.computeRadius = function () {
        var options = this.getOptions();
        var arcType = Tools.getProperty(options, 'gauge', 'type');
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var radius = arcType === interfaces.GaugeTypes.SEMI
            ? Math.min(width / 2, height)
            : Math.min(width / 2, height / 2);
        return radius;
    };
    return Gauge;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/gauge.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/donut.js
var donut_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports


var Donut = /** @class */ (function (_super) {
    donut_extends(Donut, _super);
    function Donut() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'donut';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Donut.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        // Call render() from Pie
        _super.prototype.render.call(this, animate);
        var self = this;
        // if there are no data, remove the center content
        // that is the old one and do nothing
        if (this.model.isDataEmpty()) {
            this.getComponentContainer().select('g.center').remove();
            return;
        }
        var svg = DOMUtils.appendOrSelect(this.getComponentContainer(), 'g.center');
        var options = this.getOptions();
        // Compute the outer radius needed
        var radius = this.computeRadius();
        var donutTitle = Tools.getProperty(options, 'donut', 'center', 'label');
        // Add the number shown in the center of the donut
        DOMUtils.appendOrSelect(svg, 'text.donut-figure')
            .attr('text-anchor', 'middle')
            .style('dominant-baseline', function () {
            // Center figure if title is empty
            if (donutTitle === null || donutTitle === '') {
                return 'central';
            }
            return 'initial';
        })
            .style('font-size', function () {
            return options.donut.center.numberFontSize(radius);
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'donut-figure-enter-update',
                animate: animate,
            });
        })
            .tween('text', function () {
            return self.centerNumberTween(src_select(this));
        });
        // Title will be rendered only if it isn't empty
        if (donutTitle !== null && donutTitle !== '') {
            // Add the label below the number in the center of the donut
            DOMUtils.appendOrSelect(svg, 'text.donut-title')
                .attr('text-anchor', 'middle')
                .style('font-size', function () {
                return options.donut.center.titleFontSize(radius);
            })
                .attr('y', options.donut.center.titleYPosition(radius))
                .text(donutTitle);
        }
    };
    Donut.prototype.getInnerRadius = function () {
        // Compute the outer radius needed
        var radius = this.computeRadius();
        return radius * (3 / 4);
    };
    Donut.prototype.centerNumberTween = function (d3Ref) {
        var options = this.getOptions();
        var donutCenterFigure = Tools.getProperty(options, 'donut', 'center', 'number');
        if (donutCenterFigure === null) {
            donutCenterFigure = this.model
                .getDisplayData()
                .reduce(function (accumulator, d) {
                return accumulator + d[options.pie.valueMapsTo];
            }, 0);
        }
        // Remove commas from the current value string, and convert to an int
        var currentValue = parseInt(d3Ref.text().replace(/[, ]+/g, ''), 10) || 0;
        var interpolateFunction;
        if (currentValue % 1 === 0 && donutCenterFigure % 1 === 0) {
            interpolateFunction = round;
        }
        else {
            interpolateFunction = src_number;
        }
        var i = interpolateFunction(currentValue, donutCenterFigure);
        return function (t) {
            var numberFormatter = options.donut.center.numberFormatter;
            d3Ref.text(numberFormatter(i(t)));
        };
    };
    return Donut;
}(Pie));

//# sourceMappingURL=../../../src/components/graphs/donut.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-ease/src/linear.js
const src_linear_linear = t => +t;

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/skeleton.js
var skeleton_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// D3 Imports



var Skeleton = /** @class */ (function (_super) {
    skeleton_extends(Skeleton, _super);
    function Skeleton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'skeleton';
        return _this;
    }
    Skeleton.prototype.render = function () {
        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');
        // display a skeleton if there is no chart data or the loading flag is set to true
        if (isDataLoading) {
            this.renderSkeleton(isDataLoading);
        }
        else {
            this.removeSkeleton();
        }
    };
    Skeleton.prototype.renderSkeleton = function (showShimmerEffect) {
        if (this.configs.skeleton === enums/* Skeletons.GRID */.iz.GRID) {
            this.renderGridSkeleton(showShimmerEffect);
        }
        else if (this.configs.skeleton === enums/* Skeletons.VERT_OR_HORIZ */.iz.VERT_OR_HORIZ) {
            this.renderVertOrHorizSkeleton(showShimmerEffect);
        }
        else if (this.configs.skeleton === enums/* Skeletons.PIE */.iz.PIE) {
            this.renderPieSkeleton(showShimmerEffect);
        }
        else if (this.configs.skeleton === enums/* Skeletons.DONUT */.iz.DONUT) {
            this.renderDonutSkeleton(showShimmerEffect);
        }
        else {
            throw new Error("\"" + this.configs.skeleton + "\" is not a valid Skeleton type.");
        }
    };
    Skeleton.prototype.renderGridSkeleton = function (showShimmerEffect) {
        this.setScales();
        this.drawBackdrop(showShimmerEffect);
        this.drawXGrid(showShimmerEffect);
        this.drawYGrid(showShimmerEffect);
        if (showShimmerEffect) {
            this.setShimmerEffect('shimmer-lines');
        }
    };
    Skeleton.prototype.renderVertOrHorizSkeleton = function (showShimmerEffect) {
        var orientation = this.services.cartesianScales.getOrientation();
        this.setScales();
        this.drawBackdrop(showShimmerEffect);
        if (orientation === enums/* CartesianOrientations.VERTICAL */.ZG.VERTICAL) {
            this.drawYGrid(showShimmerEffect);
        }
        if (orientation === enums/* CartesianOrientations.HORIZONTAL */.ZG.HORIZONTAL) {
            this.drawXGrid(showShimmerEffect);
        }
        this.setShimmerEffect('shimmer-lines');
    };
    Skeleton.prototype.renderPieSkeleton = function (showShimmerEffect) {
        var outerRadius = this.computeOuterRadius();
        var innerRadius = 0;
        this.drawRing(outerRadius, innerRadius, showShimmerEffect);
        if (showShimmerEffect) {
            this.setShimmerEffect('shimmer-areas');
        }
    };
    Skeleton.prototype.renderDonutSkeleton = function (showShimmerEffect) {
        var outerRadius = this.computeOuterRadius();
        var innerRadius = this.computeInnerRadius();
        this.drawRing(outerRadius, innerRadius, showShimmerEffect);
        if (showShimmerEffect) {
            this.setShimmerEffect('shimmer-areas');
        }
    };
    Skeleton.prototype.setScales = function () {
        var xRange = this.services.cartesianScales.getMainXScale().range();
        var yRange = this.services.cartesianScales.getMainYScale().range();
        this.xScale = linear_linear().domain([0, 1]).range(xRange);
        this.yScale = linear_linear().domain([0, 1]).range(yRange);
    };
    Skeleton.prototype.drawBackdrop = function (showShimmerEffect) {
        var svg = this.parent;
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII')
            .attr('width', width)
            .attr('height', height);
        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');
        backdropRect.attr('width', '100%').attr('height', '100%');
        var _b = this.xScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
        var _c = this.yScale.range(), yScaleEnd = _c[0], yScaleStart = _c[1];
        this.backdrop
            .merge(backdropRect)
            .attr('x', xScaleStart)
            .attr('y', yScaleStart);
        backdropRect
            .classed('shimmer-effect-lines', showShimmerEffect)
            .classed('empty-state-lines', !showShimmerEffect)
            .style('stroke', showShimmerEffect
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
            : null);
    };
    Skeleton.prototype.drawXGrid = function (showShimmerEffect) {
        var width = this.backdrop.attr('width');
        var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'x', 'numberOfTicks');
        var ticksValues = this.xScale
            .ticks(ticksNumber)
            .map(function (d) { return d * width; });
        var xGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.x.skeleton');
        var update = xGridG.selectAll('line').data(ticksValues);
        update
            .enter()
            .append('line')
            .merge(update)
            .attr('x1', function (d) { return d; })
            .attr('x2', function (d) { return d; })
            .attr('y1', 0)
            .attr('y2', '100%');
        xGridG
            .selectAll('line')
            .classed('shimmer-effect-lines', showShimmerEffect)
            .classed('empty-state-lines', !showShimmerEffect)
            .style('stroke', showShimmerEffect
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
            : null);
    };
    Skeleton.prototype.drawYGrid = function (showShimmerEffect) {
        var height = this.backdrop.attr('height');
        var width = this.backdrop.attr('width');
        var ticksNumber = Tools.getProperty(this.getOptions(), 'grid', 'y', 'numberOfTicks');
        var ticksValues = this.xScale
            .ticks(ticksNumber)
            .map(function (d) { return d * height; });
        var yGridG = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');
        var update = yGridG.selectAll('line').data(ticksValues);
        update
            .enter()
            .append('line')
            .merge(update)
            .attr('x1', 0)
            .attr('x2', width)
            .attr('y1', function (d) { return d; })
            .attr('y2', function (d) { return d; });
        yGridG
            .selectAll('line')
            .classed('shimmer-effect-lines', showShimmerEffect)
            .classed('empty-state-lines', !showShimmerEffect)
            .style('stroke', showShimmerEffect
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
            : null);
    };
    Skeleton.prototype.drawRing = function (outerRadius, innerRadius, shimmer) {
        if (shimmer === void 0) { shimmer = true; }
        var svg = this.parent;
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var container = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton')
            .attr('width', width)
            .attr('height', height);
        var optionName = innerRadius === 0 ? 'pie' : 'donut';
        var alignment = Tools.getProperty(this.getOptions(), optionName, 'alignment');
        DOMUtils.appendOrSelect(container, 'rect.chart-skeleton-area-container')
            .attr('width', width)
            .attr('height', height)
            .attr('fill', 'none');
        var arcPathGenerator = arc()
            .innerRadius(innerRadius)
            .outerRadius(outerRadius)
            .startAngle(0)
            .endAngle(Math.PI * 2);
        // centering circle inside the container
        var tcx = outerRadius + Math.abs(pie.radiusOffset);
        var tcy = outerRadius + (Math.min(width, height) - outerRadius * 2) / 2;
        var skeletonAreaShape = DOMUtils.appendOrSelect(container, 'path')
            .attr('class', 'skeleton-area-shape')
            .attr('transform', "translate(" + tcx + ", " + tcy + ")")
            .attr('d', arcPathGenerator)
            .classed('shimmer-effect-areas', shimmer)
            .classed('empty-state-areas', !shimmer)
            .style('fill', shimmer
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-areas") + ")"
            : null);
        // Position skeleton
        var translateX = outerRadius + pie.xOffset;
        if (alignment === enums/* Alignments.CENTER */.N3.CENTER) {
            translateX = width / 2;
        }
        else if (alignment === enums/* Alignments.RIGHT */.N3.RIGHT) {
            translateX = width - outerRadius - pie.xOffset;
        }
        var translateY = outerRadius + pie.yOffset;
        skeletonAreaShape.attr('transform', "translate(" + translateX + ", " + translateY + ")");
    };
    // same logic in pie
    Skeleton.prototype.computeOuterRadius = function () {
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var radius = Math.min(width, height) / 2;
        return radius + pie.radiusOffset;
    };
    // same logic in donut
    Skeleton.prototype.computeInnerRadius = function () {
        return this.computeOuterRadius() * (3 / 4);
    };
    Skeleton.prototype.setShimmerEffect = function (gradientId) {
        var animationDuration = 2000; // ms
        var delay = 1000; // ms
        var shimmerWidth = 0.2;
        var stopBgShimmerClass = 'stop-bg-shimmer';
        var stopShimmerClass = 'stop-shimmer';
        var container = this.parent.select('.chart-skeleton');
        var width = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }).width;
        var startPoint = 0;
        var endPoint = width;
        // append the defs as first child of container
        var defs = DOMUtils.appendOrSelect(container, 'defs').lower();
        var linearGradient = DOMUtils.appendOrSelect(defs, 'linearGradient')
            .attr('id', this.services.domUtils.generateElementIDString(gradientId))
            .attr('class', gradientId)
            .attr('x1', startPoint - 3 * shimmerWidth * width)
            .attr('x2', endPoint)
            .attr('y1', 0)
            .attr('y2', 0)
            .attr('gradientUnits', 'userSpaceOnUse')
            .attr('gradientTransform', "translate(0, 0)");
        var stops = "\n\t\t\t<stop class=\"" + stopBgShimmerClass + "\" offset=\"" + startPoint + "\"></stop>\n\t\t\t<stop class=\"" + stopShimmerClass + "\" offset=\"" + (startPoint + shimmerWidth) + "\"></stop>\n\t\t\t<stop class=\"" + stopBgShimmerClass + "\" offset=\"" + (startPoint + 2 * shimmerWidth) + "\"></stop>\n\t\t";
        linearGradient.html(stops);
        repeat();
        function repeat() {
            linearGradient
                .attr('gradientTransform', "translate(" + (startPoint - 3 * shimmerWidth * width) + ", 0)")
                .transition()
                .duration(animationDuration)
                .delay(delay)
                .ease(src_linear_linear)
                .attr('gradientTransform', "translate(" + (endPoint + 3 * shimmerWidth * width) + ", 0)")
                .on('end', repeat);
        }
    };
    Skeleton.prototype.removeSkeleton = function () {
        var container = this.parent.select('.chart-skeleton');
        container.remove();
    };
    return Skeleton;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/skeleton.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/skeleton-lines.js
var skeleton_lines_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



var SkeletonLines = /** @class */ (function (_super) {
    skeleton_lines_extends(SkeletonLines, _super);
    function SkeletonLines() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'skeleton-lines';
        return _this;
    }
    SkeletonLines.prototype.render = function () {
        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');
        var isSparkline = !Tools.getProperty(this.getOptions(), 'grid', 'x', 'enabled') &&
            !Tools.getProperty(this.getOptions(), 'grid', 'y', 'enabled') &&
            !Tools.getProperty(this.getOptions(), 'axes', 'bottom', 'visible') &&
            !Tools.getProperty(this.getOptions(), 'axes', 'left', 'visible');
        // display a skeleton if there is no chart data or the loading flag is set to true
        if (isDataLoading && !isSparkline) {
            _super.prototype.renderGridSkeleton.call(this, isDataLoading);
        }
        else if (isDataLoading && isSparkline) {
            this.renderSparklineSkeleton(isDataLoading);
        }
        else {
            this.removeSkeleton();
        }
    };
    SkeletonLines.prototype.renderSparklineSkeleton = function (showShimmerEffect) {
        this.setScales();
        this.drawBackdrop(showShimmerEffect);
        this.drawSparkline(showShimmerEffect);
        this.updateBackdropStyle();
        if (showShimmerEffect) {
            this.setShimmerEffect('shimmer-lines');
        }
    };
    SkeletonLines.prototype.drawSparkline = function (showShimmerEffect) {
        var width = this.backdrop.attr('width');
        var ticksValues = [100];
        var sparklineSkeleton = DOMUtils.appendOrSelect(this.backdrop, 'g.y.skeleton');
        var update = sparklineSkeleton.selectAll('line').data(ticksValues);
        update
            .enter()
            .append('line')
            .merge(update)
            .attr('x1', 0)
            .attr('x2', width)
            .attr('y1', function (d) { return d; })
            .attr('y2', function (d) { return d; });
        sparklineSkeleton
            .selectAll('line')
            .classed('shimmer-effect-lines', showShimmerEffect)
            .classed('empty-state-lines', !showShimmerEffect)
            .style('stroke', showShimmerEffect
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
            : null);
    };
    SkeletonLines.prototype.updateBackdropStyle = function () {
        var svg = this.parent;
        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-skeleton.DAII');
        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, 'rect.chart-skeleton-backdrop');
        backdropRect
            .classed('shimmer-effect-lines', false)
            .classed('shimmer-effect-sparkline', true)
            .style('stroke', null);
    };
    return SkeletonLines;
}(Skeleton));

//# sourceMappingURL=../../../src/components/graphs/skeleton-lines.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/count.js
function count_count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;
  else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

/* harmony default export */ function hierarchy_count() {
  return this.eachAfter(count_count);
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/each.js
/* harmony default export */ function hierarchy_each(callback, that) {
  let index = -1;
  for (const node of this) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js
/* harmony default export */ function eachBefore(callback, that) {
  var node = this, nodes = [node], children, i, index = -1;
  while (node = nodes.pop()) {
    callback.call(that, node, ++index, this);
    if (children = node.children) {
      for (i = children.length - 1; i >= 0; --i) {
        nodes.push(children[i]);
      }
    }
  }
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js
/* harmony default export */ function eachAfter(callback, that) {
  var node = this, nodes = [node], next = [], children, i, n, index = -1;
  while (node = nodes.pop()) {
    next.push(node);
    if (children = node.children) {
      for (i = 0, n = children.length; i < n; ++i) {
        nodes.push(children[i]);
      }
    }
  }
  while (node = next.pop()) {
    callback.call(that, node, ++index, this);
  }
  return this;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/find.js
/* harmony default export */ function hierarchy_find(callback, that) {
  let index = -1;
  for (const node of this) {
    if (callback.call(that, node, ++index, this)) {
      return node;
    }
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/sum.js
/* harmony default export */ function sum(value) {
  return this.eachAfter(function(node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;
    while (--i >= 0) sum += children[i].value;
    node.value = sum;
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/sort.js
/* harmony default export */ function hierarchy_sort(compare) {
  return this.eachBefore(function(node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/path.js
/* harmony default export */ function hierarchy_path(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];
  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }
  var k = nodes.length;
  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }
  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();
  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }
  return c;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js
/* harmony default export */ function ancestors() {
  var node = this, nodes = [node];
  while (node = node.parent) {
    nodes.push(node);
  }
  return nodes;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/descendants.js
/* harmony default export */ function descendants() {
  return Array.from(this);
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/leaves.js
/* harmony default export */ function leaves() {
  var leaves = [];
  this.eachBefore(function(node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/links.js
/* harmony default export */ function links() {
  var root = this, links = [];
  root.each(function(node) {
    if (node !== root) { // Don’t include the root’s parent, if any.
      links.push({source: node.parent, target: node});
    }
  });
  return links;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/iterator.js
/* harmony default export */ function* hierarchy_iterator() {
  var node = this, current, next = [node], children, i, n;
  do {
    current = next.reverse(), next = [];
    while (node = current.pop()) {
      yield node;
      if (children = node.children) {
        for (i = 0, n = children.length; i < n; ++i) {
          next.push(children[i]);
        }
      }
    }
  } while (next.length);
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/hierarchy/index.js














function hierarchy_hierarchy(data, children) {
  if (data instanceof Map) {
    data = [undefined, data];
    if (children === undefined) children = mapChildren;
  } else if (children === undefined) {
    children = objectChildren;
  }

  var root = new hierarchy_Node(data),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;

  while (node = nodes.pop()) {
    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {
      node.children = childs;
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = childs[i] = new hierarchy_Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy_hierarchy(this).eachBefore(copyData);
}

function objectChildren(d) {
  return d.children;
}

function mapChildren(d) {
  return Array.isArray(d) ? d[1] : null;
}

function copyData(node) {
  if (node.data.value !== undefined) node.value = node.data.value;
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;
  do node.height = height;
  while ((node = node.parent) && (node.height < ++height));
}

function hierarchy_Node(data) {
  this.data = data;
  this.depth =
  this.height = 0;
  this.parent = null;
}

hierarchy_Node.prototype = hierarchy_hierarchy.prototype = {
  constructor: hierarchy_Node,
  count: hierarchy_count,
  each: hierarchy_each,
  eachAfter: eachAfter,
  eachBefore: eachBefore,
  find: hierarchy_find,
  sum: sum,
  sort: hierarchy_sort,
  path: hierarchy_path,
  ancestors: ancestors,
  descendants: descendants,
  leaves: leaves,
  links: links,
  copy: node_copy,
  [Symbol.iterator]: hierarchy_iterator
};

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/cluster.js
function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;
  while (children = node.children) node = children[0];
  return node;
}

function leafRight(node) {
  var children;
  while (children = node.children) node = children[children.length - 1];
  return node;
}

/* harmony default export */ function cluster() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0;

    // First walk, computing the initial x & y values.
    root.eachAfter(function(node) {
      var children = node.children;
      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });

    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2;

    // Second walk, normalizing x & y to the desired size.
    return root.eachAfter(nodeSize ? function(node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function(node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function(x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);
  };

  cluster.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);
  };

  return cluster;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/tree.js


function tree_defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

// function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }

// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.
function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
}

// This function works analogously to nextLeft.
function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
}

// Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.
function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
}

// All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).
function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;
  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
}

// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.
function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor
  this.a = this; // ancestor
  this.z = 0; // prelim
  this.m = 0; // mod
  this.c = 0; // change
  this.s = 0; // shift
  this.t = null; // thread
  this.i = i; // number
}

TreeNode.prototype = Object.create(hierarchy_Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);
      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
}

// Node-link tree diagram using the Reingold-Tilford "tidy" algorithm
/* harmony default export */ function src_tree() {
  var separation = tree_defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root);

    // Compute the layout using Buchheim et al.’s algorithm.
    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk);

    // If a fixed node size is specified, scale x and y.
    if (nodeSize) root.eachBefore(sizeNode);

    // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
      var left = root,
          right = root,
          bottom = root;
      root.eachBefore(function(node) {
        if (node.x < left.x) left = node;
        if (node.x > right.x) right = node;
        if (node.depth > bottom.depth) bottom = node;
      });
      var s = left === right ? 1 : separation(left, right) / 2,
          tx = s - left.x,
          kx = dx / (right.x + s + tx),
          ky = dy / (bottom.depth || 1);
      root.eachBefore(function(node) {
        node.x = (node.x + tx) * kx;
        node.y = node.depth * ky;
      });
    }

    return root;
  }

  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.
  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;
    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;
      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }
    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  }

  // Computes all real x-coordinates by summing up the modifiers recursively.
  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  }

  // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).
  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;
      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }
        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }
      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }
      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }
    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function(x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function(x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);
  };

  tree.nodeSize = function(x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);
  };

  return tree;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/bump.js


class Bump {
  constructor(context, x) {
    this._context = context;
    this._x = x;
  }
  areaStart() {
    this._line = 0;
  }
  areaEnd() {
    this._line = NaN;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {
    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
    this._line = 1 - this._line;
  }
  point(x, y) {
    x = +x, y = +y;
    switch (this._point) {
      case 0: {
        this._point = 1;
        if (this._line) this._context.lineTo(x, y);
        else this._context.moveTo(x, y);
        break;
      }
      case 1: this._point = 2; // falls through
      default: {
        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);
        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);
        break;
      }
    }
    this._x0 = x, this._y0 = y;
  }
}

class BumpRadial {
  constructor(context) {
    this._context = context;
  }
  lineStart() {
    this._point = 0;
  }
  lineEnd() {}
  point(x, y) {
    x = +x, y = +y;
    if (this._point++ === 0) {
      this._x0 = x, this._y0 = y;
    } else {
      const p0 = pointRadial(this._x0, this._y0);
      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);
      const p2 = pointRadial(x, this._y0);
      const p3 = pointRadial(x, y);
      this._context.moveTo(...p0);
      this._context.bezierCurveTo(...p1, ...p2, ...p3);
    }
  }
}

function bumpX(context) {
  return new Bump(context, true);
}

function bump_bumpY(context) {
  return new Bump(context, false);
}

function bump_bumpRadial(context) {
  return new BumpRadial(context);
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/link.js






function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link_link(curve) {
  let source = linkSource;
  let target = linkTarget;
  let x = point_x;
  let y = point_y;
  let context = null;
  let output = null;

  function link() {
    let buffer;
    const argv = slice.call(arguments);
    const s = source.apply(this, argv);
    const t = target.apply(this, argv);
    if (context == null) output = curve(buffer = src_path());
    output.lineStart();
    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));
    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));
    output.lineEnd();
    if (buffer) return output = null, buffer + "" || null;
  }

  link.source = function(_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function(_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : src_constant(+_), link) : x;
  };

  link.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : src_constant(+_), link) : y;
  };

  link.context = function(_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;
  };

  return link;
}

function linkHorizontal() {
  return link_link(bumpX);
}

function linkVertical() {
  return link_link(bumpY);
}

function linkRadial() {
  const l = link_link(bumpRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/tree.js
var tree_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports



var NODE_OFFSET = 6;
var Tree = /** @class */ (function (_super) {
    tree_extends(Tree, _super);
    function Tree() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'tree';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Tree.prototype.getLongestLabel = function (data) {
        var _this = this;
        var longestLabel = '';
        data.forEach(function (d) {
            var longestLabelInChildren = d.children
                ? _this.getLongestLabel(d.children)
                : '';
            if (longestLabelInChildren.length > longestLabel.length ||
                d.name.length > longestLabel.length) {
                longestLabel =
                    longestLabelInChildren.length > d.name.length
                        ? longestLabelInChildren
                        : d.name;
            }
        });
        return longestLabel;
    };
    Tree.prototype.getMockLabelWidth = function (svg, label) {
        // Add mock label to get dimensions
        var mockLabel = svg
            .append('text')
            .attr('dy', '0.31em')
            .attr('x', 0)
            .attr('text-anchor', 'end')
            .text(label);
        // Get the mock label width
        var mockLabelWidth = DOMUtils.getSVGElementSize(mockLabel.node(), {
            useBBox: true,
        }).width;
        // Remove the mock title label
        mockLabel.remove();
        return mockLabelWidth;
    };
    Tree.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer();
        // Empty out the svg before rendering the tree
        svg.html('');
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        if (width < 1 || height < 1) {
            return;
        }
        var options = this.model.getOptions();
        var displayData = this.model.getDisplayData();
        var rootTitle = Tools.getProperty(options, 'tree', 'rootTitle') || 'Tree';
        var mockRootTitleWidth = this.getMockLabelWidth(svg, rootTitle);
        var longestLabel = this.getLongestLabel(displayData);
        var mockLongestLabelWidth = this.getMockLabelWidth(svg, longestLabel);
        var margin = {
            top: 0,
            right: 0,
            bottom: 0,
            left: mockRootTitleWidth > 0
                ? mockRootTitleWidth + NODE_OFFSET
                : 30 - NODE_OFFSET,
        };
        var root = hierarchy_hierarchy({
            name: rootTitle,
            children: displayData,
        });
        var dx = 10;
        var dy = width / 6;
        var update = function (source) {
            var nodes = root.descendants().reverse();
            var links = root.links();
            var left = root;
            var right = root;
            root.eachBefore(function (node) {
                if (node.x < left.x)
                    left = node;
                if (node.x > right.x)
                    right = node;
            });
            var height = right.x - left.x;
            var transition = svg
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'tree-update-viewbox',
                    animate: true,
                });
            })
                .attr('viewBox', [-margin.left, left.x, width, height]);
            // Update data on nodes
            var nodeGroups = nodeGroup
                .selectAll('g')
                .data(nodes, function (d) { return d.id; });
            var self = _this;
            // Add any entering nodes
            var nodeGroupsEnter = nodeGroups
                .enter()
                .append('g')
                .attr('transform', function () { return "translate(" + source.y0 + "," + source.x0 + ")"; })
                .attr('class', function (d) {
                return d.depth !== 0 && d.children && d.children.length > 0
                    ? 'clickable'
                    : null;
            })
                .on('mouseover', function (event, d) {
                // Dispatch mouse event
                self.services.events.dispatchEvent(interfaces.Events.Tree.NODE_MOUSEOVER, {
                    event: event,
                    element: src_select(this),
                    datum: d,
                });
            })
                .on('click', function (event, d) {
                if (d.depth !== 0) {
                    d.children = d.children ? null : d._children;
                    update(d);
                }
                // Dispatch mouse event
                self.services.events.dispatchEvent(interfaces.Events.Tree.NODE_CLICK, {
                    event: event,
                    element: src_select(this),
                    datum: d,
                });
            })
                .on('mouseout', function (event, d) {
                // Dispatch mouse event
                self.services.events.dispatchEvent(interfaces.Events.Tree.NODE_MOUSEOUT, {
                    event: event,
                    element: src_select(this),
                    datum: d,
                });
            });
            // Add node circles to entering nodes
            nodeGroupsEnter
                .append('circle')
                .attr('r', 2.5)
                .attr('class', function (d) { return (d._children ? 'parent' : 'child'); })
                .attr('stroke-width', 10);
            // Add node labels
            nodeGroupsEnter
                .append('text')
                .attr('dy', '0.31em')
                .attr('x', function (d) { return (d._children ? -NODE_OFFSET : NODE_OFFSET); })
                .attr('text-anchor', function (d) { return (d._children ? 'end' : 'start'); })
                .text(function (d) { return d.data.name; })
                .clone(true)
                .attr('class', 'text-stroke')
                .lower();
            // Reposition nodes
            nodeGroups
                .merge(nodeGroupsEnter)
                .transition(transition)
                .attr('transform', function (d) { return "translate(" + d.y + "," + d.x + ")"; })
                .attr('fill-opacity', 1)
                .attr('stroke-opacity', 1);
            // Remove exiting nodes
            nodeGroups
                .exit()
                .transition(transition)
                .remove()
                .attr('transform', function () { return "translate(" + source.y + "," + source.x + ")"; })
                .attr('fill-opacity', 0)
                .attr('stroke-opacity', 0);
            // Update data on links
            var linkPaths = linkGroup
                .selectAll('path')
                .data(links, function (d) { return d.target.id; });
            // Add any entering link paths
            var linkPathsEnter = linkPaths
                .enter()
                .append('path')
                .attr('d', function (d) {
                var o = { x: source.x0, y: source.y0 };
                return diagonal({ source: o, target: o });
            });
            // Reposition updating link paths
            linkPaths
                .merge(linkPathsEnter)
                .transition(transition)
                .attr('d', diagonal);
            // Remove any exiting link paths
            linkPaths
                .exit()
                .transition(transition)
                .remove()
                .attr('d', function () {
                var o = { x: source.x, y: source.y };
                return diagonal({ source: o, target: o });
            });
            // Update position data for nodes
            root.eachBefore(function (d) {
                d.x0 = d.x;
                d.y0 = d.y;
            });
        };
        var descendants = root.descendants();
        var maxDepth = descendants[descendants.length - 1].depth;
        var tree = Tools.getProperty(options, 'tree', 'type') === interfaces.TreeTypes.DENDROGRAM
            ? cluster().size([
                height,
                width -
                    mockLongestLabelWidth -
                    maxDepth * NODE_OFFSET -
                    mockRootTitleWidth,
            ])
            : src_tree()
                .nodeSize([dx, dy])
                .size([
                height,
                width -
                    mockLongestLabelWidth -
                    maxDepth * NODE_OFFSET -
                    mockRootTitleWidth,
            ]);
        var diagonal = linkHorizontal()
            .x(function (d) { return d.y; })
            .y(function (d) { return d.x; });
        root.x0 = dy / 2;
        root.y0 = 0;
        root.descendants().forEach(function (d, i) {
            d.id = i;
            d._children = d.children;
        });
        tree(root);
        svg.attr('viewBox', [-margin.left, -margin.top, width, dx]).style('user-select', 'none');
        var linkGroup = svg.append('g').attr('class', 'links');
        var nodeGroup = svg.append('g').attr('class', 'nodes');
        update(root);
    };
    return Tree;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/tree.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/treemap/round.js
/* harmony default export */ function treemap_round(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/treemap/dice.js
/* harmony default export */ function dice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/treemap/slice.js
/* harmony default export */ function treemap_slice(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/treemap/squarify.js



var phi = (1 + Math.sqrt(5)) / 2;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx, dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0;

    // Find the next non-empty node.
    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);
    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue);

    // Keep adding nodes while the aspect ratio maintains or improves.
    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);
      if (newRatio > minRatio) { sumValue -= nodeValue; break; }
      minRatio = newRatio;
    }

    // Position and record the row orientation.
    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});
    if (row.dice) dice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);
    else treemap_slice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

/* harmony default export */ const squarify = ((function custom(ratio) {

  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function(x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
})(phi));

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/accessors.js
function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error;
  return f;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/constant.js
function constantZero() {
  return 0;
}

/* harmony default export */ function d3_hierarchy_src_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/treemap/index.js





/* harmony default export */ function treemap() {
  var tile = squarify,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = constantZero,
      paddingTop = constantZero,
      paddingRight = constantZero,
      paddingBottom = constantZero,
      paddingLeft = constantZero;

  function treemap(root) {
    root.x0 =
    root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(treemap_round);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;
    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function(x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function(x) {
    return arguments.length ? (tile = required(x), treemap) : tile;
  };

  treemap.padding = function(x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function(x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function(x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function(x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function(x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function(x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function(x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), treemap) : paddingLeft;
  };

  return treemap;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/sum.js
function sum_sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/colors/es/index.js
/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var black = '#000000';
var black100 = (/* unused pure expression or super */ null && (black));
var blackHover = '#212121';
var white = '#ffffff';
var white0 = (/* unused pure expression or super */ null && (white));
var whiteHover = '#e8e8e8';
var yellow10 = '#fcf4d6';
var yellow20 = '#fddc69';
var yellow30 = '#f1c21b';
var yellow40 = '#d2a106';
var yellow50 = '#b28600';
var yellow60 = '#8e6a00';
var yellow70 = '#684e00';
var yellow80 = '#483700';
var yellow90 = '#302400';
var yellow100 = '#1c1500';
var unstable_yellow = {
  10: yellow10,
  20: yellow20,
  30: yellow30,
  40: yellow40,
  50: yellow50,
  60: yellow60,
  70: yellow70,
  80: yellow80,
  90: yellow90,
  100: yellow100
};
var yellow = (/* unused pure expression or super */ null && (yellow30));
var yellow10Hover = '#f8e6a0';
var yellow20Hover = '#fccd27';
var yellow30Hover = '#ddb00e';
var yellow40Hover = '#bc9005';
var yellow50Hover = '#9e7700';
var yellow60Hover = '#755800';
var yellow70Hover = '#806000';
var yellow80Hover = '#5c4600';
var yellow90Hover = '#3d2e00';
var yellow100Hover = '#332600';
var yellowHover = {
  10: yellow10Hover,
  20: yellow20Hover,
  30: yellow30Hover,
  40: yellow40Hover,
  50: yellow50Hover,
  60: yellow60Hover,
  70: yellow70Hover,
  80: yellow80Hover,
  90: yellow90Hover,
  100: yellow100Hover
};
var orange10 = '#fff2e8';
var orange20 = '#ffd9be';
var orange30 = '#ffb784';
var orange40 = '#ff832b';
var orange50 = '#eb6200';
var orange60 = '#ba4e00';
var orange70 = '#8a3800';
var orange80 = '#5e2900';
var orange90 = '#3e1a00';
var orange100 = '#231000';
var orange = (/* unused pure expression or super */ null && (orange40));
var unstable_orange = {
  10: orange10,
  20: orange20,
  30: orange30,
  40: orange40,
  50: orange50,
  60: orange60,
  70: orange70,
  80: orange80,
  90: orange90,
  100: orange100
};
var orange10Hover = '#ffe2cc';
var orange20Hover = '#ffc69e';
var orange30Hover = '#ff9d57';
var orange40Hover = '#fa6800';
var orange50Hover = '#cc5500';
var orange60Hover = '#9e4200';
var orange70Hover = '#a84400';
var orange80Hover = '#753300';
var orange90Hover = '#522200';
var orange100Hover = '#421e00';
var orangeHover = {
  10: orange10Hover,
  20: orange20Hover,
  30: orange30Hover,
  40: orange40Hover,
  50: orange50Hover,
  60: orange60Hover,
  70: orange70Hover,
  80: orange80Hover,
  90: orange90Hover,
  100: orange100Hover
};
var red10 = '#fff1f1';
var red20 = '#ffd7d9';
var red30 = '#ffb3b8';
var red40 = '#ff8389';
var red50 = '#fa4d56';
var red60 = '#da1e28';
var red70 = '#a2191f';
var red80 = '#750e13';
var red90 = '#520408';
var red100 = '#2d0709';
var red = {
  10: red10,
  20: red20,
  30: red30,
  40: red40,
  50: red50,
  60: red60,
  70: red70,
  80: red80,
  90: red90,
  100: red100
};
var red100Hover = '#540d11';
var red90Hover = '#66050a';
var red80Hover = '#921118';
var red70Hover = '#c21e25';
var red60Hover = '#b81922';
var red50Hover = '#ee0713';
var red40Hover = '#ff6168';
var red30Hover = '#ff99a0';
var red20Hover = '#ffc2c5';
var red10Hover = '#ffe0e0';
var redHover = {
  100: red100Hover,
  90: red90Hover,
  80: red80Hover,
  70: red70Hover,
  60: red60Hover,
  50: red50Hover,
  40: red40Hover,
  30: red30Hover,
  20: red20Hover,
  10: red10Hover
};
var magenta10 = '#fff0f7';
var magenta20 = '#ffd6e8';
var magenta30 = '#ffafd2';
var magenta40 = '#ff7eb6';
var magenta50 = '#ee5396';
var magenta60 = '#d02670';
var magenta70 = '#9f1853';
var magenta80 = '#740937';
var magenta90 = '#510224';
var magenta100 = '#2a0a18';
var magenta = {
  10: magenta10,
  20: magenta20,
  30: magenta30,
  40: magenta40,
  50: magenta50,
  60: magenta60,
  70: magenta70,
  80: magenta80,
  90: magenta90,
  100: magenta100
};
var magenta100Hover = '#53142f';
var magenta90Hover = '#68032e';
var magenta80Hover = '#8e0b43';
var magenta70Hover = '#bf1d63';
var magenta60Hover = '#b0215f';
var magenta50Hover = '#e3176f';
var magenta40Hover = '#ff57a0';
var magenta30Hover = '#ff94c3';
var magenta20Hover = '#ffbdda';
var magenta10Hover = '#ffe0ef';
var magentaHover = {
  100: magenta100Hover,
  90: magenta90Hover,
  80: magenta80Hover,
  70: magenta70Hover,
  60: magenta60Hover,
  50: magenta50Hover,
  40: magenta40Hover,
  30: magenta30Hover,
  20: magenta20Hover,
  10: magenta10Hover
};
var purple10 = '#f6f2ff';
var purple20 = '#e8daff';
var purple30 = '#d4bbff';
var purple40 = '#be95ff';
var purple50 = '#a56eff';
var purple60 = '#8a3ffc';
var purple70 = '#6929c4';
var purple80 = '#491d8b';
var purple90 = '#31135e';
var purple100 = '#1c0f30';
var purple = {
  10: purple10,
  20: purple20,
  30: purple30,
  40: purple40,
  50: purple50,
  60: purple60,
  70: purple70,
  80: purple80,
  90: purple90,
  100: purple100
};
var purple100Hover = '#341c59';
var purple90Hover = '#40197b';
var purple80Hover = '#5b24ad';
var purple70Hover = '#7c3dd6';
var purple60Hover = '#7822fb';
var purple50Hover = '#9352ff';
var purple40Hover = '#ae7aff';
var purple30Hover = '#c5a3ff';
var purple20Hover = '#dcc7ff';
var purple10Hover = '#ede5ff';
var purpleHover = {
  100: purple100Hover,
  90: purple90Hover,
  80: purple80Hover,
  70: purple70Hover,
  60: purple60Hover,
  50: purple50Hover,
  40: purple40Hover,
  30: purple30Hover,
  20: purple20Hover,
  10: purple10Hover
};
var blue10 = '#edf5ff';
var blue20 = '#d0e2ff';
var blue30 = '#a6c8ff';
var blue40 = '#78a9ff';
var blue50 = '#4589ff';
var blue60 = '#0f62fe';
var blue70 = '#0043ce';
var blue80 = '#002d9c';
var blue90 = '#001d6c';
var blue100 = '#001141';
var blue = {
  10: blue10,
  20: blue20,
  30: blue30,
  40: blue40,
  50: blue50,
  60: blue60,
  70: blue70,
  80: blue80,
  90: blue90,
  100: blue100
};
var blue100Hover = '#001f75';
var blue90Hover = '#00258a';
var blue80Hover = '#0039c7';
var blue70Hover = '#0053ff';
var blue60Hover = '#0050e6';
var blue50Hover = '#1f70ff';
var blue40Hover = '#5c97ff';
var blue30Hover = '#8ab6ff';
var blue20Hover = '#b8d3ff';
var blue10Hover = '#dbebff';
var blueHover = {
  100: blue100Hover,
  90: blue90Hover,
  80: blue80Hover,
  70: blue70Hover,
  60: blue60Hover,
  50: blue50Hover,
  40: blue40Hover,
  30: blue30Hover,
  20: blue20Hover,
  10: blue10Hover
};
var cyan10 = '#e5f6ff';
var cyan20 = '#bae6ff';
var cyan30 = '#82cfff';
var cyan40 = '#33b1ff';
var cyan50 = '#1192e8';
var cyan60 = '#0072c3';
var cyan70 = '#00539a';
var cyan80 = '#003a6d';
var cyan90 = '#012749';
var cyan100 = '#061727';
var cyan = {
  10: cyan10,
  20: cyan20,
  30: cyan30,
  40: cyan40,
  50: cyan50,
  60: cyan60,
  70: cyan70,
  80: cyan80,
  90: cyan90,
  100: cyan100
};
var cyan10Hover = '#cceeff';
var cyan20Hover = '#99daff';
var cyan30Hover = '#57beff';
var cyan40Hover = '#059fff';
var cyan50Hover = '#0f7ec8';
var cyan60Hover = '#005fa3';
var cyan70Hover = '#0066bd';
var cyan80Hover = '#00498a';
var cyan90Hover = '#013360';
var cyan100Hover = '#0b2947';
var cyanHover = {
  10: cyan10Hover,
  20: cyan20Hover,
  30: cyan30Hover,
  40: cyan40Hover,
  50: cyan50Hover,
  60: cyan60Hover,
  70: cyan70Hover,
  80: cyan80Hover,
  90: cyan90Hover,
  100: cyan100Hover
};
var teal10 = '#d9fbfb';
var teal20 = '#9ef0f0';
var teal30 = '#3ddbd9';
var teal40 = '#08bdba';
var teal50 = '#009d9a';
var teal60 = '#007d79';
var teal70 = '#005d5d';
var teal80 = '#004144';
var teal90 = '#022b30';
var teal100 = '#081a1c';
var teal = {
  10: teal10,
  20: teal20,
  30: teal30,
  40: teal40,
  50: teal50,
  60: teal60,
  70: teal70,
  80: teal80,
  90: teal90,
  100: teal100
};
var teal10Hover = '#acf6f6';
var teal20Hover = '#57e5e5';
var teal30Hover = '#25cac8';
var teal40Hover = '#07aba9';
var teal50Hover = '#008a87';
var teal60Hover = '#006b68';
var teal70Hover = '#007070';
var teal80Hover = '#005357';
var teal90Hover = '#033940';
var teal100Hover = '#0f3034';
var tealHover = {
  10: teal10Hover,
  20: teal20Hover,
  30: teal30Hover,
  40: teal40Hover,
  50: teal50Hover,
  60: teal60Hover,
  70: teal70Hover,
  80: teal80Hover,
  90: teal90Hover,
  100: teal100Hover
};
var green10 = '#defbe6';
var green20 = '#a7f0ba';
var green30 = '#6fdc8c';
var green40 = '#42be65';
var green50 = '#24a148';
var green60 = '#198038';
var green70 = '#0e6027';
var green80 = '#044317';
var green90 = '#022d0d';
var green100 = '#071908';
var green = {
  10: green10,
  20: green20,
  30: green30,
  40: green40,
  50: green50,
  60: green60,
  70: green70,
  80: green80,
  90: green90,
  100: green100
};
var green10Hover = '#b6f6c8';
var green20Hover = '#74e792';
var green30Hover = '#36ce5e';
var green40Hover = '#3bab5a';
var green50Hover = '#208e3f';
var green60Hover = '#166f31';
var green70Hover = '#11742f';
var green80Hover = '#05521c';
var green90Hover = '#033b11';
var green100Hover = '#0d300f';
var greenHover = {
  10: green10Hover,
  20: green20Hover,
  30: green30Hover,
  40: green40Hover,
  50: green50Hover,
  60: green60Hover,
  70: green70Hover,
  80: green80Hover,
  90: green90Hover,
  100: green100Hover
};
var coolGray10 = '#f2f4f8';
var coolGray20 = '#dde1e6';
var coolGray30 = '#c1c7cd';
var coolGray40 = '#a2a9b0';
var coolGray50 = '#878d96';
var coolGray60 = '#697077';
var coolGray70 = '#4d5358';
var coolGray80 = '#343a3f';
var coolGray90 = '#21272a';
var coolGray100 = '#121619';
var coolGray = {
  10: coolGray10,
  20: coolGray20,
  30: coolGray30,
  40: coolGray40,
  50: coolGray50,
  60: coolGray60,
  70: coolGray70,
  80: coolGray80,
  90: coolGray90,
  100: coolGray100
};
var coolGray10Hover = '#e4e9f1';
var coolGray20Hover = '#cdd3da';
var coolGray30Hover = '#adb5bd';
var coolGray40Hover = '#9199a1';
var coolGray50Hover = '#757b85';
var coolGray60Hover = '#585e64';
var coolGray70Hover = '#5d646a';
var coolGray80Hover = '#434a51';
var coolGray90Hover = '#2b3236';
var coolGray100Hover = '#222a2f';
var coolGrayHover = {
  10: coolGray10Hover,
  20: coolGray20Hover,
  30: coolGray30Hover,
  40: coolGray40Hover,
  50: coolGray50Hover,
  60: coolGray60Hover,
  70: coolGray70Hover,
  80: coolGray80Hover,
  90: coolGray90Hover,
  100: coolGray100Hover
};
var gray10 = '#f4f4f4';
var gray20 = '#e0e0e0';
var gray30 = '#c6c6c6';
var gray40 = '#a8a8a8';
var gray50 = '#8d8d8d';
var gray60 = '#6f6f6f';
var gray70 = '#525252';
var gray80 = '#393939';
var gray90 = '#262626';
var gray100 = '#161616';
var gray = {
  10: gray10,
  20: gray20,
  30: gray30,
  40: gray40,
  50: gray50,
  60: gray60,
  70: gray70,
  80: gray80,
  90: gray90,
  100: gray100
};
var gray10Hover = '#e8e8e8';
var gray20Hover = '#d1d1d1';
var gray30Hover = '#b5b5b5';
var gray40Hover = '#999999';
var gray50Hover = '#7a7a7a';
var gray60Hover = '#5e5e5e';
var gray70Hover = '#636363';
var gray80Hover = '#474747';
var gray90Hover = '#333333';
var gray100Hover = '#292929';
var grayHover = {
  10: gray10Hover,
  20: gray20Hover,
  30: gray30Hover,
  40: gray40Hover,
  50: gray50Hover,
  60: gray60Hover,
  70: gray70Hover,
  80: gray80Hover,
  90: gray90Hover,
  100: gray100Hover
};
var warmGray10 = '#f7f3f2';
var warmGray20 = '#e5e0df';
var warmGray30 = '#cac5c4';
var warmGray40 = '#ada8a8';
var warmGray50 = '#8f8b8b';
var warmGray60 = '#726e6e';
var warmGray70 = '#565151';
var warmGray80 = '#3c3838';
var warmGray90 = '#272525';
var warmGray100 = '#171414';
var warmGray = {
  10: warmGray10,
  20: warmGray20,
  30: warmGray30,
  40: warmGray40,
  50: warmGray50,
  60: warmGray60,
  70: warmGray70,
  80: warmGray80,
  90: warmGray90,
  100: warmGray100
};
var warmGray10Hover = '#f0e8e6';
var warmGray20Hover = '#d8d0cf';
var warmGray30Hover = '#b9b3b1';
var warmGray40Hover = '#9c9696';
var warmGray50Hover = '#7f7b7b';
var warmGray60Hover = '#605d5d';
var warmGray70Hover = '#696363';
var warmGray80Hover = '#4c4848';
var warmGray90Hover = '#343232';
var warmGray100Hover = '#2c2626';
var warmGrayHover = {
  10: warmGray10Hover,
  20: warmGray20Hover,
  30: warmGray30Hover,
  40: warmGray40Hover,
  50: warmGray50Hover,
  60: warmGray60Hover,
  70: warmGray70Hover,
  80: warmGray80Hover,
  90: warmGray90Hover,
  100: warmGray100Hover
};
var colors = {
  black: {
    100: black
  },
  blue: blue,
  coolGray: coolGray,
  cyan: cyan,
  gray: gray,
  green: green,
  magenta: magenta,
  orange: unstable_orange,
  purple: purple,
  red: red,
  teal: teal,
  warmGray: warmGray,
  white: {
    0: white
  },
  yellow: unstable_yellow
};
var unstable_hoverColors = {
  whiteHover: whiteHover,
  blackHover: blackHover,
  blueHover: blueHover,
  coolGrayHover: coolGrayHover,
  cyanHover: cyanHover,
  grayHover: grayHover,
  greenHover: greenHover,
  magentaHover: magentaHover,
  orangeHover: orangeHover,
  purpleHover: purpleHover,
  redHover: redHover,
  tealHover: tealHover,
  warmGrayHover: warmGrayHover,
  yellowHover: yellowHover
};

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Parse a given hexcode string into an rgba statement with the given opacity
 * @param {string} hexcode
 * @param {number} opacity
 * @returns {string}
 */
function es_rgba(hexcode, opacity) {
  var values = [hexcode.substring(1, 3), hexcode.substring(3, 5), hexcode.substring(5, 7)].map(function (string) {
    return parseInt(string, 16);
  });
  return "rgba(".concat(values[0], ", ").concat(values[1], ", ").concat(values[2], ", ").concat(opacity, ")");
}



;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/treemap.js
var treemap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports




// Carbon colors

var findColorShade = function (hex) {
    if (!hex) {
        return null;
    }
    for (var _i = 0, _a = Object.keys(colors); _i < _a.length; _i++) {
        var colorName = _a[_i];
        var colorShades = colors[colorName];
        for (var _b = 0, _c = Object.keys(colorShades); _b < _c.length; _b++) {
            var colorShadeLevel = _c[_b];
            var colorShade = colorShades[colorShadeLevel];
            if (colorShade === hex) {
                return colorShadeLevel;
            }
        }
    }
    return null;
};
var textFillColor = function () {
    var correspondingLeaf = src_select(this.parentNode).select('rect.leaf');
    var correspondingLeafFill = getComputedStyle(correspondingLeaf.node(), null).getPropertyValue('fill');
    var cl = color_color(correspondingLeafFill);
    var colorShade;
    if (cl) {
        colorShade = findColorShade(cl ? cl.hex() : null);
    }
    if (colorShade === null || colorShade === undefined) {
        var lightness = hsl(cl).l;
        colorShade = Math.abs(lightness * 100 - 100);
    }
    return colorShade > 50 ? 'white' : 'black';
};
var uidCounter = 0;
var Treemap = /** @class */ (function (_super) {
    treemap_extends(Treemap, _super);
    function Treemap() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'treemap';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            _this.parent
                .selectAll("g[data-name='leaf']")
                .transition('legend-hover-treemap')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-treemap',
                });
            })
                .attr('opacity', function (d) {
                return d.parent.data.name === hoveredElement.datum()['name'] ? 1 : 0.3;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll("g[data-name='leaf']")
                .transition('legend-mouseout-treemap')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-treemap',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    Treemap.prototype.init = function () {
        var events = this.services.events;
        // Highlight correct circle on legend item hovers
        events.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        events.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Treemap.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer();
        var allData = this.model.getData();
        var displayData = this.model.getDisplayData();
        var options = this.model.getOptions();
        var windowLocation = Tools.getProperty(window, 'location');
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var hierarchy = hierarchy_hierarchy({
            name: options.title || 'Treemap',
            children: displayData,
        })
            .sum(function (d) { return d.value; })
            .sort(function (a, b) { return b.value - a.value; });
        var total = sum_sum(allData, function (d) {
            return sum_sum(d.children, function (child) { return child.value; });
        });
        var root = treemap()
            .size([width, height])
            .paddingInner(1)
            .paddingOuter(0)
            .round(true)(hierarchy);
        var transitions = this.services.transitions;
        var leafGroups = svg
            .selectAll("g[data-name='leaf']")
            .data(root.leaves(), function (leaf) { return leaf.data.name; });
        // Remove leaf groups that need to be removed
        leafGroups.exit().attr('opacity', 0).remove();
        // Add the leaf groups that need to be introduced
        var enteringLeafGroups = leafGroups
            .enter()
            .append('g')
            .attr('data-name', 'leaf')
            .attr('data-uid', function () { return uidCounter++; });
        var allLeafGroups = enteringLeafGroups.merge(leafGroups);
        allLeafGroups
            .attr('data-name', 'leaf')
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'treemap-group-update',
                animate: animate,
            });
        })
            .attr('transform', function (d) { return "translate(" + d.x0 + "," + d.y0 + ")"; });
        var rects = allLeafGroups.selectAll('rect.leaf').data(function (d) { return [d]; });
        rects.exit().attr('width', 0).attr('height', 0).remove();
        var enteringRects = rects
            .enter()
            .append('rect')
            .classed('leaf', true);
        enteringRects
            .merge(rects)
            .attr('width', 0)
            .attr('height', 0)
            .attr('id', function () {
            var uid = src_select(this.parentNode).attr('data-uid');
            return options.style.prefix + "-leaf-" + uid;
        })
            .attr('class', function (d) {
            while (d.depth > 1)
                d = d.parent;
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d.data.name,
                originalClassName: 'leaf',
            });
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'treemap-leaf-update-enter',
                animate: animate,
            });
        })
            .attr('width', function (d) { return d.x1 - d.x0; })
            .attr('height', function (d) { return d.y1 - d.y0; })
            .style('fill', function (d) {
            while (d.depth > 1)
                d = d.parent;
            return _this.model.getFillColor(d.data.name);
        });
        // Update all clip paths
        allLeafGroups
            .selectAll('clipPath')
            .data(function (d) {
            if (d.data.showLabel !== true) {
                return [];
            }
            return [1];
        }, function (d) { return d; })
            .join(function (enter) {
            enter
                .append('clipPath')
                .attr('id', function () {
                var uid = src_select(this.parentNode).attr('data-uid');
                return options.style.prefix + "-clip-" + uid;
            })
                .append('use')
                .attr('xlink:href', function () {
                var uid = src_select(this.parentNode.parentNode).attr('data-uid');
                var leafID = options.style.prefix + "-leaf-" + uid;
                return new URL("#" + leafID, windowLocation) + '';
            });
        }, function (update) { return null; }, function (exit) { return exit.remove(); });
        // Update all titles
        allLeafGroups
            .selectAll('text')
            .data(function (d) {
            if (d.data.showLabel !== true) {
                return [];
            }
            var parent = d;
            while (parent.depth > 1)
                parent = parent.parent;
            var color = hsl(_this.model.getFillColor(parent.data.name));
            return [
                {
                    text: d.data.name,
                    color: color.l < 0.5 ? 'white' : 'black',
                },
            ];
        }, function (d) { return d; })
            .join(function (enter) {
            var addedText = enter
                .append('text')
                .text(function (d) { return d.text; })
                .style('fill', textFillColor)
                .attr('x', 7)
                .attr('y', 18);
            if (windowLocation) {
                addedText.attr('clip-path', function () {
                    var uid = src_select(this.parentNode).attr('data-uid');
                    var clipPathID = options.style.prefix + "-clip-" + uid;
                    return "url(" + (new URL("#" + clipPathID, windowLocation) + '') + ")";
                });
            }
        }, function (update) {
            return update.text(function (d) { return d.text; }).style('fill', textFillColor);
        }, function (exit) { return exit.remove(); });
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    Treemap.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('rect.leaf')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            var fillColor = getComputedStyle(this, null).getPropertyValue('fill');
            var parent = datum;
            while (parent.depth > 1)
                parent = parent.parent;
            hoveredElement
                .transition('graph_element_mouseover_fill_update')
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'graph_element_mouseover_fill_update',
                });
            })
                .style('fill', function (d) {
                var customColor = self.model.getFillColor(d.parent.data.name);
                if (customColor) {
                    fillColor = customColor;
                }
                return color_color(fillColor).darker(0.7).toString();
            });
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        color: fillColor,
                        label: parent.data.name,
                        bold: true,
                    },
                    {
                        label: datum.data.name,
                        value: datum.data.value,
                    },
                ],
            });
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Treemap.LEAF_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Treemap.LEAF_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Treemap.LEAF_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            var parent = datum;
            while (parent.depth > 1)
                parent = parent.parent;
            hoveredElement
                .transition()
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'graph_element_mouseout_fill_update',
                });
            })
                .style('fill', function (d) {
                return self.model.getFillColor(d.parent.data.name);
            });
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Treemap.LEAF_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    return Treemap;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/treemap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/services/angle-utils.js

function radialLabelPlacement(angleRadians) {
    var angle = mod(radToDeg(angleRadians), 360);
    if (isInRange(angle, [0, 10]) || isInRange(angle, [350, 0])) {
        return {
            textAnchor: enums/* TextAnchor.START */.UA.START,
            dominantBaseline: enums/* DominantBaseline.MIDDLE */.J_.MIDDLE,
        };
    }
    else if (isInRange(angle, [10, 80])) {
        return {
            textAnchor: enums/* TextAnchor.START */.UA.START,
            dominantBaseline: enums/* DominantBaseline.HANGING */.J_.HANGING,
        };
    }
    else if (isInRange(angle, [80, 100])) {
        return {
            textAnchor: enums/* TextAnchor.MIDDLE */.UA.MIDDLE,
            dominantBaseline: enums/* DominantBaseline.HANGING */.J_.HANGING,
        };
    }
    else if (isInRange(angle, [100, 170])) {
        return {
            textAnchor: enums/* TextAnchor.END */.UA.END,
            dominantBaseline: enums/* DominantBaseline.HANGING */.J_.HANGING,
        };
    }
    else if (isInRange(angle, [170, 190])) {
        return {
            textAnchor: enums/* TextAnchor.END */.UA.END,
            dominantBaseline: enums/* DominantBaseline.MIDDLE */.J_.MIDDLE,
        };
    }
    else if (isInRange(angle, [190, 260])) {
        return {
            textAnchor: enums/* TextAnchor.END */.UA.END,
            dominantBaseline: enums/* DominantBaseline.BASELINE */.J_.BASELINE,
        };
    }
    else if (isInRange(angle, [260, 280])) {
        return {
            textAnchor: enums/* TextAnchor.MIDDLE */.UA.MIDDLE,
            dominantBaseline: enums/* DominantBaseline.BASELINE */.J_.BASELINE,
        };
    }
    else {
        // 280 - 350
        return {
            textAnchor: enums/* TextAnchor.START */.UA.START,
            dominantBaseline: enums/* DominantBaseline.BASELINE */.J_.BASELINE,
        };
    }
}
function mod(n, m) {
    return ((n % m) + m) % m;
}
function isInRange(x, _a) {
    var min = _a[0], max = _a[1];
    return x >= min && x <= max;
}
function radToDeg(rad) {
    return rad * (180 / Math.PI);
}
function degToRad(deg) {
    return deg * (Math.PI / 180);
}
function polarToCartesianCoords(a, r, t) {
    if (t === void 0) { t = { x: 0, y: 0 }; }
    var x = r * Math.cos(a) + t.x;
    var y = r * Math.sin(a) + t.y;
    // NaN is rendered at coordinate 0 in browsers
    // By setting it to 0, further operations can be performed
    return { x: isNaN(x) ? 0 : x, y: isNaN(y) ? 0 : y };
}
// Return the distance between a point (described with polar coordinates)
// on a circumference and the vertical diameter.
// If the point is on the left if the diameter, its distance is positive,
// if it is on the right of the diameter, its distance is negative.
function distanceBetweenPointOnCircAndVerticalDiameter(a, r) {
    return r * Math.sin(a - Math.PI / 2);
}
//# sourceMappingURL=../../src/services/angle-utils.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/curve/radial.js


var curveRadialLinear = curveRadial(curve_linear);

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function() {
    this._curve.areaStart();
  },
  areaEnd: function() {
    this._curve.areaEnd();
  },
  lineStart: function() {
    this._curve.lineStart();
  },
  lineEnd: function() {
    this._curve.lineEnd();
  },
  point: function(a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {

  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;

  return radial;
}

;// CONCATENATED MODULE: ../../node_modules/d3-shape/src/lineRadial.js



function lineRadial(l) {
  var c = l.curve;

  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function(_) {
    return arguments.length ? c(curveRadial(_)) : c()._curve;
  };

  return l;
}

/* harmony default export */ function src_lineRadial() {
  return lineRadial(line().curve(curveRadialLinear));
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/radar.js
var radar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports






// D3 Imports




var Radar = /** @class */ (function (_super) {
    radar_extends(Radar, _super);
    function Radar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'radar';
        _this.renderType = interfaces.RenderTypes.SVG;
        // append temporarily the label to get the exact space that it occupies
        _this.getLabelDimensions = function (label) {
            var tmpTick = DOMUtils.appendOrSelect(_this.getComponentContainer(), "g.tmp-tick");
            var tmpTickText = DOMUtils.appendOrSelect(tmpTick, "text").text(label);
            var _a = DOMUtils.getSVGElementSize(tmpTickText.node(), { useBBox: true }), width = _a.width, height = _a.height;
            tmpTick.remove();
            return { width: width, height: height };
        };
        // Given a flat array of objects, if there are missing data on key,
        // creates corresponding data with value = null
        _this.normalizeFlatData = function (dataset) {
            var options = _this.getOptions();
            var _a = Tools.getProperty(options, 'radar', 'axes'), angle = _a.angle, value = _a.value;
            var groupMapsTo = Tools.getProperty(options, 'data', 'groupMapsTo');
            var completeBlankData = Tools.flatMapDeep(_this.uniqueKeys.map(function (key) {
                return _this.uniqueGroups.map(function (group) {
                    var _a;
                    return (_a = {},
                        _a[angle] = key,
                        _a[groupMapsTo] = group,
                        _a[value] = null,
                        _a);
                });
            }));
            return Tools.merge(completeBlankData, dataset);
        };
        // Given a a grouped array of objects, if there are missing data on key,
        // creates corresponding data with value = null
        _this.normalizeGroupedData = function (dataset) {
            var options = _this.getOptions();
            var _a = Tools.getProperty(options, 'radar', 'axes'), angle = _a.angle, value = _a.value;
            var groupMapsTo = Tools.getProperty(options, 'data', 'groupMapsTo');
            return dataset.map(function (_a) {
                var name = _a.name, data = _a.data;
                var completeBlankData = _this.uniqueKeys.map(function (k) {
                    var _a;
                    return (_a = {},
                        _a[groupMapsTo] = name,
                        _a[angle] = k,
                        _a[value] = null,
                        _a);
                });
                return { name: name, data: Tools.merge(completeBlankData, data) };
            });
        };
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            _this.parent
                .selectAll('g.blobs path')
                .transition('legend-hover-blob')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-blob',
                });
            })
                .style('fill-opacity', function (group) {
                if (group.name !== hoveredElement.datum().name) {
                    return radar.opacity.unselected;
                }
                return radar.opacity.selected;
            })
                .style('stroke-opacity', function (group) {
                if (group.name !== hoveredElement.datum().name) {
                    return radar.opacity.unselected;
                }
                return 1;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('g.blobs path')
                .transition('legend-mouseout-blob')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-blob',
                });
            })
                .style('fill-opacity', radar.opacity.selected)
                .style('stroke-opacity', 1);
        };
        return _this;
    }
    Radar.prototype.init = function () {
        var events = this.services.events;
        // Highlight correct line legend item hovers
        events.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight lines on legend item mouseouts
        events.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Radar.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer();
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var data = this.model.getData();
        var groupedData = this.model.getGroupedData();
        var options = this.getOptions();
        var groupMapsTo = Tools.getProperty(options, 'data', 'groupMapsTo');
        var valueMapsTo = Tools.getProperty(options, 'radar', 'axes', 'value');
        var _b = Tools.getProperty(options, 'radar', 'axes'), angle = _b.angle, value = _b.value;
        var _c = radar, xLabelPadding = _c.xLabelPadding, yLabelPadding = _c.yLabelPadding, yTicksNumber = _c.yTicksNumber, minRange = _c.minRange, xAxisRectHeight = _c.xAxisRectHeight;
        this.uniqueKeys = Array.from(new Set(data.map(function (d) { return d[angle]; })));
        this.uniqueGroups = Array.from(new Set(data.map(function (d) { return d[groupMapsTo]; })));
        this.fullDataNormalized = this.normalizeFlatData(data);
        this.groupedDataNormalized = this.normalizeGroupedData(groupedData);
        var labelHeight = this.getLabelDimensions(this.uniqueKeys[0]).height;
        var margin = 2 * (labelHeight + yLabelPadding);
        var size = Math.min(width, height);
        var diameter = size - margin;
        var radius = diameter / 2;
        if (radius <= 0) {
            return;
        }
        // given a key, return the corresponding angle in radiants
        // rotated by -PI/2 because we want angle 0° at -y (12 o’clock)
        var xScale = band()
            .domain(this.fullDataNormalized.map(function (d) { return d[angle]; }))
            .range([0, 2 * Math.PI].map(function (a) { return a - Math.PI / 2; }));
        var centerPointMinValue = min_min(this.fullDataNormalized.map(function (d) { return d[value]; }));
        var yScale = linear_linear()
            .domain([
            centerPointMinValue >= 0 ? 0 : centerPointMinValue,
            max(this.fullDataNormalized.map(function (d) { return d[value]; })),
        ])
            .range([minRange, radius])
            .nice(yTicksNumber);
        var yTicks = yScale.ticks(yTicksNumber);
        var colorScale = function (group) {
            return _this.model.getFillColor(group);
        };
        // constructs a new radial line generator
        // the angle accessor returns the angle in radians with 0° at -y (12 o’clock)
        // so map back the angle
        var radialLineGenerator = src_lineRadial()
            .angle(function (d) { return xScale(d[angle]) + Math.PI / 2; })
            .radius(function (d) { return yScale(d[value]); })
            .curve(linearClosed);
        // compute the space that each x label needs
        var horizSpaceNeededByEachXLabel = this.uniqueKeys.map(function (key) {
            var tickWidth = _this.getLabelDimensions(key).width;
            // compute the distance between the point that the label rapresents and the vertical diameter
            var distanceFromDiameter = distanceBetweenPointOnCircAndVerticalDiameter(xScale(key), radius);
            // the space each label occupies is the sum of these two values
            return tickWidth + distanceFromDiameter;
        });
        var leftPadding = max(horizSpaceNeededByEachXLabel);
        // center coordinates
        var c = {
            x: leftPadding + xLabelPadding,
            y: height / 2,
        };
        /////////////////////////////
        // Drawing the radar
        /////////////////////////////
        // y axes
        var yAxes = DOMUtils.appendOrSelect(svg, 'g.y-axes').attr('role', interfaces.Roles.GROUP);
        var yAxisUpdate = yAxes
            .selectAll('path')
            .data(yTicks, function (tick) { return tick; });
        // for each tick, create array of data corresponding to the points composing the shape
        var shapeData = function (tick) {
            return _this.uniqueKeys.map(function (key) {
                var _a;
                return (_a = {}, _a[angle] = key, _a[value] = tick, _a);
            });
        };
        yAxisUpdate.join(function (enter) {
            return enter
                .append('path')
                .attr('opacity', 0)
                .attr('transform', "translate(" + c.x + ", " + c.y + ")")
                .attr('fill', 'none')
                .call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_axes_enter',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('d', function (tick) {
                    return radialLineGenerator(shapeData(tick));
                });
            });
        }, function (update) {
            return update.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_axes_update',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('transform', "translate(" + c.x + ", " + c.y + ")")
                    .attr('d', function (tick) {
                    return radialLineGenerator(shapeData(tick));
                });
            });
        }, function (exit) {
            return exit.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_axes_exit',
                        animate: animate,
                    });
                })
                    .attr('d', function (tick) {
                    return radialLineGenerator(shapeData(tick));
                })
                    .attr('opacity', 0)
                    .remove();
            });
        });
        // x axes
        var xAxes = DOMUtils.appendOrSelect(svg, 'g.x-axes').attr('role', interfaces.Roles.GROUP);
        var xAxisUpdate = xAxes
            .selectAll('line')
            .data(this.uniqueKeys, function (key) { return key; });
        xAxisUpdate.join(function (enter) {
            return enter
                .append('line')
                .attr('opacity', 0)
                .attr('class', function (key) { return "x-axis-" + Tools.kebabCase(key); }) // replace spaces with -
                .attr('stroke-dasharray', '0')
                .attr('x1', function (key) { return polarToCartesianCoords(xScale(key), 0, c).x; })
                .attr('y1', function (key) { return polarToCartesianCoords(xScale(key), 0, c).y; })
                .attr('x2', function (key) { return polarToCartesianCoords(xScale(key), 0, c).x; })
                .attr('y2', function (key) { return polarToCartesianCoords(xScale(key), 0, c).y; })
                .call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_axes_enter',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('x1', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[0], c).x;
                })
                    .attr('y1', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[0], c).y;
                })
                    .attr('x2', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1], c).x;
                })
                    .attr('y2', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1], c).y;
                });
            });
        }, function (update) {
            return update.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_axes_update',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('x1', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[0], c).x;
                })
                    .attr('y1', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[0], c).y;
                })
                    .attr('x2', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1], c).x;
                })
                    .attr('y2', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1], c).y;
                });
            });
        }, function (exit) {
            return exit.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_axes_exit',
                        animate: animate,
                    });
                })
                    .attr('opacity', 0)
                    .remove();
            });
        });
        // x labels
        var xLabels = DOMUtils.appendOrSelect(svg, 'g.x-labels').attr('role', interfaces.Roles.GROUP);
        var xLabelUpdate = xLabels.selectAll('text').data(this.uniqueKeys);
        xLabelUpdate.join(function (enter) {
            return enter
                .append('text')
                .text(function (key) { return key; })
                .attr('opacity', 0)
                .attr('x', function (key) {
                return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).x;
            })
                .attr('y', function (key) {
                return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).y;
            })
                .style('text-anchor', function (key) { return radialLabelPlacement(xScale(key)).textAnchor; })
                .style('dominant-baseline', function (key) {
                return radialLabelPlacement(xScale(key)).dominantBaseline;
            })
                .call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_labels_enter',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1);
            });
        }, function (update) {
            return update.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_labels_update',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('x', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).x;
                })
                    .attr('y', function (key) {
                    return polarToCartesianCoords(xScale(key), yScale.range()[1] + xLabelPadding, c).y;
                })
                    .end()
                    .finally(function () {
                    // Align chart horizontally after x-axies has finished rendering
                    var alignment = Tools.getProperty(options, 'radar', 'alignment');
                    var alignmentXOffset = _this.getAlignmentXOffset(alignment, svg, _this.getParent());
                    svg.attr('x', alignmentXOffset);
                });
            });
        }, function (exit) {
            return exit.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_x_labels_exit',
                        animate: animate,
                    });
                })
                    .attr('opacity', 0)
                    .remove();
            });
        });
        // blobs
        var blobs = DOMUtils.appendOrSelect(svg, 'g.blobs').attr('role', interfaces.Roles.GROUP);
        var blobUpdate = blobs
            .selectAll('path')
            .data(this.groupedDataNormalized, function (group) { return group.name; });
        blobUpdate.join(function (enter) {
            return enter
                .append('path')
                .attr('class', function (group) {
                return _this.model.getColorClassName({
                    classNameTypes: [
                        interfaces.ColorClassNameTypes.FILL,
                        interfaces.ColorClassNameTypes.STROKE,
                    ],
                    dataGroupName: group.name,
                    originalClassName: 'blob',
                });
            })
                .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
                .attr('aria-label', function (d) { return d['name']; })
                .attr('opacity', 0)
                .attr('transform', animate
                ? function () {
                    return "translate(" + c.x + ", " + c.y + ") scale(" + (1 + Math.random() * 0.35) + ")";
                }
                : "translate(" + c.x + ", " + c.y + ")")
                .style('fill', function (group) { return colorScale(group.name); })
                .style('fill-opacity', radar.opacity.selected)
                .style('stroke', function (group) { return colorScale(group.name); })
                .call(function (selection) {
                var selectionUpdate = selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_blobs_enter',
                        animate: animate,
                    });
                });
                if (animate) {
                    selectionUpdate
                        .delay(function () { return Math.random() * 30; })
                        .attr('transform', "translate(" + c.x + ", " + c.y + ")");
                }
                selectionUpdate
                    .attr('opacity', 1)
                    .attr('d', function (group) {
                    return radialLineGenerator(group.data);
                });
            });
        }, function (update) {
            update
                .attr('class', function (group) {
                return _this.model.getColorClassName({
                    classNameTypes: [
                        interfaces.ColorClassNameTypes.FILL,
                        interfaces.ColorClassNameTypes.STROKE,
                    ],
                    dataGroupName: group.name,
                    originalClassName: 'blob',
                });
            })
                .style('fill', function (group) { return colorScale(group.name); })
                .style('stroke', function (group) { return colorScale(group.name); });
            update.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_blobs_update',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1)
                    .attr('transform', "translate(" + c.x + ", " + c.y + ")")
                    .attr('d', function (group) { return radialLineGenerator(group.data); });
            });
        }, function (exit) {
            return exit.call(function (selection) {
                var selectionUpdate = selection.transition().call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_blobs_exit',
                        animate: animate,
                    });
                });
                if (animate) {
                    selectionUpdate
                        .delay(function () { return Math.random() * 30; })
                        .attr('transform', function () {
                        return "translate(" + c.x + ", " + c.y + ") scale(" + (1 + Math.random() * 0.35) + ")";
                    });
                }
                selectionUpdate.attr('opacity', 0).remove();
            });
        });
        // data dots
        var dots = DOMUtils.appendOrSelect(svg, 'g.dots').attr('role', interfaces.Roles.GROUP);
        var dotsUpdate = dots
            .selectAll('circle')
            // Filter out dots with no value so they are not rendered
            .data(this.fullDataNormalized.filter(function (d) { return Tools.getProperty(d, value) !== null; }));
        dotsUpdate
            .join(function (enter) {
            return enter
                .append('circle')
                .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
                .attr('aria-label', function (d) { return d[valueMapsTo]; });
        }, function (update) { return update; }, function (exit) { return exit.remove(); })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: Tools.kebabCase(d[angle]),
            });
        })
            .attr('cx', function (d) {
            return polarToCartesianCoords(xScale(d[angle]), yScale(d[value]), c).x;
        })
            .attr('cy', function (d) {
            return polarToCartesianCoords(xScale(d[angle]), yScale(d[value]), c).y;
        })
            .attr('r', 0)
            .attr('opacity', 0)
            .style('fill', function (d) { return colorScale(d[groupMapsTo]); });
        // rectangles
        var xAxesRect = DOMUtils.appendOrSelect(svg, 'g.x-axes-rect').attr('role', interfaces.Roles.GROUP);
        var xAxisRectUpdate = xAxesRect
            .selectAll('rect')
            .data(this.uniqueKeys);
        xAxisRectUpdate
            .join(function (enter) { return enter.append('rect'); }, function (update) { return update; }, function (exit) { return exit.remove(); })
            .attr('x', c.x)
            .attr('y', c.y - xAxisRectHeight / 2)
            .attr('width', yScale.range()[1])
            .attr('height', xAxisRectHeight)
            .style('fill', 'red')
            .style('fill-opacity', 0)
            .attr('transform', function (key) { return "rotate(" + radToDeg(xScale(key)) + ", " + c.x + ", " + c.y + ")"; });
        // y labels (show only the min and the max labels)
        var yLabels = DOMUtils.appendOrSelect(svg, 'g.y-labels').attr('role', interfaces.Roles.GROUP);
        var yLabelUpdate = yLabels.selectAll('text').data(extent(yTicks));
        yLabelUpdate.join(function (enter) {
            return enter
                .append('text')
                .attr('opacity', 0)
                .text(function (tick) { return tick; })
                .attr('x', function (tick) {
                return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).x + yLabelPadding;
            })
                .attr('y', function (tick) {
                return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).y;
            })
                .style('text-anchor', 'start')
                .style('dominant-baseline', 'middle')
                .call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_labels_enter',
                        animate: animate,
                    });
                })
                    .attr('opacity', 1);
            });
        }, function (update) {
            return update.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_labels_update',
                        animate: animate,
                    });
                })
                    .text(function (tick) { return tick; })
                    .attr('opacity', 1)
                    .attr('x', function (tick) {
                    return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).x + yLabelPadding;
                })
                    .attr('y', function (tick) {
                    return polarToCartesianCoords(-Math.PI / 2, yScale(tick), c).y;
                });
            });
        }, function (exit) {
            return exit.call(function (selection) {
                return selection
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'radar_y_labels_exit',
                        animate: animate,
                    });
                })
                    .attr('opacity', 0)
                    .remove();
            });
        });
        // Add event listeners
        this.addEventListeners();
    };
    Radar.prototype.getAlignmentXOffset = function (alignment, svg, parent) {
        var svgDimensions = DOMUtils.getSVGElementSize(svg, {
            useBBox: true,
        });
        var width = DOMUtils.getSVGElementSize(parent, {
            useAttrs: true,
        }).width;
        var alignmentOffset = 0;
        if (alignment === interfaces.Alignments.CENTER) {
            alignmentOffset = Math.floor((width - svgDimensions.width) / 2);
        }
        else if (alignment === interfaces.Alignments.RIGHT) {
            alignmentOffset = width - svgDimensions.width;
        }
        return alignmentOffset;
    };
    Radar.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('.x-axes-rect > rect')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    Radar.prototype.addEventListeners = function () {
        var self = this;
        var angle = Tools.getProperty(this.getOptions(), 'radar').axes.angle;
        // events on x axes rects
        this.parent
            .selectAll('.x-axes-rect > rect')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Radar.X_AXIS_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            var axisLine = self.parent.select(".x-axes .x-axis-" + Tools.kebabCase(datum));
            var dots = self.parent.selectAll(".dots circle." + Tools.kebabCase(datum));
            // Change style
            axisLine
                .classed('hovered', true)
                .attr('stroke-dasharray', '4 4');
            dots.classed('hovered', true)
                .attr('opacity', 1)
                .attr('r', radar.dotsRadius);
            // get the items that should be highlighted
            var itemsToHighlight = self.fullDataNormalized.filter(function (d) { return d[angle] === datum; });
            var options = self.getOptions();
            var groupMapsTo = options.data.groupMapsTo;
            var valueMapsTo = Tools.getProperty(options, 'radar', 'axes', 'value');
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: itemsToHighlight
                    .filter(function (datum) { return typeof datum[valueMapsTo] === 'number'; })
                    .map(function (datum) { return ({
                    label: datum[groupMapsTo],
                    value: datum[valueMapsTo],
                    color: self.model.getFillColor(datum[groupMapsTo]),
                    class: self.model.getColorClassName({
                        classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                        dataGroupName: datum[groupMapsTo],
                    }),
                }); }),
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Radar.X_AXIS_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Radar.X_AXIS_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            var axisLine = self.parent.select(".x-axes .x-axis-" + Tools.kebabCase(datum));
            var dots = self.parent.selectAll(".dots circle." + Tools.kebabCase(datum));
            // Change style
            axisLine
                .classed('hovered', false)
                .attr('stroke-dasharray', '0');
            dots.classed('hovered', false).attr('opacity', 0).attr('r', 0);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Radar.X_AXIS_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
        });
    };
    return Radar;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/radar.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/array.js
/* harmony default export */ function d3_hierarchy_src_array(x) {
  return typeof x === "object" && "length" in x
    ? x // Array, TypedArray, NodeList, array-like
    : Array.from(x); // Map, Set, iterable, string, or anything else
}

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/pack/enclose.js


/* harmony default export */ function enclose(circles) {
  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;
    else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;

  if (enclosesWeakAll(p, B)) return [p];

  // If we get here then B must have at least one element.
  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i])
        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  }

  // If we get here then B must have at least two elements.
  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p)
          && enclosesNot(encloseBasis2(B[i], p), B[j])
          && enclosesNot(encloseBasis2(B[j], p), B[i])
          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  }

  // If we get here then something is very wrong.
  throw new Error;
}

function enclosesNot(a, b) {
  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }
  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1: return encloseBasis1(B[0]);
    case 2: return encloseBasis2(B[0], B[1]);
    case 3: return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x, y1 = a.y, r1 = a.r,
      x2 = b.x, y2 = b.y, r2 = b.r,
      x3 = c.x, y3 = c.y, r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/pack/siblings.js



function place(b, a, c) {
  var dx = b.x - a.x, x, a2,
      dy = b.y - a.y, y, b2,
      d2 = dx * dx + dy * dy;
  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;
    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function siblings_Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = (circles = d3_hierarchy_src_array(circles)).length)) return 0;

  var a, b, c, n, aa, ca, i, j, k, sj, sk;

  // Place the first circle.
  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r;

  // Place the second circle.
  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r;

  // Place the third circle.
  place(b, a, c = circles[2]);

  // Initialize the front-chain using the first three circles a, b and c.
  a = new siblings_Node(a), b = new siblings_Node(b), c = new siblings_Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a;

  // Attempt to place each remaining circle…
  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new siblings_Node(c);

    // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.
    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;
    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }
        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next);

    // Success! Insert the new circle c between a and b.
    c.previous = a, c.next = b, a.next = b.previous = b = c;

    // Compute the new closest circle pair to the centroid.
    aa = score(a);
    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }
    b = a.next;
  }

  // Compute the enclosing circle of the front chain.
  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);

  // Translate the circles to put the enclosing circle around the origin.
  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

/* harmony default export */ function siblings(circles) {
  packEnclose(circles);
  return circles;
}

;// CONCATENATED MODULE: ../../node_modules/d3-hierarchy/src/pack/index.js




function defaultRadius(d) {
  return Math.sqrt(d.value);
}

/* harmony default export */ function pack() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;
    if (radius) {
      root.eachBefore(radiusLeaf(radius))
          .eachAfter(packChildren(padding, 0.5))
          .eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius))
          .eachAfter(packChildren(constantZero, 1))
          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))
          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }
    return root;
  }

  pack.radius = function(x) {
    return arguments.length ? (radius = optional(x), pack) : radius;
  };

  pack.size = function(x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function(x) {
    return arguments.length ? (padding = typeof x === "function" ? x : d3_hierarchy_src_constant(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function(node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function(node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;

      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = packEnclose(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function(node) {
    var parent = node.parent;
    node.r *= k;
    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/circle-pack.js
var circle_pack_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var circle_pack_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports





// D3 Imports



var CirclePack = /** @class */ (function (_super) {
    circle_pack_extends(CirclePack, _super);
    function CirclePack() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'circle-pack';
        _this.renderType = enums/* RenderTypes.SVG */.WJ.SVG;
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            _this.parent
                .selectAll('circle.node')
                .transition('legend-hover-circlepack')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-circlepack',
                });
            })
                .attr('opacity', function (d) {
                return d.data.dataGroupName === hoveredElement.datum()['name']
                    ? 1
                    : circlePack.circles.fillOpacity;
            });
        };
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('circle.node')
                .transition('legend-mouseout-circlepack')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-circlepack',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    CirclePack.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        // svg and container widths
        var svg = this.getComponentContainer({ withinChartClip: true });
        var _a = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        // Because of a Firefox bug with regards to sizing & d3 packs,
        // rather than checking if height or width aren't 0,
        // we have to make sure they're not smaller than 1
        if (width < 1 || height < 1) {
            // on first render the svg is width and height 0
            // the circle packing layout functionality will not run
            return;
        }
        // data and options (zoom/not zoom)
        var displayData = this.model.getDisplayData();
        // check if there is just one parent for the data
        var parentNode = this.model.hasParentNode();
        var hierarchyLevel = this.model.getHierarchyLevel();
        var options = this.getOptions();
        var canvasZoomEnabled = Tools.getProperty(options, 'canvasZoom', 'enabled');
        // check if there is one root for the data
        // that root will be the only datagroup (colorscale will be monochrome)
        if (parentNode && Tools.getProperty(displayData, 0, 'children')) {
            // remove want to remove the parent from being rendered
            displayData = Tools.getProperty(displayData, 0, 'children');
        }
        var root = hierarchy_hierarchy({ children: displayData })
            .sum(function (d) { return d.value; })
            .sort(function (a, b) { return b.value - a.value; });
        var packLayout = pack()
            .size([width, height])
            .padding(function (d) {
            // add 3 px to account for the stroke width 1.5px
            return d.depth >= 1
                ? circlePack.padding.children + 3
                : circlePack.padding.mainGroup + 3;
        });
        var nodeData = packLayout(root)
            .descendants()
            .splice(1)
            .filter(function (node) {
            // filter based on hierarchy level
            return node.depth <= hierarchyLevel;
        });
        // enter the circles
        var circles = svg.selectAll('circle.node').data(nodeData);
        circles.exit().attr('width', 0).attr('height', 0).remove();
        var enteringCircles = circles
            .enter()
            .append('circle')
            .classed('node', true);
        enteringCircles
            .merge(circles)
            .attr('class', function (d) {
            var originalClass = canvasZoomEnabled && hierarchyLevel === 3
                ? _this.getZoomClass(d)
                : '';
            return _this.model.getColorClassName({
                classNameTypes: [
                    enums/* ColorClassNameTypes.FILL */.vn.FILL,
                    enums/* ColorClassNameTypes.STROKE */.vn.STROKE,
                ],
                dataGroupName: d.data.dataGroupName,
                originalClassName: d.children
                    ? "node " + originalClass
                    : "node node-leaf " + originalClass,
            });
        })
            .style('fill', function (d) { return _this.model.getFillColor(d.data.dataGroupName); })
            .style('stroke', function (d) {
            return _this.model.getFillColor(d.data.dataGroupName);
        })
            .attr('cx', function (d) { return d.x; })
            .attr('cy', function (d) { return d.y; })
            .transition('circlepack-leaf-update-enter')
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'circlepack-leaf-update-enter',
            });
        })
            .attr('r', function (d) { return d.r; })
            .attr('opacity', 1)
            .attr('fill-opacity', circlePack.circles.fillOpacity);
        if (canvasZoomEnabled === true && this.focal) {
            this.services.canvasZoom.zoomIn(this.focal, enteringCircles, canvasZoomSettings);
            this.setBackgroundListeners();
        }
        if (!parentNode) {
            // add legend filtering if it isnt a monochrome chart
            this.addLegendListeners();
        }
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    // turn off the highlight class on children circles
    CirclePack.prototype.unhighlightChildren = function (childData) {
        var _this = this;
        var data = childData.map(function (d) { return d.data; });
        this.parent
            .selectAll('circle.node')
            .filter(function (d) { return data.some(function (datum) { return datum === d.data; }) && d.depth > 1; })
            .style('stroke', function (d) {
            return _this.model.getFillColor(d.data.dataGroupName);
        });
    };
    // highlight the children circles with a stroke
    CirclePack.prototype.highlightChildren = function (childData) {
        var data = childData.map(function (d) { return d.data; });
        this.parent
            .selectAll('circle.node')
            .filter(function (d) { return data.some(function (datum) { return datum === d.data; }) && d.depth > 1; })
            .style('stroke', circlePack.circles.hover.stroke);
    };
    CirclePack.prototype.getZoomClass = function (node) {
        if (this.model.getHierarchyLevel() === 3 && this.focal) {
            if (node.data === this.focal.data ||
                this.focal.children.some(function (d) { return d.data === node.data; })) {
                return 'focal';
            }
        }
        return 'non-focal';
    };
    CirclePack.prototype.addLegendListeners = function () {
        var events = this.services.events;
        // Highlight correct circle on legend item hovers
        events.addEventListener(enums/* Events.Legend.ITEM_HOVER */.zW.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight circles on legend item mouseouts
        events.addEventListener(enums/* Events.Legend.ITEM_MOUSEOUT */.zW.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    CirclePack.prototype.removeBackgroundListeners = function () {
        var chartSvg = src_select(this.services.domUtils.getMainContainer());
        chartSvg.on('click', function () { return null; });
    };
    CirclePack.prototype.setBackgroundListeners = function () {
        var chartSvg = src_select(this.services.domUtils.getMainContainer());
        var self = this;
        var canvasSelection = this.parent.selectAll('circle.node');
        var zoomSetting = Tools.getProperty(configuration_namespaceObject, 'canvasZoomSettings');
        chartSvg.on('click', function () {
            self.focal = null;
            self.model.updateHierarchyLevel(2);
            chartSvg.classed('zoomed-in', false);
            self.services.canvasZoom.zoomOut(canvasSelection, zoomSetting);
        });
    };
    // Zoom icon to be appended to the label in the tooltip
    CirclePack.prototype.getZoomIcon = function () {
        return "\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 10 10\">\n\t\t\t<polygon points=\"5.93 3.71 4.45 3.71 4.45 2.23 3.71 2.23 3.71 3.71 2.23 3.71 2.23 4.45 3.71 4.45 3.71 5.93 4.45 5.93 4.45 4.45 5.93 4.45 5.93 3.71\"/>\n\t\t\t<path d=\"M7.2,6.67a4,4,0,0,0,1-2.59A4.08,4.08,0,1,0,4.07,8.15h0a4,4,0,0,0,2.59-1L9.48,10,10,9.48Zm-3.12.77A3.34,3.34,0,1,1,7.41,4.08,3.34,3.34,0,0,1,4.08,7.44Z\"/>\n\t\t</svg>";
    };
    // add event listeners for tooltip on the circles
    CirclePack.prototype.addEventListeners = function () {
        var self = this;
        this.parent
            .selectAll('circle.node')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', true);
            var hierarchyLevel = self.model.getHierarchyLevel();
            var disabled = hierarchyLevel > 2 && !hoveredElement.classed('focal');
            var canvasZoomEnabled = Tools.getProperty(self.model.getOptions(), 'canvasZoom', 'enabled');
            var zoomable = false;
            if (!disabled) {
                // get the children data for the tooltip
                var childrenData = [];
                var totalValue = [];
                var parentValue = null;
                if (datum.children) {
                    if (datum.depth > 1 && canvasZoomEnabled) {
                        zoomable = true;
                        hoveredElement.classed('clickable', true);
                    }
                    childrenData = datum.children.map(function (child) {
                        if (child !== null) {
                            // retrieve the children values if there are any 3rd level
                            if (typeof child.data.value === 'number') {
                                return {
                                    label: child.data.name,
                                    value: child.data.value,
                                };
                            }
                            else {
                                return {
                                    label: child.data.name,
                                    labelIcon: canvasZoomEnabled &&
                                        hierarchyLevel <= 2
                                        ? self.getZoomIcon()
                                        : null,
                                    value: child.value,
                                };
                            }
                        }
                    });
                    var options = self.model.getOptions();
                    totalValue = [
                        {
                            label: lodash_es_get(options, 'tooltip.totalLabel') ||
                                'Total',
                            value: datum.value,
                            bold: true,
                        },
                    ];
                    // children get a highlight stroke
                    self.highlightChildren(datum.children);
                }
                else {
                    // if there is no children we want to display the value for the data
                    parentValue = datum.value;
                }
                var fillColor = getComputedStyle(this, null).getPropertyValue('fill');
                // Show tooltip
                self.services.events.dispatchEvent(enums/* Events.Tooltip.SHOW */.zW.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: hoveredElement,
                    items: circle_pack_spreadArrays([
                        {
                            color: fillColor,
                            label: datum.data.name,
                            labelIcon: zoomable &&
                                canvasZoomEnabled &&
                                hierarchyLevel <= 2
                                ? self.getZoomIcon()
                                : null,
                            value: parentValue,
                        }
                    ], childrenData, totalValue),
                });
            }
            // Dispatch mouse event
            self.services.events.dispatchEvent(enums/* Events.CirclePack.CIRCLE_MOUSEOVER */.zW.CirclePack.CIRCLE_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(enums/* Events.CirclePack.CIRCLE_MOUSEMOVE */.zW.CirclePack.CIRCLE_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(enums/* Events.Tooltip.MOVE */.zW.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            hoveredElement.classed('hovered', false);
            if (datum.children) {
                self.unhighlightChildren(datum.children);
            }
            // Dispatch mouse event
            self.services.events.dispatchEvent(enums/* Events.CirclePack.CIRCLE_MOUSEOUT */.zW.CirclePack.CIRCLE_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(enums/* Events.Tooltip.HIDE */.zW.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        })
            .on('click', function (event, datum) {
            var hoveredElement = src_select(this);
            var disabled = hoveredElement.classed('non-focal');
            var canvasZoomEnabled = Tools.getProperty(self.model.getOptions(), 'canvasZoom', 'enabled');
            if (canvasZoomEnabled && self.model.getHierarchyLevel() > 2) {
                var canvasSelection = self.parent.selectAll('circle.node');
                var chartSvg = src_select(self.services.domUtils.getMainContainer());
                chartSvg.classed('zoomed-in', false);
                self.focal = null;
                self.model.updateHierarchyLevel(2);
                self.services.canvasZoom.zoomOut(canvasSelection, canvasZoomSettings);
            }
            // zoom if chart has zoom enabled and if its a depth 2 circle that has children
            else if (datum.depth === 2 &&
                datum.children &&
                !disabled &&
                canvasZoomEnabled) {
                var canvasSelection = self.parent.selectAll('circle.node');
                var chartSvg = src_select(self.services.domUtils.getMainContainer());
                chartSvg.classed('zoomed-in', true);
                self.focal = datum;
                self.model.updateHierarchyLevel(3);
                self.services.canvasZoom.zoomIn(datum, canvasSelection, canvasZoomSettings);
                // don't want the click event to propagate to the background zoom out
                // does not clash with the tooltip/other events because it does need to close the
                // tooltip on the click event in order to zoom in/out
                event.stopPropagation();
            }
            // Dispatch mouse event
            self.services.events.dispatchEvent(enums/* Events.CirclePack.CIRCLE_CLICK */.zW.CirclePack.CIRCLE_CLICK, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
        });
    };
    CirclePack.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('circle.node')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null)
            .on('click', null);
        // remove the listeners on the legend
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(enums/* Events.Legend.ITEM_HOVER */.zW.Legend.ITEM_HOVER, this.handleLegendOnHover);
        eventsFragment.removeEventListener(enums/* Events.Legend.ITEM_MOUSEOUT */.zW.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
        this.removeBackgroundListeners();
    };
    return CirclePack;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/circle-pack.js.map
// EXTERNAL MODULE: ../../node_modules/d3-cloud/index.js
var d3_cloud = __webpack_require__(1641);
var d3_cloud_default = /*#__PURE__*/__webpack_require__.n(d3_cloud);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/wordcloud.js
var wordcloud_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports




var WordCloud = /** @class */ (function (_super) {
    wordcloud_extends(WordCloud, _super);
    function WordCloud() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'wordcloud';
        _this.renderType = interfaces.RenderTypes.SVG;
        // Highlight elements that match the hovered legend item
        _this.handleLegendOnHover = function (event) {
            var hoveredElement = event.detail.hoveredElement;
            var groupMapsTo = _this.getOptions().data.groupMapsTo;
            _this.parent
                .selectAll('text.word')
                .transition('legend-hover-wordcloud')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-hover-wordcloud',
                });
            })
                .attr('opacity', function (d) {
                return d[groupMapsTo] !== hoveredElement.datum()['name'] ? 0.3 : 1;
            });
        };
        // Un-highlight all elements
        _this.handleLegendMouseOut = function (event) {
            _this.parent
                .selectAll('text.word')
                .transition('legend-mouseout-wordcloud')
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'legend-mouseout-wordcloud',
                });
            })
                .attr('opacity', 1);
        };
        return _this;
    }
    WordCloud.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct words on legend item hovers
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleLegendOnHover);
        // Un-highlight words on legend item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleLegendMouseOut);
    };
    WordCloud.prototype.render = function (animate) {
        if (animate === void 0) { animate = true; }
        var self = this;
        var svg = this.getComponentContainer()
            .attr('width', '100%')
            .attr('height', '100%');
        var displayData = this.model.getDisplayData();
        var fontSizeScale = this.getFontSizeScale(displayData);
        var options = this.getOptions();
        var _a = options.wordCloud, fontSizeMapsTo = _a.fontSizeMapsTo, wordMapsTo = _a.wordMapsTo;
        var groupMapsTo = options.data.groupMapsTo;
        var _b = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _b.width, height = _b.height;
        if (width === 0 || height === 0) {
            return;
        }
        var layout = d3_cloud_default()()
            .size([width, height])
            .words(displayData.map(function (d) {
            var _a;
            return _a = {},
                _a[groupMapsTo] = d[groupMapsTo],
                _a.text = d[wordMapsTo],
                _a.size = d[fontSizeMapsTo],
                _a.value = d[fontSizeMapsTo],
                _a;
        }))
            .padding(5)
            .rotate(0)
            .fontSize(function (d) { return fontSizeScale(d.size); })
            .on('end', draw);
        layout.start();
        function draw(words) {
            var textGroup = DOMUtils.appendOrSelect(svg, 'g.words');
            textGroup.attr('transform', "translate(" + layout.size()[0] / 2 + ", " + layout.size()[1] / 2 + ")");
            var allText = textGroup
                .selectAll('text')
                .data(words, function (d) { return d[groupMapsTo] + "-" + d.text; });
            // Remove texts that are no longer needed
            allText.exit().attr('opacity', 0).remove();
            var enteringText = allText
                .enter()
                .append('text')
                .attr('opacity', 0);
            enteringText
                .merge(allText)
                .style('font-size', function (d) { return d.size + "px"; })
                .text(function (d) {
                return d.text;
            })
                .attr('class', function (d) {
                return self.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                    dataGroupName: d[groupMapsTo],
                    originalClassName: "word " + (d.size > 32 ? 'light' : ''),
                });
            })
                .style('fill', function (d) {
                return self.model.getFillColor(d[groupMapsTo], d.text, d);
            })
                .attr('text-anchor', 'middle')
                .transition()
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'wordcloud-text-update-enter',
                    animate: animate,
                });
            })
                .attr('transform', function (d) { return "translate(" + d.x + ", " + d.y + ")"; })
                .attr('opacity', 1);
        }
        // Add event listeners
        this.addEventListeners();
    };
    WordCloud.prototype.getFontSizeScale = function (data) {
        var options = this.getOptions();
        var fontSizeMapsTo = options.wordCloud.fontSizeMapsTo;
        // Filter out any null/undefined values
        var allOccurences = data
            .map(function (d) { return d[fontSizeMapsTo]; })
            .filter(function (size) { return size; });
        var chartSize = DOMUtils.getHTMLElementSize(this.services.domUtils.getMainContainer());
        // We need the ternary operator here in case the user
        // doesn't provide size values in data
        var sizeDataIsValid = allOccurences.length > 0;
        var domain = sizeDataIsValid ? extent(allOccurences) : [1, 1];
        return linear_linear()
            .domain(domain)
            .range(sizeDataIsValid
            ? options.wordCloud.fontSizeRange(chartSize, data)
            : [4, 4]);
    };
    WordCloud.prototype.addEventListeners = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var self = this;
        // Highlights 1 word or unhighlights all
        var debouncedHighlight = Tools.debounce(function (word) {
            var allWords = self.parent
                .selectAll('text.word')
                .transition('wordcloud-word-mouse-highlight')
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'wordcloud-word-mouse-highlight',
                });
            });
            if (word === null) {
                allWords.attr('opacity', 1);
            }
            else {
                allWords.attr('opacity', function () {
                    if (word === this) {
                        return 1;
                    }
                    return 0.3;
                });
            }
        }, 6);
        this.parent
            .selectAll('text.word')
            .on('mouseover', function (event, datum) {
            var hoveredElement = this;
            debouncedHighlight(hoveredElement);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.WordCloud.WORD_MOUSEOVER, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: options.tooltip.wordLabel,
                        value: datum.text,
                    },
                    {
                        label: options.tooltip.valueLabel,
                        value: datum.value,
                    },
                    {
                        label: options.tooltip.groupLabel,
                        value: datum[groupMapsTo],
                        class: self.model.getColorClassName({
                            classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                            dataGroupName: datum[groupMapsTo],
                        }),
                    },
                ],
            });
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.WordCloud.WORD_MOUSEMOVE, {
                element: hoveredElement,
                datum: datum,
            });
            // Show tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.WordCloud.WORD_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            debouncedHighlight(null);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.WordCloud.WORD_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Hide tooltip
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    return WordCloud;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/wordcloud.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-array/src/sum.js
function src_sum_sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-array/src/max.js
function max_max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-array/src/min.js
function src_min_min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/src/align.js


function targetDepth(d) {
  return d.target.depth;
}

function align_left(node) {
  return node.depth;
}

function align_right(node, n) {
  return n - 1 - node.height;
}

function justify(node, n) {
  return node.sourceLinks.length ? node.depth : n - 1;
}

function align_center(node) {
  return node.targetLinks.length ? node.depth
      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1
      : 0;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/src/constant.js
function d3_sankey_src_constant_constant(x) {
  return function() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/src/sankey.js




function ascendingSourceBreadth(a, b) {
  return ascendingBreadth(a.source, b.source) || a.index - b.index;
}

function ascendingTargetBreadth(a, b) {
  return ascendingBreadth(a.target, b.target) || a.index - b.index;
}

function ascendingBreadth(a, b) {
  return a.y0 - b.y0;
}

function sankey_value(d) {
  return d.value;
}

function defaultId(d) {
  return d.index;
}

function defaultNodes(graph) {
  return graph.nodes;
}

function defaultLinks(graph) {
  return graph.links;
}

function sankey_find(nodeById, id) {
  const node = nodeById.get(id);
  if (!node) throw new Error("missing: " + id);
  return node;
}

function computeLinkBreadths({nodes}) {
  for (const node of nodes) {
    let y0 = node.y0;
    let y1 = y0;
    for (const link of node.sourceLinks) {
      link.y0 = y0 + link.width / 2;
      y0 += link.width;
    }
    for (const link of node.targetLinks) {
      link.y1 = y1 + link.width / 2;
      y1 += link.width;
    }
  }
}

function Sankey() {
  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent
  let dx = 24; // nodeWidth
  let dy = 8, py; // nodePadding
  let id = defaultId;
  let align = justify;
  let sort;
  let linkSort;
  let nodes = defaultNodes;
  let links = defaultLinks;
  let iterations = 6;

  function sankey() {
    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};
    computeNodeLinks(graph);
    computeNodeValues(graph);
    computeNodeDepths(graph);
    computeNodeHeights(graph);
    computeNodeBreadths(graph);
    computeLinkBreadths(graph);
    return graph;
  }

  sankey.update = function(graph) {
    computeLinkBreadths(graph);
    return graph;
  };

  sankey.nodeId = function(_) {
    return arguments.length ? (id = typeof _ === "function" ? _ : d3_sankey_src_constant_constant(_), sankey) : id;
  };

  sankey.nodeAlign = function(_) {
    return arguments.length ? (align = typeof _ === "function" ? _ : d3_sankey_src_constant_constant(_), sankey) : align;
  };

  sankey.nodeSort = function(_) {
    return arguments.length ? (sort = _, sankey) : sort;
  };

  sankey.nodeWidth = function(_) {
    return arguments.length ? (dx = +_, sankey) : dx;
  };

  sankey.nodePadding = function(_) {
    return arguments.length ? (dy = py = +_, sankey) : dy;
  };

  sankey.nodes = function(_) {
    return arguments.length ? (nodes = typeof _ === "function" ? _ : d3_sankey_src_constant_constant(_), sankey) : nodes;
  };

  sankey.links = function(_) {
    return arguments.length ? (links = typeof _ === "function" ? _ : d3_sankey_src_constant_constant(_), sankey) : links;
  };

  sankey.linkSort = function(_) {
    return arguments.length ? (linkSort = _, sankey) : linkSort;
  };

  sankey.size = function(_) {
    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];
  };

  sankey.extent = function(_) {
    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];
  };

  sankey.iterations = function(_) {
    return arguments.length ? (iterations = +_, sankey) : iterations;
  };

  function computeNodeLinks({nodes, links}) {
    for (const [i, node] of nodes.entries()) {
      node.index = i;
      node.sourceLinks = [];
      node.targetLinks = [];
    }
    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));
    for (const [i, link] of links.entries()) {
      link.index = i;
      let {source, target} = link;
      if (typeof source !== "object") source = link.source = sankey_find(nodeById, source);
      if (typeof target !== "object") target = link.target = sankey_find(nodeById, target);
      source.sourceLinks.push(link);
      target.targetLinks.push(link);
    }
    if (linkSort != null) {
      for (const {sourceLinks, targetLinks} of nodes) {
        sourceLinks.sort(linkSort);
        targetLinks.sort(linkSort);
      }
    }
  }

  function computeNodeValues({nodes}) {
    for (const node of nodes) {
      node.value = node.fixedValue === undefined
          ? Math.max(src_sum_sum(node.sourceLinks, sankey_value), src_sum_sum(node.targetLinks, sankey_value))
          : node.fixedValue;
    }
  }

  function computeNodeDepths({nodes}) {
    const n = nodes.length;
    let current = new Set(nodes);
    let next = new Set;
    let x = 0;
    while (current.size) {
      for (const node of current) {
        node.depth = x;
        for (const {target} of node.sourceLinks) {
          next.add(target);
        }
      }
      if (++x > n) throw new Error("circular link");
      current = next;
      next = new Set;
    }
  }

  function computeNodeHeights({nodes}) {
    const n = nodes.length;
    let current = new Set(nodes);
    let next = new Set;
    let x = 0;
    while (current.size) {
      for (const node of current) {
        node.height = x;
        for (const {source} of node.targetLinks) {
          next.add(source);
        }
      }
      if (++x > n) throw new Error("circular link");
      current = next;
      next = new Set;
    }
  }

  function computeNodeLayers({nodes}) {
    const x = max_max(nodes, d => d.depth) + 1;
    const kx = (x1 - x0 - dx) / (x - 1);
    const columns = new Array(x);
    for (const node of nodes) {
      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));
      node.layer = i;
      node.x0 = x0 + i * kx;
      node.x1 = node.x0 + dx;
      if (columns[i]) columns[i].push(node);
      else columns[i] = [node];
    }
    if (sort) for (const column of columns) {
      column.sort(sort);
    }
    return columns;
  }

  function initializeNodeBreadths(columns) {
    const ky = src_min_min(columns, c => (y1 - y0 - (c.length - 1) * py) / src_sum_sum(c, sankey_value));
    for (const nodes of columns) {
      let y = y0;
      for (const node of nodes) {
        node.y0 = y;
        node.y1 = y + node.value * ky;
        y = node.y1 + py;
        for (const link of node.sourceLinks) {
          link.width = link.value * ky;
        }
      }
      y = (y1 - y + py) / (nodes.length + 1);
      for (let i = 0; i < nodes.length; ++i) {
        const node = nodes[i];
        node.y0 += y * (i + 1);
        node.y1 += y * (i + 1);
      }
      reorderLinks(nodes);
    }
  }

  function computeNodeBreadths(graph) {
    const columns = computeNodeLayers(graph);
    py = Math.min(dy, (y1 - y0) / (max_max(columns, c => c.length) - 1));
    initializeNodeBreadths(columns);
    for (let i = 0; i < iterations; ++i) {
      const alpha = Math.pow(0.99, i);
      const beta = Math.max(1 - alpha, (i + 1) / iterations);
      relaxRightToLeft(columns, alpha, beta);
      relaxLeftToRight(columns, alpha, beta);
    }
  }

  // Reposition each node based on its incoming (target) links.
  function relaxLeftToRight(columns, alpha, beta) {
    for (let i = 1, n = columns.length; i < n; ++i) {
      const column = columns[i];
      for (const target of column) {
        let y = 0;
        let w = 0;
        for (const {source, value} of target.targetLinks) {
          let v = value * (target.layer - source.layer);
          y += targetTop(source, target) * v;
          w += v;
        }
        if (!(w > 0)) continue;
        let dy = (y / w - target.y0) * alpha;
        target.y0 += dy;
        target.y1 += dy;
        reorderNodeLinks(target);
      }
      if (sort === undefined) column.sort(ascendingBreadth);
      resolveCollisions(column, beta);
    }
  }

  // Reposition each node based on its outgoing (source) links.
  function relaxRightToLeft(columns, alpha, beta) {
    for (let n = columns.length, i = n - 2; i >= 0; --i) {
      const column = columns[i];
      for (const source of column) {
        let y = 0;
        let w = 0;
        for (const {target, value} of source.sourceLinks) {
          let v = value * (target.layer - source.layer);
          y += sourceTop(source, target) * v;
          w += v;
        }
        if (!(w > 0)) continue;
        let dy = (y / w - source.y0) * alpha;
        source.y0 += dy;
        source.y1 += dy;
        reorderNodeLinks(source);
      }
      if (sort === undefined) column.sort(ascendingBreadth);
      resolveCollisions(column, beta);
    }
  }

  function resolveCollisions(nodes, alpha) {
    const i = nodes.length >> 1;
    const subject = nodes[i];
    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);
    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);
    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);
    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);
  }

  // Push any overlapping nodes down.
  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {
    for (; i < nodes.length; ++i) {
      const node = nodes[i];
      const dy = (y - node.y0) * alpha;
      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;
      y = node.y1 + py;
    }
  }

  // Push any overlapping nodes up.
  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {
    for (; i >= 0; --i) {
      const node = nodes[i];
      const dy = (node.y1 - y) * alpha;
      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;
      y = node.y0 - py;
    }
  }

  function reorderNodeLinks({sourceLinks, targetLinks}) {
    if (linkSort === undefined) {
      for (const {source: {sourceLinks}} of targetLinks) {
        sourceLinks.sort(ascendingTargetBreadth);
      }
      for (const {target: {targetLinks}} of sourceLinks) {
        targetLinks.sort(ascendingSourceBreadth);
      }
    }
  }

  function reorderLinks(nodes) {
    if (linkSort === undefined) {
      for (const {sourceLinks, targetLinks} of nodes) {
        sourceLinks.sort(ascendingTargetBreadth);
        targetLinks.sort(ascendingSourceBreadth);
      }
    }
  }

  // Returns the target.y0 that would produce an ideal link from source to target.
  function targetTop(source, target) {
    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;
    for (const {target: node, width} of source.sourceLinks) {
      if (node === target) break;
      y += width + py;
    }
    for (const {source: node, width} of target.targetLinks) {
      if (node === source) break;
      y -= width;
    }
    return y;
  }

  // Returns the source.y0 that would produce an ideal link from source to target.
  function sourceTop(source, target) {
    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;
    for (const {source: node, width} of target.targetLinks) {
      if (node === source) break;
      y += width + py;
    }
    for (const {target: node, width} of source.sourceLinks) {
      if (node === target) break;
      y -= width;
    }
    return y;
  }

  return sankey;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-path/src/path.js
var src_path_pi = Math.PI,
    src_path_tau = 2 * src_path_pi,
    src_path_epsilon = 1e-6,
    path_tauEpsilon = src_path_tau - src_path_epsilon;

function path_Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath
  this._ = "";
}

function path_path() {
  return new path_Path;
}

path_Path.prototype = path_path.prototype = {
  constructor: path_Path,
  moveTo: function(x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function() {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function(x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function(x1, y1, x, y) {
    this._ += "Q" + (+x1) + "," + (+y1) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function(x1, y1, x2, y2, x, y) {
    this._ += "C" + (+x1) + "," + (+y1) + "," + (+x2) + "," + (+y2) + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function(x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x1,y1).
    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > src_path_epsilon));

    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
    // Equivalently, is (x1,y1) coincident with (x2,y2)?
    // Or, is the radius zero? Line to (x1,y1).
    else if (!(Math.abs(y01 * x21 - y21 * x01) > src_path_epsilon) || !r) {
      this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
    }

    // Otherwise, draw an arc!
    else {
      var x20 = x2 - x0,
          y20 = y2 - y0,
          l21_2 = x21 * x21 + y21 * y21,
          l20_2 = x20 * x20 + y20 * y20,
          l21 = Math.sqrt(l21_2),
          l01 = Math.sqrt(l01_2),
          l = r * Math.tan((src_path_pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
          t01 = l / l01,
          t21 = l / l21;

      // If the start tangent is not coincident with (x0,y0), line to.
      if (Math.abs(t01 - 1) > src_path_epsilon) {
        this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
      }

      this._ += "A" + r + "," + r + ",0,0," + (+(y01 * x20 > x01 * y20)) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
    }
  },
  arc: function(x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0;

    // Is the radius negative? Error.
    if (r < 0) throw new Error("negative radius: " + r);

    // Is this path empty? Move to (x0,y0).
    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    }

    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > src_path_epsilon || Math.abs(this._y1 - y0) > src_path_epsilon) {
      this._ += "L" + x0 + "," + y0;
    }

    // Is this arc empty? We’re done.
    if (!r) return;

    // Does the angle go the wrong way? Flip the direction.
    if (da < 0) da = da % src_path_tau + src_path_tau;

    // Is this a complete circle? Draw two arcs to complete the circle.
    if (da > path_tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    }

    // Is this arc non-empty? Draw an arc!
    else if (da > src_path_epsilon) {
      this._ += "A" + r + "," + r + ",0," + (+(da >= src_path_pi)) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
    }
  },
  rect: function(x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + (+w) + "v" + (+h) + "h" + (-w) + "Z";
  },
  toString: function() {
    return this._;
  }
};

/* harmony default export */ const d3_path_src_path = (path_path);

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-shape/src/array.js
var src_array_slice = Array.prototype.slice;

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-shape/src/constant.js
/* harmony default export */ function d3_shape_src_constant(x) {
  return function constant() {
    return x;
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-shape/src/point.js
function src_point_x(p) {
  return p[0];
}

function src_point_y(p) {
  return p[1];
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js






function link_linkSource(d) {
  return d.source;
}

function link_linkTarget(d) {
  return d.target;
}

function src_link_link(curve) {
  var source = link_linkSource,
      target = link_linkTarget,
      x = src_point_x,
      y = src_point_y,
      context = null;

  function link() {
    var buffer, argv = src_array_slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);
    if (!context) context = buffer = d3_path_src_path();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function(_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function(_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function(_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : x;
  };

  link.y = function(_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : d3_shape_src_constant(+_), link) : y;
  };

  link.context = function(_) {
    return arguments.length ? ((context = _ == null ? null : _), link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function link_curveRadial(context, x0, y0, x1, y1) {
  var p0 = pointRadial(x0, y0),
      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),
      p2 = pointRadial(x1, y0),
      p3 = pointRadial(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function link_linkHorizontal() {
  return src_link_link(curveHorizontal);
}

function link_linkVertical() {
  return src_link_link(curveVertical);
}

function link_linkRadial() {
  var l = src_link_link(link_curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}

;// CONCATENATED MODULE: ../../node_modules/d3-sankey/src/sankeyLinkHorizontal.js


function horizontalSource(d) {
  return [d.source.x1, d.y0];
}

function horizontalTarget(d) {
  return [d.target.x0, d.y1];
}

/* harmony default export */ function sankeyLinkHorizontal() {
  return link_linkHorizontal()
      .source(horizontalSource)
      .target(horizontalTarget);
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/alluvial.js
var alluvial_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal imports





// D3 imports


var Alluvial = /** @class */ (function (_super) {
    alluvial_extends(Alluvial, _super);
    function Alluvial() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'alluvial';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.gradient_id = 'gradient-id-' + Math.floor(Math.random() * 99999999999);
        return _this;
    }
    Alluvial.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        // svg and container widths
        var svg = this.getComponentContainer({ withinChartClip: true });
        svg.html('');
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        // Because of a Firefox bug with regards to sizing & d3 packs,
        // rather than checking if height or width aren't 0,
        // we have to make sure they're not smaller than 1
        if (width < 1 || height < 1) {
            return;
        }
        var options = this.model.getOptions();
        var data = this.model.getDisplayData();
        // Is gradient enabled or not
        var isGradientAllowed = Tools.getProperty(this.getOptions(), 'color', 'gradient', 'enabled');
        // Set the custom node padding if provided
        var nodePadding = alluvial.minNodePadding;
        if (options.alluvial.nodePadding > alluvial.minNodePadding) {
            nodePadding = options.alluvial.nodePadding;
        }
        var sankey = Sankey()
            .nodeId(function (d) { return d.name; })
            .nodeWidth(alluvial.nodeWidth)
            // Distance nodes are apart from each other
            .nodePadding(nodePadding)
            // Size of the chart and its padding
            // Chart starts at 2 and ends at width - 2 so the outer nodes can expand from center
            // Chart starts from 30 so node categories can be displayed
            .extent([
            [2, 30],
            [width - 2, height],
        ]);
        // Construct a graph with the provided user data
        // Data must be deep cloned to ensure user passed data isn't deleted when themes change
        this.graph = sankey({
            nodes: options.alluvial.nodes.map(function (d) { return Object.assign({}, d); }),
            links: data.map(function (d) { return Object.assign({}, d); }),
        });
        // Filter out unused nodes so they are not rendered
        this.graph.nodes = this.graph.nodes.filter(function (node) { return node.value !== 0; });
        // Determine the category name placement x position
        var nodeCoordinates = {};
        this.graph.nodes.forEach(function (element) {
            var _a;
            var point = element.x0;
            // Only 1 category per x-value
            if (element.category) {
                nodeCoordinates[point] = (_a = element) === null || _a === void 0 ? void 0 : _a.category;
            }
        });
        // Add node category text
        var alluvialCategory = svg
            .append('g')
            .classed('header-arrows', true)
            .selectAll('g')
            .data(Object.keys(nodeCoordinates))
            .join('g')
            .attr('transform', function (d) {
            return "translate(" + d + ", 0)";
        });
        // Add the category text
        alluvialCategory
            .append('text')
            .attr('id', function (d, i) {
            return _this.services.domUtils.generateElementIDString("alluvial-category-" + i);
        })
            .style('font-size', '14px')
            .text(function (d) {
            if (nodeCoordinates[d]) {
                return nodeCoordinates[d];
            }
            return '';
        })
            .attr('y', 20)
            .attr('x', function (d, i) {
            var elementID = _this.services.domUtils.generateElementIDString("alluvial-category-" + i);
            var width = DOMUtils.getSVGElementSize(src_select("text#" + elementID), { useBBox: true }).width;
            // Make the text on the left on node group (except first column)
            var x = 0;
            if (d + x >= width) {
                x = -width + 4;
            }
            return x;
        });
        // Draws the links (Waves)
        var links = svg
            .append('g')
            .attr('fill', 'none')
            .selectAll('g')
            .data(this.graph.links);
        // Exit so we can have multiple appends in group
        links.exit().remove();
        // Add gradient if requsted
        if (isGradientAllowed) {
            var scale_1 = Tools.getProperty(this.getOptions(), 'color', 'scale');
            if (scale_1) {
                links
                    .enter()
                    .append('linearGradient')
                    .attr('id', function (d) { return _this.gradient_id + "-link-" + d.index; })
                    .attr('gradientUnits', 'userSpaceOnUse')
                    .call(function (gradient) {
                    return gradient
                        .append('stop')
                        .attr('offset', '0%')
                        .attr('stop-color', function (d) {
                        return scale_1[d.source.name];
                    });
                })
                    .call(function (gradient) {
                    return gradient
                        .append('stop')
                        .attr('offset', '100%')
                        .attr('stop-color', function (d) {
                        return scale_1[d.target.name];
                    });
                });
            }
            // Exit so path can be appended to the group
            links.exit().remove();
        }
        links
            .enter()
            .append('path')
            .classed('link', true)
            .attr('d', sankeyLinkHorizontal())
            .attr('id', function (d) {
            return _this.services.domUtils.generateElementIDString("alluvial-line-" + d.index);
        })
            .attr('class', function (d) {
            // Use a single color for the lines
            if (options.alluvial.monochrome) {
                return _this.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                    dataGroupName: 0,
                    originalClassName: 'link',
                });
            }
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.STROKE],
                dataGroupName: d.source.index,
                originalClassName: 'link',
            });
        })
            .style('stroke', function (d) {
            if (isGradientAllowed) {
                return "url(#" + _this.gradient_id + "-link-" + d.index + ")";
            }
            return _this.model.getFillColor(d.source.name);
        })
            .attr('stroke-width', function (d) { return Math.max(1, d.width); })
            .style('stroke-opacity', alluvial.opacity["default"])
            .attr('aria-label', function (d) {
            return d.source.name + " \u2192 " + d.target.name + " (" + d.value + (options.alluvial.units
                ? ' ' + options.alluvial.units
                : '') + ")";
        });
        // Creating the groups
        var node = svg
            .append('g')
            .selectAll('g')
            .data(this.graph.nodes)
            .enter()
            .append('g')
            .attr('id', function (d) {
            return _this.services.domUtils.generateElementIDString("alluvial-node-" + d.index);
        })
            .classed('node-group', true)
            .attr('transform', function (d) { return "translate(" + d.x0 + ", " + d.y0 + ")"; });
        // Creating the nodes
        node.append('rect')
            .classed('node', true)
            .attr('height', function (d) { return d.y1 - d.y0; })
            .attr('width', function (d) { return d.x1 - d.x0; })
            .attr('fill', 'black');
        // Group to hold the text & rectangle background
        var textNode = node
            .append('g')
            .attr('id', function (d) {
            return _this.services.domUtils.generateElementIDString("alluvial-node-title-" + d.index);
        });
        // Node title - text
        textNode
            .append('text')
            .attr('id', function (d) {
            return _this.services.domUtils.generateElementIDString("alluvial-node-text-" + d.index);
        })
            .attr('class', 'node-text')
            .style('font-size', '12px')
            .attr('text-anchor', 'start')
            .attr('fill', 'white')
            // Padding to text
            .attr('x', 4)
            // shift 13 pixels down to fit background container
            .attr('dy', 13)
            .text(function (d) {
            return d.name + " (" + d.value + ")";
        })
            .attr('aria-label', function (d) {
            return d.name + " (" + d.value + ")";
        });
        // Text background
        textNode
            .append('rect')
            .classed('node-text-bg', true)
            .attr('width', function (d, i) {
            var elementID = _this.services.domUtils.generateElementIDString("alluvial-node-text-" + i);
            // Determine rectangle width based on text width
            var width = DOMUtils.getSVGElementSize(src_select("text#" + elementID), { useBBox: true }).width;
            return width + 8;
        })
            .attr('height', 18)
            .attr('stroke-width', 2)
            .lower();
        // Position group based on text width
        textNode.attr('transform', function (d, i) {
            var elementID = _this.services.domUtils.generateElementIDString("alluvial-node-text-" + i);
            var width = DOMUtils.getSVGElementSize(src_select("text#" + elementID), { useBBox: true }).width;
            // Subtracting 9 since text background is 18 to center
            var y = (d.y1 - d.y0) / 2 - 9;
            // Node width
            var x = d.x1 - d.x0;
            // Display bars on the right instead of left of the node
            if (d.x1 >= width) {
                // 16 = node width (4) + text container padding (8) + distance between node and text container (4)
                x = x - (width + 16);
            }
            else {
                // Add padding to text containers
                x += 4;
            }
            return "translate(" + x + ", " + y + ")";
        });
        this.addLineEventListener();
        this.addNodeEventListener();
    };
    Alluvial.prototype.addLineEventListener = function () {
        var options = this.getOptions();
        var self = this;
        // Set delay to counter flashy behaviour
        var debouncedLineHighlight = Tools.debounce(function (link, event) {
            if (event === void 0) { event = 'mouseover'; }
            var allLinks = self.parent
                .selectAll('path.link')
                .transition()
                .call(function (t) {
                return self.services.transitions.setupTransition({
                    transition: t,
                    name: 'alluvial-links-mouse-highlight',
                });
            });
            if (event === 'mouseout') {
                src_select(link).lower();
                allLinks.style('stroke-opacity', alluvial.opacity["default"]);
            }
            else {
                allLinks.style('stroke-opacity', function () {
                    // highlight and raise if link is this
                    if (link === this) {
                        src_select(this).raise();
                        return alluvial.opacity.selected;
                    }
                    return alluvial.opacity.unfocus;
                });
            }
        }, 33);
        this.parent
            .selectAll('path.link')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            debouncedLineHighlight(this, 'mouseover');
            hoveredElement.classed('link-hovered', true);
            var strokeColor = getComputedStyle(this).getPropertyValue('stroke');
            // Dispatch mouse over event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.LINE_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Dispatch tooltip show event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: event,
                hoveredElement: hoveredElement,
                items: [
                    {
                        label: datum.target.name,
                        value: datum.value +
                            (options.alluvial.units
                                ? " " + options.alluvial.units
                                : ''),
                        color: strokeColor,
                        labelIcon: self.getRightArrowIcon(),
                    },
                ],
            });
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse move event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.LINE_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            // Dispatch tooltip move event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse click event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.LINE_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            debouncedLineHighlight(this, 'mouseout');
            hoveredElement.classed('link-hovered', false);
            // Dispatch mouse out event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.LINE_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Dispatch hide tooltip event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                event: event,
                hoveredElement: hoveredElement,
            });
        });
    };
    Alluvial.prototype.addNodeEventListener = function () {
        var _this = this;
        var self = this;
        // Set delay to counter flashy behaviour
        var debouncedLineHighlight = Tools.debounce(function (links, event) {
            if (links === void 0) { links = []; }
            if (event === void 0) { event = 'mouseover'; }
            if (event === 'mouseout' || links.length === 0) {
                // set all links to default opacity & corret link order
                self.parent
                    .selectAll('path.link')
                    .classed('link-hovered', false)
                    .data(_this.graph.links, function (d) { return d.index; })
                    .order()
                    .style('stroke-opacity', alluvial.opacity["default"]);
                return;
            }
            // Highlight all nodes
            var allLinks = self.parent
                .selectAll('path.link')
                .transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'alluvial-link-mouse-highlight',
                });
            });
            allLinks.style('stroke-opacity', function (d) {
                // Raise the links & increase stroke-opacity to selected
                if (links.some(function (element) { return element === d.index; })) {
                    src_select(this).classed('link-hovered', true).raise();
                    return alluvial.opacity.selected;
                }
                return alluvial.opacity.unfocus;
            });
        }, 66);
        self.parent
            .selectAll('.node-group')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            // Highlight all links that pass through node
            var paths = [];
            // Outgoing links
            self.traverse({ link: 'sourceLinks', node: 'target' }, datum, paths);
            //Incoming links
            self.traverse({ link: 'targetLinks', node: 'source' }, datum, paths);
            // Highlight all linked lines in the graph data structure
            if (paths.length) {
                // Get transformation value of node
                var nodeMatrix = Tools.getTranformOffsets(hoveredElement.attr('transform'));
                // Move node to the left by 2 to grow node from the center
                hoveredElement.attr('transform', "translate(" + (nodeMatrix.x - 2) + ", " + nodeMatrix.y + ")");
                hoveredElement
                    .classed('node-hovered', true)
                    .selectAll('rect.node')
                    .attr('width', 8);
                // Translate first column text container to the
                // right so it doesn't clash with expanding node
                if (datum.x0 - 2 === 0) {
                    var elementID_1 = self.services.domUtils.generateElementIDString("alluvial-node-title-" + datum.index);
                    var titleContainer = self.parent.select("g#" + elementID_1);
                    var titleMatrix = Tools.getTranformOffsets(titleContainer.attr('transform'));
                    titleContainer.attr('transform', "translate(" + (titleMatrix.x + 4) + "," + titleMatrix.y + ")");
                }
                var elementID = self.services.domUtils.generateElementIDString("alluvial-node-text-" + datum.index);
                self.parent
                    .select("text#" + elementID)
                    .style('font-weight', 'bold');
                debouncedLineHighlight(paths, 'mouseover');
                // Dispatch mouse over event
                self.services.events.dispatchEvent(interfaces.Events.Alluvial.NODE_MOUSEOVER, {
                    event: event,
                    element: hoveredElement,
                    datum: datum,
                });
            }
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse move event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.NODE_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            // Dispatch tooltip move event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse click event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.NODE_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            // Set the node position to initial state (unexpanded)
            var nodeMatrix = Tools.getTranformOffsets(hoveredElement.attr('transform'));
            hoveredElement
                .classed('node-hovered', false)
                .attr('transform', "translate(" + (nodeMatrix.x + 2) + ", " + nodeMatrix.y + ")")
                .select('rect.node')
                .attr('width', alluvial.nodeWidth);
            // Translate text container back to initial state
            if (datum.x0 - 2 === 0) {
                var elementID_2 = self.services.domUtils.generateElementIDString("alluvial-node-title-" + datum.index);
                var titleContainer = self.parent.select("g#" + elementID_2);
                var titleMatrix = Tools.getTranformOffsets(titleContainer.attr('transform'));
                titleContainer.attr('transform', "translate(" + (titleMatrix.x - 4) + "," + titleMatrix.y + ")");
            }
            var elementID = self.services.domUtils.generateElementIDString("alluvial-node-text-" + datum.index);
            self.parent
                .select("text#" + elementID)
                .style('font-weight', 'normal');
            debouncedLineHighlight([], 'mouseout');
            // Dispatch mouse out event
            self.services.events.dispatchEvent(interfaces.Events.Alluvial.NODE_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            // Dispatch hide tooltip event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                hoveredElement: hoveredElement,
            });
        });
    };
    // Traverse graph and get all connected links to node
    Alluvial.prototype.traverse = function (direction, node, visited) {
        var _this = this;
        if (visited === void 0) { visited = []; }
        var links = node[direction.link].map(function (element) {
            visited.push(element.index);
            return element[direction.node];
        });
        // Retrieve the child nodes
        links.forEach(function (element) { return _this.traverse(direction, element, visited); });
    };
    Alluvial.prototype.getRightArrowIcon = function () {
        return "\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n\t\t\t<polygon points=\"18 6 16.57 7.393 24.15 15 4 15 4 17 24.15 17 16.57 24.573 18 26 28 16 18 6\"/>\n\t\t\t<rect  data-name=\"&lt;Transparent Rectangle&gt;\" style=\"fill: none;\" width=\"32\" height=\"32\"/>\n\t\t</svg>";
    };
    // Remove event listeners
    Alluvial.prototype.destroy = function () {
        this.parent
            .selectAll('path.line,.node-group')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('click', null)
            .on('mouseout', null);
    };
    return Alluvial;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/alluvial.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/heatmap.js
var heatmap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports






// D3 Imports


var Heatmap = /** @class */ (function (_super) {
    heatmap_extends(Heatmap, _super);
    function Heatmap() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'heatmap';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.matrix = {};
        _this.xBandwidth = 0;
        _this.yBandwidth = 0;
        _this.translationUnits = {
            x: 0,
            y: 0,
        };
        // Highlight elements that match the hovered axis item
        _this.handleAxisOnHover = function (event) {
            var detail = event.detail;
            var datum = detail.datum;
            // Unique ranges and domains
            var ranges = _this.model.getUniqueRanges();
            var domains = _this.model.getUniqueDomain();
            // Labels
            var domainLabel = _this.services.cartesianScales.getDomainLabel();
            var rangeLabel = _this.services.cartesianScales.getRangeLabel();
            // Scales
            var mainXScale = _this.services.cartesianScales.getMainXScale();
            var mainYScale = _this.services.cartesianScales.getMainYScale();
            var label = '', sum = 0, minimum = 0, maximum = 0;
            // Check to see where datum belongs
            if (_this.matrix[datum] !== undefined) {
                label = domainLabel;
                // Iterate through Object and get sum, min, and max
                ranges.forEach(function (element) {
                    var value = _this.matrix[datum][element].value || 0;
                    sum += value;
                    minimum = value < minimum ? value : minimum;
                    maximum = value > maximum ? value : maximum;
                });
            }
            else {
                label = rangeLabel;
                domains.forEach(function (element) {
                    var value = _this.matrix[element][datum].value || 0;
                    sum += value;
                    minimum = value < minimum ? value : minimum;
                    maximum = value > maximum ? value : maximum;
                });
            }
            if (mainXScale(datum) !== undefined) {
                _this.parent
                    .select('g.multi-cell.column-highlight')
                    .classed('highlighter-hidden', false)
                    .attr('transform', "translate(" + mainXScale(datum) + ", " + min_min(mainYScale.range()) + ")");
            }
            else if (mainYScale(datum) !== undefined) {
                _this.parent
                    .select('g.multi-cell.row-highlight')
                    .classed('highlighter-hidden', false)
                    .attr('transform', "translate(" + min_min(mainXScale.range()) + "," + mainYScale(datum) + ")");
            }
            // Dispatch tooltip show event
            _this.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                event: detail.event,
                hoveredElement: src_select(event.detail.element),
                items: [
                    {
                        label: label,
                        value: datum,
                        bold: true,
                    },
                    {
                        label: 'Min',
                        value: minimum,
                    },
                    {
                        label: 'Max',
                        value: maximum,
                    },
                    {
                        label: 'Average',
                        value: sum / domains.length,
                    },
                ],
            });
        };
        // Un-highlight all elements
        _this.handleAxisMouseOut = function (event) {
            // Hide column/row
            _this.parent
                .selectAll('g.multi-cell')
                .classed('highlighter-hidden', true);
            // Dispatch hide tooltip event
            _this.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                event: event,
            });
        };
        return _this;
    }
    Heatmap.prototype.init = function () {
        var eventsFragment = this.services.events;
        // Highlight correct cells on Axis item hovers
        eventsFragment.addEventListener(interfaces.Events.Axis.LABEL_MOUSEOVER, this.handleAxisOnHover);
        // Highlight correct cells on Axis item mouseouts
        eventsFragment.addEventListener(interfaces.Events.Axis.LABEL_MOUSEOUT, this.handleAxisMouseOut);
        // Highlight correct cells on Axis item focus
        eventsFragment.addEventListener(interfaces.Events.Axis.LABEL_FOCUS, this.handleAxisOnHover);
        // Highlight correct cells on Axis item  blur
        eventsFragment.addEventListener(interfaces.Events.Axis.LABEL_BLUR, this.handleAxisMouseOut);
    };
    Heatmap.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer({ withinChartClip: true });
        // Lower the chart so the axes are always visible
        svg.lower();
        var cartesianScales = this.services.cartesianScales;
        this.matrix = this.model.getMatrix();
        svg.html('');
        if (Tools.getProperty(this.getOptions(), 'data', 'loading')) {
            return;
        }
        // determine x and y axis scale
        var mainXScale = cartesianScales.getMainXScale();
        var mainYScale = cartesianScales.getMainYScale();
        var domainIdentifier = cartesianScales.getDomainIdentifier();
        var rangeIdentifier = cartesianScales.getRangeIdentifier();
        // Get unique axis values & create a matrix
        var uniqueDomain = this.model.getUniqueDomain();
        var uniqueRange = this.model.getUniqueRanges();
        // Get matrix in the form of an array to create a single heatmap group
        var matrixArray = this.model.getMatrixAsArray();
        // Get available chart area
        var xRange = mainXScale.range();
        var yRange = mainYScale.range();
        // Determine rectangle dimensions based on the number of unique domain and range
        this.xBandwidth = Math.abs((xRange[1] - xRange[0]) / uniqueDomain.length);
        this.yBandwidth = Math.abs((yRange[1] - yRange[0]) / uniqueRange.length);
        var patternID = this.services.domUtils.generateElementIDString("heatmap-pattern-stripes");
        // Create a striped pattern for missing data
        svg.append('defs')
            .append('pattern')
            .attr('id', patternID)
            .attr('width', 3)
            .attr('height', 3)
            .attr('patternUnits', 'userSpaceOnUse')
            .attr('patternTransform', 'rotate(45)')
            .append('rect')
            .classed('pattern-fill', true)
            .attr('width', 0.5)
            .attr('height', 8);
        var rectangles = svg
            .selectAll()
            .data(matrixArray)
            .enter()
            .append('g')
            .attr('class', function (d) { return "heat-" + d.index; })
            .classed('cell', true)
            .attr('transform', function (d) {
            return "translate(" + mainXScale(d[domainIdentifier]) + ", " + mainYScale(d[rangeIdentifier]) + ")";
        })
            .append('rect')
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                value: d.value,
                originalClassName: "heat-" + d.index,
            });
        })
            .classed('heat', true)
            .classed('null-state', function (d) {
            return d.index === -1 || d.value === null ? true : false;
        })
            .attr('width', this.xBandwidth)
            .attr('height', this.yBandwidth)
            .style('fill', function (d) {
            // Check if a valid value exists
            if (d.index === -1 || d.value === null) {
                return "url(#" + patternID + ")";
            }
            return _this.model.getFillColor(Number(d.value));
        })
            .attr('aria-label', function (d) { return d.value; });
        // Cell highlight box
        this.createOuterBox('g.cell-highlight', this.xBandwidth, this.yBandwidth);
        // Column highlight box
        this.createOuterBox('g.multi-cell.column-highlight', this.xBandwidth, Math.abs(yRange[1] - yRange[0]));
        // Row highlight box
        this.createOuterBox('g.multi-cell.row-highlight', Math.abs(xRange[1] - xRange[0]), this.yBandwidth);
        if (this.determineDividerStatus()) {
            rectangles.style('stroke-width', '1px');
            this.parent.select('g.cell-highlight').classed('cell-2', true);
        }
        this.addEventListener();
    };
    /**
     * Generates a box using lines to create a hover effect
     * The lines have drop shadow in their respective direction
     * @param parentTag - tag name
     * @param xBandwidth - X length
     * @param yBandwidth - y length
     */
    Heatmap.prototype.createOuterBox = function (parentTag, xBandwidth, yBandwidth) {
        // Create a highlighter in the parent component so the shadow and the lines do not get clipped
        var highlight = DOMUtils.appendOrSelect(this.parent, parentTag)
            .classed('shadows', true)
            .classed('highlighter-hidden', true);
        DOMUtils.appendOrSelect(highlight, 'line.top')
            .attr('x1', -1)
            .attr('x2', xBandwidth + 1);
        DOMUtils.appendOrSelect(highlight, 'line.left')
            .attr('x1', 0)
            .attr('y1', -1)
            .attr('x2', 0)
            .attr('y2', yBandwidth + 1);
        DOMUtils.appendOrSelect(highlight, 'line.down')
            .attr('x1', -1)
            .attr('x2', xBandwidth + 1)
            .attr('y1', yBandwidth)
            .attr('y2', yBandwidth);
        DOMUtils.appendOrSelect(highlight, 'line.right')
            .attr('x1', xBandwidth)
            .attr('x2', xBandwidth)
            .attr('y1', -1)
            .attr('y2', yBandwidth + 1);
    };
    Heatmap.prototype.determineDividerStatus = function () {
        // Add dividers if status is not off, will assume auto or on by default.
        var dividerStatus = Tools.getProperty(this.getOptions(), 'heatmap', 'divider', 'state');
        // Determine if cell divider should be displayed
        if (dividerStatus !== interfaces.DividerStatus.OFF) {
            if ((dividerStatus === interfaces.DividerStatus.AUTO &&
                heatmap.minCellDividerDimension <=
                    this.xBandwidth &&
                heatmap.minCellDividerDimension <=
                    this.yBandwidth) ||
                dividerStatus === interfaces.DividerStatus.ON) {
                return true;
            }
        }
        return false;
    };
    Heatmap.prototype.addEventListener = function () {
        var self = this;
        var cartesianScales = this.services.cartesianScales;
        var options = this.getOptions();
        var totalLabel = lodash_es_get(options, 'tooltip.totalLabel');
        var domainIdentifier = cartesianScales.getDomainIdentifier();
        var rangeIdentifier = cartesianScales.getRangeIdentifier();
        var domainLabel = cartesianScales.getDomainLabel();
        var rangeLabel = cartesianScales.getRangeLabel();
        this.parent
            .selectAll('g.cell')
            .on('mouseover', function (event, datum) {
            var cell = src_select(this);
            var hoveredElement = cell.select('rect.heat');
            var nullState = hoveredElement.classed('null-state');
            // Dispatch event and tooltip only if value exists
            if (!nullState) {
                // Get transformation value of node
                var transform = Tools.getTranformOffsets(cell.attr('transform'));
                src_select('g.cell-highlight')
                    .attr('transform', "translate(" + (transform.x + self.translationUnits.x) + ", " + (transform.y + self.translationUnits.y) + ")")
                    .classed('highlighter-hidden', false);
                // Dispatch mouse over event
                self.services.events.dispatchEvent(interfaces.Events.Heatmap.HEATMAP_MOUSEOVER, {
                    event: event,
                    element: hoveredElement,
                    datum: datum,
                });
                // Dispatch tooltip show event
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    items: [
                        {
                            label: domainLabel,
                            value: datum[domainIdentifier],
                        },
                        {
                            label: rangeLabel,
                            value: datum[rangeIdentifier],
                        },
                        {
                            label: totalLabel || 'Total',
                            value: datum['value'],
                            color: hoveredElement.style('fill'),
                        },
                    ],
                });
            }
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse move event
            self.services.events.dispatchEvent(interfaces.Events.Heatmap.HEATMAP_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            // Dispatch tooltip move event
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event, datum) {
            // Dispatch mouse click event
            self.services.events.dispatchEvent(interfaces.Events.Heatmap.HEATMAP_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var cell = src_select(this);
            var hoveredElement = cell.select('rect.heat');
            var nullState = hoveredElement.classed('null-state');
            src_select('g.cell-highlight').classed('highlighter-hidden', true);
            // Dispatch event and tooltip only if value exists
            if (!nullState) {
                // Dispatch mouse out event
                self.services.events.dispatchEvent(interfaces.Events.Heatmap.HEATMAP_MOUSEOUT, {
                    event: event,
                    element: hoveredElement,
                    datum: datum,
                });
                // Dispatch hide tooltip event
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                    event: event,
                    hoveredElement: hoveredElement,
                });
            }
        });
    };
    // Remove event listeners
    Heatmap.prototype.destroy = function () {
        this.parent
            .selectAll('rect.heat')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('click', null)
            .on('mouseout', null);
        // Remove legend listeners
        var eventsFragment = this.services.events;
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_HOVER, this.handleAxisOnHover);
        eventsFragment.removeEventListener(interfaces.Events.Legend.ITEM_MOUSEOUT, this.handleAxisMouseOut);
    };
    return Heatmap;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/heatmap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/layout/spacer.js
var spacer_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports


var Spacer = /** @class */ (function (_super) {
    spacer_extends(Spacer, _super);
    function Spacer() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'spacer';
        return _this;
    }
    Spacer.prototype.render = function () {
        this.getComponentContainer()
            .style('width', (this.configs.size || spacers["default"].size) + "px")
            .style('height', (this.configs.size || spacers["default"].size) + "px")
            .attr('opacity', 0);
    };
    return Spacer;
}(Component));

//# sourceMappingURL=../../../src/components/layout/spacer.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/layout/layout.js
var layout_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

// import the settings for the css prefix

var LayoutComponent = /** @class */ (function (_super) {
    layout_extends(LayoutComponent, _super);
    function LayoutComponent(model, services, children, configs) {
        var _this = _super.call(this, model, services, configs) || this;
        _this.type = 'layout';
        _this.configs = configs;
        _this.children = children;
        _this._instanceID = LayoutComponent.instanceID++;
        _this.init();
        return _this;
    }
    LayoutComponent.prototype.init = function () {
        this.children.forEach(function (child) {
            child.components.forEach(function (component) {
                component.init();
            });
        });
    };
    LayoutComponent.prototype.getPreferedAndFixedSizeSum = function () {
        var svg = this.parent;
        var sum = 0;
        svg.selectAll("div.layout-child-" + this._instanceID)
            .filter(function (d) {
            var growth = Tools.getProperty(d, 'growth');
            return (growth === interfaces.LayoutGrowth.PREFERRED ||
                growth === interfaces.LayoutGrowth.FIXED);
        })
            .each(function (d) {
            sum += d.size;
        });
        return sum;
    };
    LayoutComponent.prototype.getNumOfStretchChildren = function () {
        var svg = this.parent;
        return svg
            .selectAll("div.layout-child-" + this._instanceID)
            .filter(function (d) {
            return Tools.getProperty(d, 'growth') === interfaces.LayoutGrowth.STRETCH;
        })
            .size();
    };
    LayoutComponent.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        // Get parent element to render inside of
        var parent = this.parent;
        var _a = DOMUtils.getHTMLElementSize(parent.node()), width = _a.width, height = _a.height;
        var horizontal = this.configs.direction === interfaces.LayoutDirection.ROW ||
            this.configs.direction === interfaces.LayoutDirection.ROW_REVERSE;
        var chartprefix = Tools.getProperty(this.model.getOptions(), 'style', 'prefix');
        // Add new boxes to the DOM for each layout child
        var updatedBoxes = parent
            .classed(js_settings.prefix + "--" + chartprefix + "--layout-row", this.configs.direction === interfaces.LayoutDirection.ROW)
            .classed(js_settings.prefix + "--" + chartprefix + "--layout-row-reverse", this.configs.direction === interfaces.LayoutDirection.ROW_REVERSE)
            .classed(js_settings.prefix + "--" + chartprefix + "--layout-column", this.configs.direction === interfaces.LayoutDirection.COLUMN)
            .classed(js_settings.prefix + "--" + chartprefix + "--layout-column-reverse", this.configs.direction === interfaces.LayoutDirection.COLUMN_REVERSE)
            .classed(js_settings.prefix + "--" + chartprefix + "--layout-alignitems-center", this.configs.alignItems === interfaces.LayoutAlignItems.CENTER)
            .selectAll("div.layout-child-" + this._instanceID)
            .data(this.children, function (d) { return d.id; });
        var enteringBoxes = updatedBoxes.enter().append('div');
        enteringBoxes
            .merge(parent.selectAll("div.layout-child-" + this._instanceID))
            .attr('class', function (d) {
            return "layout-child layout-child-" + _this._instanceID + " " + d.id;
        })
            .each(function (d) {
            var _this = this;
            // Set parent component for each child
            d.components.forEach(function (itemComponent) {
                var selection = src_select(_this);
                var renderType = Tools.getProperty(d, 'renderType');
                var isRenderingSVG = renderType === interfaces.RenderTypes.SVG;
                itemComponent.setParent(isRenderingSVG
                    ? DOMUtils.appendOrSelect(selection, 'svg.layout-svg-wrapper')
                        .attr('width', '100%')
                        .attr('height', '100%')
                    : selection);
                // Render preffered & fixed items
                var growth = Tools.getProperty(d, 'growth');
                if (growth === interfaces.LayoutGrowth.PREFERRED ||
                    growth === interfaces.LayoutGrowth.FIXED) {
                    itemComponent.render(animate);
                }
            });
        });
        parent
            .selectAll("div.layout-child-" + this._instanceID)
            .style('height', null)
            .style('width', null)
            .each(function (d) {
            // Calculate preffered children sizes after internal rendering
            var growth = Tools.getProperty(d, 'growth');
            var renderType = Tools.getProperty(d, 'renderType');
            var matchingElementDimensions = renderType === interfaces.RenderTypes.SVG
                ? DOMUtils.getSVGElementSize(src_select(this).select('svg.layout-svg-wrapper'), {
                    useBBox: true,
                })
                : DOMUtils.getHTMLElementSize(this);
            if (growth === interfaces.LayoutGrowth.PREFERRED) {
                var matchingElementWidth = horizontal
                    ? matchingElementDimensions.width
                    : matchingElementDimensions.height;
                var elementWidth = horizontal ? width : height;
                d.size = (matchingElementWidth / elementWidth) * 100;
            }
        });
        updatedBoxes.exit().remove();
        // Run through stretch x-items
        this.children
            .filter(function (child) {
            var growth = Tools.getProperty(child, 'growth');
            return growth === interfaces.LayoutGrowth.STRETCH;
        })
            .forEach(function (child, i) {
            child.size =
                (100 - +_this.getPreferedAndFixedSizeSum()) /
                    +_this.getNumOfStretchChildren();
        });
        // Update all boxes with new sizing
        var allUpdatedBoxes = parent
            .selectAll("div.layout-child-" + this._instanceID)
            .data(this.children, function (d) { return d.id; });
        if (horizontal) {
            allUpdatedBoxes
                .style('width', function (d) { return (d.size / 100) * width + "px"; })
                .style('height', '100%');
        }
        else {
            allUpdatedBoxes
                .style('height', function (d) { return (d.size / 100) * height + "px"; })
                .style('width', '100%');
        }
        allUpdatedBoxes.each(function (d, i) {
            d.components.forEach(function (itemComponent) {
                var growth = Tools.getProperty(d, 'growth');
                if (growth === interfaces.LayoutGrowth.STRETCH) {
                    itemComponent.render(animate);
                }
            });
        });
    };
    // Pass on model to children as well
    LayoutComponent.prototype.setModel = function (newObj) {
        _super.prototype.setModel.call(this, newObj);
        this.children.forEach(function (child) {
            child.components.forEach(function (component) { return component.setModel(newObj); });
        });
    };
    // Pass on essentials to children as well
    LayoutComponent.prototype.setServices = function (newObj) {
        _super.prototype.setServices.call(this, newObj);
        this.children.forEach(function (child) {
            child.components.forEach(function (component) {
                return component.setServices(newObj);
            });
        });
    };
    LayoutComponent.prototype.destroy = function () {
        this.children.forEach(function (child) {
            child.components.forEach(function (component) { return component.destroy(); });
        });
    };
    // Give every layout component a distinct ID
    // so they don't interfere when querying elements
    LayoutComponent.instanceID = Math.floor(Math.random() * 99999999999);
    return LayoutComponent;
}(Component));

//# sourceMappingURL=../../../src/components/layout/layout.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/axis.js
var axis_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports







// D3 Imports


var Axis = /** @class */ (function (_super) {
    axis_extends(Axis, _super);
    function Axis(model, services, configs) {
        var _a;
        var _this = _super.call(this, model, services, configs) || this;
        _this.type = 'axes';
        _this.renderType = enums/* RenderTypes.SVG */.WJ.SVG;
        _this.truncation = (_a = {},
            _a[interfaces.AxisPositions.LEFT] = false,
            _a[interfaces.AxisPositions.RIGHT] = false,
            _a[interfaces.AxisPositions.TOP] = false,
            _a[interfaces.AxisPositions.BOTTOM] = false,
            _a);
        if (configs) {
            _this.configs = configs;
        }
        _this.margins = _this.configs.margins;
        return _this;
    }
    Axis.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var axisPosition = this.configs.position;
        var options = this.getOptions();
        var isAxisVisible = Tools.getProperty(options, 'axes', axisPosition, 'visible');
        var svg = this.getComponentContainer();
        var _a = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        // Add axis into the parent
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        var startPosition, endPosition;
        if (axisPosition === interfaces.AxisPositions.BOTTOM ||
            axisPosition === interfaces.AxisPositions.TOP) {
            startPosition = this.configs.axes[interfaces.AxisPositions.LEFT]
                ? this.margins.left
                : 0;
            endPosition = this.configs.axes[interfaces.AxisPositions.RIGHT]
                ? width - this.margins.right
                : width;
        }
        else {
            startPosition = height - this.margins.bottom;
            endPosition = this.margins.top;
        }
        // Grab the scale off of the Scales service
        var scale = this.services.cartesianScales.getScaleByPosition(axisPosition);
        if (this.scaleType === interfaces.ScaleTypes.LABELS ||
            this.scaleType === interfaces.ScaleTypes.LABELS_RATIO) {
            scale.rangeRound([startPosition, endPosition]);
        }
        else {
            scale.range([startPosition, endPosition]);
        }
        // Identify the corresponding d3 axis function
        var axisFunction;
        switch (axisPosition) {
            case interfaces.AxisPositions.LEFT:
                axisFunction = axisLeft;
                break;
            case interfaces.AxisPositions.BOTTOM:
                axisFunction = axisBottom;
                break;
            case interfaces.AxisPositions.RIGHT:
                axisFunction = axisRight;
                break;
            case interfaces.AxisPositions.TOP:
                axisFunction = axisTop;
                break;
        }
        container.attr('aria-label', axisPosition + " axis");
        var axisRefExists = !container.select("g.ticks").empty();
        var axisRef = DOMUtils.appendOrSelect(container, "g.ticks");
        if (!axisRefExists) {
            axisRef.attr('role', interfaces.Roles.GRAPHICS_OBJECT + " " + interfaces.Roles.GROUP);
            axisRef.attr('aria-label', axisPosition + " ticks");
        }
        // We draw the invisible axis because of the async nature of d3 transitions
        // To be able to tell the final width & height of the axis when initiaing the transition
        // The invisible axis is updated instantly and without a transition
        var invisibleAxisRef = DOMUtils.appendOrSelect(container, "g.ticks.invisible")
            .style('opacity', '0')
            .style('pointer-events', 'none')
            .attr('aria-hidden', true)
            .attr('aria-label', "invisible " + axisPosition + " ticks");
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        var isTimeScaleType = this.scaleType === interfaces.ScaleTypes.TIME ||
            axisOptions.scaleType === interfaces.ScaleTypes.TIME;
        var isVerticalAxis = axisPosition === interfaces.AxisPositions.LEFT ||
            axisPosition === interfaces.AxisPositions.RIGHT;
        // if zoomDomain is available, scale type is time, and axis position isBOTTOM or TOP
        // update scale domain to zoomDomain.
        var zoomDomain = this.model.get('zoomDomain');
        if (zoomDomain && isTimeScaleType && !isVerticalAxis) {
            scale.domain(zoomDomain);
        }
        if (!isAxisVisible) {
            axisRef.attr('aria-hidden', true);
            return;
        }
        var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');
        var isDataLoading = Tools.getProperty(options, 'data', 'loading');
        var numberOfTicksProvided = Tools.getProperty(axisOptions, 'ticks', 'number');
        // user can provide custom ticks to be displayed
        // ticks need to be in the domain of the axis data
        var userProvidedTickValues = Tools.getProperty(axisOptions, 'ticks', 'values');
        // get user provided custom values for truncation
        var truncationType = Tools.getProperty(axisOptions, 'truncation', 'type');
        var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');
        var truncationNumCharacter = Tools.getProperty(axisOptions, 'truncation', 'numCharacter');
        var isNumberOfTicksProvided = numberOfTicksProvided !== null;
        var timeScaleOptions = Tools.getProperty(options, 'timeScale');
        // Append to DOM a fake tick to get the right computed font height
        var fakeTick = DOMUtils.appendOrSelect(invisibleAxisRef, "g.tick");
        var fakeTickText = DOMUtils.appendOrSelect(fakeTick, "text").text('0');
        var tickHeight = DOMUtils.getSVGElementSize(fakeTickText.node(), {
            useBBox: true,
        }).height;
        fakeTick.remove();
        var scaleType = this.scaleType || axisOptions.scaleType || interfaces.ScaleTypes.LINEAR;
        // Initialize axis object
        var axis = axisFunction(scale).tickSizeOuter(0);
        if (scale.ticks) {
            var numberOfTicks = void 0;
            if (isNumberOfTicksProvided) {
                numberOfTicks = numberOfTicksProvided;
            }
            else {
                numberOfTicks = configuration_non_customizable_axis.ticks.number;
                if (isVerticalAxis) {
                    // Set how many ticks based on height
                    numberOfTicks = this.getNumberOfFittingTicks(height, tickHeight, configuration_non_customizable_axis.ticks.verticalSpaceRatio);
                }
            }
            // scale continuous
            // remove 0 ticks for skeleton
            if (scale.ticks().length === 1 && scale.ticks()[0] === 0) {
                numberOfTicks = 0;
            }
            axis.ticks(numberOfTicks);
            if (isTimeScaleType) {
                if (!scale.ticks(numberOfTicks).length) {
                    axis.tickValues([]);
                }
                else {
                    var addSpaceOnEdges = Tools.getProperty(options, 'timeScale', 'addSpaceOnEdges');
                    var customDomain = Tools.getProperty(options, 'axes', axisPosition, 'domain');
                    var tickValues = void 0;
                    // scale.nice() will change scale domain which causes extra space near chart edge
                    // so use another scale instance to avoid impacts to original scale
                    var tempScale = scale.copy();
                    if (addSpaceOnEdges && !customDomain) {
                        tempScale.nice(numberOfTicks);
                    }
                    tickValues = tempScale.ticks(numberOfTicks);
                    // Remove labels on the edges
                    // If there are more than 2 labels to show
                    if (addSpaceOnEdges &&
                        tickValues.length > 2 &&
                        !customDomain) {
                        tickValues.splice(tickValues.length - 1, 1);
                        tickValues.splice(0, 1);
                    }
                    axis.tickValues(tickValues);
                }
            }
        }
        // create the right ticks formatter
        var formatter;
        var userProvidedFormatter = Tools.getProperty(axisOptions, 'ticks', 'formatter');
        if (isTimeScaleType) {
            var timeInterval_1 = computeTimeIntervalName(axis.tickValues());
            if (userProvidedFormatter === null) {
                formatter = function (t, i) {
                    return formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);
                };
            }
            else {
                formatter = function (t, i) {
                    var defaultFormattedValue = formatTick(t, i, axis.tickValues(), timeInterval_1, timeScaleOptions);
                    return userProvidedFormatter(t, i, defaultFormattedValue);
                };
            }
        }
        else {
            if (userProvidedFormatter === null) {
                if (scaleType === interfaces.ScaleTypes.LINEAR) {
                    formatter = function (t) { return t.toLocaleString(); };
                }
            }
            else {
                formatter = userProvidedFormatter;
            }
        }
        // Set ticks formatter
        axis.tickFormat(formatter);
        // prioritize using a custom array of values rather than number of ticks
        // if both are provided. custom tick values need to be within the domain of the scale
        var _b = this.services.cartesianScales
            .getScaleByPosition(axisPosition)
            .domain(), lowerBound = _b[0], upperBound = _b[1];
        var validTicks;
        if (userProvidedTickValues) {
            if (isTimeScaleType) {
                // sanitize user-provided tick values
                userProvidedTickValues.forEach(function (userProvidedTickValue, i) {
                    if (userProvidedTickValue.getTime === undefined) {
                        userProvidedTickValues[i] = new Date(userProvidedTickValue);
                    }
                });
                // check the supplied ticks are within the time domain
                validTicks = userProvidedTickValues.filter(function (tick) {
                    var tickTimestamp = tick.getTime();
                    return (tickTimestamp >= new Date(lowerBound).getTime() &&
                        tickTimestamp <= new Date(upperBound).getTime());
                });
            }
            else if (axisScaleType === interfaces.ScaleTypes.LABELS) {
                var discreteDomain_1 = this.services.cartesianScales
                    .getScaleByPosition(axisPosition)
                    .domain();
                validTicks = userProvidedTickValues.filter(function (tick) {
                    return discreteDomain_1.includes(tick);
                });
            }
            else {
                // continuous scales
                validTicks = userProvidedTickValues.filter(function (tick) { return tick >= lowerBound && tick <= upperBound; });
            }
            axis.tickValues(validTicks);
        }
        // Position and transition the axis
        switch (axisPosition) {
            case interfaces.AxisPositions.LEFT:
                axisRef.attr('transform', "translate(" + this.margins.left + ", 0)");
                break;
            case interfaces.AxisPositions.BOTTOM:
                axisRef.attr('transform', "translate(0, " + (height - this.margins.bottom) + ")");
                break;
            case interfaces.AxisPositions.RIGHT:
                axisRef.attr('transform', "translate(" + (width - this.margins.right) + ", 0)");
                break;
            case interfaces.AxisPositions.TOP:
                axisRef.attr('transform', "translate(0, " + this.margins.top + ")");
                break;
        }
        // Position the axis title
        // check that data exists, if they don't, doesn't show the title axis
        var isDataEmpty = this.model.isDataEmpty();
        if (axisOptions.title) {
            var axisTitleRef = DOMUtils.appendOrSelect(container, "text.axis-title").html(isDataEmpty || isDataLoading ? '' : axisOptions.title);
            // vertical axes can have override for title orientation
            var titleOrientation = Tools.getProperty(axisOptions, 'titleOrientation');
            switch (axisPosition) {
                case interfaces.AxisPositions.LEFT:
                    if (titleOrientation === enums/* AxisTitleOrientations.RIGHT */.bd.RIGHT) {
                        axisTitleRef
                            .attr('transform', 'rotate(90)')
                            .attr('y', 0)
                            .attr('x', scale.range()[0] / 2)
                            .attr('dy', '-0.5em')
                            .style('text-anchor', 'middle');
                    }
                    else {
                        axisTitleRef
                            .attr('transform', 'rotate(-90)')
                            .attr('y', 0)
                            .attr('x', -(scale.range()[0] / 2))
                            .attr('dy', '0.75em')
                            .style('text-anchor', 'middle');
                    }
                    break;
                case interfaces.AxisPositions.BOTTOM:
                    axisTitleRef
                        .attr('transform', "translate(" + (this.margins.left / 2 + scale.range()[1] / 2) + ", " + (height + 4) + ")")
                        .style('text-anchor', 'middle');
                    break;
                case interfaces.AxisPositions.RIGHT:
                    if (titleOrientation === enums/* AxisTitleOrientations.LEFT */.bd.LEFT) {
                        axisTitleRef
                            .attr('transform', 'rotate(-90)')
                            .attr('y', width)
                            .attr('x', -(scale.range()[0] / 2))
                            .style('text-anchor', 'middle');
                    }
                    else {
                        axisTitleRef
                            .attr('transform', 'rotate(90)')
                            .attr('y', -width)
                            .attr('x', scale.range()[0] / 2)
                            .attr('dy', '0.75em')
                            .style('text-anchor', 'middle');
                    }
                    break;
                case interfaces.AxisPositions.TOP:
                    var titleHeight = DOMUtils.getSVGElementSize(axisTitleRef, {
                        useBBox: true,
                    }).height;
                    axisTitleRef
                        .attr('transform', "translate(" + (this.margins.left / 2 + scale.range()[1] / 2) + ", " + titleHeight / 2 + ")")
                        .style('text-anchor', 'middle');
                    break;
            }
        }
        // Apply new axis to the axis element
        if (isTimeScaleType) {
            var timeInterval_2 = computeTimeIntervalName(axis.tickValues());
            var showDayName_1 = timeScaleOptions.showDayName;
            var axisRefSelection = axisRef;
            if (animate) {
                axisRef = axisRef.transition().call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'axis-update',
                        animate: animate,
                    });
                });
            }
            axisRef = axisRef.call(axis);
            // Manipulate tick labels to make bold those that are in long format
            var ticks = axisRefSelection
                .selectAll('.tick')
                .data(axis.tickValues(), scale)
                .order()
                .select('text');
            ticks.style('font-weight', function (tick, i) {
                return isTickPrimary(tick, i, axis.tickValues(), timeInterval_2, showDayName_1)
                    ? 'bold'
                    : 'normal';
            });
        }
        else {
            if (!animate || !axisRefExists) {
                axisRef = axisRef.call(axis);
            }
            else {
                axisRef = axisRef
                    .transition()
                    .call(function (t) {
                    return _this.services.transitions.setupTransition({
                        transition: t,
                        name: 'axis-update',
                        animate: animate,
                    });
                })
                    .call(axis);
            }
        }
        invisibleAxisRef.call(axis);
        if (axisPosition === interfaces.AxisPositions.BOTTOM ||
            axisPosition === interfaces.AxisPositions.TOP) {
            var shouldRotateTicks_1 = false;
            // user could decide if tick rotation is required during zoom domain changing
            var tickRotation = Tools.getProperty(axisOptions, 'ticks', 'rotation');
            if (tickRotation === enums/* TickRotations.ALWAYS */.Mw.ALWAYS) {
                shouldRotateTicks_1 = true;
            }
            else if (tickRotation === enums/* TickRotations.NEVER */.Mw.NEVER) {
                shouldRotateTicks_1 = false;
            }
            else if (!tickRotation || tickRotation === enums/* TickRotations.AUTO */.Mw.AUTO) {
                // if the option is not set or set to AUTO
                // depending on if tick rotation is necessary by calculating space
                // If we're dealing with a discrete scale type
                // We're able to grab the spacing between the ticks
                if (scale.step) {
                    var textNodes = invisibleAxisRef
                        .selectAll('g.tick text')
                        .nodes();
                    // If any ticks are any larger than the scale step size
                    shouldRotateTicks_1 = textNodes.some(function (textNode) {
                        return DOMUtils.getSVGElementSize(textNode, {
                            useBBox: true,
                        }).width >= scale.step();
                    });
                }
                else {
                    shouldRotateTicks_1 = false;
                    var mockTextPiece = invisibleAxisRef
                        .append('text')
                        .text('A');
                    var averageLetterWidth_1 = DOMUtils.getSVGElementSize(mockTextPiece.node(), {
                        useBBox: true,
                    }).width;
                    var lastStartPosition_1;
                    // Find out whether any text nodes roughly collide
                    invisibleAxisRef.selectAll('g.tick').each(function () {
                        var selection = src_select(this);
                        var xTransformation = parseFloat(Tools.getProperty(Tools.getTranslationValues(this), 'tx'));
                        if (xTransformation !== null &&
                            lastStartPosition_1 +
                                selection.text().length *
                                    averageLetterWidth_1 *
                                    0.8 >=
                                xTransformation) {
                            shouldRotateTicks_1 = true;
                        }
                        lastStartPosition_1 = xTransformation;
                    });
                }
            }
            if (shouldRotateTicks_1) {
                if (!isNumberOfTicksProvided) {
                    axis.ticks(this.getNumberOfFittingTicks(width, tickHeight, configuration_non_customizable_axis.ticks.horizontalSpaceRatio));
                    invisibleAxisRef.call(axis);
                    axisRef.call(axis);
                }
                container
                    .selectAll('g.ticks g.tick text')
                    .attr('transform', "rotate(-45)")
                    .style('text-anchor', axisPosition === interfaces.AxisPositions.TOP ? 'start' : 'end');
            }
            else {
                container
                    .selectAll('g.ticks g.tick text')
                    .attr('transform', null)
                    .style('text-anchor', null);
            }
        }
        // we don't need to show axes on empty state and on skeleton state
        // because the Skeleton component draws them
        if (isDataLoading) {
            container.attr('opacity', 0);
        }
        else {
            container.attr('opacity', 1);
        }
        axisRef.selectAll('g.tick').attr('aria-label', function (d) { return d; });
        invisibleAxisRef.selectAll('g.tick').attr('aria-label', function (d) { return d; });
        // truncate the label if it's too long
        // only applies to discrete type
        if (truncationType !== interfaces.TruncationTypes.NONE &&
            axisScaleType === interfaces.ScaleTypes.LABELS &&
            !userProvidedTickValues) {
            var axisTickLabels = this.services.cartesianScales.getScaleDomain(axisPosition);
            if (axisTickLabels.length > 0) {
                var tick_html = svg
                    .select("g.axis." + axisPosition + " g.ticks g.tick")
                    .html();
                container.selectAll('g.ticks g.tick').html(tick_html);
                var self_1 = this;
                container
                    .selectAll('g.tick text')
                    .data(axisTickLabels)
                    .text(function (d) {
                    if (d.length > truncationThreshold) {
                        self_1.truncation[axisPosition] = true;
                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);
                    }
                    else {
                        return d;
                    }
                });
                this.getInvisibleAxisRef()
                    .selectAll('g.tick text')
                    .data(axisTickLabels)
                    .text(function (d) {
                    if (d.length > truncationThreshold) {
                        return Tools.truncateLabel(d, truncationType, truncationNumCharacter);
                    }
                    else {
                        return d;
                    }
                });
                container
                    .selectAll('g.ticks')
                    .html(this.getInvisibleAxisRef().html());
                container.selectAll('g.tick text').data(axisTickLabels);
            }
        }
        // Add event listeners to elements drawn
        this.addEventListeners();
    };
    Axis.prototype.addEventListeners = function () {
        var svg = this.getComponentContainer();
        var axisPosition = this.configs.position;
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        var options = this.getOptions();
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');
        var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');
        var self = this;
        container
            .selectAll('g.tick text')
            .on('mouseover', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEOVER, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            if (axisScaleType === interfaces.ScaleTypes.LABELS &&
                datum.length > truncationThreshold) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: src_select(this),
                    content: datum,
                });
            }
        })
            .on('mousemove', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEMOVE, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            if (axisScaleType === interfaces.ScaleTypes.LABELS &&
                datum.length > truncationThreshold) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                    event: event,
                });
            }
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEOUT, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
            if (axisScaleType === interfaces.ScaleTypes.LABELS) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
            }
        });
    };
    Axis.prototype.getInvisibleAxisRef = function () {
        var axisPosition = this.configs.position;
        return this.getComponentContainer().select("g.axis." + axisPosition + " g.ticks.invisible");
    };
    Axis.prototype.getTitleRef = function () {
        var axisPosition = this.configs.position;
        return this.getComponentContainer().select("g.axis." + axisPosition + " text.axis-title");
    };
    Axis.prototype.getNumberOfFittingTicks = function (size, tickSize, spaceRatio) {
        var numberOfTicksFit = Math.floor(size / (tickSize * spaceRatio));
        return Tools.clamp(numberOfTicksFit, 2, configuration_non_customizable_axis.ticks.number);
    };
    Axis.prototype.destroy = function () {
        var svg = this.getComponentContainer();
        var axisPosition = this.configs.position;
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        // Remove event listeners
        container
            .selectAll('g.tick text')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null);
    };
    return Axis;
}(Component));

//# sourceMappingURL=../../../src/components/axes/axis.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/hover-axis.js
var hover_axis_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var hover_axis_assign = (undefined && undefined.__assign) || function () {
    hover_axis_assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return hover_axis_assign.apply(this, arguments);
};
// Internal Imports





// D3 Imports

var HoverAxis = /** @class */ (function (_super) {
    hover_axis_extends(HoverAxis, _super);
    function HoverAxis(model, services, configs) {
        return _super.call(this, model, services, configs) || this;
    }
    HoverAxis.prototype.render = function (animate) {
        if (animate === void 0) { animate = true; }
        _super.prototype.render.call(this, animate);
        // Remove existing event listeners to avoid flashing behavior
        _super.prototype.destroy.call(this);
        var axisPosition = this.configs.position;
        var svg = this.getComponentContainer();
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        var self = this;
        container.selectAll('g.tick').each(function (_, index) {
            var g = src_select(this);
            g.classed('tick-hover', true).attr('tabindex', index === 0 ? 0 : -1);
            var textNode = g.select('text');
            var _a = DOMUtils.getSVGElementSize(textNode, {
                useBBox: true,
            }), width = _a.width, height = _a.height;
            var rectangle = DOMUtils.appendOrSelect(g, 'rect.axis-holder');
            var x = 0, y = 0;
            // Depending on axis position, apply correct translation & rotation to align the rect
            // with the text
            switch (axisPosition) {
                case interfaces.AxisPositions.LEFT:
                    x = -width + Number(textNode.attr('x'));
                    y = -(height / 2);
                    break;
                case interfaces.AxisPositions.RIGHT:
                    x = Math.abs(Number(textNode.attr('x')));
                    y = -(height / 2);
                    break;
                case interfaces.AxisPositions.TOP:
                    x = -(width / 2);
                    y = -height + Number(textNode.attr('y')) / 2;
                    if (self.truncation[axisPosition]) {
                        x = 0;
                        rectangle.attr('transform', "rotate(-45)");
                    }
                    break;
                case interfaces.AxisPositions.BOTTOM:
                    x = -(width / 2);
                    y = height / 2 - 2;
                    if (self.truncation[axisPosition]) {
                        x = -width;
                        rectangle.attr('transform', "rotate(-45)");
                    }
                    break;
            }
            // Translates x position -4 left to keep center after padding
            // Adds padding on left & right
            rectangle
                .attr('x', x - configuration_non_customizable_axis.hover.rectanglePadding)
                .attr('y', y)
                .attr('width', width + configuration_non_customizable_axis.hover.rectanglePadding * 2)
                .attr('height', height)
                .lower();
            // Add keyboard event listeners to each group element
            g.on('keydown', function (event) {
                // Choose specific arrow key depending on the axis
                if (axisPosition === interfaces.AxisPositions.LEFT ||
                    axisPosition === interfaces.AxisPositions.RIGHT) {
                    if (event.key && event.key === 'ArrowUp') {
                        self.goNext(this, event);
                    }
                    else if (event.key && event.key === 'ArrowDown') {
                        self.goPrevious(this, event);
                    }
                }
                else {
                    if (event.key && event.key === 'ArrowLeft') {
                        self.goPrevious(this, event);
                    }
                    else if (event.key && event.key === 'ArrowRight') {
                        self.goNext(this, event);
                    }
                }
            });
        });
        // Add event listeners to element group
        this.addEventListeners();
    };
    HoverAxis.prototype.addEventListeners = function () {
        var svg = this.getComponentContainer();
        var axisPosition = this.configs.position;
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        var options = this.getOptions();
        var axisOptions = Tools.getProperty(options, 'axes', axisPosition);
        var axisScaleType = Tools.getProperty(axisOptions, 'scaleType');
        var truncationThreshold = Tools.getProperty(axisOptions, 'truncation', 'threshold');
        var self = this;
        container
            .selectAll('g.tick.tick-hover')
            .on('mouseover', function (event) {
            var hoveredElement = src_select(this).select('text');
            var datum = hoveredElement.datum();
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            if (axisScaleType === interfaces.ScaleTypes.LABELS &&
                datum.length > truncationThreshold) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    element: hoveredElement,
                    datum: datum,
                });
            }
        })
            .on('mousemove', function (event) {
            var hoveredElement = src_select(this).select('text');
            var datum = hoveredElement.datum();
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                event: event,
            });
        })
            .on('click', function (event) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_CLICK, {
                event: event,
                element: src_select(this).select('text'),
                datum: src_select(this).select('text').datum(),
            });
        })
            .on('mouseout', function (event) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_MOUSEOUT, {
                event: event,
                element: src_select(this).select('text'),
                datum: src_select(this).select('text').datum(),
            });
            if (axisScaleType === interfaces.ScaleTypes.LABELS) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
            }
        })
            .on('focus', function (event) {
            var coordinates = { clientX: 0, clientY: 0 };
            if (event.target) {
                // Focus element since we are using arrow keys
                event.target.focus();
                var boundingRect = event.target.getBoundingClientRect();
                coordinates.clientX = boundingRect.x;
                coordinates.clientY = boundingRect.y;
            }
            // Dispatch focus event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_FOCUS, {
                event: hover_axis_assign(hover_axis_assign({}, event), coordinates),
                element: src_select(this),
                datum: src_select(this).select('text').datum(),
            });
        })
            .on('blur', function (event) {
            // Dispatch blur event
            self.services.events.dispatchEvent(interfaces.Events.Axis.LABEL_BLUR, {
                event: event,
                element: src_select(this),
                datum: src_select(this).select('text').datum(),
            });
        });
    };
    // Focus on the next HTML element sibling
    HoverAxis.prototype.goNext = function (element, event) {
        if (element.nextElementSibling &&
            element.nextElementSibling.tagName !== 'path') {
            element.nextElementSibling.dispatchEvent(new Event('focus'));
        }
        event.preventDefault();
    };
    // Focus on the previous HTML element sibling
    HoverAxis.prototype.goPrevious = function (element, event) {
        if (element.previousElementSibling &&
            element.previousElementSibling.tagName !== 'path') {
            element.previousElementSibling.dispatchEvent(new Event('focus'));
        }
        event.preventDefault();
    };
    HoverAxis.prototype.destroy = function () {
        var svg = this.getComponentContainer();
        var axisPosition = this.configs.position;
        var container = DOMUtils.appendOrSelect(svg, "g.axis." + axisPosition);
        // Remove event listeners
        container
            .selectAll('g.tick.tick-hover')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null)
            .on('focus', null)
            .on('blur', null);
    };
    return HoverAxis;
}(Axis));

//# sourceMappingURL=../../../src/components/axes/hover-axis.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/two-dimensional-axes.js
var two_dimensional_axes_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports







var TwoDimensionalAxes = /** @class */ (function (_super) {
    two_dimensional_axes_extends(TwoDimensionalAxes, _super);
    function TwoDimensionalAxes() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = '2D-axes';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.children = {};
        _this.thresholds = [];
        _this.margins = {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
        };
        return _this;
    }
    TwoDimensionalAxes.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = false; }
        var axes = {};
        var axisPositions = Object.keys(interfaces.AxisPositions);
        var axesOptions = Tools.getProperty(this.getOptions(), 'axes');
        axisPositions.forEach(function (axisPosition) {
            var axisOptions = axesOptions[interfaces.AxisPositions[axisPosition]];
            if (axisOptions) {
                axes[interfaces.AxisPositions[axisPosition]] = true;
            }
        });
        this.configs.axes = axes;
        // Check the configs to know which axes need to be rendered
        axisPositions.forEach(function (axisPositionKey) {
            var axisPosition = interfaces.AxisPositions[axisPositionKey];
            if (_this.configs.axes[axisPosition] &&
                !_this.children[axisPosition]) {
                var configs = {
                    position: axisPosition,
                    axes: _this.configs.axes,
                    margins: _this.margins,
                };
                var axisComponent = _this.model.axisFlavor === interfaces.AxisFlavor.DEFAULT
                    ? new Axis(_this.model, _this.services, configs)
                    : new HoverAxis(_this.model, _this.services, configs);
                // Set model, services & parent for the new axis component
                axisComponent.setModel(_this.model);
                axisComponent.setServices(_this.services);
                axisComponent.setParent(_this.parent);
                _this.children[axisPosition] = axisComponent;
            }
        });
        Object.keys(this.children).forEach(function (childKey) {
            var child = _this.children[childKey];
            child.render(animate);
        });
        var margins = {};
        Object.keys(this.children).forEach(function (childKey) {
            var child = _this.children[childKey];
            var axisPosition = child.configs.position;
            // Grab the invisibly rendered axis' width & height, and set margins
            // Based off of that
            // We draw the invisible axis because of the async nature of d3 transitions
            // To be able to tell the final width & height of the axis when initiaing the transition
            // The invisible axis is updated instantly and without a transition
            var invisibleAxisRef = child.getInvisibleAxisRef();
            var _a = DOMUtils.getSVGElementSize(invisibleAxisRef, { useBBox: true }), width = _a.width, height = _a.height;
            var offset;
            if (child.getTitleRef().empty()) {
                offset = 0;
            }
            else {
                offset = DOMUtils.getSVGElementSize(child.getTitleRef(), {
                    useBBox: true,
                }).height;
                if (axisPosition === interfaces.AxisPositions.LEFT ||
                    axisPosition === interfaces.AxisPositions.RIGHT) {
                    offset += 5;
                }
            }
            switch (axisPosition) {
                case interfaces.AxisPositions.TOP:
                    margins.top = height + offset;
                    break;
                case interfaces.AxisPositions.BOTTOM:
                    margins.bottom = height + offset;
                    break;
                case interfaces.AxisPositions.LEFT:
                    margins.left = width + offset;
                    break;
                case interfaces.AxisPositions.RIGHT:
                    margins.right = width + offset;
                    break;
            }
        });
        this.services.events.dispatchEvent(interfaces.Events.Axis.RENDER_COMPLETE);
        // If the new margins are different than the existing ones
        var isNotEqual = Object.keys(margins).some(function (marginKey) {
            return _this.margins[marginKey] !== margins[marginKey];
        });
        if (isNotEqual) {
            this.margins = Object.assign(this.margins, margins);
            // also set new margins to model to allow external components to access
            this.model.set({ axesMargins: this.margins }, { skipUpdate: true });
            this.services.events.dispatchEvent(interfaces.Events.ZoomBar.UPDATE);
            Object.keys(this.children).forEach(function (childKey) {
                var child = _this.children[childKey];
                child.margins = _this.margins;
            });
            this.render(true);
        }
    };
    return TwoDimensionalAxes;
}(Component));

//# sourceMappingURL=../../../src/components/axes/two-dimensional-axes.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-dispatch/src/dispatch.js
var dispatch_noop = {value: () => {}};

function dispatch_dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function dispatch_parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch_dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = dispatch_parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = dispatch_get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function dispatch_get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = dispatch_noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

/* harmony default export */ const src_dispatch = (dispatch_dispatch);

;// CONCATENATED MODULE: ../../node_modules/d3-drag/src/noevent.js
// These are typically used in conjunction with noevent to ensure that we can
// preventDefault on the event.
const nonpassive = {passive: false};
const nonpassivecapture = {capture: true, passive: false};

function nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

;// CONCATENATED MODULE: ../../node_modules/d3-drag/src/nodrag.js



/* harmony default export */ function nodrag(view) {
  var root = view.document.documentElement,
      selection = src_select(view).on("dragstart.drag", noevent, nonpassivecapture);
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", noevent, nonpassivecapture);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = src_select(view).on("dragstart.drag", null);
  if (noclick) {
    selection.on("click.drag", noevent, nonpassivecapture);
    setTimeout(function() { selection.on("click.drag", null); }, 0);
  }
  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-timer/src/timer.js
var timer_frame = 0, // is an animation frame pending?
    timeout = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };

function timer_now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call =
  this._time =
  this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function(callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? timer_now() : +time) + (delay == null ? 0 : +delay);
    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;
      else taskHead = this;
      taskTail = this;
    }
    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function() {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer;
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  timer_now(); // Get the current time, if not already set.
  ++timer_frame; // Pretend we’ve set an alarm, if we haven’t already.
  var t = taskHead, e;
  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);
    t = t._next;
  }
  --timer_frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  timer_frame = timeout = 0;
  try {
    timerFlush();
  } finally {
    timer_frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(), delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0, t1 = taskHead, t2, time = Infinity;
  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }
  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (timer_frame) return; // Soonest alarm already set, or will be.
  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    timer_frame = 1, setFrame(wake);
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-timer/src/timeout.js


/* harmony default export */ function src_timeout(callback, delay, time) {
  var t = new Timer;
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/schedule.js



var emptyOn = src_dispatch("start", "end", "cancel", "interrupt");
var emptyTween = [];

var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;

/* harmony default export */ function schedule(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};
  else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index, // For context during callback.
    group: group, // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = schedule_get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function schedule_set(node, id) {
  var schedule = schedule_get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function schedule_get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween;

  // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!
  schedules[id] = self;
  self.timer = timer(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time);

    // If the elapsed delay is less than our first sleep, start immediately.
    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o;

    // If the state is not SCHEDULED, then we previously errored on start.
    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue;

      // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!
      if (o.state === STARTED) return src_timeout(start);

      // Interrupt the active transition, if any.
      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }

      // Cancel any pre-empted transitions.
      else if (+i < id) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("cancel", node, node.__data__, o.index, o.group);
        delete schedules[i];
      }
    }

    // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.
    src_timeout(function() {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    });

    // Dispatch the start event.
    // Note this must be done before the tween are initialized.
    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted
    self.state = STARTED;

    // Initialize the tween, deleting null tween.
    tween = new Array(n = self.tween.length);
    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }
    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    }

    // Dispatch the end event.
    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];
    for (var i in schedules) return; // eslint-disable-line no-unused-vars
    delete node.__transition;
  }
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/interrupt.js


/* harmony default export */ function interrupt(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;

  if (!schedules) return;

  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }
    active = schedule.state > STARTING && schedule.state < ENDING;
    schedule.state = ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/selection/interrupt.js


/* harmony default export */ function selection_interrupt(name) {
  return this.each(function() {
    interrupt(this, name);
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/transform/decompose.js
var degrees = 180 / Math.PI;

var decompose_identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ function decompose(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/transform/parse.js


var svgNode;

/* eslint-disable no-undef */
function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? decompose_identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
}

function parseSvg(value) {
  if (value == null) return decompose_identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return decompose_identity;
  value = value.matrix;
  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
}

;// CONCATENATED MODULE: ../../node_modules/d3-interpolate/src/transform/index.js



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: src_number(xa, xb)}, {i: i - 2, x: src_number(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: src_number(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: src_number(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: src_number(xa, xb)}, {i: i - 2, x: src_number(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/tween.js


function tweenRemove(id, name) {
  var tween0, tween1;
  return function() {
    var schedule = schedule_set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = tween0 = tween;
      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error;
  return function() {
    var schedule = schedule_set(this, id),
        tween = schedule.tween;

    // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.
    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();
      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }
      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ function tween(name, value) {
  var id = this._id;

  name += "";

  if (arguments.length < 2) {
    var tween = schedule_get(this.node(), id).tween;
    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }
    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;

  transition.each(function() {
    var schedule = schedule_set(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });

  return function(node) {
    return schedule_get(node, id).value[name];
  };
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/interpolate.js



/* harmony default export */ function interpolate(a, b) {
  var c;
  return (typeof b === "number" ? src_number
      : b instanceof color_color ? rgb
      : (c = color_color(b)) ? (b = c, rgb)
      : string)(a, b);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/attr.js





function attr_attrRemove(name) {
  return function() {
    this.removeAttribute(name);
  };
}

function attr_attrRemoveNS(fullname) {
  return function() {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attr_attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attr_attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attr_attrFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attr_attrFunctionNS(fullname, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0, value1 = value(this), string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ function transition_attr(name, value) {
  var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
  return this.attrTween(name, typeof value === "function"
      ? (fullname.local ? attr_attrFunctionNS : attr_attrFunction)(fullname, i, tweenValue(this, "attr." + name, value))
      : value == null ? (fullname.local ? attr_attrRemoveNS : attr_attrRemove)(fullname)
      : (fullname.local ? attr_attrConstantNS : attr_attrConstant)(fullname, i, value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/attrTween.js


function attrInterpolate(name, i) {
  return function(t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function(t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_attrTween(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  var fullname = namespace(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/delay.js


function delayFunction(id, value) {
  return function() {
    init(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function() {
    init(this, id).delay = value;
  };
}

/* harmony default export */ function delay(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? delayFunction
          : delayConstant)(id, value))
      : schedule_get(this.node(), id).delay;
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/duration.js


function durationFunction(id, value) {
  return function() {
    schedule_set(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function() {
    schedule_set(this, id).duration = value;
  };
}

/* harmony default export */ function duration(value) {
  var id = this._id;

  return arguments.length
      ? this.each((typeof value === "function"
          ? durationFunction
          : durationConstant)(id, value))
      : schedule_get(this.node(), id).duration;
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/ease.js


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error;
  return function() {
    schedule_set(this, id).ease = value;
  };
}

/* harmony default export */ function ease(value) {
  var id = this._id;

  return arguments.length
      ? this.each(easeConstant(id, value))
      : schedule_get(this.node(), id).ease;
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/easeVarying.js


function easeVarying(id, value) {
  return function() {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error;
    schedule_set(this, id).ease = v;
  };
}

/* harmony default export */ function transition_easeVarying(value) {
  if (typeof value !== "function") throw new Error;
  return this.each(easeVarying(this._id, value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/filter.js



/* harmony default export */ function transition_filter(match) {
  if (typeof match !== "function") match = matcher(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new Transition(subgroups, this._parents, this._name, this._id);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/merge.js


/* harmony default export */ function transition_merge(transition) {
  if (transition._id !== this._id) throw new Error;

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new Transition(merges, this._parents, this._name, this._id);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/on.js


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function(t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0, on1, sit = start(name) ? init : schedule_set;
  return function() {
    var schedule = sit(this, id),
        on = schedule.on;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function transition_on(name, listener) {
  var id = this._id;

  return arguments.length < 2
      ? schedule_get(this.node(), id).on.on(name)
      : this.each(onFunction(id, name, listener));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/remove.js
function removeFunction(id) {
  return function() {
    var parent = this.parentNode;
    for (var i in this.__transition) if (+i !== id) return;
    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ function transition_remove() {
  return this.on("end.remove", removeFunction(this._id));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/select.js




/* harmony default export */ function transition_select(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selector(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        schedule(subgroup[i], name, id, i, subgroup, schedule_get(node, id));
      }
    }
  }

  return new Transition(subgroups, this._parents, name, id);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/selectAll.js




/* harmony default export */ function transition_selectAll(select) {
  var name = this._name,
      id = this._id;

  if (typeof select !== "function") select = selectorAll(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = schedule_get(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            schedule(child, name, id, k, children, inherit);
          }
        }
        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new Transition(subgroups, parents, name, id);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/selection.js


var selection_Selection = src_selection.prototype.constructor;

/* harmony default export */ function transition_selection() {
  return new selection_Selection(this._groups, this._parents);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/style.js






function styleNull(name, interpolate) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        string1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function style_styleRemove(name) {
  return function() {
    this.style.removeProperty(name);
  };
}

function style_styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function() {
    var string0 = styleValue(this, name);
    return string0 === string1 ? null
        : string0 === string00 ? interpolate0
        : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function style_styleFunction(name, interpolate, value) {
  var string00,
      string10,
      interpolate0;
  return function() {
    var string0 = styleValue(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
    return string0 === string1 ? null
        : string0 === string00 && string1 === string10 ? interpolate0
        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
  return function() {
    var schedule = schedule_set(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = style_styleRemove(name)) : undefined;

    // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.
    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);

    schedule.on = on1;
  };
}

/* harmony default export */ function transition_style(name, value, priority) {
  var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
  return value == null ? this
      .styleTween(name, styleNull(name, i))
      .on("end.style." + name, style_styleRemove(name))
    : typeof value === "function" ? this
      .styleTween(name, style_styleFunction(name, i, tweenValue(this, "style." + name, value)))
      .each(styleMaybeRemove(this._id, name))
    : this
      .styleTween(name, style_styleConstant(name, i, value), priority)
      .on("end.style." + name, null);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/styleTween.js
function styleInterpolate(name, i, priority) {
  return function(t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_styleTween(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/text.js


function text_textConstant(value) {
  return function() {
    this.textContent = value;
  };
}

function text_textFunction(value) {
  return function() {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ function transition_text(value) {
  return this.tween("text", typeof value === "function"
      ? text_textFunction(tweenValue(this, "text", value))
      : text_textConstant(value == null ? "" : value + ""));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/textTween.js
function textInterpolate(i) {
  return function(t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;
  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }
  tween._value = value;
  return tween;
}

/* harmony default export */ function transition_textTween(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error;
  return this.tween(key, textTween(value));
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/transition.js



/* harmony default export */ function transition() {
  var name = this._name,
      id0 = this._id,
      id1 = newId();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = schedule_get(node, id0);
        schedule(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new Transition(groups, this._parents, name, id1);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/end.js


/* harmony default export */ function end() {
  var on0, on1, that = this, id = that._id, size = that.size();
  return new Promise(function(resolve, reject) {
    var cancel = {value: reject},
        end = {value: function() { if (--size === 0) resolve(); }};

    that.each(function() {
      var schedule = schedule_set(this, id),
          on = schedule.on;

      // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.
      if (on !== on0) {
        on1 = (on0 = on).copy();
        on1._.cancel.push(cancel);
        on1._.interrupt.push(cancel);
        on1._.end.push(end);
      }

      schedule.on = on1;
    });

    // The selection was empty, resolve end immediately
    if (size === 0) resolve();
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/transition/index.js






















var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition_transition(name) {
  return src_selection().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = src_selection.prototype;

Transition.prototype = transition_transition.prototype = {
  constructor: Transition,
  select: transition_select,
  selectAll: transition_selectAll,
  selectChild: selection_prototype.selectChild,
  selectChildren: selection_prototype.selectChildren,
  filter: transition_filter,
  merge: transition_merge,
  selection: transition_selection,
  transition: transition,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: transition_on,
  attr: transition_attr,
  attrTween: transition_attrTween,
  style: transition_style,
  styleTween: transition_styleTween,
  text: transition_text,
  textTween: transition_textTween,
  remove: transition_remove,
  tween: tween,
  delay: delay,
  duration: duration,
  ease: ease,
  easeVarying: transition_easeVarying,
  end: end,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/selection/transition.js





var defaultTiming = {
  time: null, // Set on use.
  delay: 0,
  duration: 250,
  ease: cubicInOut
};

function inherit(node, id) {
  var timing;
  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }
  return timing;
}

/* harmony default export */ function selection_transition(name) {
  var id,
      timing;

  if (name instanceof Transition) {
    id = name._id, name = name._name;
  } else {
    id = newId(), (timing = defaultTiming).time = timer_now(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        schedule(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new Transition(groups, this._parents, name, id);
}

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/selection/index.js




src_selection.prototype.interrupt = selection_interrupt;
src_selection.prototype.transition = selection_transition;

;// CONCATENATED MODULE: ../../node_modules/d3-transition/src/index.js





;// CONCATENATED MODULE: ../../node_modules/d3-brush/src/constant.js
/* harmony default export */ const d3_brush_src_constant = (x => () => x);

;// CONCATENATED MODULE: ../../node_modules/d3-brush/src/event.js
function BrushEvent(type, {
  sourceEvent,
  target,
  selection,
  mode,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {value: type, enumerable: true, configurable: true},
    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},
    target: {value: target, enumerable: true, configurable: true},
    selection: {value: selection, enumerable: true, configurable: true},
    mode: {value: mode, enumerable: true, configurable: true},
    _: {value: dispatch}
  });
}

;// CONCATENATED MODULE: ../../node_modules/d3-brush/src/noevent.js
function noevent_nopropagation(event) {
  event.stopImmediatePropagation();
}

/* harmony default export */ function src_noevent(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

;// CONCATENATED MODULE: ../../node_modules/d3-brush/src/brush.js









var MODE_DRAG = {name: "drag"},
    MODE_SPACE = {name: "space"},
    MODE_HANDLE = {name: "handle"},
    MODE_CENTER = {name: "center"};

const {abs: brush_abs, max: brush_max, min: brush_min} = Math;

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },
  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }
};

var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },
  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }
};

var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function(xy) { return xy == null ? null : number2(xy); },
  output: function(xy) { return xy; }
};

var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};

var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};

var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};

var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};

var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {type: t};
}

// Ignore right-click, since that should open the context menu.
function defaultFilter(event) {
  return !event.ctrlKey && !event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;
  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }
  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || ("ontouchstart" in this);
}

// Like d3.local, but with the name “__brush” rather than auto-generated.
function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;
  return node.__brush;
}

function brush_empty(extent) {
  return extent[0][0] === extent[1][0]
      || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush_brush(X);
}

function brushY() {
  return brush_brush(Y);
}

/* harmony default export */ function brush() {
  return brush_brush(XY);
}

function brush_brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = src_dispatch("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group
        .property("__brush", initialize)
      .selectAll(".overlay")
      .data([type("overlay")]);

    overlay.enter().append("rect")
        .attr("class", "overlay")
        .attr("pointer-events", "all")
        .attr("cursor", cursors.overlay)
      .merge(overlay)
        .each(function() {
          var extent = local(this).extent;
          src_select(this)
              .attr("x", extent[0][0])
              .attr("y", extent[0][1])
              .attr("width", extent[1][0] - extent[0][0])
              .attr("height", extent[1][1] - extent[0][1]);
        });

    group.selectAll(".selection")
      .data([type("selection")])
      .enter().append("rect")
        .attr("class", "selection")
        .attr("cursor", cursors.selection)
        .attr("fill", "#777")
        .attr("fill-opacity", 0.3)
        .attr("stroke", "#fff")
        .attr("shape-rendering", "crispEdges");

    var handle = group.selectAll(".handle")
      .data(dim.handles, function(d) { return d.type; });

    handle.exit().remove();

    handle.enter().append("rect")
        .attr("class", function(d) { return "handle handle--" + d.type; })
        .attr("cursor", function(d) { return cursors[d.type]; });

    group
        .each(redraw)
        .attr("fill", "none")
        .attr("pointer-events", "all")
        .on("mousedown.brush", started)
      .filter(touchable)
        .on("touchstart.brush", started)
        .on("touchmove.brush", touchmoved)
        .on("touchend.brush touchcancel.brush", touchended)
        .style("touch-action", "none")
        .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function(group, selection, event) {
    if (group.tween) {
      group
          .on("start.brush", function(event) { emitter(this, arguments).beforestart().start(event); })
          .on("interrupt.brush end.brush", function(event) { emitter(this, arguments).end(event); })
          .tween("brush", function() {
            var that = this,
                state = that.__brush,
                emit = emitter(that, arguments),
                selection0 = state.selection,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
                i = value(selection0, selection1);

            function tween(t) {
              state.selection = t === 1 && selection1 === null ? null : i(t);
              redraw.call(that);
              emit.brush();
            }

            return selection0 !== null && selection1 !== null ? tween : tween(1);
          });
    } else {
      group
          .each(function() {
            var that = this,
                args = arguments,
                state = that.__brush,
                selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
                emit = emitter(that, args).beforestart();

            interrupt(that);
            state.selection = selection1 === null ? null : selection1;
            redraw.call(that);
            emit.start(event).brush(event).end(event);
          });
    }
  };

  brush.clear = function(group, event) {
    brush.move(group, null, event);
  };

  function redraw() {
    var group = src_select(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection")
          .style("display", null)
          .attr("x", selection[0][0])
          .attr("y", selection[0][1])
          .attr("width", selection[1][0] - selection[0][0])
          .attr("height", selection[1][1] - selection[0][1]);

      group.selectAll(".handle")
          .style("display", null)
          .attr("x", function(d) { return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })
          .attr("y", function(d) { return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })
          .attr("width", function(d) { return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })
          .attr("height", function(d) { return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });
    }

    else {
      group.selectAll(".selection,.handle")
          .style("display", "none")
          .attr("x", null)
          .attr("y", null)
          .attr("width", null)
          .attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    var emit = that.__brush.emitter;
    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);
  }

  function Emitter(that, args, clean) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
    this.clean = clean;
  }

  Emitter.prototype = {
    beforestart: function() {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function(event, mode) {
      if (this.starting) this.starting = false, this.emit("start", event, mode);
      else this.emit("brush", event);
      return this;
    },
    brush: function(event, mode) {
      this.emit("brush", event, mode);
      return this;
    },
    end: function(event, mode) {
      if (--this.active === 0) delete this.state.emitter, this.emit("end", event, mode);
      return this;
    },
    emit: function(type, event, mode) {
      var d = src_select(this.that).datum();
      listeners.call(
        type,
        this.that,
        new BrushEvent(type, {
          sourceEvent: event,
          target: brush,
          selection: dim.output(this.state.selection),
          mode,
          dispatch: listeners
        }),
        d
      );
    }
  };

  function started(event) {
    if (touchending && !event.touches) return;
    if (!filter.apply(this, arguments)) return;

    var that = this,
        type = event.target.__data__.type,
        mode = (keys && event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0], w0, w1,
        N = extent[0][1], n0, n1,
        E = extent[1][0], e0, e1,
        S = extent[1][1], s0, s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && event.shiftKey,
        lockX,
        lockY,
        points = Array.from(event.touches || [event], t => {
          const i = t.identifier;
          t = pointer(t, that);
          t.point0 = t.slice();
          t.identifier = i;
          return t;
        });

    interrupt(that);
    var emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      const pts = [points[0], points[1] || points[0]];
      state.selection = selection = [[
          w0 = dim === Y ? W : brush_min(pts[0][0], pts[1][0]),
          n0 = dim === X ? N : brush_min(pts[0][1], pts[1][1])
        ], [
          e0 = dim === Y ? E : brush_max(pts[0][0], pts[1][0]),
          s0 = dim === X ? S : brush_max(pts[0][1], pts[1][1])
        ]];
      if (points.length > 1) move(event);
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;

    var group = src_select(that)
        .attr("pointer-events", "none");

    var overlay = group.selectAll(".overlay")
        .attr("cursor", cursors[type]);

    if (event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = src_select(event.view)
          .on("mousemove.brush", moved, true)
          .on("mouseup.brush", ended, true);
      if (keys) view
          .on("keydown.brush", keydowned, true)
          .on("keyup.brush", keyupped, true)

      nodrag(event.view);
    }

    redraw.call(that);
    emit.start(event, mode.name);

    function moved(event) {
      for (const p of event.changedTouches || [event]) {
        for (const d of points)
          if (d.identifier === p.identifier) d.cur = pointer(p, that);
      }
      if (shifting && !lockX && !lockY && points.length === 1) {
        const point = points[0];
        if (brush_abs(point.cur[0] - point[0]) > brush_abs(point.cur[1] - point[1]))
          lockY = true;
        else
          lockX = true;
      }
      for (const point of points)
        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];
      moving = true;
      src_noevent(event);
      move(event);
    }

    function move(event) {
      const point = points[0], point0 = point.point0;
      var t;

      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG: {
          if (signX) dx = brush_max(W - w0, brush_min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
          if (signY) dy = brush_max(N - n0, brush_min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
          break;
        }
        case MODE_HANDLE: {
          if (points[1]) {
            if (signX) w1 = brush_max(W, brush_min(E, points[0][0])), e1 = brush_max(W, brush_min(E, points[1][0])), signX = 1;
            if (signY) n1 = brush_max(N, brush_min(S, points[0][1])), s1 = brush_max(N, brush_min(S, points[1][1])), signY = 1;
          } else {
            if (signX < 0) dx = brush_max(W - w0, brush_min(E - w0, dx)), w1 = w0 + dx, e1 = e0;
            else if (signX > 0) dx = brush_max(W - e0, brush_min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = brush_max(N - n0, brush_min(S - n0, dy)), n1 = n0 + dy, s1 = s0;
            else if (signY > 0) dy = brush_max(N - s0, brush_min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
          }
          break;
        }
        case MODE_CENTER: {
          if (signX) w1 = brush_max(W, brush_min(E, w0 - dx * signX)), e1 = brush_max(W, brush_min(E, e0 + dx * signX));
          if (signY) n1 = brush_max(N, brush_min(S, n0 - dy * signY)), s1 = brush_max(N, brush_min(S, s0 + dy * signY));
          break;
        }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!
      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1
          || selection[0][1] !== n1
          || selection[1][0] !== e1
          || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush(event, mode.name);
      }
    }

    function ended(event) {
      noevent_nopropagation(event);
      if (event.touches) {
        if (event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!
      } else {
        yesdrag(event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }
      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!
      if (brush_empty(selection)) state.selection = null, redraw.call(that);
      emit.end(event, mode.name);
    }

    function keydowned(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          shifting = signX && signY;
          break;
        }
        case 18: { // ALT
          if (mode === MODE_HANDLE) {
            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
            mode = MODE_CENTER;
            move(event);
          }
          break;
        }
        case 32: { // SPACE; takes priority over ALT
          if (mode === MODE_HANDLE || mode === MODE_CENTER) {
            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;
            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;
            mode = MODE_SPACE;
            overlay.attr("cursor", cursors.selection);
            move(event);
          }
          break;
        }
        default: return;
      }
      src_noevent(event);
    }

    function keyupped(event) {
      switch (event.keyCode) {
        case 16: { // SHIFT
          if (shifting) {
            lockX = lockY = shifting = false;
            move(event);
          }
          break;
        }
        case 18: { // ALT
          if (mode === MODE_CENTER) {
            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
            mode = MODE_HANDLE;
            move(event);
          }
          break;
        }
        case 32: { // SPACE
          if (mode === MODE_SPACE) {
            if (event.altKey) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
            } else {
              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
            }
            overlay.attr("cursor", cursors[type]);
            move(event);
          }
          break;
        }
        default: return;
      }
      src_noevent(event);
    }
  }

  function touchmoved(event) {
    emitter(this, arguments).moved(event);
  }

  function touchended(event) {
    emitter(this, arguments).ended(event);
  }

  function initialize() {
    var state = this.__brush || {selection: null};
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function(_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : d3_brush_src_constant(number2(_)), brush) : extent;
  };

  brush.filter = function(_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : filter;
  };

  brush.touchable = function(_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : d3_brush_src_constant(!!_), brush) : touchable;
  };

  brush.handleSize = function(_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function(_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function() {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}

;// CONCATENATED MODULE: ../../node_modules/d3-brush/src/index.js


;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/grid-brush.js
var grid_brush_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports


// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function

// This class is used for handle brush events in chart
var ChartBrush = /** @class */ (function (_super) {
    grid_brush_extends(ChartBrush, _super);
    function ChartBrush() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'grid-brush';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.selectionSelector = 'rect.selection'; // needs to match the class name in d3.brush
        _this.frontSelectionSelector = 'rect.frontSelection'; // needs to match the class name in _grid-brush.scss
        return _this;
    }
    ChartBrush.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.parent;
        // use this area to display selection above all graphs
        var frontSelectionArea = this.getComponentContainer();
        var backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-grid-backdrop');
        // use this area to handle d3 brush events
        var brushArea = DOMUtils.appendOrSelect(backdrop, "g." + this.type);
        // set an id for rect.selection to be referred
        var d3Selection = DOMUtils.appendOrSelect(brushArea, this.selectionSelector);
        var _a = DOMUtils.getSVGElementSize(backdrop, {
            useAttrs: true,
        }), width = _a.width, height = _a.height;
        var cartesianScales = this.services.cartesianScales;
        var mainXScaleType = cartesianScales.getMainXScaleType();
        var mainXScale = cartesianScales.getMainXScale();
        var _b = mainXScale.range(), xScaleStart = _b[0], xScaleEnd = _b[1];
        frontSelectionArea.attr('transform', "translate(" + xScaleStart + ",0)");
        var frontSelection = DOMUtils.appendOrSelect(frontSelectionArea, this.frontSelectionSelector);
        if (mainXScale && mainXScaleType === interfaces.ScaleTypes.TIME) {
            // get current zoomDomain
            var zoomDomain_1 = this.model.get('zoomDomain');
            if (zoomDomain_1 === undefined) {
                // default to full range with extended domain
                zoomDomain_1 = this.services.zoom.getDefaultZoomBarDomain();
                if (zoomDomain_1) {
                    this.model.set({ zoomDomain: zoomDomain_1 }, { animate: false });
                }
            }
            var updateSelectionDash_1 = function (selection) {
                // set end drag point to dash
                var selectionWidth = selection[1] - selection[0];
                var dashArray = '0,' + selectionWidth.toString(); // top (invisible)
                // right
                var dashCount = Math.floor(height / ChartBrush.DASH_LENGTH);
                var totalRightDash = dashCount * ChartBrush.DASH_LENGTH;
                for (var i = 0; i < dashCount; i++) {
                    dashArray += ',' + ChartBrush.DASH_LENGTH; // for each full length dash
                }
                dashArray += ',' + (height - totalRightDash); // for rest of the right height
                // if dash count is even, one more ",0" is needed to make total right dash pattern even
                if (dashCount % 2 === 1) {
                    dashArray += ',0';
                }
                dashArray += ',' + selectionWidth.toString(); // bottom (invisible)
                dashArray += ',' + height.toString(); // left
                frontSelection.attr('stroke-dasharray', dashArray);
            };
            var brushEventHandler = function (event) {
                // selection range: [0, width]
                var selection = event.selection;
                if (selection === null || selection[0] === selection[1]) {
                    return;
                }
                // copy the d3 selection attrs to front selection element
                frontSelection
                    .attr('x', parseFloat(d3Selection.attr('x')) +
                    parseFloat(backdrop.attr('x')))
                    .attr('y', d3Selection.attr('y'))
                    .attr('width', d3Selection.attr('width'))
                    .attr('height', d3Selection.attr('height'))
                    .style('cursor', 'pointer')
                    .style('display', null);
                updateSelectionDash_1(selection);
            };
            // assume max range is [0, width]
            var updateZoomDomain_1 = function (startPoint, endPoint) {
                // create xScale based on current zoomDomain
                var xScale = time().range([0, width]).domain(zoomDomain_1);
                var newDomain = [
                    xScale.invert(startPoint),
                    xScale.invert(endPoint),
                ];
                // if selected start time and end time are the same
                // reset to default full range
                if (newDomain[0].valueOf() === newDomain[1].valueOf()) {
                    // same as d3 behavior and zoom bar behavior: set to default full range
                    newDomain = _this.services.zoom.getDefaultZoomBarDomain();
                }
                // only if zoomDomain needs update
                if (zoomDomain_1[0].valueOf() !== newDomain[0].valueOf() ||
                    zoomDomain_1[1].valueOf() !== newDomain[1].valueOf()) {
                    _this.services.zoom.handleDomainChange(newDomain);
                }
            };
            var brushed = function (event) {
                // max selection range: [0, width]
                var selection = event.selection;
                if (selection !== null) {
                    // updateZoomDomain assumes max range is [0, width]
                    updateZoomDomain_1(selection[0], selection[1]);
                    // clear brush selection
                    brushArea.call(brush_1.move, null);
                    // hide frontSelection
                    frontSelection.style('display', 'none');
                }
            };
            // leave some space to display selection strokes besides axis
            var brush_1 = brushX()
                .extent([
                [0, 0],
                [width - 1, height],
            ])
                .on('start brush end', brushEventHandler)
                .on('end.brushed', brushed);
            brushArea.call(brush_1);
            var zoomRatio_1 = this.services.zoom.getZoomRatio();
            backdrop.on('click', function (event) {
                if (event.shiftKey) {
                    var holder = this.services.domUtils.getHolder();
                    // clickedX range: [0, width]
                    var clickedX = pointer(brushArea.node(), holder)[0];
                    var leftPoint = clickedX - (width * zoomRatio_1) / 2;
                    if (leftPoint < 0) {
                        leftPoint = 0;
                    }
                    var rightPoint = clickedX + (width * zoomRatio_1) / 2;
                    if (rightPoint > width) {
                        rightPoint = width;
                    }
                    // updateZoomDomain assumes max range is [0, width]
                    updateZoomDomain_1(leftPoint, rightPoint);
                }
            });
        }
    };
    ChartBrush.DASH_LENGTH = 4;
    return ChartBrush;
}(Component));

//# sourceMappingURL=../../../src/components/axes/grid-brush.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/grid.js
var grid_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports

var Grid = /** @class */ (function (_super) {
    grid_extends(Grid, _super);
    function Grid() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'grid';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Grid.prototype.render = function (animate) {
        if (animate === void 0) { animate = true; }
        var isXGridEnabled = Tools.getProperty(this.getOptions(), 'grid', 'x', 'enabled');
        var isYGridEnabled = Tools.getProperty(this.getOptions(), 'grid', 'y', 'enabled');
        // Draw the backdrop
        this.drawBackdrop(isXGridEnabled, isYGridEnabled);
        if (!isXGridEnabled && !isYGridEnabled) {
            return;
        }
        if (isXGridEnabled) {
            DOMUtils.appendOrSelect(this.backdrop, 'g.x.grid');
            this.drawXGrid(animate);
        }
        if (isYGridEnabled) {
            DOMUtils.appendOrSelect(this.backdrop, 'g.y.grid');
            this.drawYGrid(animate);
        }
    };
    Grid.prototype.drawXGrid = function (animate) {
        var _this = this;
        var svg = this.parent;
        var height = this.backdrop.attr('height');
        var mainXScale = this.services.cartesianScales.getMainXScale();
        var xGrid = axisBottom(mainXScale)
            .tickSizeInner(-height)
            .tickSizeOuter(0);
        // if the main range axis has a custom domain, align the gridlines to the ticks
        var alignToTicks = Tools.getProperty(this.getOptions(), 'grid', 'x', 'alignWithAxisTicks');
        if (alignToTicks) {
            var mainXPosition = this.services.cartesianScales.getDomainAxisPosition();
            var customDomain = Tools.getProperty(this.getOptions(), 'axes', mainXPosition, 'ticks', 'values');
            // use custom domain if there is one
            // otherwise d3 defaults to using one gridline per tick
            if (customDomain) {
                xGrid.tickValues(customDomain);
            }
        }
        else {
            // Determine number of ticks
            var numberOfTicks = Tools.getProperty(this.getOptions(), 'grid', 'x', 'numberOfTicks');
            xGrid.ticks(numberOfTicks);
        }
        var g = svg
            .select('.x.grid')
            .attr('transform', "translate(" + -this.backdrop.attr('x') + ", " + height + ")");
        if (animate) {
            g.transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'grid-update',
                    animate: animate,
                });
            })
                .call(xGrid);
        }
        else {
            g.call(xGrid);
        }
        this.cleanGrid(g);
    };
    Grid.prototype.drawYGrid = function (animate) {
        var _this = this;
        var svg = this.parent;
        var width = this.backdrop.attr('width');
        var mainYScale = this.services.cartesianScales.getMainYScale();
        var yGrid = axisLeft(mainYScale)
            .tickSizeInner(-width)
            .tickSizeOuter(0);
        // if the main range axis has a custom domain, align the gridlines to the ticks
        var alignToTicks = Tools.getProperty(this.getOptions(), 'grid', 'y', 'alignWithAxisTicks');
        if (alignToTicks) {
            var mainYPosition = this.services.cartesianScales.getRangeAxisPosition();
            var customDomain = Tools.getProperty(this.getOptions(), 'axes', mainYPosition, 'ticks', 'values');
            // use custom domain if there is one
            // otherwise d3 defaults to using one gridline per tick
            if (customDomain) {
                yGrid.tickValues(customDomain);
            }
        }
        else {
            // Determine number of ticks
            var numberOfTicks = Tools.getProperty(this.getOptions(), 'grid', 'y', 'numberOfTicks');
            yGrid.ticks(numberOfTicks);
        }
        var g = svg
            .select('.y.grid')
            .attr('transform', "translate(0, " + -this.backdrop.attr('y') + ")");
        if (animate) {
            g.transition()
                .call(function (t) {
                return _this.services.transitions.setupTransition({
                    transition: t,
                    name: 'grid-update',
                    animate: animate,
                });
            })
                .call(yGrid);
        }
        else {
            g.call(yGrid);
        }
        this.cleanGrid(g);
    };
    /**
     * Returns the threshold for the gridline tooltips based on the mouse location.
     * Calculated based on the mouse position between the two closest gridlines or edges of chart.
     */
    Grid.prototype.getGridlineThreshold = function (mousePos) {
        // use the space between axis grid ticks to adjust the threshold for the tooltips
        var svg = this.parent;
        // sort in ascending x translation value order
        var gridlinesX = svg
            .selectAll('.x.grid .tick')
            .nodes()
            .sort(function (a, b) {
            return (Number(Tools.getTranslationValues(a).tx) -
                Number(Tools.getTranslationValues(b).tx));
        });
        // find the 2 gridlines on either side of the mouse
        var floor = -1;
        var ceiling;
        if (!gridlinesX.length) {
            return;
        }
        gridlinesX.forEach(function (line, i) {
            if (mousePos[0] >= +Tools.getTranslationValues(line).tx) {
                floor++;
            }
        });
        ceiling = floor + 1 < gridlinesX.length ? floor + 1 : gridlinesX.length;
        // get the 'step' between chart gridlines
        var line1 = gridlinesX[floor];
        var line2 = gridlinesX[ceiling];
        var lineSpacing;
        // if the mouse is on edge of charts (mouseX < first gridline || mouseX > last gridline)
        // we can use the chart edge to determind the threshold for the gridlines
        if (!line1) {
            // we are between the first gridline and the chart edge
            lineSpacing = +Tools.getTranslationValues(line2).tx;
        }
        else if (!line2) {
            // we need to use the chart right bounds in case there isnt a domain axis
            var gridElement = svg.select('rect.chart-grid-backdrop').node();
            var width = DOMUtils.getSVGElementSize(gridElement).width;
            lineSpacing = width - +Tools.getTranslationValues(line1).tx;
        }
        else {
            // there are two gridlines to use
            lineSpacing =
                +Tools.getTranslationValues(line2).tx -
                    +Tools.getTranslationValues(line1).tx;
        }
        var threshold = this.getOptions().tooltip.gridline.threshold;
        // return the threshold
        return lineSpacing * threshold;
    };
    /**
     * Returns the active gridlines based on the gridline threshold and mouse position.
     * @param position mouse positon
     */
    Grid.prototype.getActiveGridline = function (position) {
        var userSpecifiedThreshold = Tools.getProperty(this.getOptions, 'tooltip', 'gridline', 'threshold');
        var threshold = userSpecifiedThreshold
            ? userSpecifiedThreshold
            : this.getGridlineThreshold(position);
        var svg = this.parent;
        var xGridlines = svg.selectAll('.x.grid .tick').filter(function () {
            var translations = Tools.getTranslationValues(this);
            // threshold for when to display a gridline tooltip
            var bounds = {
                min: Number(translations.tx) - threshold,
                max: Number(translations.tx) + threshold,
            };
            return bounds.min <= position[0] && position[0] <= bounds.max;
        });
        return xGridlines;
    };
    Grid.prototype.drawBackdrop = function (isXGridEnabled, isYGridEnabled) {
        var svg = this.parent;
        var mainXScale = this.services.cartesianScales.getMainXScale();
        var mainYScale = this.services.cartesianScales.getMainYScale();
        var _a = mainXScale.range(), xScaleStart = _a[0], xScaleEnd = _a[1];
        var _b = mainYScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
        // Get height from the grid
        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-grid-backdrop');
        var backdropRect = DOMUtils.appendOrSelect(this.backdrop, isXGridEnabled || isYGridEnabled
            ? 'rect.chart-grid-backdrop.stroked'
            : 'rect.chart-grid-backdrop');
        this.backdrop
            .merge(backdropRect)
            .attr('x', xScaleStart)
            .attr('y', yScaleStart)
            .attr('width', Math.abs(xScaleEnd - xScaleStart))
            .attr('height', Math.abs(yScaleEnd - yScaleStart))
            .lower();
        backdropRect.attr('width', '100%').attr('height', '100%');
    };
    Grid.prototype.cleanGrid = function (g) {
        // Remove extra elements
        g.selectAll('text').remove();
        g.select('.domain').remove();
    };
    return Grid;
}(Component));

//# sourceMappingURL=../../../src/components/axes/grid.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/ruler.js
var ruler_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// D3 Imports
// @ts-ignore
// ts-ignore is needed because `@types/d3`
// is missing the `pointer` function

var THRESHOLD = 5;
/** check if x is inside threshold area extents  */
function pointIsWithinThreshold(dx, x) {
    return dx > x - THRESHOLD && dx < x + THRESHOLD;
}
var Ruler = /** @class */ (function (_super) {
    ruler_extends(Ruler, _super);
    function Ruler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'ruler';
        _this.renderType = interfaces.RenderTypes.SVG;
        _this.isXGridEnabled = Tools.getProperty(_this.getOptions(), 'grid', 'x', 'enabled');
        _this.isYGridEnabled = Tools.getProperty(_this.getOptions(), 'grid', 'y', 'enabled');
        // flag for checking whether ruler event listener is added or not
        _this.isEventListenerAdded = false;
        return _this;
    }
    Ruler.prototype.render = function () {
        var isRulerEnabled = Tools.getProperty(this.getOptions(), 'ruler', 'enabled');
        this.drawBackdrop();
        if (isRulerEnabled && !this.isEventListenerAdded) {
            this.addBackdropEventListeners();
        }
        else if (!isRulerEnabled && this.isEventListenerAdded) {
            this.removeBackdropEventListeners();
        }
    };
    Ruler.prototype.removeBackdropEventListeners = function () {
        this.isEventListenerAdded = false;
        this.backdrop.on('mousemove mouseover mouseout', null);
    };
    Ruler.prototype.formatTooltipData = function (tooltipData) {
        return tooltipData;
    };
    Ruler.prototype.showRuler = function (event, _a) {
        var _this = this;
        var x = _a[0], y = _a[1];
        var svg = this.parent;
        var orientation = this.services.cartesianScales.getOrientation();
        var displayData = this.model.getDisplayData();
        var rangeScale = this.services.cartesianScales.getRangeScale();
        var _b = rangeScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
        var mouseCoordinate = orientation === interfaces.CartesianOrientations.HORIZONTAL ? y : x;
        var ruler = DOMUtils.appendOrSelect(svg, 'g.ruler').attr('aria-label', 'ruler');
        var rulerLine = DOMUtils.appendOrSelect(ruler, 'line.ruler-line');
        var dataPointElements = svg.selectAll('[role=graphics-symbol]');
        var pointsWithinLine = displayData
            .map(function (d) { return ({
            domainValue: _this.services.cartesianScales.getDomainValue(d),
            originalData: d,
        }); })
            .filter(function (d) {
            return pointIsWithinThreshold(d.domainValue, mouseCoordinate);
        });
        if (this.pointsWithinLine &&
            pointsWithinLine.length === this.pointsWithinLine.length &&
            pointsWithinLine.map(function (point) { return point.domainValue; }).join() ===
                this.pointsWithinLine.map(function (point) { return point.domainValue; }).join()) {
            this.pointsWithinLine = pointsWithinLine;
            return this.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                mousePosition: [x, y],
            });
        }
        this.pointsWithinLine = pointsWithinLine;
        /**
         * Find matches, reduce is used instead of filter
         * to only get elements which belong to the same axis coordinate
         */
        var dataPointsMatchingRulerLine = this.pointsWithinLine.reduce(function (accum, currentValue) {
            if (accum.length === 0) {
                accum.push(currentValue);
                return accum;
            }
            // store the first element of the accumulator array to compare it with current element being processed
            var sampleAccumValue = accum[0].domainValue;
            var distanceToCurrentValue = Math.abs(mouseCoordinate - currentValue.domainValue);
            var distanceToAccumValue = Math.abs(mouseCoordinate - sampleAccumValue);
            if (distanceToCurrentValue > distanceToAccumValue) {
                // if distance with current value is bigger than already existing value in the accumulator, skip current iteration
                return accum;
            }
            else if (distanceToCurrentValue < distanceToAccumValue) {
                // currentValue data point is closer to mouse inside the threshold area, so reinstantiate array
                accum = [currentValue];
            }
            else {
                // currentValue is equal to already stored values, which means there's another match on the same coordinate
                accum.push(currentValue);
            }
            return accum;
        }, []);
        // some data point match
        if (dataPointsMatchingRulerLine.length > 0) {
            var tooltipData = dataPointsMatchingRulerLine
                .map(function (d) { return d.originalData; })
                .filter(function (d) {
                var rangeIdentifier = _this.services.cartesianScales.getRangeIdentifier(d);
                var value = d[rangeIdentifier];
                return value !== null && value !== undefined;
            });
            // get elements on which we should trigger mouse events
            var domainValuesMatchingRulerLine_1 = dataPointsMatchingRulerLine.map(function (d) { return d.domainValue; });
            var elementsToHighlight = dataPointElements.filter(function (d) {
                var domainValue = _this.services.cartesianScales.getDomainValue(d);
                return domainValuesMatchingRulerLine_1.includes(domainValue);
            });
            /** if we pass from a trigger area to another one
             * mouseout on previous elements won't get dispatched
             * so we need to do it manually
             */
            if (this.elementsToHighlight &&
                this.elementsToHighlight.size() > 0 &&
                !Tools.isEqual(this.elementsToHighlight, elementsToHighlight)) {
                this.hideRuler();
            }
            elementsToHighlight.dispatch('mouseover');
            // set current hovered elements
            this.elementsToHighlight = elementsToHighlight;
            this.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                mousePosition: [x, y],
                hoveredElement: rulerLine,
                data: this.formatTooltipData(tooltipData),
            });
            ruler.attr('opacity', 1);
            // line snaps to matching point
            var sampleMatch = dataPointsMatchingRulerLine[0];
            if (orientation === 'horizontal') {
                rulerLine
                    .attr('x1', yScaleStart)
                    .attr('x2', yScaleEnd)
                    .attr('y1', sampleMatch.domainValue)
                    .attr('y2', sampleMatch.domainValue);
            }
            else {
                rulerLine
                    .attr('y1', yScaleStart)
                    .attr('y2', yScaleEnd)
                    .attr('x1', sampleMatch.domainValue)
                    .attr('x2', sampleMatch.domainValue);
            }
        }
        else {
            this.hideRuler();
        }
    };
    Ruler.prototype.hideRuler = function () {
        var svg = this.parent;
        var ruler = DOMUtils.appendOrSelect(svg, 'g.ruler');
        var dataPointElements = svg.selectAll('[role=graphics-symbol]');
        dataPointElements.dispatch('mouseout');
        this.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE);
        ruler.attr('opacity', 0);
    };
    /**
     * Adds the listener on the X grid to trigger multiple point tooltips along the x axis.
     */
    Ruler.prototype.addBackdropEventListeners = function () {
        this.isEventListenerAdded = true;
        var self = this;
        var holder = this.services.domUtils.getHolder();
        var displayData = this.model.getDisplayData();
        var mouseMoveCallback = function (event) {
            var pos = pointer(event, self.parent.node());
            self.showRuler(event, pos);
        };
        // Debounce mouseMoveCallback if there are more than 100 datapoints
        if (displayData.length > 100) {
            var debounceThreshold = (displayData.length % 50) * 12.5;
            mouseMoveCallback = Tools.debounceWithD3MousePosition(function (event) {
                var mousePosition = this.mousePosition;
                self.showRuler(event, mousePosition);
            }, debounceThreshold, holder);
        }
        this.backdrop
            .on('mousemove mouseover', mouseMoveCallback)
            .on('mouseout', this.hideRuler.bind(this));
    };
    Ruler.prototype.drawBackdrop = function () {
        var svg = this.parent;
        // Get height from the grid
        this.backdrop = DOMUtils.appendOrSelect(svg, 'svg.chart-grid-backdrop');
    };
    return Ruler;
}(Component));

//# sourceMappingURL=../../../src/components/axes/ruler.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/ruler-binned.js
var ruler_binned_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var ruler_binned_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports




// D3 Imports


var BinnedRuler = /** @class */ (function (_super) {
    ruler_binned_extends(BinnedRuler, _super);
    function BinnedRuler() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'ruler-binned';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    BinnedRuler.prototype.showRuler = function (event, _a) {
        var _this = this;
        var x = _a[0], y = _a[1];
        var svg = this.parent;
        var options = this.model.getOptions();
        var orientation = this.services.cartesianScales.getOrientation();
        var rangeScale = this.services.cartesianScales.getRangeScale();
        var _b = rangeScale.range(), yScaleEnd = _b[0], yScaleStart = _b[1];
        var domainScale = this.services.cartesianScales.getDomainScale();
        var correspondingDomainValue = domainScale.invert(orientation === interfaces.CartesianOrientations.VERTICAL ? x : y);
        var ruler = DOMUtils.appendOrSelect(svg, 'g.ruler').attr('aria-label', 'ruler');
        var rulerLine = DOMUtils.appendOrSelect(ruler, 'line.ruler-line');
        var dataPointElements = svg.selectAll('[role=graphics-symbol]');
        var elementsToHighlight = dataPointElements.filter(function (d) {
            if (parseFloat(lodash_es_get(d, 'data.x0')) <= correspondingDomainValue &&
                parseFloat(lodash_es_get(d, 'data.x1')) >= correspondingDomainValue) {
                return true;
            }
        });
        // some data point match
        if (elementsToHighlight.size() > 0) {
            /** if we pass from a trigger area to another one
             * mouseout on previous elements won't get dispatched
             * so we need to do it manually
             */
            if (this.elementsToHighlight &&
                this.elementsToHighlight.size() > 0 &&
                !Tools.isEqual(this.elementsToHighlight, elementsToHighlight)) {
                this.hideRuler();
            }
            elementsToHighlight.dispatch('mouseover');
            // set current hovered elements
            this.elementsToHighlight = elementsToHighlight;
            var sampleMatchData_1 = src_select(elementsToHighlight.nodes()[0]).datum();
            var x0 = parseFloat(lodash_es_get(sampleMatchData_1, 'data.x0'));
            var x1 = parseFloat(lodash_es_get(sampleMatchData_1, 'data.x1'));
            var activeDataGroupNames = this.model.getActiveDataGroupNames();
            var tooltipDataGroups = activeDataGroupNames
                .reverse()
                .map(function (dataGroupName) { return ({
                label: dataGroupName,
                value: lodash_es_get(sampleMatchData_1, "data." + dataGroupName),
                class: _this.model.getColorClassName({
                    classNameTypes: [interfaces.ColorClassNameTypes.TOOLTIP],
                    dataGroupName: dataGroupName,
                }),
            }); })
                .filter(function (d) { return d.value !== 0; });
            var thereIsMatchingData = tooltipDataGroups.length > 0;
            if (thereIsMatchingData) {
                this.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    mousePosition: [x, y],
                    hoveredElement: rulerLine,
                    items: ruler_binned_spreadArrays([
                        {
                            label: lodash_es_get(options, 'bins.rangeLabel') || 'Range',
                            value: x0 + " \u2013 " + x1,
                        }
                    ], tooltipDataGroups, (Tools.getProperty(options, 'tooltip', 'showTotal') === true
                        ? [
                            {
                                label: lodash_es_get(options, 'tooltip.totalLabel') || 'Total',
                                value: activeDataGroupNames.reduce(function (accum, currentValue) {
                                    return accum +
                                        parseFloat(lodash_es_get(sampleMatchData_1, "data." + currentValue));
                                }, 0),
                            },
                        ]
                        : [])),
                });
                ruler.attr('opacity', 1);
                var rulerPosition = domainScale((x0 + x1) / 2);
                // line snaps to matching point
                if (orientation === 'horizontal') {
                    rulerLine
                        .attr('x1', yScaleStart)
                        .attr('x2', yScaleEnd)
                        .attr('y1', rulerPosition)
                        .attr('y2', rulerPosition);
                }
                else {
                    rulerLine
                        .attr('y1', yScaleStart)
                        .attr('y2', yScaleEnd)
                        .attr('x1', rulerPosition)
                        .attr('x2', rulerPosition);
                }
            }
            else {
                this.hideRuler();
            }
        }
        else {
            this.hideRuler();
        }
    };
    return BinnedRuler;
}(Ruler));

//# sourceMappingURL=../../../src/components/axes/ruler-binned.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/ruler-stacked.js
var ruler_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();

var StackedRuler = /** @class */ (function (_super) {
    ruler_stacked_extends(StackedRuler, _super);
    function StackedRuler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StackedRuler.prototype.formatTooltipData = function (tooltipData) {
        return tooltipData.reverse();
    };
    return StackedRuler;
}(Ruler));

//# sourceMappingURL=../../../src/components/axes/ruler-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/toolbar.js
var toolbar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// D3 Imports

var Toolbar = /** @class */ (function (_super) {
    toolbar_extends(Toolbar, _super);
    function Toolbar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'toolbar';
        _this.renderType = interfaces.RenderTypes.HTML;
        return _this;
    }
    Toolbar.prototype.init = function () {
        var _this = this;
        var bodyOnClickHandler = function () { return _this.updateOverflowMenu(false); };
        // Grab the tooltip element
        this.services.events.addEventListener(interfaces.Events.Toolbar.SHOW_OVERFLOW_MENU, function () {
            _this.renderOverflowMenu();
            // hide overflow menu if user clicks on somewhere in web page
            document.body.addEventListener('click', bodyOnClickHandler);
        });
        // listen to hide overflow menu event to hide the overflow menu
        this.services.events.addEventListener(interfaces.Events.Toolbar.HIDE_OVERFLOW_MENU, function () {
            // // hide overflow menu if user clicks on somewhere in web page
            document.body.removeEventListener('click', bodyOnClickHandler);
        });
    };
    Toolbar.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var container = this.getComponentContainer().attr('role', 'toolbar');
        var isDataLoading = Tools.getProperty(this.getOptions(), 'data', 'loading');
        if (isDataLoading) {
            container.html('');
            // Set overflow menu to null if data is loading
            // This will render in a new overflow menu when data is done loading
            this.overflowMenu = null;
        }
        else {
            if (!this.overflowMenu) {
                this.overflowMenu = container
                    .append('div')
                    .attr('class', 'bx--overflow-menu-options bx--overflow-menu--flip')
                    .attr('tabindex', -1)
                    .attr('role', 'menu')
                    .html("<ul></ul>");
            }
            // get the toolbar buttons
            var _a = this.getControlConfigs(), buttonList = _a.buttonList, overflowMenuItemList = _a.overflowMenuItemList;
            // overflow button is required only if overflow menu item list is valid
            if (!!overflowMenuItemList) {
                buttonList.push(this.getOverflowButtonConfig());
            }
            var toolbarControls = container
                .selectAll('div.toolbar-control')
                .data(buttonList, function (button) { return button.id; });
            toolbarControls.exit().remove();
            var enteringToolbarControls = toolbarControls
                .enter()
                .append('div')
                .attr('class', 'toolbar-control bx--overflow-menu')
                .attr('role', 'button');
            var self_1 = this;
            var allToolbarControls = enteringToolbarControls
                .merge(toolbarControls)
                .classed('disabled', function (d) { return d.shouldBeDisabled(); })
                .attr('aria-disabled', function (d) { return d.shouldBeDisabled(); })
                .attr('aria-label', function (d) { return d.title; })
                .html(function (d) { return "\n\t\t\t<button\n\t\t\t\tclass=\"bx--overflow-menu__trigger\"\n\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\" id=\"" + _this.services.domUtils.generateElementIDString("control-" + d.id) + "\" aria-label=\"" + d.title + "\">\n\t\t\t\t<svg focusable=\"false\" preserveAspectRatio=\"xMidYMid meet\" style=\"will-change: transform; width: " + (d.iconSVG.width !== undefined ? d.iconSVG.width : '20px') + "; height: " + (d.iconSVG.height !== undefined
                ? d.iconSVG.height
                : '20px') + "\" xmlns=\"http://www.w3.org/2000/svg\" class=\"bx--overflow-menu__icon\" viewBox=\"0 0 32 32\" aria-hidden=\"true\">\n\t\t\t\t\t" + d.iconSVG.content + "\n\t\t\t\t</svg>\n\t\t\t</button>"; })
                .each(function (d, index) {
                var _this = this;
                src_select(this)
                    .select('button')
                    .on('click', function (event) {
                    if (!d.shouldBeDisabled()) {
                        self_1.triggerFunctionAndEvent(d, event, _this);
                    }
                })
                    .on('keydown', function (event) {
                    if ((event.key && event.key === 'Enter') ||
                        event.key === ' ') {
                        event.preventDefault();
                        self_1.triggerFunctionAndEvent(d, event, _this);
                    }
                    else if (event.key && event.key === 'ArrowLeft') {
                        self_1.focusOnPreviousEnabledToolbarItem(index);
                    }
                    else if (event.key &&
                        event.key === 'ArrowRight') {
                        self_1.focusOnNextEnabledToolbarItem(index);
                    }
                });
            });
            this.overflowButton = this.getComponentContainer().select("button.bx--overflow-menu__trigger#" + this.services.domUtils.generateElementIDString('control-toolbar-overflow-menu'));
        }
    };
    Toolbar.prototype.renderOverflowMenu = function () {
        var _this = this;
        var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;
        var overflowMenuControls = this.overflowMenu
            .select('ul')
            .selectAll('li.bx--overflow-menu-options__option')
            .data(overflowMenuItemList, function (button) {
            return Tools.getProperty(button, 'id');
        });
        overflowMenuControls.exit().remove();
        var enteringOverflowMenuControls = overflowMenuControls
            .enter()
            .append('li')
            .attr('id', function (d) {
            return _this.services.domUtils.generateElementIDString("control-" + d.id);
        })
            .attr('class', 'bx--overflow-menu-options__option')
            .attr('role', 'menuitem');
        enteringOverflowMenuControls
            .append('button')
            .attr('class', 'bx--overflow-menu-options__btn');
        enteringOverflowMenuControls
            .merge(overflowMenuControls)
            .classed('bx--overflow-menu-options__option--disabled', function (d) {
            return d.shouldBeDisabled();
        })
            .attr('aria-disabled', function (d) { return d.shouldBeDisabled(); })
            .selectAll('button')
            .text(function (d) { return d.text; });
    };
    Toolbar.prototype.isOverflowMenuOpen = function () {
        return this.overflowMenu.classed('is-open');
    };
    // show/hide overflow menu
    Toolbar.prototype.updateOverflowMenu = function (show) {
        if (!this.overflowMenu) {
            return;
        }
        this.overflowMenu.classed('is-open', show);
        // update overflow button background
        if (this.overflowButton) {
            this.overflowButton.attr('aria-expanded', show);
            src_select(this.overflowButton.node().parentNode).classed('bx--overflow-menu--open', show);
        }
        if (show) {
            this.services.events.dispatchEvent(interfaces.Events.Toolbar.SHOW_OVERFLOW_MENU);
        }
        else {
            this.services.events.dispatchEvent(interfaces.Events.Toolbar.HIDE_OVERFLOW_MENU);
        }
    };
    // Toolbar controllers
    Toolbar.prototype.focusOnPreviousEnabledToolbarItem = function (currentItemIndex) {
        var buttonList = this.getToolbarButtonItems();
        var previousItemIndex = buttonList.length;
        for (var i = currentItemIndex - 1; i >= 0; i--) {
            var previousButtonItem = buttonList[i];
            if (!previousButtonItem.shouldBeDisabled()) {
                previousItemIndex = i;
                break;
            }
        }
        // only if previous enabled menu item found
        if (previousItemIndex < buttonList.length) {
            var previousItemNode = src_select("button#" + this.services.domUtils.generateElementIDString("control-" + buttonList[previousItemIndex].id)).node();
            if ('focus' in previousItemNode) {
                previousItemNode.focus();
            }
        }
    };
    Toolbar.prototype.focusOnNextEnabledToolbarItem = function (currentItemIndex) {
        var buttonList = this.getToolbarButtonItems();
        var nextItemIndex = -1;
        for (var i = currentItemIndex + 1; i < buttonList.length; i++) {
            var nextOverflowMenuItem = buttonList[i];
            if (!nextOverflowMenuItem.shouldBeDisabled()) {
                nextItemIndex = i;
                break;
            }
        }
        // only if next enabled menu item found
        if (nextItemIndex > -1) {
            var nextItemNode = src_select("button#" + this.services.domUtils.generateElementIDString("control-" + buttonList[nextItemIndex].id)).node();
            if ('focus' in nextItemNode) {
                nextItemNode.focus();
            }
        }
    };
    Toolbar.prototype.focusOnPreviousEnabledMenuItem = function (currentItemIndex) {
        var overflowMenuItems = this.getOverflowMenuItems();
        var previousItemIndex = overflowMenuItems.length;
        for (var i = currentItemIndex - 1; i >= 0; i--) {
            var previousOverflowMenuItem = overflowMenuItems[i];
            if (!previousOverflowMenuItem.shouldBeDisabled()) {
                previousItemIndex = i;
                break;
            }
        }
        // only if previous enabled menu item found
        if (previousItemIndex < overflowMenuItems.length) {
            var previousItemNode = src_select("#" + this.services.domUtils.generateElementIDString("control-" + overflowMenuItems[previousItemIndex].id) + " button").node();
            if ('focus' in previousItemNode) {
                previousItemNode.focus();
            }
        }
    };
    Toolbar.prototype.focusOnNextEnabledMenuItem = function (currentItemIndex) {
        var overflowMenuItems = this.getOverflowMenuItems();
        var nextItemIndex = -1;
        for (var i = currentItemIndex + 1; i < overflowMenuItems.length; i++) {
            var nextOverflowMenuItem = overflowMenuItems[i];
            if (!nextOverflowMenuItem.shouldBeDisabled()) {
                nextItemIndex = i;
                break;
            }
        }
        // only if next enabled menu item found
        if (nextItemIndex > -1) {
            var nextItemNode = src_select("#" + this.services.domUtils.generateElementIDString("control-" + overflowMenuItems[nextItemIndex].id) + " button").node();
            if ('focus' in nextItemNode) {
                nextItemNode.focus();
            }
        }
    };
    Toolbar.prototype.toggleOverflowMenu = function (event) {
        var _this = this;
        if (this.isOverflowMenuOpen()) {
            // hide overflow menu
            this.updateOverflowMenu(false);
        }
        else {
            // show overflow menu
            this.updateOverflowMenu(true);
            // setup overflow menu item event listener
            var self_2 = this;
            var overflowMenuItems = this.getOverflowMenuItems();
            overflowMenuItems.forEach(function (menuItem, index) {
                var element = src_select("#" + _this.services.domUtils.generateElementIDString("control-" + menuItem.id));
                if (element !== null) {
                    element.on('click', function () {
                        self_2.triggerFunctionAndEvent(menuItem, event, element.node());
                        // hide overflow menu
                        self_2.updateOverflowMenu(false);
                    });
                    element.on('keydown', function (keyEvent) {
                        if (keyEvent && keyEvent.key === 'Enter') {
                            self_2.triggerFunctionAndEvent(menuItem, event, element.node());
                        }
                        else if (keyEvent && keyEvent.key === 'ArrowUp') {
                            // focus on previous menu item
                            self_2.focusOnPreviousEnabledMenuItem(index);
                        }
                        else if (keyEvent && keyEvent.key === 'ArrowDown') {
                            // focus on next menu item
                            self_2.focusOnNextEnabledMenuItem(index);
                        }
                        else if (keyEvent && keyEvent.key === 'Escape') {
                            self_2.updateOverflowMenu(false);
                        }
                        // Not hide overflow menu by keyboard arrow up/down event
                        // Prevent page from scrolling up/down
                        keyEvent.preventDefault();
                    });
                }
            });
            // default to focus on the first enabled menu item
            self_2.focusOnNextEnabledMenuItem(-1);
        }
        // propogation should not be stopped for keyboard events
        if (!!event) {
            event.stopImmediatePropagation();
        }
    };
    // Calls passed function && dispatches event
    Toolbar.prototype.triggerFunctionAndEvent = function (control, event, element) {
        // Call custom function only if it exists
        if (typeof control.clickFunction === 'function') {
            control.clickFunction(event);
        }
        // Dispatch selection event
        this.services.events.dispatchEvent(interfaces.Events.Toolbar.BUTTON_CLICK, {
            control: control,
            event: event,
            element: element,
        });
    };
    Toolbar.prototype.getControlConfigs = function () {
        var _this = this;
        var numberOfIcons = Tools.getProperty(this.getOptions(), 'toolbar', 'numberOfIcons') -
            1;
        var controls = Tools.getProperty(this.getOptions(), 'toolbar', 'controls');
        var overflowSpecificControls = [];
        var buttonList = [];
        var overflowList = [];
        controls.forEach(function (control) {
            var controlConfig = null;
            // check if button is custom or default control
            if (control.type === interfaces.ToolbarControlTypes.CUSTOM) {
                // add generic id if missing
                if (Tools.getProperty(control, 'id') === null) {
                    // add id directly to the data passed so that id isn't reassigned on rerender
                    control.id = "toolbar-button-" + Toolbar.buttonID++;
                }
                // define function if missing
                if (Tools.getProperty(control, 'shouldBeDisabled') === null) {
                    control.shouldBeDisabled = function () { return false; };
                }
                controlConfig = control;
            }
            else {
                controlConfig = _this.getControlConfigByType(control.type);
            }
            // add to list if config is valid
            if (controlConfig) {
                controlConfig.text = control.text ? control.text : control.type;
                if (controlConfig.id.indexOf('toolbar-export') !== -1) {
                    overflowSpecificControls.push(controlConfig);
                }
                else if (buttonList.length < numberOfIcons) {
                    // check if icon exists else assign to the overflow list
                    if (Tools.getProperty(controlConfig, 'iconSVG', 'content') === null) {
                        overflowList.push(controlConfig);
                    }
                    else {
                        buttonList.push(controlConfig);
                    }
                }
                else {
                    overflowList.push(controlConfig);
                }
            }
        });
        // Ensures the `export` controls are always at the bottom
        overflowList.push.apply(overflowList, overflowSpecificControls);
        if (!overflowList.length) {
            return {
                buttonList: buttonList,
            };
        }
        return {
            buttonList: buttonList,
            overflowMenuItemList: overflowList,
        };
    };
    Toolbar.prototype.getToolbarButtonItems = function () {
        var _a = this.getControlConfigs(), buttonList = _a.buttonList, overflowMenuItemList = _a.overflowMenuItemList;
        if (!!overflowMenuItemList) {
            buttonList.push(this.getOverflowButtonConfig());
        }
        if (!!buttonList) {
            return buttonList;
        }
        return [];
    };
    Toolbar.prototype.getOverflowMenuItems = function () {
        var overflowMenuItemList = this.getControlConfigs().overflowMenuItemList;
        if (!!overflowMenuItemList) {
            return overflowMenuItemList;
        }
        else {
            return [];
        }
    };
    // special button config for overflow button
    Toolbar.prototype.getOverflowButtonConfig = function () {
        var _this = this;
        return {
            id: 'toolbar-overflow-menu',
            title: 'More options',
            shouldBeDisabled: function () { return false; },
            iconSVG: {
                content: "<circle cx=\"16\" cy=\"8\" r=\"2\"></circle>\n\t\t\t\t<circle cx=\"16\" cy=\"16\" r=\"2\"></circle>\n\t\t\t\t<circle cx=\"16\" cy=\"24\" r=\"2\"></circle>",
            },
            clickFunction: function (event) { return _this.toggleOverflowMenu(event); },
        };
    };
    Toolbar.prototype.getControlConfigByType = function (controlType) {
        var _this = this;
        var isZoomBarEnabled = this.services.zoom &&
            this.services.zoom.isZoomBarEnabled() &&
            !this.services.zoom.isEmptyState();
        var displayData = this.model.getDisplayData();
        var controlConfig;
        switch (controlType) {
            case interfaces.ToolbarControlTypes.ZOOM_IN:
                if (isZoomBarEnabled) {
                    controlConfig = {
                        id: 'toolbar-zoomIn',
                        title: 'Zoom in',
                        shouldBeDisabled: function () {
                            return _this.services.zoom.isMinZoomDomain();
                        },
                        iconSVG: {
                            content: this.getControlIconByType(controlType),
                        },
                        clickFunction: function () { return _this.services.zoom.zoomIn(); },
                    };
                }
                break;
            case interfaces.ToolbarControlTypes.ZOOM_OUT:
                if (isZoomBarEnabled) {
                    controlConfig = {
                        id: 'toolbar-zoomOut',
                        title: 'Zoom out',
                        shouldBeDisabled: function () {
                            return _this.services.zoom.isMaxZoomDomain();
                        },
                        iconSVG: {
                            content: this.getControlIconByType(controlType),
                        },
                        clickFunction: function () { return _this.services.zoom.zoomOut(); },
                    };
                }
                break;
            case interfaces.ToolbarControlTypes.RESET_ZOOM:
                if (isZoomBarEnabled) {
                    controlConfig = {
                        id: 'toolbar-resetZoom',
                        title: 'Reset zoom',
                        shouldBeDisabled: function () {
                            return _this.services.zoom.isMaxZoomDomain();
                        },
                        iconSVG: {
                            content: this.getControlIconByType(controlType),
                        },
                        clickFunction: function () {
                            return _this.services.zoom.resetZoomDomain();
                        },
                    };
                }
                break;
            case interfaces.ToolbarControlTypes.MAKE_FULLSCREEN:
                controlConfig = {
                    id: 'toolbar-makefullscreen',
                    iconSVG: {
                        content: this.getControlIconByType(controlType),
                        width: '15px',
                        height: '15px',
                    },
                    title: 'Make fullscreen',
                    shouldBeDisabled: function () { return false; },
                    clickFunction: function () {
                        _this.services.domUtils.toggleFullscreen();
                    },
                };
                break;
            case interfaces.ToolbarControlTypes.SHOW_AS_DATATABLE:
                controlConfig = {
                    id: 'toolbar-showasdatatable',
                    iconSVG: {
                        content: this.getControlIconByType(controlType),
                    },
                    title: 'Show as table',
                    shouldBeDisabled: function () { return displayData.length === 0; },
                    clickFunction: function () {
                        return _this.services.events.dispatchEvent(interfaces.Events.Modal.SHOW);
                    },
                };
                break;
            case interfaces.ToolbarControlTypes.EXPORT_CSV:
                controlConfig = {
                    id: 'toolbar-export-CSV',
                    title: 'Export as CSV',
                    shouldBeDisabled: function () { return false; },
                    iconSVG: {
                        content: this.getControlIconByType(controlType),
                    },
                    clickFunction: function () { return _this.model.exportToCSV(); },
                };
                break;
            case interfaces.ToolbarControlTypes.EXPORT_PNG:
                controlConfig = {
                    id: 'toolbar-export-PNG',
                    title: 'Export as PNG',
                    shouldBeDisabled: function () { return false; },
                    iconSVG: {
                        content: this.getControlIconByType(controlType),
                    },
                    clickFunction: function () { return _this.services.domUtils.exportToPNG(); },
                };
                break;
            case interfaces.ToolbarControlTypes.EXPORT_JPG:
                controlConfig = {
                    id: 'toolbar-export-JPG',
                    title: 'Export as JPG',
                    shouldBeDisabled: function () { return false; },
                    iconSVG: {
                        content: this.getControlIconByType(controlType),
                    },
                    clickFunction: function () { return _this.services.domUtils.exportToJPG(); },
                };
                break;
            // add more toolbar control configuration here
            default:
                throw Error('Not supported toolbar control type: ' + controlType);
        }
        return controlConfig;
    };
    Toolbar.prototype.getControlIconByType = function (controlType) {
        switch (controlType) {
            case interfaces.ToolbarControlTypes.ZOOM_IN:
                return "<polygon points=\"19 13 15 13 15 9 13 9 13 13 9 13 9 15 13 15 13 19 15 19 15 15 19 15 19 13\"/>\n\t\t\t\t\t\t<path d=\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\"/>";
            case interfaces.ToolbarControlTypes.ZOOM_OUT:
                return "<rect x=\"9\" y=\"13\" width=\"10\" height=\"2\"/>\n\t\t\t\t\t\t<path d=\"M22.45,21A10.87,10.87,0,0,0,25,14,11,11,0,1,0,14,25a10.87,10.87,0,0,0,7-2.55L28.59,30,30,28.59ZM14,23a9,9,0,1,1,9-9A9,9,0,0,1,14,23Z\"/>";
            case interfaces.ToolbarControlTypes.RESET_ZOOM:
                return "<path d=\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\"/>";
            case interfaces.ToolbarControlTypes.MAKE_FULLSCREEN:
                return "<polygon points=\"21 2 21 4 26.59 4 17 13.58 18.41 15 28 5.41 28 11 30 11 30 2 21 2\"/><polygon points=\"15 18.42 13.59 17 4 26.59 4 21 2 21 2 30 11 30 11 28 5.41 28 15 18.42\"/>";
            case interfaces.ToolbarControlTypes.SHOW_AS_DATATABLE:
                return "<rect x=\"4\" y=\"6\" width=\"18\" height=\"2\"/><rect x=\"4\" y=\"12\" width=\"18\" height=\"2\"/><rect x=\"4\" y=\"18\" width=\"18\" height=\"2\"/><rect x=\"4\" y=\"24\" width=\"18\" height=\"2\"/><rect x=\"26\" y=\"6\" width=\"2\" height=\"2\"/><rect x=\"26\" y=\"12\" width=\"2\" height=\"2\"/><rect x=\"26\" y=\"18\" width=\"2\" height=\"2\"/><rect x=\"26\" y=\"24\" width=\"2\" height=\"2\"/>";
            case interfaces.ToolbarControlTypes.EXPORT_CSV:
                return "<path d=\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\"/>";
            case interfaces.ToolbarControlTypes.EXPORT_JPG:
                return "<path d=\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\"/>";
            case interfaces.ToolbarControlTypes.EXPORT_PNG:
                return "<path d=\"M22.4478,21A10.855,10.855,0,0,0,25,14,10.99,10.99,0,0,0,6,6.4658V2H4v8h8V8H7.332a8.9768,8.9768,0,1,1-2.1,8H3.1912A11.0118,11.0118,0,0,0,14,25a10.855,10.855,0,0,0,7-2.5522L28.5859,30,30,28.5859Z\"/>"; // add more icons here
            // svg icon must be with 32x32 viewBox
            default:
                throw Error('Not supported toolbar control type: ' + controlType);
        }
    };
    Toolbar.buttonID = 0;
    return Toolbar;
}(Component));

//# sourceMappingURL=../../../src/components/axes/toolbar.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/zero-line.js
var zero_line_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




var ZeroLine = /** @class */ (function (_super) {
    zero_line_extends(ZeroLine, _super);
    function ZeroLine() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'zero-line';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    ZeroLine.prototype.render = function (animate) {
        var _this = this;
        var axisPosition = this.services.cartesianScales.getRangeAxisPosition({ groups: this.configs.groups });
        var rangeScale = this.services.cartesianScales.getScaleByPosition(axisPosition);
        // check the domain
        var _a = rangeScale.domain(), minDomainValue = _a[0], maxDomainValue = _a[1];
        var drawZeroLine = (minDomainValue > 0 && maxDomainValue < 0) ||
            (minDomainValue < 0 && maxDomainValue > 0);
        // Grab container SVG
        var svg = this.getComponentContainer();
        // show zero line only if is necessary, otherwise make sure tto remove zero line if the chart
        // previously had a domain that went into negatives
        if (!drawZeroLine) {
            // otherwise if a chart draws a zero line and then the domain change the zero line is still in the DOM
            svg.selectAll('line.domain').remove();
            return;
        }
        // Get x & y position of the line
        var _b = this.services.cartesianScales.getDomainScale().range(), x0 = _b[0], x1 = _b[1];
        var yPosition = +rangeScale(0) + 0.5;
        // if scale domain contains NaN, return the first value of the range
        // this is necessary for the zero line y position that otherwise is NaN
        // so on the top of the chart while we want it on the bottom
        if (!yPosition) {
            yPosition = rangeScale.range()[0];
        }
        var lineCoordinates = Tools.flipSVGCoordinatesBasedOnOrientation({
            x0: x0,
            x1: x1,
            y0: yPosition,
            y1: yPosition,
        }, this.services.cartesianScales.getOrientation());
        var line = DOMUtils.appendOrSelect(svg, 'line.domain');
        line.transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'zero-line-update',
                animate: animate,
            });
        })
            .attr('y1', lineCoordinates.y0)
            .attr('y2', lineCoordinates.y1)
            .attr('x1', lineCoordinates.x0)
            .attr('x2', lineCoordinates.x1);
    };
    return ZeroLine;
}(Component));

//# sourceMappingURL=../../../src/components/axes/zero-line.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/axes/zoom-bar.js
var zoom_bar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// D3 Imports



var ZoomBar = /** @class */ (function (_super) {
    zoom_bar_extends(ZoomBar, _super);
    function ZoomBar() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'zoom-bar';
        _this.renderType = interfaces.RenderTypes.SVG;
        // The minimum selection x range to trigger handler update
        // Smaller number may introduce a handler flash during initialization
        // Bigger number may not trigger handler update while selection area on chart is very small
        _this.MIN_SELECTION_DIFF = 9e-10;
        // needs to match the style in _zoom-bar.scss
        _this.brushSelector = 'g.zoom-bar-brush';
        // Give every zoomBarClip a distinct ID
        // so they don't interfere the other zoom bars in a page
        _this.clipId = 'zoomBarClip-' + Math.floor(Math.random() * 99999999999);
        _this.brush = brushX();
        _this.highlightStrokeWidth = 1;
        return _this;
    }
    ZoomBar.prototype.init = function () {
        this.services.events.addEventListener(interfaces.Events.ZoomBar.UPDATE, this.render.bind(this));
        // check if pre-defined zoom bar data exists
        var definedZoomBarData = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'data');
        // load up the zoomBarData into this model
        this.model.setZoomBarData(definedZoomBarData);
    };
    ZoomBar.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var svg = this.getComponentContainer();
        var isTopZoomBarLoading = this.services.zoom.isZoomBarLoading(interfaces.AxisPositions.TOP);
        var isTopZoomBarLocked = this.services.zoom.isZoomBarLocked(interfaces.AxisPositions.TOP);
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        // As zoom current only available on top only highlights corresponding to bottom axis will be shown
        var highlight = Tools.getProperty(this.getOptions(), 'axes', interfaces.AxisPositions.BOTTOM, 'highlights');
        var zoombarHeight = zoomBar.height[zoombarType];
        var width = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }).width;
        // initialization is not completed yet
        if (width === 0) {
            return;
        }
        // get axes margins
        var axesLeftMargin = 0;
        var axesMargins = this.model.get('axesMargins');
        if (axesMargins && axesMargins.left) {
            axesLeftMargin = axesMargins.left;
        }
        var container = DOMUtils.appendOrSelect(svg, 'svg.zoom-container')
            .attr('width', '100%')
            .attr('height', zoombarHeight)
            .attr('opacity', 1);
        var spacer = DOMUtils.appendOrSelect(svg, 'rect.zoom-spacer')
            .attr('x', 0)
            .attr('y', zoombarHeight)
            .attr('width', '100%')
            .attr('height', zoomBar.spacerHeight)
            .attr('opacity', 1)
            .attr('fill', 'none');
        if (zoombarType === interfaces.ZoomBarTypes.GRAPH_VIEW) {
            // Draw zoombar background rectangle
            DOMUtils.appendOrSelect(container, 'rect.zoom-bg')
                .attr('x', axesLeftMargin)
                .attr('y', 0)
                .attr('width', width - axesLeftMargin)
                .attr('height', '100%')
                .classed('zoom-bg-skeleton', isTopZoomBarLoading)
                .style('stroke', isTopZoomBarLoading
                ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
                : null);
        }
        else if (zoombarType === interfaces.ZoomBarTypes.SLIDER_VIEW) {
            // Draw zoombar background line
            DOMUtils.appendOrSelect(container, 'rect.zoom-slider-bg')
                .attr('x', axesLeftMargin)
                .attr('y', zoombarHeight / 2 - 1)
                .attr('width', width - axesLeftMargin)
                .attr('height', 2)
                .classed('zoom-slider-bg-skeleton', isTopZoomBarLoading)
                .style('stroke', isTopZoomBarLoading
                ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
                : null);
        }
        if (isTopZoomBarLoading) {
            this.renderSkeleton(container, axesLeftMargin, width);
            return;
        }
        var cartesianScales = this.services.cartesianScales;
        var mainXScale = cartesianScales.getMainXScale();
        var mainYScale = cartesianScales.getMainYScale();
        var mainXScaleType = cartesianScales.getMainXScaleType();
        if (mainXScale && mainXScaleType === interfaces.ScaleTypes.TIME) {
            var zoomBarData = this.services.zoom.getZoomBarData();
            // if there's no zoom bar data we can't do anything (true, undefined, null...)
            // if zoom domain is based on a single data element
            // doesn't make sense to allow zooming in
            if (Tools.isEmpty(zoomBarData) || zoomBarData.length === 1) {
                return;
            }
            this.xScale = mainXScale.copy();
            this.yScale = mainYScale.copy();
            var defaultDomain = this.services.zoom.getDefaultZoomBarDomain(zoomBarData);
            // add value 0 to the extended domain for zoom bar area graph
            zoomBarData = this.compensateDataForDefaultDomain(zoomBarData, defaultDomain);
            // get old initialZoomDomain from model
            var oldInitialZoomDomain = this.model.get('initialZoomDomain');
            // get new initialZoomDomain from option
            var newInitialZoomDomain = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'initialZoomDomain');
            // change string date to Date object if necessary
            if (newInitialZoomDomain &&
                newInitialZoomDomain[0] &&
                newInitialZoomDomain[1]) {
                newInitialZoomDomain[0] = new Date(newInitialZoomDomain[0]);
                newInitialZoomDomain[1] = new Date(newInitialZoomDomain[1]);
            }
            // update initialZoomDomain and set zoomDomain in model only if the option is changed
            // not the same object, and both start date and end date are not equal
            if (newInitialZoomDomain &&
                !(oldInitialZoomDomain &&
                    oldInitialZoomDomain[0].valueOf() ===
                        newInitialZoomDomain[0].valueOf() &&
                    oldInitialZoomDomain[1].valueOf() ===
                        newInitialZoomDomain[1].valueOf())) {
                this.model.set({
                    // use a new object instead of newInitialZoomDomain
                    initialZoomDomain: Tools.merge([], newInitialZoomDomain),
                    zoomDomain: newInitialZoomDomain
                        ? Tools.merge([], newInitialZoomDomain)
                        : defaultDomain,
                }, { skipUpdate: true });
            }
            else if (newInitialZoomDomain === null &&
                oldInitialZoomDomain !== null) {
                // if newInitialZoomDomain is set to null (when oldInitialZoomDomain is not null)
                // save initialZoomDomain and reset zoom domain to default domain
                this.model.set({
                    initialZoomDomain: null,
                    zoomDomain: Tools.merge([], defaultDomain),
                }, { skipUpdate: true });
            }
            this.xScale.range([axesLeftMargin, width]).domain(defaultDomain);
            // keep max selection range
            this.maxSelectionRange = this.xScale.range();
            this.yScale
                .range([0, zoombarHeight - 6])
                .domain(extent(zoomBarData, function (d) { return d.value; }));
            var zoomDomain = this.model.get('zoomDomain');
            if (zoombarType === interfaces.ZoomBarTypes.GRAPH_VIEW) {
                this.renderZoomBarArea(container, 'path.zoom-graph-area-unselected', zoomBarData, null);
                this.updateClipPath(svg, this.clipId, 0, 0, 0, 0);
                this.renderZoomBarArea(container, 'path.zoom-graph-area', zoomBarData, this.clipId);
                // Draw the zoom bar base line
                this.renderZoomBarBaseline(container, axesLeftMargin, width);
                if (highlight) {
                    var startHighlight_1 = highlight.highlightStartMapsTo;
                    var endHighlight_1 = highlight.highlightEndMapsTo;
                    var color_1 = highlight.color;
                    var labelMapTo_1 = highlight.labelMapsTo;
                    highlight.data.forEach(function (element, index) {
                        DOMUtils.appendOrSelect(container, "rect.highlight-" + index)
                            .attr('height', zoombarHeight - 2 * _this.highlightStrokeWidth)
                            .attr('y', _this.highlightStrokeWidth)
                            .attr('x', _this.xScale(element[startHighlight_1]))
                            .attr('width', _this.xScale(element[endHighlight_1]) -
                            _this.xScale(element[startHighlight_1]))
                            .style('fill', color_1 && color_1.scale[element[labelMapTo_1]]
                            ? color_1.scale[element[labelMapTo_1]]
                            : null)
                            .style('fill-opacity', 0.1)
                            .style('stroke', color_1 && color_1.scale[element[labelMapTo_1]]
                            ? color_1.scale[element[labelMapTo_1]]
                            : null)
                            .style('stroke-dasharray', '2, 2')
                            .attr('stroke-width', 1 + 'px');
                    });
                }
            }
            // Attach brushing event listeners
            this.addBrushEventListener(zoomDomain, axesLeftMargin, width);
            // Draw the brushing area
            var brushArea = DOMUtils.appendOrSelect(svg, this.brushSelector).call(this.brush);
            if (zoomDomain === undefined) {
                // do nothing, initialization not completed yet
                // don't update brushHandle to avoid flash
            }
            else if (zoomDomain[0].valueOf() === zoomDomain[1].valueOf()) {
                brushArea.call(this.brush.move, this.xScale.range()); // default to full range
                this.updateBrushHandle(this.getComponentContainer(), this.xScale.range(), this.xScale.domain());
            }
            else {
                var selected = zoomDomain.map(function (domain) {
                    return _this.xScale(domain);
                });
                if (selected[1] - selected[0] < this.MIN_SELECTION_DIFF) {
                    // initialization not completed yet
                    // don't update brushHandle to avoid flash
                }
                else {
                    brushArea.call(this.brush.move, selected); // set brush to correct position
                    this.updateBrushHandle(this.getComponentContainer(), selected, zoomDomain);
                }
            }
            if (isTopZoomBarLocked) {
                this.brush.filter(function () {
                    return false;
                });
                // reset all cursor to auto
                brushArea.selectAll('rect').attr('cursor', 'auto');
            }
        }
    };
    ZoomBar.prototype.addBrushEventListener = function (zoomDomain, axesLeftMargin, width) {
        var _this = this;
        var brushEventListener = function (event) {
            var selection = event.selection;
            // follow d3 behavior: when selection is null, reset default full range
            // select behavior is completed, but nothing selected
            if (selection === null) {
                _this.handleBrushedEvent(event, zoomDomain, _this.xScale, _this.xScale.range());
            }
            else if (selection[0] === selection[1]) {
                // select behavior is not completed yet, do nothing
            }
            else {
                _this.handleBrushedEvent(event, zoomDomain, _this.xScale, selection);
            }
        };
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        var zoombarHeight = zoomBar.height[zoombarType];
        // Initialize the d3 brush
        this.brush
            .extent([
            [axesLeftMargin, 0],
            [width, zoombarHeight],
        ])
            .on('start brush end', null) // remove old listener first
            .on('start brush end', brushEventListener);
    };
    // brush event listener
    ZoomBar.prototype.handleBrushedEvent = function (event, zoomDomain, scale, selection) {
        var newDomain = [
            scale.invert(selection[0]),
            scale.invert(selection[1]),
        ];
        // update brush handle position
        this.updateBrushHandle(this.getComponentContainer(), selection, newDomain);
        // be aware that the value of d3.event changes during an event!
        // update zoomDomain only if the event comes from mouse/touch event
        if (event.sourceEvent != null &&
            (event.sourceEvent.type === 'mousemove' ||
                event.sourceEvent.type === 'mouseup' ||
                event.sourceEvent.type === 'mousedown' ||
                event.sourceEvent.type === 'touchstart' ||
                event.sourceEvent.type === 'touchmove' ||
                event.sourceEvent.type === 'touchend')) {
            // only if zoomDomain is never set or needs update
            if (zoomDomain === undefined ||
                zoomDomain[0] !== newDomain[0] ||
                zoomDomain[1] !== newDomain[1]) {
                // don't dispatch event for all event types
                // let the following code to dispatch necessary events
                this.services.zoom.handleDomainChange(newDomain, {
                    dispatchEvent: false,
                });
            }
            // dispatch selection events
            var zoomBarEventType = void 0;
            if (event.type === 'start') {
                zoomBarEventType = interfaces.Events.ZoomBar.SELECTION_START;
            }
            else if (event.type === 'brush') {
                zoomBarEventType = interfaces.Events.ZoomBar.SELECTION_IN_PROGRESS;
            }
            else if (event.type === 'end') {
                zoomBarEventType = interfaces.Events.ZoomBar.SELECTION_END;
                // only dispatch zoom domain change event for triggering api call when event type equals to end
                this.services.events.dispatchEvent(interfaces.Events.ZoomDomain.CHANGE, {
                    newDomain: newDomain,
                });
            }
            this.services.events.dispatchEvent(zoomBarEventType, {
                selection: selection,
                newDomain: newDomain,
            });
        }
    };
    ZoomBar.prototype.updateBrushHandle = function (svg, selection, domain) {
        var self = this;
        var handleWidth = zoomBar.handleWidth;
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        var handleHeight = zoomBar.height[zoombarType];
        var handleXDiff = -handleWidth / 2;
        var handleBarWidth = zoomBar.handleBarWidth;
        var handleBarHeight = zoombarType === interfaces.ZoomBarTypes.GRAPH_VIEW
            ? zoomBar.handleBarHeight
            : 6;
        var handleBarXDiff = -handleBarWidth / 2;
        var handleYBarDiff = (handleHeight - handleBarHeight) / 2;
        // handle
        svg.select(this.brushSelector)
            .selectAll('rect.handle')
            .data([{ type: 'w' }, { type: 'e' }])
            .attr('x', function (d) {
            if (d.type === 'w') {
                // handle should not exceed zoom bar range
                return Math.max(selection[0] + handleXDiff, self.maxSelectionRange[0]);
            }
            else if (d.type === 'e') {
                // handle should not exceed zoom bar range
                return Math.min(selection[1] + handleXDiff, self.maxSelectionRange[1] - handleWidth);
            }
        })
            .attr('y', 0)
            .attr('width', handleWidth)
            .attr('height', handleHeight)
            .attr('cursor', 'ew-resize')
            .style('display', null); // always display
        // handle-bar
        var handleBars = svg
            .select(this.brushSelector)
            .selectAll('rect.handle-bar')
            .data([{ type: 'w' }, { type: 'e' }]);
        // create rect if not exists
        handleBars
            .enter()
            .append('rect')
            .attr('class', function (d) {
            return 'handle-bar handle-bar--' + d.type;
        });
        // update positions
        handleBars
            .attr('x', function (d) {
            if (d.type === 'w') {
                return Math.max(selection[0] + handleBarXDiff, self.maxSelectionRange[0] - handleXDiff + handleBarXDiff);
            }
            else if (d.type === 'e') {
                return Math.min(selection[1] + handleBarXDiff, self.maxSelectionRange[1] + handleXDiff + handleBarXDiff);
            }
        })
            .attr('y', handleYBarDiff)
            .attr('width', handleBarWidth)
            .attr('height', handleBarHeight)
            .attr('cursor', 'ew-resize');
        // Update slider selected area
        if (zoombarType === interfaces.ZoomBarTypes.SLIDER_VIEW) {
            this.updateSliderSelectedArea(selection);
        }
        this.updateClipPath(svg, this.clipId, selection[0], 0, selection[1] - selection[0], handleHeight);
    };
    ZoomBar.prototype.updateSliderSelectedArea = function (selection) {
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        var zoombarHeight = zoomBar.height[zoombarType];
        var width = DOMUtils.getSVGElementSize(this.parent, {
            useAttrs: true,
        }).width;
        // get axes margins
        var axesLeftMargin = 0;
        var axesMargins = this.model.get('axesMargins');
        if (axesMargins && axesMargins.left) {
            axesLeftMargin = axesMargins.left;
        }
        var svg = this.getComponentContainer();
        var container = svg.select('svg.zoom-container');
        // Draw zoombar background line
        DOMUtils.appendOrSelect(container, 'rect.zoom-slider-selected-area')
            .attr('x', selection[0])
            .attr('y', zoombarHeight / 2 - 1)
            .attr('width', selection[1] - selection[0])
            .attr('height', 2);
    };
    ZoomBar.prototype.renderZoomBarArea = function (container, querySelector, data, clipId) {
        var cartesianScales = this.services.cartesianScales;
        var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
        var mainYAxisPosition = cartesianScales.getMainYAxisPosition();
        var mainXScaleType = cartesianScales.getMainXScaleType();
        var mainYScaleType = cartesianScales.getMainYScaleType();
        var accessorFunction = function (scale, scaleType, axisPosition) {
            return function (d, i) {
                return cartesianScales.getValueFromScale(scale, scaleType, axisPosition, d, i);
            };
        };
        var xAccessor = accessorFunction(this.xScale, mainXScaleType, mainXAxisPosition);
        var yAccessor = accessorFunction(this.yScale, mainYScaleType, mainYAxisPosition);
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        var zoombarHeight = zoomBar.height[zoombarType];
        var areaGenerator = src_area()
            .x(function (d, i) { return xAccessor(d, i); })
            .y0(zoombarHeight)
            .y1(function (d, i) { return zoombarHeight - yAccessor(d, i); });
        var areaGraph = DOMUtils.appendOrSelect(container, querySelector)
            .datum(data)
            .attr('d', areaGenerator);
        if (clipId) {
            areaGraph.attr('clip-path', "url(#" + clipId + ")");
        }
    };
    ZoomBar.prototype.updateClipPath = function (svg, clipId, x, y, width, height) {
        var zoomBarClipPath = DOMUtils.appendOrSelect(svg, "clipPath").attr('id', clipId);
        DOMUtils.appendOrSelect(zoomBarClipPath, 'rect')
            .attr('x', x)
            .attr('y', y)
            .attr('width', width)
            .attr('height', height);
    };
    // assume the domains in data are already sorted
    ZoomBar.prototype.compensateDataForDefaultDomain = function (data, defaultDomain) {
        if (!data || data.length < 2) {
            return;
        }
        var zoomBarData = Tools.clone(data);
        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        // if min domain is extended
        if (Number(defaultDomain[0]) < Number(zoomBarData[0][domainIdentifier])) {
            var newDatum = {};
            newDatum[domainIdentifier] = defaultDomain[0];
            newDatum[rangeIdentifier] = 0;
            zoomBarData.unshift(newDatum);
        }
        // if max domain is extended
        if (Number(defaultDomain[1]) >
            Number(zoomBarData[zoomBarData.length - 1][domainIdentifier])) {
            var newDatum = {};
            newDatum[domainIdentifier] = defaultDomain[1];
            newDatum[rangeIdentifier] = 0;
            zoomBarData.push(newDatum);
        }
        return zoomBarData;
    };
    ZoomBar.prototype.renderZoomBarBaseline = function (container, startX, endX, skeletonClass) {
        if (skeletonClass === void 0) { skeletonClass = false; }
        var zoombarType = Tools.getProperty(this.model.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        var zoombarHeight = zoomBar.height[zoombarType];
        var baselineGenerator = line()([
            [startX, zoombarHeight],
            [endX, zoombarHeight],
        ]);
        DOMUtils.appendOrSelect(container, 'path.zoom-bg-baseline')
            .attr('d', baselineGenerator)
            .classed('zoom-bg-baseline-skeleton', skeletonClass)
            .style('stroke', skeletonClass
            ? "url(#" + this.services.domUtils.generateElementIDString("shimmer-lines") + ")"
            : null);
    };
    ZoomBar.prototype.renderSkeleton = function (container, startX, endX) {
        // need to clear current zoom bar area
        this.renderZoomBarArea(container, 'path.zoom-graph-area-unselected', [], null);
        this.renderZoomBarArea(container, 'path.zoom-graph-area', [], this.clipId);
        // remove brush listener
        this.brush.on('start brush end', null);
        // clear d3 brush
        DOMUtils.appendOrSelect(this.getComponentContainer(), this.brushSelector).html(null);
        // re-render baseline because no axis labels in skeleton so the baseline length needs to change
        var zoombarType = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'type');
        if (zoombarType === interfaces.ZoomBarTypes.GRAPH_VIEW) {
            this.renderZoomBarBaseline(container, startX, endX, true);
        }
    };
    ZoomBar.prototype.destroy = function () {
        this.brush.on('start brush end', null); // remove event listener
        this.services.events.removeEventListener(interfaces.Events.ZoomBar.UPDATE, this.render.bind(this));
    };
    return ZoomBar;
}(Component));

//# sourceMappingURL=../../../src/components/axes/zoom-bar.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/diagrams/markerDefinitions.js
var arrowLeft = {
    d: 'M7 0v8L0 4z',
    height: 8,
    width: 7.5,
    id: 'arrowLeft',
};
var arrowRight = {
    d: 'M0 0v8l7-4z',
    height: 8,
    width: 7.5,
    id: 'arrowRight',
};
var circle = {
    d: 'M5.32 9.513a4.75 4.75 0 100-9.5 4.75 4.75 0 000 9.5z',
    height: 10,
    width: 10,
    id: 'circle',
};
var diamond = {
    d: 'M5.03517654-1e-7l4.99999996 5-4.99999996 5-5-5L2.4517844 2.58339204z',
    height: 10,
    width: 10,
    id: 'diamond',
};
var square = {
    d: 'M0 .44974747h8v8H0v-3.6830331z',
    height: 9,
    width: 8,
    id: 'square',
};
var tee = {
    d: 'M0 0h1.5v8H0z',
    height: 8,
    width: 2,
    id: 'tee',
};

//# sourceMappingURL=../../../src/components/diagrams/markerDefinitions.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/index.js

// ESSENTIALS










// GRAPHS

























// Layout


// MISC











// Diagrams


//# sourceMappingURL=../../src/components/index.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/chart.js
var chart_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports

// Misc



// Services

var Chart = /** @class */ (function () {
    function Chart(holder, chartConfigs) {
        this.services = {
            domUtils: DOMUtils,
            files: Files,
            events: Events,
            gradientUtils: GradientUtils,
            transitions: Transitions,
            canvasZoom: CanvasZoom,
        };
        this.model = new ChartModel(this.services);
        // do nothing.
    }
    // Contains the code that uses properties that are overridable by the super-class
    Chart.prototype.init = function (holder, chartConfigs) {
        var _this = this;
        // Store the holder in the model
        this.model.set({ holder: holder }, { skipUpdate: true });
        // Initialize all services
        Object.keys(this.services).forEach(function (serviceName) {
            var serviceObj = _this.services[serviceName];
            _this.services[serviceName] = new serviceObj(_this.model, _this.services);
        });
        // Call update() when model has been updated
        this.services.events.addEventListener(interfaces.Events.Model.UPDATE, function (e) {
            var animate = !!Tools.getProperty(e, 'detail', 'animate');
            _this.update(animate);
        });
        // Set model data & options
        this.model.setData(chartConfigs.data);
        // Set chart resize event listener
        this.services.events.addEventListener(interfaces.Events.Chart.RESIZE, function () {
            _this.update(false);
        });
        this.components = this.getComponents();
        this.update();
    };
    Chart.prototype.getComponents = function () {
        console.error('getComponents() method is not implemented');
        return null;
    };
    Chart.prototype.update = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        if (!this.components) {
            return;
        }
        // Update all services
        Object.keys(this.services).forEach(function (serviceName) {
            var serviceObj = _this.services[serviceName];
            serviceObj.update();
        });
        // Render all components
        this.components.forEach(function (component) { return component.render(animate); });
        // Asynchronously dispatch a "render-finished" event
        // This is needed because of d3-transitions
        // Since at the start of the transition
        // Elements do not hold their final size or position
        var pendingTransitions = this.services.transitions.getPendingTransitions();
        var promises = Object.keys(pendingTransitions).map(function (transitionID) {
            var transition = pendingTransitions[transitionID];
            return transition.end().catch(function (e) { return e; }); // Skip rejects since we don't care about those;
        });
        Promise.all(promises).then(function () {
            return _this.services.events.dispatchEvent(interfaces.Events.Chart.RENDER_FINISHED);
        });
    };
    Chart.prototype.destroy = function () {
        // Call the destroy() method on all components
        this.components.forEach(function (component) { return component.destroy(); });
        // Remove the chart holder
        this.services.domUtils.getHolder().remove();
        this.model.set({ destroyed: true }, { skipUpdate: true });
    };
    Chart.prototype.getChartComponents = function (graphFrameComponents, configs) {
        var options = this.model.getOptions();
        var toolbarEnabled = Tools.getProperty(options, 'toolbar', 'enabled');
        var legendComponent = {
            id: 'legend',
            components: [new Legend(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        // if canvas zoom is enabled
        var isZoomEnabled = Tools.getProperty(options, 'canvasZoom', 'enabled');
        if (isZoomEnabled && isZoomEnabled === true) {
            graphFrameComponents.push(new CanvasChartClip(this.model, this.services));
        }
        var titleAvailable = !!this.model.getOptions().title;
        var titleComponent = {
            id: 'title',
            components: [new Title(this.model, this.services)],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        var toolbarComponent = {
            id: 'toolbar',
            components: [new Toolbar(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var headerComponent = {
            id: 'header',
            components: [
                new LayoutComponent(this.model, this.services, chart_spreadArrays([
                    // always add title to keep layout correct
                    titleComponent
                ], (toolbarEnabled ? [toolbarComponent] : [])), {
                    direction: interfaces.LayoutDirection.ROW,
                    alignItems: interfaces.LayoutAlignItems.CENTER,
                }),
            ],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var graphFrameComponent = {
            id: 'graph-frame',
            components: graphFrameComponents,
            growth: interfaces.LayoutGrowth.STRETCH,
            renderType: Tools.getProperty(configs, 'graphFrameRenderType') ||
                interfaces.RenderTypes.SVG,
        };
        var isLegendEnabled = Tools.getProperty(configs, 'excludeLegend') !== true &&
            options.legend.enabled !== false;
        // TODORF - REUSE BETWEEN AXISCHART & CHART
        // Decide the position of the legend in reference to the chart
        var fullFrameComponentDirection = interfaces.LayoutDirection.COLUMN;
        if (isLegendEnabled) {
            var legendPosition = Tools.getProperty(options, 'legend', 'position');
            if (legendPosition === 'left') {
                fullFrameComponentDirection = interfaces.LayoutDirection.ROW;
                if (!options.legend.orientation) {
                    options.legend.orientation = interfaces.LegendOrientations.VERTICAL;
                }
            }
            else if (legendPosition === 'right') {
                fullFrameComponentDirection = interfaces.LayoutDirection.ROW_REVERSE;
                if (!options.legend.orientation) {
                    options.legend.orientation = interfaces.LegendOrientations.VERTICAL;
                }
            }
            else if (legendPosition === 'bottom') {
                fullFrameComponentDirection = interfaces.LayoutDirection.COLUMN_REVERSE;
            }
        }
        var legendSpacerComponent = {
            id: 'spacer',
            components: [new Spacer(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var fullFrameComponent = {
            id: 'full-frame',
            components: [
                new LayoutComponent(this.model, this.services, chart_spreadArrays((isLegendEnabled ? [legendComponent] : []), (isLegendEnabled ? [legendSpacerComponent] : []), [
                    graphFrameComponent,
                ]), {
                    direction: fullFrameComponentDirection,
                }),
            ],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        // Add chart title if it exists
        var topLevelLayoutComponents = [];
        if (titleAvailable || toolbarEnabled) {
            topLevelLayoutComponents.push(headerComponent);
            var titleSpacerComponent = {
                id: 'spacer',
                components: [
                    new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : undefined),
                ],
                growth: interfaces.LayoutGrowth.PREFERRED,
            };
            topLevelLayoutComponents.push(titleSpacerComponent);
        }
        topLevelLayoutComponents.push(fullFrameComponent);
        return [
            new Tooltip(this.model, this.services),
            new modal_Modal(this.model, this.services),
            new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
                direction: interfaces.LayoutDirection.COLUMN,
            }),
        ];
    };
    return Chart;
}());

//# sourceMappingURL=../src/chart.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/cartesian-charts.js
var cartesian_charts_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var cartesian_charts_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports



// date formatting

/**
 * This supports adding X and Y Cartesian[2D] zoom data to a ChartModel
 * */
var ChartModelCartesian = /** @class */ (function (_super) {
    cartesian_charts_extends(ChartModelCartesian, _super);
    function ChartModelCartesian(services) {
        var _this = _super.call(this, services) || this;
        _this.axisFlavor = interfaces.AxisFlavor.DEFAULT;
        return _this;
    }
    // get the scales information
    // needed for getTabularArray()
    ChartModelCartesian.prototype.assignRangeAndDomains = function () {
        var cartesianScales = this.services.cartesianScales;
        var options = this.getOptions();
        var isDualAxes = cartesianScales.isDualAxes();
        var scales = {
            primaryDomain: cartesianScales.domainAxisPosition,
            primaryRange: cartesianScales.rangeAxisPosition,
            secondaryDomain: null,
            secondaryRange: null,
        };
        if (isDualAxes) {
            scales.secondaryDomain =
                cartesianScales.secondaryDomainAxisPosition;
            scales.secondaryRange = cartesianScales.secondaryRangeAxisPosition;
        }
        Object.keys(scales).forEach(function (scale) {
            var position = scales[scale];
            if (cartesianScales.scales[position]) {
                scales[scale] = {
                    position: position,
                    label: cartesianScales.getScaleLabel(position),
                    identifier: Tools.getProperty(options, 'axes', position, 'mapsTo'),
                };
            }
            else {
                scales[scale] = null;
            }
        });
        return scales;
    };
    ChartModelCartesian.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var cartesianScales = this.services.cartesianScales;
        var _a = this.assignRangeAndDomains(), primaryDomain = _a.primaryDomain, primaryRange = _a.primaryRange, secondaryDomain = _a.secondaryDomain, secondaryRange = _a.secondaryRange;
        var domainScaleType = cartesianScales.getDomainAxisScaleType();
        var domainValueFormatter;
        if (domainScaleType === interfaces.ScaleTypes.TIME) {
            domainValueFormatter = function (d) { return format_format(d, 'MMM d, yyyy'); };
        }
        var result = cartesian_charts_spreadArrays([
            cartesian_charts_spreadArrays([
                'Group',
                primaryDomain.label,
                primaryRange.label
            ], (secondaryDomain ? [secondaryDomain.label] : []), (secondaryRange ? [secondaryRange.label] : []))
        ], displayData.map(function (datum) { return cartesian_charts_spreadArrays([
            datum[groupMapsTo],
            datum[primaryDomain.identifier] === null
                ? '&ndash;'
                : domainValueFormatter
                    ? domainValueFormatter(datum[primaryDomain.identifier])
                    : datum[primaryDomain.identifier],
            datum[primaryRange.identifier] === null ||
                isNaN(datum[primaryRange.identifier])
                ? '&ndash;'
                : datum[primaryRange.identifier].toLocaleString()
        ], (secondaryDomain
            ? [
                datum[secondaryDomain.identifier] === null
                    ? '&ndash;'
                    : datum[secondaryDomain.identifier],
            ]
            : []), (secondaryRange
            ? [
                datum[secondaryRange.identifier] === null ||
                    isNaN(datum[secondaryRange.identifier])
                    ? '&ndash;'
                    : datum[secondaryRange.identifier],
            ]
            : [])); }));
        return result;
    };
    ChartModelCartesian.prototype.setData = function (newData) {
        var data;
        if (newData) {
            data = _super.prototype.setData.call(this, newData);
            if (Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'enabled')) {
                // get pre-defined zoom bar data
                var definedZoomBarData = Tools.getProperty(this.getOptions(), 'zoomBar', interfaces.AxisPositions.TOP, 'data');
                // if we have zoom bar data we need to update it as well
                // with pre-defined zoom bar data
                this.setZoomBarData(definedZoomBarData);
            }
        }
        return data;
    };
    /**
     * @param zoomBarData any special zoom bar data to use instead of the model data
     */
    ChartModelCartesian.prototype.setZoomBarData = function (newZoomBarData) {
        var sanitizedData = newZoomBarData
            ? this.sanitize(Tools.clone(newZoomBarData))
            : this.getDisplayData(); // if we're not passed explicit zoom data use the model
        var zoomBarNormalizedValues = sanitizedData;
        var cartesianScales = this.services.cartesianScales;
        if (sanitizedData &&
            cartesianScales.domainAxisPosition &&
            cartesianScales.rangeAxisPosition) {
            var domainIdentifier_1 = cartesianScales.getDomainIdentifier();
            var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
            // get all dates (Number) in displayData
            var allDates = sanitizedData.map(function (datum) {
                return datum[domainIdentifier_1].getTime();
            });
            allDates = Tools.removeArrayDuplicates(allDates).sort();
            // Go through all date values
            // And get corresponding data from each dataset
            zoomBarNormalizedValues = allDates.map(function (date) {
                var sum = 0;
                var datum = {};
                sanitizedData.forEach(function (data) {
                    if (data[domainIdentifier_1].getTime() === date) {
                        sum += data[rangeIdentifier_1];
                    }
                });
                datum[domainIdentifier_1] = new Date(date);
                datum[rangeIdentifier_1] = sum;
                return datum;
            });
        }
        this.set({ zoomBarData: zoomBarNormalizedValues });
    };
    ChartModelCartesian.prototype.getZoomBarData = function () {
        return this.get('zoomBarData');
    };
    ChartModelCartesian.prototype.sanitizeDateValues = function (data) {
        var options = this.getOptions();
        if (!options.axes) {
            return data;
        }
        var keysToCheck = [];
        Object.keys(interfaces.AxisPositions).forEach(function (axisPositionKey) {
            var axisPosition = interfaces.AxisPositions[axisPositionKey];
            var axisOptions = options.axes[axisPosition];
            if (axisOptions && axisOptions.scaleType === interfaces.ScaleTypes.TIME) {
                var axisMapsTo = axisOptions.mapsTo;
                if (axisMapsTo !== null || axisMapsTo !== undefined) {
                    keysToCheck.push(axisMapsTo);
                }
            }
        });
        if (keysToCheck.length > 0) {
            // Check all datapoints and sanitize dates
            data.forEach(function (datum) {
                keysToCheck.forEach(function (key) {
                    if (Tools.getProperty(datum, key, 'getTime') === null) {
                        datum[key] = new Date(datum[key]);
                    }
                });
            });
        }
        return data;
    };
    ChartModelCartesian.prototype.sanitize = function (data) {
        data = _super.prototype.sanitize.call(this, data);
        data = this.sanitizeDateValues(data);
        return data;
    };
    return ChartModelCartesian;
}(ChartModel));

//# sourceMappingURL=../../src/model/cartesian-charts.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/axis-chart.js
var axis_chart_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var axis_chart_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};






var AxisChart = /** @class */ (function (_super) {
    axis_chart_extends(AxisChart, _super);
    function AxisChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.services = Object.assign(_this.services, {
            cartesianScales: CartesianScales,
            curves: Curves,
            zoom: Zoom,
        });
        _this.model = new ChartModelCartesian(_this.services);
        return _this;
    }
    AxisChart.prototype.getAxisChartComponents = function (graphFrameComponents, configs) {
        var options = this.model.getOptions();
        var isZoomBarEnabled = Tools.getProperty(options, 'zoomBar', interfaces.AxisPositions.TOP, 'enabled');
        var toolbarEnabled = Tools.getProperty(options, 'toolbar', 'enabled');
        this.services.cartesianScales.determineAxisDuality();
        this.services.cartesianScales.findDomainAndRangeAxes(); // need to do this before getMainXAxisPosition()
        this.services.cartesianScales.determineOrientation();
        var mainXAxisPosition = this.services.cartesianScales.getMainXAxisPosition();
        var mainXScaleType = Tools.getProperty(options, 'axes', mainXAxisPosition, 'scaleType');
        // @todo - Zoom Bar only supports main axis at BOTTOM axis and time scale for now
        var zoomBarEnabled = isZoomBarEnabled &&
            mainXAxisPosition === interfaces.AxisPositions.BOTTOM &&
            mainXScaleType === interfaces.ScaleTypes.TIME;
        // @todo - should check if zoom bar in all axes are locked
        var isZoomBarLocked = this.services.zoom.isZoomBarLocked(interfaces.AxisPositions.TOP);
        var titleAvailable = !!this.model.getOptions().title;
        var titleComponent = {
            id: 'title',
            components: [new Title(this.model, this.services)],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        var toolbarComponent = {
            id: 'toolbar',
            components: [new Toolbar(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var headerComponent = {
            id: 'header',
            components: [
                new LayoutComponent(this.model, this.services, axis_chart_spreadArrays([
                    // always add title to keep layout correct
                    titleComponent
                ], (toolbarEnabled ? [toolbarComponent] : [])), {
                    direction: interfaces.LayoutDirection.ROW,
                    alignItems: interfaces.LayoutAlignItems.CENTER,
                }),
            ],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var legendComponent = {
            id: 'legend',
            components: [new Legend(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        // if all zoom bars are locked, no need to add chart brush
        if (zoomBarEnabled && !isZoomBarLocked) {
            graphFrameComponents.push(new ChartClip(this.model, this.services), new ChartBrush(this.model, this.services));
        }
        graphFrameComponents.push(new Threshold(this.model, this.services));
        graphFrameComponents.push(new Highlight(this.model, this.services));
        var graphFrameComponent = {
            id: 'graph-frame',
            components: graphFrameComponents,
            growth: interfaces.LayoutGrowth.STRETCH,
            renderType: interfaces.RenderTypes.SVG,
        };
        var isLegendEnabled = Tools.getProperty(configs, 'legend', 'enabled') !== false &&
            this.model.getOptions().legend.enabled !== false;
        // Decide the position of the legend in reference to the chart
        var fullFrameComponentDirection = interfaces.LayoutDirection.COLUMN;
        if (isLegendEnabled) {
            var legendPosition = Tools.getProperty(this.model.getOptions(), 'legend', 'position');
            if (legendPosition === interfaces.LegendPositions.LEFT) {
                fullFrameComponentDirection = interfaces.LayoutDirection.ROW;
                if (!this.model.getOptions().legend.orientation) {
                    this.model.getOptions().legend.orientation =
                        interfaces.LegendOrientations.VERTICAL;
                }
            }
            else if (legendPosition === interfaces.LegendPositions.RIGHT) {
                fullFrameComponentDirection = interfaces.LayoutDirection.ROW_REVERSE;
                if (!this.model.getOptions().legend.orientation) {
                    this.model.getOptions().legend.orientation =
                        interfaces.LegendOrientations.VERTICAL;
                }
            }
            else if (legendPosition === interfaces.LegendPositions.BOTTOM) {
                fullFrameComponentDirection = interfaces.LayoutDirection.COLUMN_REVERSE;
            }
        }
        var legendSpacerComponent = {
            id: 'spacer',
            components: [new Spacer(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var fullFrameComponent = {
            id: 'full-frame',
            components: [
                new LayoutComponent(this.model, this.services, axis_chart_spreadArrays((isLegendEnabled ? [legendComponent] : []), (isLegendEnabled ? [legendSpacerComponent] : []), [
                    graphFrameComponent,
                ]), {
                    direction: fullFrameComponentDirection,
                }),
            ],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        var zoomBarComponent = {
            id: 'zoom-bar',
            components: [new ZoomBar(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
            renderType: interfaces.RenderTypes.SVG,
        };
        var topLevelLayoutComponents = [];
        // header component is required for either title or toolbar
        if (titleAvailable || toolbarEnabled) {
            topLevelLayoutComponents.push(headerComponent);
            var titleSpacerComponent = {
                id: 'spacer',
                components: [
                    new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : undefined),
                ],
                growth: interfaces.LayoutGrowth.PREFERRED,
            };
            topLevelLayoutComponents.push(titleSpacerComponent);
        }
        if (zoomBarEnabled) {
            topLevelLayoutComponents.push(zoomBarComponent);
        }
        topLevelLayoutComponents.push(fullFrameComponent);
        return [
            new AxisChartsTooltip(this.model, this.services),
            new modal_Modal(this.model, this.services),
            new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
                direction: interfaces.LayoutDirection.COLUMN,
            }),
        ];
    };
    return AxisChart;
}(Chart));

//# sourceMappingURL=../src/axis-chart.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/area.js
var charts_area_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var AreaChart = /** @class */ (function (_super) {
    charts_area_extends(AreaChart, _super);
    function AreaChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(Tools.clone(configuration_options.areaChart), chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    AreaChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Ruler(this.model, this.services),
            new Line(this.model, this.services),
            new Area(this.model, this.services),
            new Scatter(this.model, this.services, {
                fadeInOnChartHolderMouseover: true,
                handleThresholds: true,
            }),
            new Skeleton(this.model, this.services, {
                skeleton: interfaces.Skeletons.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return AreaChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/area.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/area-stacked.js
var charts_area_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var StackedAreaChart = /** @class */ (function (_super) {
    charts_area_stacked_extends(StackedAreaChart, _super);
    function StackedAreaChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.stackedAreaChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    StackedAreaChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new StackedRuler(this.model, this.services),
            new StackedArea(this.model, this.services),
            new Line(this.model, this.services, { stacked: true }),
            new StackedScatter(this.model, this.services, {
                fadeInOnChartHolderMouseover: true,
                handleThresholds: true,
                stacked: true,
            }),
            new Skeleton(this.model, this.services, {
                skeleton: interfaces.Skeletons.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return StackedAreaChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/area-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/bar-simple.js
var charts_bar_simple_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var SimpleBarChart = /** @class */ (function (_super) {
    charts_bar_simple_extends(SimpleBarChart, _super);
    function SimpleBarChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.simpleBarChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    SimpleBarChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new SimpleBar(this.model, this.services),
            new ZeroLine(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.VERT_OR_HORIZ */.iz.VERT_OR_HORIZ,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return SimpleBarChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/bar-simple.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/bar-grouped.js
var charts_bar_grouped_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var GroupedBarChart = /** @class */ (function (_super) {
    charts_bar_grouped_extends(GroupedBarChart, _super);
    function GroupedBarChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.groupedBarChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    GroupedBarChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new GroupedBar(this.model, this.services),
            new ZeroLine(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.VERT_OR_HORIZ */.iz.VERT_OR_HORIZ,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return GroupedBarChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/bar-grouped.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/bar-stacked.js
var charts_bar_stacked_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var StackedBarChart = /** @class */ (function (_super) {
    charts_bar_stacked_extends(StackedBarChart, _super);
    function StackedBarChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.stackedBarChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    StackedBarChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new StackedRuler(this.model, this.services),
            new StackedBar(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.VERT_OR_HORIZ */.iz.VERT_OR_HORIZ,
            }),
            new ZeroLine(this.model, this.services),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return StackedBarChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/bar-stacked.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-array/src/sort.js



function sort_sort(values, ...F) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  let [f] = F;
  if ((f && f.length !== 2) || F.length > 1) {
    const index = Uint32Array.from(values, (d, i) => i);
    if (F.length > 1) {
      F = F.map(f => values.map(f));
      index.sort((i, j) => {
        for (const f of F) {
          const c = ascendingDefined(f[i], f[j]);
          if (c) return c;
        }
      });
    } else {
      f = values.map(f);
      index.sort((i, j) => ascendingDefined(f[i], f[j]));
    }
    return permute(values, index);
  }
  return values.sort(compareDefined(f));
}

function compareDefined(compare = ascending) {
  if (compare === ascending) return ascendingDefined;
  if (typeof compare !== "function") throw new TypeError("compare is not a function");
  return (a, b) => {
    const x = compare(a, b);
    if (x || x === 0) return x;
    return (compare(b, b) === 0) - (compare(a, a) === 0);
  };
}

function ascendingDefined(a, b) {
  return (a == null || !(a >= a)) - (b == null || !(b >= b)) || (a < b ? -1 : a > b ? 1 : 0);
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/quickselect.js


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare) {
  compare = compare === undefined ? ascendingDefined : compareDefined(compare);

  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}

;// CONCATENATED MODULE: ../../node_modules/d3-array/src/quantile.js





function quantile(values, p, valueof) {
  values = Float64Array.from(numbers(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return min_min(values);
  if (p >= 1) return max(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),
      value1 = min_min(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = number) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/boxplot.js
var model_boxplot_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var boxplot_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports



// D3 Imports


/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var BoxplotChartModel = /** @class */ (function (_super) {
    model_boxplot_extends(BoxplotChartModel, _super);
    function BoxplotChartModel(services) {
        return _super.call(this, services) || this;
    }
    BoxplotChartModel.prototype.getBoxQuartiles = function (d) {
        return {
            q_25: quantile(d, 0.25),
            q_50: quantile(d, 0.5),
            q_75: quantile(d, 0.75),
        };
    };
    BoxplotChartModel.prototype.getBoxplotData = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var groupedData = this.getGroupedData();
        // Prepare the data for the box plots
        var boxplotData = [];
        var _loop_1 = function (group, data) {
            var _a;
            var rangeIdentifier = this_1.services.cartesianScales.getRangeIdentifier();
            var values = data.map(function (d) { return d[rangeIdentifier]; }).sort(ascending);
            var record = (_a = {},
                _a[groupMapsTo] = group,
                _a.counts = values,
                _a.quartiles = this_1.getBoxQuartiles(values),
                _a.outliers = null,
                _a.whiskers = null,
                _a);
            var q1 = record.quartiles.q_25;
            var q3 = record.quartiles.q_75;
            var iqr = (q3 - q1) * 1.5;
            var irq1 = q1 - iqr;
            var irq3 = q3 + iqr;
            var outliers = [];
            var normalValues = [];
            for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {
                var value = values_1[_i];
                if (value < irq1) {
                    outliers.push(value);
                }
                else if (value > irq3) {
                    outliers.push(value);
                }
                else {
                    normalValues.push(value);
                }
            }
            record.outliers = outliers;
            var minNormalValue = min_min(normalValues);
            var maxNormalValue = max(normalValues);
            record.whiskers = {
                min: minNormalValue
                    ? minNormalValue
                    : min_min([
                        record.quartiles.q_25,
                        record.quartiles.q_50,
                        record.quartiles.q_75,
                    ]),
                max: maxNormalValue
                    ? maxNormalValue
                    : max([
                        record.quartiles.q_25,
                        record.quartiles.q_50,
                        record.quartiles.q_75,
                    ]),
            };
            boxplotData.push(record);
        };
        var this_1 = this;
        for (var _i = 0, groupedData_1 = groupedData; _i < groupedData_1.length; _i++) {
            var _a = groupedData_1[_i], group = _a.name, data = _a.data;
            _loop_1(group, data);
        }
        return boxplotData;
    };
    BoxplotChartModel.prototype.getTabularDataArray = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var boxplotData = this.getBoxplotData();
        var result = boxplot_spreadArrays([
            [
                'Group',
                'Minimum',
                'Q1',
                'Median',
                'Q3',
                'Maximum',
                'IQR',
                'Outlier(s)',
            ]
        ], boxplotData.map(function (datum) {
            var outliers = Tools.getProperty(datum, 'outliers');
            if (outliers === null || outliers.length === 0) {
                outliers = ['&ndash;'];
            }
            return [
                datum[groupMapsTo],
                Tools.getProperty(datum, 'whiskers', 'min') !== null
                    ? Tools.getProperty(datum, 'whiskers', 'min').toLocaleString()
                    : '&ndash;',
                Tools.getProperty(datum, 'quartiles', 'q_25') !== null
                    ? Tools.getProperty(datum, 'quartiles', 'q_25').toLocaleString()
                    : '&ndash;',
                Tools.getProperty(datum, 'quartiles', 'q_50') !== null
                    ? Tools.getProperty(datum, 'quartiles', 'q_50').toLocaleString()
                    : '&ndash;',
                Tools.getProperty(datum, 'quartiles', 'q_75') !== null
                    ? Tools.getProperty(datum, 'quartiles', 'q_75').toLocaleString()
                    : '&ndash;',
                Tools.getProperty(datum, 'whiskers', 'max') !== null
                    ? Tools.getProperty(datum, 'whiskers', 'max').toLocaleString()
                    : '&ndash;',
                Tools.getProperty(datum, 'quartiles', 'q_75') !== null &&
                    Tools.getProperty(datum, 'quartiles', 'q_25') !== null
                    ? (Tools.getProperty(datum, 'quartiles', 'q_75') -
                        Tools.getProperty(datum, 'quartiles', 'q_25')).toLocaleString()
                    : '&ndash;',
                outliers.map(function (d) { return d.toLocaleString(); }).join(','),
            ];
        }));
        return result;
    };
    BoxplotChartModel.prototype.setColorClassNames = function () {
        // monochrome
        var numberOfColors = 1;
        var colorPairingOptions = Tools.getProperty(this.getOptions(), 'color', 'pairing');
        var pairingOption = Tools.getProperty(colorPairingOptions, 'option');
        var colorPairingCounts = color.pairingOptions;
        // Use default palette if user choice is not in range
        pairingOption =
            pairingOption <= colorPairingCounts[numberOfColors + "-color"]
                ? pairingOption
                : 1;
        // Create color classes for graph, tooltip and stroke use
        var colorPairing = this.allDataGroups.map(function (dataGroup, index) { return numberOfColors + "-" + pairingOption + "-1"; });
        // Create default color classnames
        this.colorClassNames = ordinal()
            .range(colorPairing)
            .domain(this.allDataGroups);
    };
    return BoxplotChartModel;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/boxplot.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/boxplot.js
var charts_boxplot_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// Components

var BoxplotChart = /** @class */ (function (_super) {
    charts_boxplot_extends(BoxplotChart, _super);
    function BoxplotChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new BoxplotChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.boxplotChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    BoxplotChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Boxplot(this.model, this.services),
            new ZeroLine(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.VERT_OR_HORIZ */.iz.VERT_OR_HORIZ,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents, {
            legend: {
                enabled: false,
            },
        });
        return components;
    };
    return BoxplotChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/boxplot.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/bubble.js
var charts_bubble_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var BubbleChart = /** @class */ (function (_super) {
    charts_bubble_extends(BubbleChart, _super);
    function BubbleChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.bubbleChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    BubbleChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Ruler(this.model, this.services),
            new Bubble(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.GRID */.iz.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return BubbleChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/bubble.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/bullet.js
var model_bullet_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var bullet_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports


/**
 * Bullet chart model layer
 */
var BulletChartModel = /** @class */ (function (_super) {
    model_bullet_extends(BulletChartModel, _super);
    function BulletChartModel(services) {
        return _super.call(this, services) || this;
    }
    /**
     * Determines the index of the performance area titles to use
     * @param datum
     * @returns number
     */
    BulletChartModel.prototype.getMatchingRangeIndexForDatapoint = function (datum) {
        var matchingRangeIndex;
        for (var i = datum.ranges.length - 1; i > 0; i--) {
            var range = datum.ranges[i];
            if (datum.value >= range) {
                matchingRangeIndex = i;
                return matchingRangeIndex;
            }
        }
        return 0;
    };
    BulletChartModel.prototype.getTabularDataArray = function () {
        var _this = this;
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        var performanceAreaTitles = Tools.getProperty(options, 'bullet', 'performanceAreaTitles');
        var result = bullet_spreadArrays([
            ['Title', 'Group', 'Value', 'Target', 'Percentage', 'Performance']
        ], displayData.map(function (datum) { return [
            datum['title'],
            datum[groupMapsTo],
            datum['value'] === null ? '&ndash;' : datum['value'],
            Tools.getProperty(datum, 'marker') === null
                ? '&ndash;'
                : datum['marker'],
            Tools.getProperty(datum, 'marker') === null
                ? '&ndash;'
                : Math.floor((datum[rangeIdentifier] / datum.marker) * 100) + "%",
            performanceAreaTitles[_this.getMatchingRangeIndexForDatapoint(datum)],
        ]; }));
        return result;
    };
    return BulletChartModel;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/bullet.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/bullet.js
var charts_bullet_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// Components

var BulletChart = /** @class */ (function (_super) {
    charts_bullet_extends(BulletChart, _super);
    function BulletChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new BulletChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.bulletChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    BulletChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Bullet(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.GRID */.iz.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return BulletChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/bullet.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/binned-charts.js
var binned_charts_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var binned_charts_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports


/**
 * this is intended for binned type of charts
 * */
var ChartModelBinned = /** @class */ (function (_super) {
    binned_charts_extends(ChartModelBinned, _super);
    function ChartModelBinned() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ChartModelBinned.prototype.getTabularDataArray = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var binnedStackedData = this.getBinnedStackedData();
        var result = binned_charts_spreadArrays([
            binned_charts_spreadArrays([
                lodash_es_get(options, 'bins.rangeLabel') || 'Range'
            ], binnedStackedData.map(function (datum) {
                return lodash_es_get(datum, "0." + groupMapsTo);
            }))
        ], lodash_es_get(binnedStackedData, 0).map(function (d, i) { return binned_charts_spreadArrays([
            lodash_es_get(d, 'data.x0') + " \u2013 " + lodash_es_get(d, 'data.x1')
        ], binnedStackedData.map(function (datum) {
            return lodash_es_get(datum[i], "data." + lodash_es_get(datum[i], groupMapsTo));
        })); }));
        return result;
    };
    return ChartModelBinned;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/binned-charts.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/histogram.js
var charts_histogram_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var HistogramChart = /** @class */ (function (_super) {
    charts_histogram_extends(HistogramChart, _super);
    function HistogramChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new ChartModelBinned(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.histogramChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        _this.update();
        return _this;
    }
    HistogramChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new BinnedRuler(this.model, this.services),
            new Histogram(this.model, this.services),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return HistogramChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/histogram.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/line.js
var charts_line_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports



// Components

var LineChart = /** @class */ (function (_super) {
    charts_line_extends(LineChart, _super);
    function LineChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.lineChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    LineChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Ruler(this.model, this.services),
            new Line(this.model, this.services),
            new Scatter(this.model, this.services, { handleThresholds: true }),
            new SkeletonLines(this.model, this.services),
            new ZeroLine(this.model, this.services),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return LineChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/line.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/lollipop.js
var charts_lollipop_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var LollipopChart = /** @class */ (function (_super) {
    charts_lollipop_extends(LollipopChart, _super);
    function LollipopChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.lollipopChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    LollipopChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Ruler(this.model, this.services),
            new Lollipop(this.model, this.services),
            new Scatter(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.GRID */.iz.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return LollipopChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/lollipop.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/scatter.js
var charts_scatter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var ScatterChart = /** @class */ (function (_super) {
    charts_scatter_extends(ScatterChart, _super);
    function ScatterChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.scatterChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    ScatterChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Ruler(this.model, this.services),
            new Scatter(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.GRID */.iz.GRID,
            }),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return ScatterChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/scatter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/pie.js
var model_pie_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var pie_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports

/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var PieChartModel = /** @class */ (function (_super) {
    model_pie_extends(PieChartModel, _super);
    function PieChartModel(services) {
        return _super.call(this, services) || this;
    }
    PieChartModel.prototype.getTabularData = function (data) {
        var tabularData = _super.prototype.getTabularData.call(this, data);
        // if the data was changed to tabular format
        // update the group to the key so the slices render with the correct tooltips and colors
        if (data !== tabularData) {
            // If a label was set for the overall dataset, reassign it to key value
            tabularData.forEach(function (d) {
                if (d.key && d.key !== d.group) {
                    d.group = d.key;
                }
            });
        }
        return tabularData;
    };
    PieChartModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var result = pie_spreadArrays([
            ['Group', 'Value']
        ], displayData.map(function (datum) { return [
            datum[groupMapsTo],
            datum['value'] === null
                ? '&ndash;'
                : datum['value'].toLocaleString(),
        ]; }));
        return result;
    };
    PieChartModel.prototype.sanitize = function (data) {
        var tabularData = this.getTabularData(data);
        // Sort data based on value
        return tabularData.sort(function (a, b) { return b.value - a.value; });
    };
    return PieChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/pie.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/pie.js
var charts_pie_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// Components

var PieChart = /** @class */ (function (_super) {
    charts_pie_extends(PieChart, _super);
    // TODO - Optimize the use of "extending"
    function PieChart(holder, chartConfigs, extending) {
        if (extending === void 0) { extending = false; }
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new PieChartModel(_this.services);
        // TODO - Optimize the use of "extending"
        if (extending) {
            return _this;
        }
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.pieChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    PieChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new Pie(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.PIE */.iz.PIE,
            }),
        ];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return PieChart;
}(Chart));

//# sourceMappingURL=../../src/charts/pie.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/donut.js
var charts_donut_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var DonutChart = /** @class */ (function (_super) {
    charts_donut_extends(DonutChart, _super);
    function DonutChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs, true) || this;
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.donutChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    DonutChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new Donut(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.DONUT */.iz.DONUT,
            }),
        ];
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return DonutChart;
}(PieChart));

//# sourceMappingURL=../../src/charts/donut.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/meter.js
var meter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var meter_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};


/** The meter chart model layer which extends some of the data setting options.
 * Meter only uses 1 dataset
 *  */
var MeterChartModel = /** @class */ (function (_super) {
    meter_extends(MeterChartModel, _super);
    function MeterChartModel(services) {
        return _super.call(this, services) || this;
    }
    MeterChartModel.prototype.getMaximumDomain = function (data) {
        var max = data.reduce(function (accumulator, datum) { return accumulator + datum.value; }, 0);
        return max;
    };
    /**
     * Use a provided color for the bar or default to carbon color if no status provided.
     * Defaults to carbon color otherwise.
     * @param group dataset group label
     */
    MeterChartModel.prototype.getFillColor = function (group) {
        var options = this.getOptions();
        var userProvidedScale = Tools.getProperty(options, 'color', 'scale');
        var status = this.getStatus();
        // user provided a fill color or there isn't a status we can use the colorScale
        if (userProvidedScale || !status) {
            return _super.prototype.getFillColor.call(this, group);
        }
        else {
            return null;
        }
    };
    /**
     * Get the associated status for the data by checking the ranges
     */
    MeterChartModel.prototype.getStatus = function () {
        var options = this.getOptions();
        var dataValues = Tools.getProperty(this.getDisplayData());
        var totalValue = (dataValues
            ? dataValues.reduce(function (previous, current) {
                return { value: previous.value + current.value };
            })
            : 0).value;
        // use max value if the percentage is bigger than 100%
        var boundedValue = Tools.getProperty(options, 'meter', 'proportional')
            ? totalValue
            : totalValue > 100
                ? 100
                : totalValue;
        // user needs to supply ranges
        var allRanges = Tools.getProperty(options, 'meter', 'status', 'ranges');
        if (allRanges) {
            var result = allRanges.filter(function (step) {
                return step.range[0] <= boundedValue &&
                    boundedValue <= step.range[1];
            });
            if (result.length > 0) {
                return result[0].status;
            }
        }
        return null;
    };
    MeterChartModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var status = this.getStatus();
        var proportional = Tools.getProperty(options, 'meter', 'proportional');
        var result = [];
        var domainMax;
        // Display the appropriate columns and fields depending on the type of meter
        if (proportional === null) {
            domainMax = 100;
            var datum = displayData[0];
            result = [
                meter_spreadArrays(['Group', 'Value'], (status ? ['Status'] : [])),
                meter_spreadArrays([
                    datum[groupMapsTo],
                    datum['value']
                ], (status ? [status] : [])),
            ];
        }
        else {
            var total = Tools.getProperty(proportional, 'total');
            domainMax = total ? total : this.getMaximumDomain(displayData);
            result = meter_spreadArrays([
                ['Group', 'Value', 'Percentage of total']
            ], displayData.map(function (datum) { return [
                datum[groupMapsTo],
                datum['value'],
                ((datum['value'] / domainMax) * 100).toFixed(2) + ' %',
            ]; }));
        }
        return result;
    };
    return MeterChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/meter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/components/graphs/meter.js
var graphs_meter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var meter_assign = (undefined && undefined.__assign) || function () {
    meter_assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return meter_assign.apply(this, arguments);
};
// Internal Imports





// D3 Imports


var Meter = /** @class */ (function (_super) {
    graphs_meter_extends(Meter, _super);
    function Meter() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.type = 'meter';
        _this.renderType = interfaces.RenderTypes.SVG;
        return _this;
    }
    Meter.prototype.getStackedBounds = function (data, scale) {
        var prevX = 0;
        var stackedData = data.map(function (d, i) {
            if (i !== 0) {
                prevX += scale(d.value);
                return meter_assign(meter_assign({}, d), { width: Math.abs(scale(d.value) - meter.dividerWidth), x: prevX - scale(d.value) });
            }
            else {
                prevX = scale(d.value);
                return meter_assign(meter_assign({}, d), { width: Math.abs(scale(d.value) - meter.dividerWidth), x: 0 });
            }
        });
        return stackedData;
    };
    Meter.prototype.render = function (animate) {
        var _this = this;
        if (animate === void 0) { animate = true; }
        var self = this;
        var svg = this.getComponentContainer();
        var options = this.getOptions();
        var proportional = Tools.getProperty(options, 'meter', 'proportional');
        var data = this.model.getDisplayData();
        var status = this.model.getStatus();
        var width = DOMUtils.getSVGElementSize(svg, {
            useAttrs: true,
        }).width;
        var groupMapsTo = options.data.groupMapsTo;
        var domainMax;
        if (Tools.getProperty(options, 'meter', 'proportional') === null) {
            domainMax = 100;
        }
        else {
            var total = Tools.getProperty(options, 'meter', 'proportional', 'total');
            domainMax = total
                ? total
                : this.model.getMaximumDomain(this.model.getDisplayData());
        }
        // each meter has a scale for the value but no visual axis
        var xScale = linear_linear().domain([0, domainMax]).range([0, width]);
        var stackedData = this.getStackedBounds(data, xScale);
        var userProvidedHeight = Tools.getProperty(options, 'meter', 'height');
        // draw the container to hold the value
        DOMUtils.appendOrSelect(svg, 'rect.container')
            .attr('x', 0)
            .attr('y', 0)
            .attr('width', width)
            .attr('height', userProvidedHeight
            ? userProvidedHeight
            : proportional
                ? meter.height.proportional
                : meter.height["default"]);
        // draw the container max range value indicator
        DOMUtils.appendOrSelect(svg, 'line.rangeIndicator')
            .attr('x1', width)
            .attr('x2', width)
            .attr('y1', 0)
            .attr('y2', userProvidedHeight
            ? userProvidedHeight
            : proportional
                ? meter.height.proportional
                : meter.height["default"]);
        // rect with the value binded
        var valued = svg.selectAll('rect.value').data(stackedData);
        // if user provided a color for the bar, we dont want to attach a status class
        var className = status != null &&
            !self.model.isUserProvidedColorScaleValid() &&
            !proportional
            ? "value status--" + status
            : 'value';
        // draw the value bar
        valued
            .enter()
            .append('rect')
            .classed('value', true)
            .merge(valued)
            .attr('x', function (d) {
            return d.x;
        })
            .attr('y', 0)
            .attr('height', function () {
            var userProvidedHeight = Tools.getProperty(options, 'meter', 'height');
            return userProvidedHeight
                ? userProvidedHeight
                : proportional
                    ? meter.height.proportional
                    : meter.height["default"];
        })
            .attr('class', function (d) {
            return _this.model.getColorClassName({
                classNameTypes: [interfaces.ColorClassNameTypes.FILL],
                dataGroupName: d[groupMapsTo],
                originalClassName: className,
            });
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'meter-bar-update',
                animate: animate,
            });
        })
            .attr('width', function (d, i) {
            return d.value > domainMax ? xScale(domainMax) : d.width;
        })
            .style('fill', function (d) { return self.model.getFillColor(d[groupMapsTo]); })
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'value')
            .attr('aria-label', function (d) { return d.value; });
        valued.exit().remove();
        // draw the peak
        var peakValue = Tools.getProperty(options, 'meter', 'peak');
        var peakData = peakValue;
        if (peakValue !== null) {
            if (peakValue > domainMax) {
                peakData = domainMax;
            }
            else if (peakValue < data[0].value) {
                peakData =
                    data[0].value > domainMax ? domainMax : data[0].value;
            }
        }
        // if a peak is supplied within the domain, we want to render it
        var peak = svg
            .selectAll('line.peak')
            .data(peakData == null ? [] : [peakData]);
        peak.enter()
            .append('line')
            .classed('peak', true)
            .merge(peak)
            .attr('y1', 0)
            .attr('y2', function () {
            var userProvidedHeight = Tools.getProperty(options, 'meter', 'height');
            return userProvidedHeight
                ? userProvidedHeight
                : proportional
                    ? meter.height.proportional
                    : meter.height["default"];
        })
            .transition()
            .call(function (t) {
            return _this.services.transitions.setupTransition({
                transition: t,
                name: 'peak-line-update',
                animate: animate,
            });
        })
            .attr('x1', function (d) { return xScale(d); })
            .attr('x2', function (d) { return xScale(d); })
            // a11y
            .attr('role', interfaces.Roles.GRAPHICS_SYMBOL)
            .attr('aria-roledescription', 'peak')
            .attr('aria-label', function (d) { return d; });
        peak.exit().remove();
        // this forces the meter chart to only take up as much height as needed (if no height is provided)
        this.services.domUtils.setSVGMaxHeight();
        // Add event listeners to elements and legend
        this.addEventListeners();
    };
    // add event listeners for tooltips on proportional meter bars
    Meter.prototype.addEventListeners = function () {
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var self = this;
        var proportional = Tools.getProperty(options, 'meter', 'proportional');
        this.parent
            .selectAll('rect.value')
            .on('mouseover', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Meter.METER_MOUSEOVER, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            if (proportional) {
                hoveredElement.classed('hovered', true);
                // Show tooltip
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.SHOW, {
                    event: event,
                    hoveredElement: hoveredElement,
                    items: [
                        {
                            label: datum[groupMapsTo],
                            value: datum.value,
                        },
                    ],
                });
            }
        })
            .on('mousemove', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Meter.METER_MOUSEMOVE, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            if (proportional) {
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.MOVE, {
                    event: event,
                });
            }
        })
            .on('click', function (event, datum) {
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Meter.METER_CLICK, {
                event: event,
                element: src_select(this),
                datum: datum,
            });
        })
            .on('mouseout', function (event, datum) {
            var hoveredElement = src_select(this);
            // Dispatch mouse event
            self.services.events.dispatchEvent(interfaces.Events.Meter.METER_MOUSEOUT, {
                event: event,
                element: hoveredElement,
                datum: datum,
            });
            if (proportional) {
                hoveredElement.classed('hovered', false);
                // Hide tooltip
                self.services.events.dispatchEvent(interfaces.Events.Tooltip.HIDE, {
                    hoveredElement: hoveredElement,
                });
            }
        });
    };
    Meter.prototype.destroy = function () {
        // Remove event listeners
        this.parent
            .selectAll('rect.value')
            .on('mouseover', null)
            .on('mousemove', null)
            .on('mouseout', null)
            .on('click', null);
    };
    return Meter;
}(Component));

//# sourceMappingURL=../../../src/components/graphs/meter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/meter.js
var charts_meter_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports






// Components

var MeterChart = /** @class */ (function (_super) {
    charts_meter_extends(MeterChart, _super);
    function MeterChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new MeterChartModel(_this.services);
        // use prop meter options or regular meter options
        var options = chartConfigs.options.meter.proportional
            ? Tools.merge(Tools.clone(configuration_options.proportionalMeterChart), chartConfigs.options)
            : Tools.merge(Tools.clone(configuration_options.meterChart), chartConfigs.options);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(options);
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    MeterChart.prototype.getComponents = function () {
        // Specify what to render inside the graph only
        var graph = {
            id: 'meter-graph',
            components: [new Meter(this.model, this.services)],
            growth: interfaces.LayoutGrowth.STRETCH,
            renderType: interfaces.RenderTypes.SVG,
        };
        // Meter has an unique dataset title within the graph
        var titleComponent = {
            id: 'meter-title',
            components: [new MeterTitle(this.model, this.services)],
            growth: interfaces.LayoutGrowth.STRETCH,
            renderType: interfaces.RenderTypes.SVG,
        };
        // create the title spacer
        var titleSpacerComponent = {
            id: 'spacer',
            components: [new Spacer(this.model, this.services, { size: 8 })],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        // the graph frame for meter includes the custom title (and spacer)
        var graphFrame = [
            new LayoutComponent(this.model, this.services, [titleComponent, titleSpacerComponent, graph], {
                direction: interfaces.LayoutDirection.COLUMN,
            }),
        ];
        // add the meter title as a top level component
        var components = this.getChartComponents(graphFrame, {
            graphFrameRenderType: interfaces.RenderTypes.HTML,
        });
        return components;
    };
    return MeterChart;
}(Chart));

//# sourceMappingURL=../../src/charts/meter.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/radar.js
var model_radar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var radar_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports


/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var RadarChartModel = /** @class */ (function (_super) {
    model_radar_extends(RadarChartModel, _super);
    function RadarChartModel(services) {
        return _super.call(this, services) || this;
    }
    RadarChartModel.prototype.getTabularDataArray = function () {
        var options = this.getOptions();
        var groupedData = this.getGroupedData();
        var _a = Tools.getProperty(options, 'radar', 'axes'), angle = _a.angle, value = _a.value;
        var additionalHeaders = Tools.getProperty(groupedData, '0', 'data').map(function (d) { return d[angle]; });
        var result = radar_spreadArrays([
            radar_spreadArrays(['Group'], additionalHeaders)
        ], groupedData.map(function (datum) {
            return radar_spreadArrays([
                datum['name']
            ], additionalHeaders.map(function (additionalHeader, i) {
                return Tools.getProperty(datum, 'data', i, value) !== null
                    ? Tools.getProperty(datum, 'data', i, value).toLocaleString()
                    : '&ndash;';
            }));
        }));
        return result;
    };
    return RadarChartModel;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/radar.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/radar.js
var charts_radar_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





var RadarChart = /** @class */ (function (_super) {
    charts_radar_extends(RadarChart, _super);
    function RadarChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new RadarChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.radarChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    RadarChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new Radar(this.model, this.services),
        ];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return RadarChart;
}(Chart));

//# sourceMappingURL=../../src/charts/radar.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/gauge.js
var model_gauge_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var gauge_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports

/**
 * The gauge chart model layer
 */
var GaugeChartModel = /** @class */ (function (_super) {
    model_gauge_extends(GaugeChartModel, _super);
    function GaugeChartModel(services) {
        return _super.call(this, services) || this;
    }
    GaugeChartModel.prototype.getDataGroups = function () {
        return _super.prototype.getDataGroups.call(this).filter(function (item) { return item.name !== 'delta'; });
    };
    GaugeChartModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var result = gauge_spreadArrays([
            ['Group', 'Value']
        ], displayData.map(function (datum) { return [
            datum[groupMapsTo],
            datum['value'] === null
                ? '&ndash;'
                : datum['value'].toLocaleString(),
        ]; }));
        return result;
    };
    return GaugeChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/gauge.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/gauge.js
var charts_gauge_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var GaugeChart = /** @class */ (function (_super) {
    charts_gauge_extends(GaugeChart, _super);
    function GaugeChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new GaugeChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.gaugeChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    GaugeChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [new Gauge(this.model, this.services)];
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return GaugeChart;
}(Chart));

//# sourceMappingURL=../../src/charts/gauge.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/combo.js
var combo_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var combo_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var combo_a;
// Internal Imports




// Components

var graphComponentsMap = (combo_a = {},
    combo_a[interfaces.ChartTypes.LINE] = [Line, Scatter],
    combo_a[interfaces.ChartTypes.SCATTER] = [Scatter],
    combo_a[interfaces.ChartTypes.AREA] = [Area, Line, Scatter],
    combo_a[interfaces.ChartTypes.STACKED_AREA] = [
        StackedArea,
        Line,
        StackedScatter,
        StackedRuler,
    ],
    combo_a[interfaces.ChartTypes.SIMPLE_BAR] = [SimpleBar],
    combo_a[interfaces.ChartTypes.GROUPED_BAR] = [GroupedBar, ZeroLine],
    combo_a[interfaces.ChartTypes.STACKED_BAR] = [StackedBar, StackedRuler],
    combo_a);
var ComboChart = /** @class */ (function (_super) {
    combo_extends(ComboChart, _super);
    function ComboChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        // Merge the default options for this chart
        // With the user provided options
        var chartOptions = Tools.mergeDefaultChartOptions(configuration_options.comboChart, chartConfigs.options);
        // Warn user if no comboChartTypes defined
        // Use skeleton chart instead
        if (!chartConfigs.options.comboChartTypes) {
            console.error('No comboChartTypes defined for the Combo Chart!');
            // add a default chart to get an empty chart
            chartOptions.comboChartTypes = [
                { type: interfaces.ChartTypes.LINE, correspondingDatasets: [] },
            ];
        }
        // set the global options
        _this.model.setOptions(chartOptions);
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    ComboChart.prototype.getGraphComponents = function () {
        var _this = this;
        var comboChartTypes = this.model.getOptions().comboChartTypes;
        var counter = 0;
        var graphComponents = comboChartTypes
            .map(function (graph) {
            var type = graph.type;
            var options;
            // initializes the components using input strings with the base configs for each chart
            if (typeof graph.type === 'string') {
                // check if it is in the components map
                // if it isn't then it is not a valid carbon chart to use in combo
                if (!Object.keys(graphComponentsMap).includes(graph.type)) {
                    console.error("Invalid chart type \"" + graph.type + "\" specified for combo chart. Please refer to the ComboChart tutorial for more guidance.");
                    return null;
                }
                var stacked_1;
                options = Tools.merge({}, configuration_options[Tools.camelCase(graph.type) + "Chart"], _this.model.getOptions(), graph.options);
                // if we are creating a stacked area, the contained Line chart needs to know it is stacked
                if (graph.type === interfaces.ChartTypes.STACKED_AREA) {
                    stacked_1 = true;
                }
                return graphComponentsMap[graph.type].map(function (Component, i) {
                    return new Component(_this.model, _this.services, {
                        groups: graph.correspondingDatasets,
                        id: counter++,
                        options: options,
                        stacked: stacked_1,
                    });
                });
            }
            else {
                // user has imported a type or custom component to instantiate
                options = Tools.merge({}, _this.model.getOptions(), graph.options);
                return new type(_this.model, _this.services, {
                    groups: graph.correspondingDatasets,
                    id: counter++,
                    options: options,
                });
            }
        })
            .filter(function (item) { return item !== null; });
        return Tools.flatten(graphComponents);
    };
    ComboChart.prototype.getComponents = function () {
        var comboChartTypes = this.model.getOptions().comboChartTypes;
        // don't add the regular ruler if stacked ruler is added
        var stackedRulerEnabled = comboChartTypes.some(function (chartObject) {
            return chartObject.type === interfaces.ChartTypes.STACKED_BAR ||
                chartObject.type === interfaces.ChartTypes.STACKED_AREA;
        });
        // Specify what to render inside the graph-frame
        var graphFrameComponents = combo_spreadArrays([
            new TwoDimensionalAxes(this.model, this.services),
            new Grid(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: interfaces.Skeletons.GRID,
            })
        ], (stackedRulerEnabled
            ? []
            : [new Ruler(this.model, this.services)]), this.getGraphComponents());
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return ComboChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/combo.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/tree.js
var model_tree_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports

/**
 * The tree chart model layer
 */
var TreeChartModel = /** @class */ (function (_super) {
    model_tree_extends(TreeChartModel, _super);
    function TreeChartModel(services) {
        return _super.call(this, services) || this;
    }
    TreeChartModel.prototype.getTabularDataArray = function () {
        var _this = this;
        var displayData = this.getDisplayData();
        var result = [['Child', 'Parent']];
        displayData.forEach(function (datum) {
            // Call recurisve function
            _this.getChildrenDatums(datum, result);
            result.push([datum.name, '&ndash;']);
        });
        return result;
    };
    /**
     * Determine the child parent relationship in nested data
     * @param datum: Object
     * @param result: Array<Object>
     */
    TreeChartModel.prototype.getChildrenDatums = function (datum, result) {
        var _this = this;
        if (result === void 0) { result = []; }
        // Check to see if datum has children before iterating through it
        if (datum.children) {
            if (datum.children.length > 0) {
                datum.children.forEach(function (child) {
                    _this.getChildrenDatums(child, result);
                    result.push([child.name, datum.name]);
                });
            }
        }
    };
    return TreeChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/tree.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/tree.js
var charts_tree_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var TreeChart = /** @class */ (function (_super) {
    charts_tree_extends(TreeChart, _super);
    function TreeChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new TreeChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.treeChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    TreeChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new Tree(this.model, this.services),
        ];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents, {
            excludeLegend: true,
        });
        return components;
    };
    return TreeChart;
}(Chart));

//# sourceMappingURL=../../src/charts/tree.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/treemap.js
var model_treemap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports

/**
 * The treemap chart model layer
 */
var TreemapChartModel = /** @class */ (function (_super) {
    model_treemap_extends(TreemapChartModel, _super);
    function TreemapChartModel(services) {
        return _super.call(this, services) || this;
    }
    TreemapChartModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var result = [['Child', 'Group', 'Value']];
        displayData.forEach(function (datum) {
            datum.children.forEach(function (child) {
                result.push([child.name, datum.name, child.value]);
            });
        });
        return result;
    };
    return TreemapChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/treemap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/treemap.js
var charts_treemap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var TreemapChart = /** @class */ (function (_super) {
    charts_treemap_extends(TreemapChart, _super);
    function TreemapChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new TreemapChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.treemapChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    TreemapChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [new Treemap(this.model, this.services)];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return TreemapChart;
}(Chart));

//# sourceMappingURL=../../src/charts/treemap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/circle-pack.js
var model_circle_pack_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var circle_pack_assign = (undefined && undefined.__assign) || function () {
    circle_pack_assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return circle_pack_assign.apply(this, arguments);
};
// Internal Imports



/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var CirclePackChartModel = /** @class */ (function (_super) {
    model_circle_pack_extends(CirclePackChartModel, _super);
    function CirclePackChartModel(services) {
        var _this = _super.call(this, services) || this;
        _this.parentNode = false;
        _this.set({ depth: 2 }, { skipUpdate: true });
        return _this;
    }
    CirclePackChartModel.prototype.setData = function (newData) {
        _super.prototype.setData.call(this, newData);
        this.setDataGroups();
        if (newData.length === 1) {
            this.parentNode = true;
        }
        this.setZoom();
    };
    CirclePackChartModel.prototype.setOptions = function (newOptions) {
        var options = this.getOptions();
        var zoomOptions = Tools.merge({}, newOptions, this.getZoomOptions(newOptions));
        Tools.updateLegendAdditionalItems(options, zoomOptions);
        var depth = this.getHierarchyLevel();
        var userProvidedDepth = Tools.getProperty(options, 'circlePack', 'hierarchyLevel');
        this.set({
            options: Tools.merge(options, zoomOptions),
            depth: userProvidedDepth && userProvidedDepth < 4
                ? userProvidedDepth
                : depth,
        });
    };
    CirclePackChartModel.prototype.getZoomOptions = function (options) {
        if (!this.getDisplayData()) {
            return {};
        }
        // uses the user provided options and data to determine if there is zoom in this CP chart
        var displayData = this.getDisplayData();
        var zoomOptions = options ? options : this.getOptions();
        var data = displayData.length === 1 &&
            Tools.getProperty(displayData, 0, 'children')
            ? Tools.getProperty(displayData, 0, 'children')
            : displayData;
        var depth = this.getHierarchyLevel();
        // check the data depth
        data.some(function (datum) {
            if (datum.children) {
                if (datum.children.some(function (item) { return item.children; })) {
                    depth = 3;
                    return false;
                }
            }
        });
        if (Tools.getProperty(zoomOptions, 'canvasZoom', 'enabled') === true &&
            depth > 2) {
            return {
                legend: {
                    additionalItems: [
                        {
                            type: enums/* LegendItemType.ZOOM */._8.ZOOM,
                            name: 'Click to zoom',
                        },
                    ],
                },
            };
        }
        return null;
    };
    CirclePackChartModel.prototype.setZoom = function (options) {
        this.setOptions(this.getZoomOptions(options));
    };
    // update the hierarchy level
    CirclePackChartModel.prototype.updateHierarchyLevel = function (depth) {
        this.set({ depth: depth });
    };
    CirclePackChartModel.prototype.getHierarchyLevel = function () {
        return this.get('depth');
    };
    CirclePackChartModel.prototype.hasParentNode = function () {
        return this.parentNode;
    };
    // set the datagroup name on the items that are it's children
    CirclePackChartModel.prototype.setDataGroups = function () {
        var _this = this;
        var data = this.getData();
        var options = this.getOptions();
        var groupMapsTo = options.data.groupMapsTo;
        var newData = data.map(function (depthOne) {
            var groupName = depthOne[groupMapsTo];
            return _this.setChildrenDataGroup(depthOne, groupName);
        });
        this.set({
            data: newData,
        }, { skipUpdate: true });
    };
    // sets name recursively down the node tree
    CirclePackChartModel.prototype.setChildrenDataGroup = function (node, name) {
        var _this = this;
        if (node.children) {
            return circle_pack_assign(circle_pack_assign({}, node), { dataGroupName: name, children: node.children.map(function (child, i) {
                    return _this.setChildrenDataGroup(child, name);
                }) });
        }
        else {
            return circle_pack_assign(circle_pack_assign({}, node), { dataGroupName: name });
        }
    };
    CirclePackChartModel.prototype.getTabularDataArray = function () {
        var _this = this;
        var displayData = this.getDisplayData();
        var result = [['Child', 'Parent', 'Value']];
        displayData.forEach(function (datum) {
            var value = datum.value ? datum.value : 0;
            if (datum.children) {
                // Call recursive function
                value += _this.getChildrenDatums(datum.children, datum.name, result, 0);
            }
            result.push(['&ndash;', datum.name, value]);
        });
        return result;
    };
    /**
     * Recursively determine the relationship between all the nested elements in the child
     * @param children: Object
     * @param parent: String
     * @param result: Array<Object>
     * @param totalSum: number
     * @returns: number
     */
    CirclePackChartModel.prototype.getChildrenDatums = function (children, parent, result, totalSum) {
        var _this = this;
        if (result === void 0) { result = []; }
        if (totalSum === void 0) { totalSum = 0; }
        var grandParent = parent;
        children.forEach(function (child) {
            var parent = child.name;
            var sum = 0;
            if (child.children) {
                if (child.children.length > 0) {
                    if (typeof child.value === 'number') {
                        totalSum += child.value;
                    }
                    sum += _this.getChildrenDatums(child.children, parent, result, sum);
                    result.push([parent, grandParent, sum]);
                    totalSum += sum;
                }
            }
            else {
                var value = 0;
                if (typeof child.value === 'number') {
                    value = child.value;
                    totalSum += child.value;
                }
                result.push([child.name, grandParent, value]);
            }
        });
        return totalSum;
    };
    return CirclePackChartModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/circle-pack.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/circle-pack.js
var charts_circle_pack_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var CirclePackChart = /** @class */ (function (_super) {
    charts_circle_pack_extends(CirclePackChart, _super);
    function CirclePackChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new CirclePackChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.circlePackChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    CirclePackChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new CirclePack(this.model, this.services),
        ];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return CirclePackChart;
}(Chart));

//# sourceMappingURL=../../src/charts/circle-pack.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/wordcloud.js
var model_wordcloud_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var wordcloud_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports

/** The charting model layer which includes mainly the chart data and options,
 * as well as some misc. information to be shared among components */
var WordCloudModel = /** @class */ (function (_super) {
    model_wordcloud_extends(WordCloudModel, _super);
    function WordCloudModel(services) {
        return _super.call(this, services) || this;
    }
    WordCloudModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var options = this.getOptions();
        var _a = options.wordCloud, fontSizeMapsTo = _a.fontSizeMapsTo, wordMapsTo = _a.wordMapsTo;
        var groupMapsTo = options.data.groupMapsTo;
        var result = wordcloud_spreadArrays([
            [options.tooltip.wordLabel, 'Group', options.tooltip.valueLabel]
        ], displayData.map(function (datum) { return [
            datum[wordMapsTo],
            datum[groupMapsTo],
            datum[fontSizeMapsTo],
        ]; }));
        return result;
    };
    return WordCloudModel;
}(ChartModel));

//# sourceMappingURL=../../src/model/wordcloud.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/wordcloud.js
var charts_wordcloud_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports





// Components

var WordCloudChart = /** @class */ (function (_super) {
    charts_wordcloud_extends(WordCloudChart, _super);
    function WordCloudChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new WordCloudModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.wordCloudChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    WordCloudChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new WordCloud(this.model, this.services),
            new Skeleton(this.model, this.services, {
                skeleton: enums/* Skeletons.PIE */.iz.PIE,
            }),
        ];
        // get the base chart components and export with tooltip
        var components = this.getChartComponents(graphFrameComponents);
        return components;
    };
    return WordCloudChart;
}(Chart));

//# sourceMappingURL=../../src/charts/wordcloud.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/alluvial.js
var model_alluvial_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var alluvial_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports

/**
 * Alluvial chart model layer
 */
var AlluvialChartModel = /** @class */ (function (_super) {
    model_alluvial_extends(AlluvialChartModel, _super);
    function AlluvialChartModel(services) {
        return _super.call(this, services) || this;
    }
    AlluvialChartModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        // Sort array by source to get a close depiction of the alluvial chart
        displayData.sort(function (a, b) { return a['source'].localeCompare(b['source']); });
        var result = alluvial_spreadArrays([
            ['Source', 'Target', 'Value']
        ], displayData.map(function (datum) { return [
            datum['source'],
            datum['target'],
            datum['value'],
        ]; }));
        return result;
    };
    return AlluvialChartModel;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/alluvial.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/alluvial.js
var charts_alluvial_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
// Internal Imports




// Components

var AlluvialChart = /** @class */ (function (_super) {
    charts_alluvial_extends(AlluvialChart, _super);
    function AlluvialChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new AlluvialChartModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.alluvialChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    AlluvialChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new Alluvial(this.model, this.services),
        ];
        var components = this.getChartComponents(graphFrameComponents, {
            excludeLegend: true,
        });
        return components;
    };
    return AlluvialChart;
}(Chart));

//# sourceMappingURL=../../src/charts/alluvial.js.map
;// CONCATENATED MODULE: ../../node_modules/d3-scale/src/quantize.js




function quantize_quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x != null && x <= x ? range[bisect(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);
    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
    return scale;
  }

  scale.domain = function(_) {
    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];
  };

  scale.range = function(_) {
    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function(y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN]
        : i < 1 ? [x0, domain[0]]
        : i >= n ? [domain[n - 1], x1]
        : [domain[i - 1], domain[i]];
  };

  scale.unknown = function(_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function() {
    return domain.slice();
  };

  scale.copy = function() {
    return quantize_quantize()
        .domain([x0, x1])
        .range(range)
        .unknown(unknown);
  };

  return initRange.apply(linearish(scale), arguments);
}

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/model/heatmap.js
var model_heatmap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var heatmap_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports



// d3 imports


/** The gauge chart model layer */
var HeatmapModel = /** @class */ (function (_super) {
    model_heatmap_extends(HeatmapModel, _super);
    function HeatmapModel(services) {
        var _this = _super.call(this, services) || this;
        _this.axisFlavor = interfaces.AxisFlavor.HOVERABLE;
        _this._colorScale = undefined;
        // List of unique ranges and domains
        _this._domains = [];
        _this._ranges = [];
        _this._matrix = {};
        // Check which scale types are being used
        var axis = Tools.getProperty(_this.getOptions(), 'axes');
        // Need to check options since scale service hasn't been instantiated
        if ((!!Tools.getProperty(axis, 'left', 'scaleType') &&
            Tools.getProperty(axis, 'left', 'scaleType') !==
                interfaces.ScaleTypes.LABELS) ||
            (!!Tools.getProperty(axis, 'right', 'scaleType') &&
                Tools.getProperty(axis, 'right', 'scaleType') !==
                    interfaces.ScaleTypes.LABELS) ||
            (!!Tools.getProperty(axis, 'top', 'scaleType') &&
                Tools.getProperty(axis, 'top', 'scaleType') !==
                    interfaces.ScaleTypes.LABELS) ||
            (!!Tools.getProperty(axis, 'bottom', 'scaleType') &&
                Tools.getProperty(axis, 'bottom', 'scaleType') !==
                    interfaces.ScaleTypes.LABELS)) {
            throw Error('Heatmap only supports label scaletypes.');
        }
        return _this;
    }
    /**
     * Get min and maximum value of the display data
     * @returns Array consisting of smallest and largest values in  data
     */
    HeatmapModel.prototype.getValueDomain = function () {
        var data = this.getDisplayData().map(function (element) { return element.value; });
        var limits = extent(data);
        var domain = [];
        // Round extent values to the nearest multiple of 10
        // Axis rounds values to multiples of 2, 5, and 10s.
        limits.forEach(function (number, index) {
            var value = Number(number);
            if (index === 0 && value >= 0) {
                value = 0;
            }
            else if (value % 10 === 0 || value === 0) {
                value;
            }
            else if (value < 0) {
                value = Math.floor(value / 10) * 10;
            }
            else {
                value = Math.ceil(value / 10) * 10;
            }
            domain.push(value);
        });
        // Ensure the median of the range is 0
        if (domain[0] < 0 && domain[1] > 0) {
            if (Math.abs(domain[0]) > domain[1]) {
                domain[1] = Math.abs(domain[0]);
            }
            else {
                domain[0] = -domain[1];
            }
        }
        return domain;
    };
    /**
     * @override
     * @param value
     * @returns
     */
    HeatmapModel.prototype.getFillColor = function (value) {
        return this._colorScale(value);
    };
    /**
     * Generate a list of all unique domains
     * @returns String[]
     */
    HeatmapModel.prototype.getUniqueDomain = function () {
        if (Tools.isEmpty(this._domains)) {
            var displayData = this.getDisplayData();
            var cartesianScales = this.services.cartesianScales;
            var domainIdentifier_1 = cartesianScales.getDomainIdentifier();
            var mainXAxisPosition = cartesianScales.getMainXAxisPosition();
            var customDomain = cartesianScales.getCustomDomainValuesByposition(mainXAxisPosition);
            // Use user defined domain if specified
            if (!!customDomain) {
                return customDomain;
            }
            // Get unique axis values & create a matrix
            this._domains = Array.from(new Set(displayData.map(function (d) {
                return d[domainIdentifier_1];
            })));
        }
        return this._domains;
    };
    /**
     * Generates a list of all unique ranges
     * @returns String[]
     */
    HeatmapModel.prototype.getUniqueRanges = function () {
        if (Tools.isEmpty(this._ranges)) {
            var displayData = this.getDisplayData();
            var cartesianScales = this.services.cartesianScales;
            var rangeIdentifier_1 = cartesianScales.getRangeIdentifier();
            var mainYAxisPosition = cartesianScales.getMainYAxisPosition();
            var customDomain = cartesianScales.getCustomDomainValuesByposition(mainYAxisPosition);
            // Use user defined domain if specified
            if (!!customDomain) {
                return customDomain;
            }
            // Get unique axis values & create a matrix
            this._ranges = Array.from(new Set(displayData.map(function (d) {
                return d[rangeIdentifier_1];
            })));
        }
        return this._ranges;
    };
    /**
     * Generates a matrix (If doesn't exist) and returns it
     * @returns Object
     */
    HeatmapModel.prototype.getMatrix = function () {
        var _this = this;
        if (Tools.isEmpty(this._matrix)) {
            var uniqueDomain = this.getUniqueDomain();
            var uniqueRange = this.getUniqueRanges();
            var domainIdentifier_2 = this.services.cartesianScales.getDomainIdentifier();
            var rangeIdentifier_2 = this.services.cartesianScales.getRangeIdentifier();
            // Create a column
            var range_1 = {};
            uniqueRange.forEach(function (ran) {
                // Initialize matrix to empty state
                range_1[ran] = {
                    value: null,
                    index: -1,
                };
            });
            // Complete the matrix by cloning the column to all domains
            uniqueDomain.forEach(function (dom) {
                _this._matrix[dom] = Tools.clone(range_1);
            });
            // Fill in user passed data
            this.getDisplayData().forEach(function (d, i) {
                _this._matrix[d[domainIdentifier_2]][d[rangeIdentifier_2]] = {
                    value: d['value'],
                    index: i,
                };
            });
        }
        return this._matrix;
    };
    /**
     *
     * @param newData The new raw data to be set
     */
    HeatmapModel.prototype.setData = function (newData) {
        var sanitizedData = this.sanitize(Tools.clone(newData));
        var dataGroups = this.generateDataGroups(sanitizedData);
        this.set({
            data: sanitizedData,
            dataGroups: dataGroups,
        });
        // Set attributes to empty
        this._domains = [];
        this._ranges = [];
        this._matrix = {};
        return sanitizedData;
    };
    /**
     * Converts Object matrix into a single array
     * @returns Object[]
     */
    HeatmapModel.prototype.getMatrixAsArray = function () {
        var _this = this;
        if (Tools.isEmpty(this._matrix)) {
            this.getMatrix();
        }
        var uniqueDomain = this.getUniqueDomain();
        var uniqueRange = this.getUniqueRanges();
        var domainIdentifier = this.services.cartesianScales.getDomainIdentifier();
        var rangeIdentifier = this.services.cartesianScales.getRangeIdentifier();
        var arr = [];
        uniqueDomain.forEach(function (domain) {
            uniqueRange.forEach(function (range) {
                var element = {
                    value: _this._matrix[domain][range].value,
                    index: _this._matrix[domain][range].index,
                };
                element[domainIdentifier] = domain;
                element[rangeIdentifier] = range;
                arr.push(element);
            });
        });
        return arr;
    };
    /**
     * Generate tabular data from display data
     * @returns Array<Object>
     */
    HeatmapModel.prototype.getTabularDataArray = function () {
        var displayData = this.getDisplayData();
        var _a = this.assignRangeAndDomains(), primaryDomain = _a.primaryDomain, primaryRange = _a.primaryRange, secondaryDomain = _a.secondaryDomain, secondaryRange = _a.secondaryRange;
        var domainValueFormatter;
        var result = heatmap_spreadArrays([
            [primaryDomain.label, primaryRange.label, 'Value']
        ], displayData.map(function (datum) { return [
            datum[primaryDomain.identifier] === null
                ? '&ndash;'
                : domainValueFormatter
                    ? domainValueFormatter(datum[primaryDomain.identifier])
                    : datum[primaryDomain.identifier],
            datum[primaryRange.identifier] === null
                ? '&ndash;'
                : datum[primaryRange.identifier].toLocaleString(),
            datum['value'],
        ]; }));
        return result;
    };
    // Uses quantize scale to return class names
    HeatmapModel.prototype.getColorClassName = function (configs) {
        return configs.originalClassName + " " + this._colorScale(configs.value);
    };
    HeatmapModel.prototype.setColorClassNames = function () {
        var options = this.getOptions();
        var customColors = Tools.getProperty(options, 'color', 'gradient', 'colors');
        var customColorsEnabled = !Tools.isEmpty(customColors);
        var colorPairingOption = Tools.getProperty(options, 'color', 'pairing', 'option');
        // If domain consists of negative and positive values, use diverging palettes
        var domain = this.getValueDomain();
        var colorScheme = domain[0] < 0 && domain[1] > 0 ? 'diverge' : 'mono';
        // Use default color pairing options if not in defined range
        if (colorPairingOption < 1 &&
            colorPairingOption > 4 &&
            colorScheme === 'mono') {
            colorPairingOption = 1;
        }
        else if (colorPairingOption < 1 &&
            colorPairingOption > 2 &&
            colorScheme === 'diverge') {
            colorPairingOption = 1;
        }
        // Uses css classes for fill
        var colorPairing = customColorsEnabled ? customColors : [];
        if (!customColorsEnabled) {
            // Add class names to list and the amount based on the color scheme
            // Carbon charts has 11 colors for a single monochromatic palette & 17 for a divergent palette
            var colorGroupingLength = colorScheme === 'diverge' ? 17 : 11;
            for (var i = 1; i < colorGroupingLength + 1; i++) {
                colorPairing.push("fill-" + colorScheme + "-" + colorPairingOption + "-" + i);
            }
        }
        // Save scale type
        this._colorScale = quantize_quantize()
            .domain(this.getValueDomain())
            .range(colorPairing);
    };
    return HeatmapModel;
}(ChartModelCartesian));

//# sourceMappingURL=../../src/model/heatmap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/heatmap.js
var charts_heatmap_extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var charts_heatmap_spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
// Internal Imports






var HeatmapChart = /** @class */ (function (_super) {
    charts_heatmap_extends(HeatmapChart, _super);
    function HeatmapChart(holder, chartConfigs) {
        var _this = _super.call(this, holder, chartConfigs) || this;
        _this.model = new HeatmapModel(_this.services);
        // Merge the default options for this chart
        // With the user provided options
        _this.model.setOptions(Tools.mergeDefaultChartOptions(configuration_options.heatmapChart, chartConfigs.options));
        // Initialize data, services, components etc.
        _this.init(holder, chartConfigs);
        return _this;
    }
    // Custom getChartComponents - Implements getChartComponents
    // Removes zoombar support and additional `features` that are not supported in heatmap
    HeatmapChart.prototype.getAxisChartComponents = function (graphFrameComponents, configs) {
        var options = this.model.getOptions();
        var toolbarEnabled = Tools.getProperty(options, 'toolbar', 'enabled');
        this.services.cartesianScales.determineAxisDuality();
        this.services.cartesianScales.findDomainAndRangeAxes(); // need to do this before getMainXAxisPosition()
        this.services.cartesianScales.determineOrientation();
        var titleAvailable = !!this.model.getOptions().title;
        var titleComponent = {
            id: 'title',
            components: [new Title(this.model, this.services)],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        var toolbarComponent = {
            id: 'toolbar',
            components: [new Toolbar(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var headerComponent = {
            id: 'header',
            components: [
                new LayoutComponent(this.model, this.services, charts_heatmap_spreadArrays([
                    // always add title to keep layout correct
                    titleComponent
                ], (toolbarEnabled ? [toolbarComponent] : [])), {
                    direction: interfaces.LayoutDirection.ROW,
                    alignItems: interfaces.LayoutAlignItems.CENTER,
                }),
            ],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var legendComponent = {
            id: 'legend',
            components: [new ColorScaleLegend(this.model, this.services)],
            growth: interfaces.LayoutGrowth.PREFERRED,
            renderType: interfaces.RenderTypes.SVG,
        };
        var graphFrameComponent = {
            id: 'graph-frame',
            components: graphFrameComponents,
            growth: interfaces.LayoutGrowth.STRETCH,
            renderType: interfaces.RenderTypes.SVG,
        };
        var isLegendEnabled = Tools.getProperty(configs, 'legend', 'enabled') !== false &&
            this.model.getOptions().legend.enabled !== false;
        // Decide the position of the legend in reference to the chart
        var fullFrameComponentDirection = interfaces.LayoutDirection.COLUMN_REVERSE;
        var legendSpacerComponent = {
            id: 'spacer',
            components: [new Spacer(this.model, this.services, { size: 15 })],
            growth: interfaces.LayoutGrowth.PREFERRED,
        };
        var fullFrameComponent = {
            id: 'full-frame',
            components: [
                new LayoutComponent(this.model, this.services, charts_heatmap_spreadArrays((isLegendEnabled ? [legendComponent] : []), (isLegendEnabled ? [legendSpacerComponent] : []), [
                    graphFrameComponent,
                ]), {
                    direction: fullFrameComponentDirection,
                }),
            ],
            growth: interfaces.LayoutGrowth.STRETCH,
        };
        var topLevelLayoutComponents = [];
        // header component is required for either title or toolbar
        if (titleAvailable || toolbarEnabled) {
            topLevelLayoutComponents.push(headerComponent);
            var titleSpacerComponent = {
                id: 'spacer',
                components: [
                    new Spacer(this.model, this.services, toolbarEnabled ? { size: 15 } : undefined),
                ],
                growth: interfaces.LayoutGrowth.PREFERRED,
            };
            topLevelLayoutComponents.push(titleSpacerComponent);
        }
        topLevelLayoutComponents.push(fullFrameComponent);
        return [
            new AxisChartsTooltip(this.model, this.services),
            new modal_Modal(this.model, this.services),
            new LayoutComponent(this.model, this.services, topLevelLayoutComponents, {
                direction: interfaces.LayoutDirection.COLUMN,
            }),
        ];
    };
    HeatmapChart.prototype.getComponents = function () {
        // Specify what to render inside the graph-frame
        var graphFrameComponents = [
            new TwoDimensionalAxes(this.model, this.services),
            new Heatmap(this.model, this.services),
        ];
        var components = this.getAxisChartComponents(graphFrameComponents);
        return components;
    };
    return HeatmapChart;
}(AxisChart));

//# sourceMappingURL=../../src/charts/heatmap.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/charts/index.js
























//# sourceMappingURL=../../src/charts/index.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/index.js

// Configs & interfaces



//# sourceMappingURL=../src/index.js.map

/***/ }),

/***/ 4891:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "N3": () => (/* binding */ Alignments),
  "Yi": () => (/* binding */ ArrowDirections),
  "aG": () => (/* binding */ AxisFlavor),
  "d1": () => (/* binding */ AxisPositions),
  "bd": () => (/* binding */ AxisTitleOrientations),
  "ul": () => (/* binding */ CalloutDirections),
  "ZG": () => (/* binding */ CartesianOrientations),
  "bD": () => (/* binding */ ChartTheme),
  "$X": () => (/* binding */ ChartTypes),
  "vn": () => (/* binding */ ColorClassNameTypes),
  "Tj": () => (/* binding */ ColorLegendType),
  "fO": () => (/* binding */ DividerStatus),
  "J_": () => (/* binding */ DominantBaseline),
  "zW": () => (/* binding */ Events),
  "jj": () => (/* binding */ GaugeTypes),
  "yH": () => (/* binding */ LayoutAlignItems),
  "ui": () => (/* binding */ LayoutDirection),
  "ZM": () => (/* binding */ LayoutGrowth),
  "_8": () => (/* binding */ LegendItemType),
  "cJ": () => (/* binding */ LegendOrientations),
  "Zd": () => (/* binding */ LegendPositions),
  "WJ": () => (/* binding */ RenderTypes),
  "vY": () => (/* binding */ ScaleTypes),
  "iz": () => (/* binding */ Skeletons),
  "t3": () => (/* binding */ Statuses),
  "UA": () => (/* binding */ TextAnchor),
  "Mw": () => (/* binding */ TickRotations),
  "E$": () => (/* binding */ ToolbarControlTypes),
  "_Q": () => (/* binding */ TreeTypes),
  "vw": () => (/* binding */ TruncationTypes),
  "_k": () => (/* binding */ ZoomBarTypes)
});

// NAMESPACE OBJECT: ../../node_modules/@carbon/charts/interfaces/events.js
var events_namespaceObject = {};
__webpack_require__.r(events_namespaceObject);
__webpack_require__.d(events_namespaceObject, {
  "Alluvial": () => (Alluvial),
  "Area": () => (Area),
  "Axis": () => (Axis),
  "Bar": () => (Bar),
  "Boxplot": () => (Boxplot),
  "CanvasZoom": () => (CanvasZoom),
  "Chart": () => (Chart),
  "CirclePack": () => (CirclePack),
  "Gauge": () => (Gauge),
  "Heatmap": () => (Heatmap),
  "Legend": () => (Legend),
  "Line": () => (Line),
  "Meter": () => (Meter),
  "Modal": () => (Modal),
  "Model": () => (Model),
  "Pie": () => (Pie),
  "Radar": () => (Radar),
  "Scatter": () => (Scatter),
  "Threshold": () => (Threshold),
  "Toolbar": () => (Toolbar),
  "Tooltip": () => (Tooltip),
  "Tree": () => (Tree),
  "Treemap": () => (Treemap),
  "WordCloud": () => (WordCloud),
  "ZoomBar": () => (ZoomBar),
  "ZoomDomain": () => (ZoomDomain)
});

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/interfaces/events.js
/**
 * enum of all events related to the chart on the DOM
 */
var Chart;
(function (Chart) {
    Chart["RENDER_FINISHED"] = "render-finished";
    Chart["RESIZE"] = "chart-resize";
    Chart["MOUSEOVER"] = "chart-mouseover";
    // MOUSEMOVE = "chart-mousemove",
    // CLICK = "chart-click",
    Chart["MOUSEOUT"] = "chart-mouseout";
})(Chart || (Chart = {}));
/**
 * enum of all events related to the overlay modal
 */
var Modal;
(function (Modal) {
    Modal["SHOW"] = "show-modal";
    Modal["HIDE"] = "hide-modal";
})(Modal || (Modal = {}));
/**
 * enum of all events related to the chart model
 */
var Model;
(function (Model) {
    Model["UPDATE"] = "model-update";
})(Model || (Model = {}));
/**
 * enum of all toolbar events
 */
var Toolbar;
(function (Toolbar) {
    Toolbar["SHOW_OVERFLOW_MENU"] = "show-toolbar-overflow-menu";
    Toolbar["HIDE_OVERFLOW_MENU"] = "hide-toolbar-overflow-menu";
    Toolbar["BUTTON_CLICK"] = "toolbar-button-click";
})(Toolbar || (Toolbar = {}));
/**
 * enum of all events related to the zoom-bar
 */
var ZoomBar;
(function (ZoomBar) {
    ZoomBar["UPDATE"] = "zoom-bar-update";
    ZoomBar["SELECTION_START"] = "zoom-bar-selection-start";
    ZoomBar["SELECTION_IN_PROGRESS"] = "zoom-bar-selection-in-progress";
    ZoomBar["SELECTION_END"] = "zoom-bar-selection-end";
})(ZoomBar || (ZoomBar = {}));
/**
 * enum of all events related to the zoom domain
 */
var ZoomDomain;
(function (ZoomDomain) {
    ZoomDomain["CHANGE"] = "zoom-domain-change";
})(ZoomDomain || (ZoomDomain = {}));
/** enum of all events related to canvas zoom *
 *
 */
var CanvasZoom;
(function (CanvasZoom) {
    CanvasZoom["CANVAS_ZOOM_IN"] = "canvas-zoom-in";
    CanvasZoom["CANVAS_ZOOM_OUT"] = "canvas-zoom-out";
})(CanvasZoom || (CanvasZoom = {}));
/**
 * enum of all axis-related events
 */
var Axis;
(function (Axis) {
    Axis["LABEL_MOUSEOVER"] = "axis-label-mouseover";
    Axis["LABEL_MOUSEMOVE"] = "axis-label-mousemove";
    Axis["LABEL_CLICK"] = "axis-label-click";
    Axis["LABEL_MOUSEOUT"] = "axis-label-mouseout";
    Axis["LABEL_FOCUS"] = "axis-label-focus";
    Axis["LABEL_BLUR"] = "axis-label-blur";
    Axis["RENDER_COMPLETE"] = "axis-render-complete";
})(Axis || (Axis = {}));
/**
 * enum of all area graph events
 */
var Area;
(function (Area) {
    Area["POINT_MOUSEOVER"] = "scatter-mouseover";
    Area["POINT_MOUSEMOVE"] = "scatter-mousemove";
    Area["POINT_CLICK"] = "scatter-click";
    Area["POINT_MOUSEOUT"] = "scatter-mouseout";
})(Area || (Area = {}));
/**
 * enum of all wordcloud graph events
 */
var WordCloud;
(function (WordCloud) {
    WordCloud["WORD_MOUSEOVER"] = "wordcloud-word-mouseover";
    WordCloud["WORD_MOUSEMOVE"] = "wordcloud-word-mousemove";
    WordCloud["WORD_CLICK"] = "wordcloud-word-click";
    WordCloud["WORD_MOUSEOUT"] = "wordcloud-word-mouseout";
})(WordCloud || (WordCloud = {}));
/**
 * enum of all pie graph events
 */
var Pie;
(function (Pie) {
    Pie["SLICE_MOUSEOVER"] = "pie-slice-mouseover";
    Pie["SLICE_MOUSEMOVE"] = "pie-slice-mousemove";
    Pie["SLICE_CLICK"] = "pie-slice-click";
    Pie["SLICE_MOUSEOUT"] = "pie-slice-mouseout";
})(Pie || (Pie = {}));
/**
 * enum of all gauge graph events
 */
var Gauge;
(function (Gauge) {
    Gauge["ARC_MOUSEOVER"] = "gauge-arc-mouseover";
    Gauge["ARC_MOUSEMOVE"] = "gauge-arc-mousemove";
    Gauge["ARC_CLICK"] = "gauge-arc-click";
    Gauge["ARC_MOUSEOUT"] = "gauge-arc-mouseout";
})(Gauge || (Gauge = {}));
/**
 * enum of all bar graph events
 */
var Bar;
(function (Bar) {
    Bar["BAR_MOUSEOVER"] = "bar-mouseover";
    Bar["BAR_MOUSEMOVE"] = "bar-mousemove";
    Bar["BAR_CLICK"] = "bar-click";
    Bar["BAR_MOUSEOUT"] = "bar-mouseout";
})(Bar || (Bar = {}));
/**
 * enum of all boxplot graph events
 */
var Boxplot;
(function (Boxplot) {
    Boxplot["BOX_MOUSEOVER"] = "box-mouseover";
    Boxplot["BOX_MOUSEMOVE"] = "box-mousemove";
    Boxplot["BOX_CLICK"] = "box-click";
    Boxplot["BOX_MOUSEOUT"] = "box-mouseout";
    Boxplot["OUTLIER_MOUSEOVER"] = "outlier-mouseover";
    Boxplot["OUTLIER_MOUSEMOVE"] = "outlier-mousemove";
    Boxplot["OUTLIER_CLICK"] = "outlier-click";
    Boxplot["OUTLIER_MOUSEOUT"] = "outlier-mouseout";
})(Boxplot || (Boxplot = {}));
/**
 * enum of all scatter graph events
 */
var Scatter;
(function (Scatter) {
    Scatter["SCATTER_MOUSEOVER"] = "scatter-mouseover";
    Scatter["SCATTER_MOUSEMOVE"] = "scatter-mousemove";
    Scatter["SCATTER_CLICK"] = "scatter-click";
    Scatter["SCATTER_MOUSEOUT"] = "scatter-mouseout";
})(Scatter || (Scatter = {}));
/**
 * enum of all line graph events
 */
var Line;
(function (Line) {
    Line["POINT_MOUSEOVER"] = "scatter-mouseover";
    Line["POINT_MOUSEMOVE"] = "scatter-mousemove";
    Line["POINT_CLICK"] = "scatter-click";
    Line["POINT_MOUSEOUT"] = "scatter-mouseout";
})(Line || (Line = {}));
/**
 * enum of all radar graph events
 */
var Radar;
(function (Radar) {
    Radar["X_AXIS_MOUSEOVER"] = "radar-x-axis-mouseover";
    Radar["X_AXIS_MOUSEMOVE"] = "radar-x-axis-mousemove";
    Radar["X_AXIS_CLICK"] = "radar-x-axis-click";
    Radar["X_AXIS_MOUSEOUT"] = "radar-x-axis-mouseout";
})(Radar || (Radar = {}));
/**
 * enum of all tree graph events
 */
var Tree;
(function (Tree) {
    Tree["NODE_MOUSEOVER"] = "tree-node-mouseover";
    Tree["NODE_CLICK"] = "tree-node-click";
    Tree["NODE_MOUSEOUT"] = "tree-node-mouseout";
})(Tree || (Tree = {}));
/**
 * enum of all treemap graph events
 */
var Treemap;
(function (Treemap) {
    Treemap["LEAF_MOUSEOVER"] = "leaf-mouseover";
    Treemap["LEAF_MOUSEMOVE"] = "leaf-mousemove";
    Treemap["LEAF_CLICK"] = "leaf-click";
    Treemap["LEAF_MOUSEOUT"] = "leaf-mouseout";
})(Treemap || (Treemap = {}));
/**
 * enum of all tooltip events
 */
var Tooltip;
(function (Tooltip) {
    Tooltip["SHOW"] = "show-tooltip";
    Tooltip["MOVE"] = "move-tooltip";
    Tooltip["HIDE"] = "hide-tooltip";
})(Tooltip || (Tooltip = {}));
/**
 * enum of all threshold events
 */
var Threshold;
(function (Threshold) {
    Threshold["SHOW"] = "show-threshold";
    Threshold["HIDE"] = "hide-threshold";
})(Threshold || (Threshold = {}));
/**
 * enum of all legend related events
 */
var Legend;
(function (Legend) {
    Legend["ITEM_HOVER"] = "legend-item-onhover";
    Legend["ITEM_CLICK"] = "legend-item-onclick";
    Legend["ITEM_MOUSEOUT"] = "legend-item-onmouseout";
    Legend["ITEMS_UPDATE"] = "legend-items-update";
})(Legend || (Legend = {}));
/**
 * enum of all circlepack related events
 */
var CirclePack;
(function (CirclePack) {
    CirclePack["CIRCLE_MOUSEOVER"] = "circle-leaf-mouseover";
    CirclePack["CIRCLE_CLICK"] = "circle-leaf-click";
    CirclePack["CIRCLE_MOUSEOUT"] = "circle-leaf-mouseout";
    CirclePack["CIRCLE_MOUSEMOVE"] = "circle-leaf-mousemove";
})(CirclePack || (CirclePack = {}));
/**
 * enum of all alluvial related events
 */
var Alluvial;
(function (Alluvial) {
    Alluvial["NODE_MOUSEOVER"] = "alluvial-node-mouseover";
    Alluvial["NODE_CLICK"] = "alluvial-node-click";
    Alluvial["NODE_MOUSEOUT"] = "alluvial-node-mouseout";
    Alluvial["NODE_MOUSEMOVE"] = "alluvial-node-mousemove";
    Alluvial["LINE_MOUSEOVER"] = "alluvial-line-mouseover";
    Alluvial["LINE_CLICK"] = "alluvial-line-click";
    Alluvial["LINE_MOUSEOUT"] = "alluvial-line-mouseout";
    Alluvial["LINE_MOUSEMOVE"] = "alluvial-line-mousemove";
})(Alluvial || (Alluvial = {}));
/**
 * enum of all meter related events
 */
var Meter;
(function (Meter) {
    Meter["METER_MOUSEOVER"] = "meter-mouseover";
    Meter["METER_CLICK"] = "meter-click";
    Meter["METER_MOUSEOUT"] = "meter-mouseout";
    Meter["METER_MOUSEMOVE"] = "meter-mousemove";
})(Meter || (Meter = {}));
/**
 * enum of all heatmap related events
 */
var Heatmap;
(function (Heatmap) {
    Heatmap["HEATMAP_MOUSEOVER"] = "heatmap-mouseover";
    Heatmap["HEATMAP_CLICK"] = "heatmap-click";
    Heatmap["HEATMAP_MOUSEOUT"] = "heatmap-mouseout";
    Heatmap["HEATMAP_MOUSEMOVE"] = "hetmap-mousemove";
})(Heatmap || (Heatmap = {}));
//# sourceMappingURL=../../src/interfaces/events.js.map
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/interfaces/enums.js

var Events = events_namespaceObject;
var RenderTypes;
(function (RenderTypes) {
    RenderTypes["HTML"] = "html";
    RenderTypes["SVG"] = "svg";
})(RenderTypes || (RenderTypes = {}));
/**
 * enum of all supported chart themes
 */
var ChartTheme;
(function (ChartTheme) {
    ChartTheme["DEFAULT"] = "default";
    ChartTheme["G100"] = "g100";
    ChartTheme["G90"] = "g90";
    ChartTheme["G10"] = "g10";
})(ChartTheme || (ChartTheme = {}));
/**
 * enum of all color classname types
 */
var ColorClassNameTypes;
(function (ColorClassNameTypes) {
    ColorClassNameTypes["BACKGROUND"] = "background";
    ColorClassNameTypes["FILL"] = "fill";
    ColorClassNameTypes["STROKE"] = "stroke";
    ColorClassNameTypes["TOOLTIP"] = "tooltip";
})(ColorClassNameTypes || (ColorClassNameTypes = {}));
/**
 * enum of all possible axis positions
 */
var AxisPositions;
(function (AxisPositions) {
    AxisPositions["LEFT"] = "left";
    AxisPositions["RIGHT"] = "right";
    AxisPositions["TOP"] = "top";
    AxisPositions["BOTTOM"] = "bottom";
})(AxisPositions || (AxisPositions = {}));
/**
 * enum of all possible axis positions
 */
var ZoomBarTypes;
(function (ZoomBarTypes) {
    ZoomBarTypes["GRAPH_VIEW"] = "graph_view";
    ZoomBarTypes["SLIDER_VIEW"] = "slider_view";
})(ZoomBarTypes || (ZoomBarTypes = {}));
/**
 * enum of all possible truncation types
 */
var TruncationTypes;
(function (TruncationTypes) {
    TruncationTypes["END_LINE"] = "end_line";
    TruncationTypes["MID_LINE"] = "mid_line";
    TruncationTypes["FRONT_LINE"] = "front_line";
    TruncationTypes["NONE"] = "none";
})(TruncationTypes || (TruncationTypes = {}));
/**
 * enum of all possible cartesian orientations
 * to be used for determining the orientation
 * of graphs being draw over
 * cartesian scales
 */
var CartesianOrientations;
(function (CartesianOrientations) {
    CartesianOrientations["VERTICAL"] = "vertical";
    CartesianOrientations["HORIZONTAL"] = "horizontal";
})(CartesianOrientations || (CartesianOrientations = {}));
/**
 * enum of all possible scale types
 */
var ScaleTypes;
(function (ScaleTypes) {
    ScaleTypes["TIME"] = "time";
    ScaleTypes["LINEAR"] = "linear";
    ScaleTypes["LOG"] = "log";
    ScaleTypes["LABELS"] = "labels";
    ScaleTypes["LABELS_RATIO"] = "labels-ratio";
})(ScaleTypes || (ScaleTypes = {}));
/**
 * enum of all possible legend positions
 */
var LegendPositions;
(function (LegendPositions) {
    LegendPositions["RIGHT"] = "right";
    LegendPositions["LEFT"] = "left";
    LegendPositions["TOP"] = "top";
    LegendPositions["BOTTOM"] = "bottom";
})(LegendPositions || (LegendPositions = {}));
/**
 * enum of all possible alignments
 */
var Alignments;
(function (Alignments) {
    Alignments["LEFT"] = "left";
    Alignments["CENTER"] = "center";
    Alignments["RIGHT"] = "right";
})(Alignments || (Alignments = {}));
/**
 * enum of all possible legend orientations
 */
var LegendOrientations;
(function (LegendOrientations) {
    LegendOrientations["HORIZONTAL"] = "horizontal";
    LegendOrientations["VERTICAL"] = "vertical";
})(LegendOrientations || (LegendOrientations = {}));
/**
 * enum of tree types for the tree chart
 */
var TreeTypes;
(function (TreeTypes) {
    TreeTypes["TREE"] = "tree";
    TreeTypes["DENDROGRAM"] = "dendrogram";
})(TreeTypes || (TreeTypes = {}));
/**
 * enum of all possible layout directions
 */
var LayoutDirection;
(function (LayoutDirection) {
    LayoutDirection["ROW"] = "row";
    LayoutDirection["COLUMN"] = "column";
    LayoutDirection["ROW_REVERSE"] = "row-reverse";
    LayoutDirection["COLUMN_REVERSE"] = "column-reverse";
})(LayoutDirection || (LayoutDirection = {}));
/**
 * enum of all possible layout growth values
 */
var LayoutGrowth;
(function (LayoutGrowth) {
    LayoutGrowth["FIXED"] = "fixed";
    LayoutGrowth["PREFERRED"] = "preferred";
    LayoutGrowth["STRETCH"] = "stretch";
})(LayoutGrowth || (LayoutGrowth = {}));
/**
 * enum of all possible layout align-items values
 */
var LayoutAlignItems;
(function (LayoutAlignItems) {
    LayoutAlignItems["CENTER"] = "center";
})(LayoutAlignItems || (LayoutAlignItems = {}));
/**
 * enum of all possible callout directions
 */
var CalloutDirections;
(function (CalloutDirections) {
    CalloutDirections["LEFT"] = "left";
    CalloutDirections["RIGHT"] = "right";
})(CalloutDirections || (CalloutDirections = {}));
/**
 * enum of all possible skeleton/empty state types
 */
var Skeletons;
(function (Skeletons) {
    Skeletons["GRID"] = "grid";
    Skeletons["VERT_OR_HORIZ"] = "vertOrHoriz";
    Skeletons["PIE"] = "pie";
    Skeletons["DONUT"] = "donut";
})(Skeletons || (Skeletons = {}));
/**
 * enum of all possible attributes used to aling text horizontally
 */
var TextAnchor;
(function (TextAnchor) {
    TextAnchor["START"] = "start";
    TextAnchor["MIDDLE"] = "middle";
    TextAnchor["END"] = "end";
})(TextAnchor || (TextAnchor = {}));
/**
 * enum of all possible attributes used to aling text vertically
 */
var DominantBaseline;
(function (DominantBaseline) {
    DominantBaseline["BASELINE"] = "baseline";
    DominantBaseline["MIDDLE"] = "middle";
    DominantBaseline["HANGING"] = "hanging";
})(DominantBaseline || (DominantBaseline = {}));
var GaugeTypes;
(function (GaugeTypes) {
    GaugeTypes["SEMI"] = "semi";
    GaugeTypes["FULL"] = "full";
})(GaugeTypes || (GaugeTypes = {}));
/**
 * enum of all possible callout directions
 */
var ArrowDirections;
(function (ArrowDirections) {
    ArrowDirections["UP"] = "up";
    ArrowDirections["DOWN"] = "down";
})(ArrowDirections || (ArrowDirections = {}));
/**
 * enum of carbon statuses
 */
var Statuses;
(function (Statuses) {
    Statuses["SUCCESS"] = "success";
    Statuses["WARNING"] = "warning";
    Statuses["DANGER"] = "danger";
})(Statuses || (Statuses = {}));
/**
 * enum of axis ticks rotation
 */
var TickRotations;
(function (TickRotations) {
    TickRotations["ALWAYS"] = "always";
    TickRotations["AUTO"] = "auto";
    TickRotations["NEVER"] = "never";
})(TickRotations || (TickRotations = {}));
/**
 * enum of chartTypes that work with combo chart
 */
var ChartTypes;
(function (ChartTypes) {
    ChartTypes["SCATTER"] = "scatter";
    ChartTypes["LINE"] = "line";
    ChartTypes["SIMPLE_BAR"] = "simple-bar";
    ChartTypes["STACKED_BAR"] = "stacked-bar";
    ChartTypes["GROUPED_BAR"] = "grouped-bar";
    ChartTypes["AREA"] = "area";
    ChartTypes["STACKED_AREA"] = "stacked-area";
})(ChartTypes || (ChartTypes = {}));
/**
 * enum of supported toolbar control types
 */
var ToolbarControlTypes;
(function (ToolbarControlTypes) {
    ToolbarControlTypes["EXPORT_CSV"] = "Export as CSV";
    ToolbarControlTypes["EXPORT_PNG"] = "Export as PNG";
    ToolbarControlTypes["EXPORT_JPG"] = "Export as JPG";
    ToolbarControlTypes["ZOOM_IN"] = "Zoom in";
    ToolbarControlTypes["ZOOM_OUT"] = "Zoom out";
    ToolbarControlTypes["RESET_ZOOM"] = "Reset zoom";
    ToolbarControlTypes["MAKE_FULLSCREEN"] = "Make fullscreen";
    ToolbarControlTypes["SHOW_AS_DATATABLE"] = "Show as data-table";
    ToolbarControlTypes["CUSTOM"] = "Custom";
})(ToolbarControlTypes || (ToolbarControlTypes = {}));
/**
 * enum of title orientations for _vertical axes_
 */
var AxisTitleOrientations;
(function (AxisTitleOrientations) {
    AxisTitleOrientations["LEFT"] = "left";
    AxisTitleOrientations["RIGHT"] = "right";
})(AxisTitleOrientations || (AxisTitleOrientations = {}));
/**
 * enum of legend item type
 */
var LegendItemType;
(function (LegendItemType) {
    LegendItemType["CHECKBOX"] = "checkbox";
    LegendItemType["RADIUS"] = "radius";
    LegendItemType["AREA"] = "area";
    LegendItemType["SIZE"] = "size";
    LegendItemType["LINE"] = "line";
    LegendItemType["QUARTILE"] = "quartile";
    LegendItemType["ZOOM"] = "zoom";
})(LegendItemType || (LegendItemType = {}));
/**
 * enum of color legend types
 */
var ColorLegendType;
(function (ColorLegendType) {
    ColorLegendType["LINEAR"] = "linear";
    ColorLegendType["QUANTIZE"] = "quantize";
})(ColorLegendType || (ColorLegendType = {}));
/**
 * enum of divider status for heatmap
 */
var DividerStatus;
(function (DividerStatus) {
    DividerStatus["ON"] = "on";
    DividerStatus["AUTO"] = "auto";
    DividerStatus["OFF"] = "off";
})(DividerStatus || (DividerStatus = {}));
/**
 * enum of axis flavor
 */
var AxisFlavor;
(function (AxisFlavor) {
    AxisFlavor["DEFAULT"] = "default";
    AxisFlavor["HOVERABLE"] = "hoverable";
})(AxisFlavor || (AxisFlavor = {}));
//# sourceMappingURL=../../src/interfaces/enums.js.map

/***/ }),

/***/ 8675:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Alignments": () => (/* reexport */ enums/* Alignments */.N3),
  "ArrowDirections": () => (/* reexport */ enums/* ArrowDirections */.Yi),
  "AxisFlavor": () => (/* reexport */ enums/* AxisFlavor */.aG),
  "AxisPositions": () => (/* reexport */ enums/* AxisPositions */.d1),
  "AxisTitleOrientations": () => (/* reexport */ enums/* AxisTitleOrientations */.bd),
  "CalloutDirections": () => (/* reexport */ enums/* CalloutDirections */.ul),
  "CartesianOrientations": () => (/* reexport */ enums/* CartesianOrientations */.ZG),
  "ChartTheme": () => (/* reexport */ enums/* ChartTheme */.bD),
  "ChartTypes": () => (/* reexport */ enums/* ChartTypes */.$X),
  "ColorClassNameTypes": () => (/* reexport */ enums/* ColorClassNameTypes */.vn),
  "ColorLegendType": () => (/* reexport */ enums/* ColorLegendType */.Tj),
  "DividerStatus": () => (/* reexport */ enums/* DividerStatus */.fO),
  "DominantBaseline": () => (/* reexport */ enums/* DominantBaseline */.J_),
  "Events": () => (/* reexport */ enums/* Events */.zW),
  "GaugeTypes": () => (/* reexport */ enums/* GaugeTypes */.jj),
  "LayoutAlignItems": () => (/* reexport */ enums/* LayoutAlignItems */.yH),
  "LayoutDirection": () => (/* reexport */ enums/* LayoutDirection */.ui),
  "LayoutGrowth": () => (/* reexport */ enums/* LayoutGrowth */.ZM),
  "LegendItemType": () => (/* reexport */ enums/* LegendItemType */._8),
  "LegendOrientations": () => (/* reexport */ enums/* LegendOrientations */.cJ),
  "LegendPositions": () => (/* reexport */ enums/* LegendPositions */.Zd),
  "RenderTypes": () => (/* reexport */ enums/* RenderTypes */.WJ),
  "Roles": () => (/* reexport */ Roles),
  "ScaleTypes": () => (/* reexport */ enums/* ScaleTypes */.vY),
  "Skeletons": () => (/* reexport */ enums/* Skeletons */.iz),
  "Statuses": () => (/* reexport */ enums/* Statuses */.t3),
  "TextAnchor": () => (/* reexport */ enums/* TextAnchor */.UA),
  "TickRotations": () => (/* reexport */ enums/* TickRotations */.Mw),
  "ToolbarControlTypes": () => (/* reexport */ enums/* ToolbarControlTypes */.E$),
  "TreeTypes": () => (/* reexport */ enums/* TreeTypes */._Q),
  "TruncationTypes": () => (/* reexport */ enums/* TruncationTypes */.vw),
  "ZoomBarTypes": () => (/* reexport */ enums/* ZoomBarTypes */._k)
});

;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/interfaces/a11y.js
var Roles;
(function (Roles) {
    Roles["GRAPHICS_DOCUMENT"] = "graphics-document";
    Roles["GRAPHICS_OBJECT"] = "graphics-object";
    Roles["GRAPHICS_SYMBOL"] = "graphics-symbol";
    Roles["GROUP"] = "group";
    Roles["DOCUMENT"] = "document";
    Roles["CHECKBOX"] = "checkbox";
    Roles["BUTTON"] = "button";
    Roles["MENU"] = "menu";
    Roles["MENU_ITEM"] = "menuitem";
    Roles["IMG"] = "img";
})(Roles || (Roles = {}));
//# sourceMappingURL=../../src/interfaces/a11y.js.map
// EXTERNAL MODULE: ../../node_modules/@carbon/charts/interfaces/enums.js + 1 modules
var enums = __webpack_require__(4891);
;// CONCATENATED MODULE: ../../node_modules/@carbon/charts/interfaces/index.js


//# sourceMappingURL=../../src/interfaces/index.js.map

/***/ }),

/***/ 145:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TP": () => (/* binding */ FeatureFlags),
/* harmony export */   "tp": () => (/* binding */ createScope),
/* harmony export */   "am": () => (/* binding */ enabled)
/* harmony export */ });
/* unused harmony exports add, disable, enable, merge */
/**
 * Copyright IBM Corp. 2015, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

var enabled$1 = {};

try {
  if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES) {
    if (process.env.CARBON_ENABLE_CSS_CUSTOM_PROPERTIES === 'true') {
      enabled$1.enableCssCustomProperties = true;
    } else {
      enabled$1.enableCssCustomProperties = false;
    }
  } else {
    enabled$1.enableCssCustomProperties = false;
  }

  if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE) {
    if (process.env.CARBON_ENABLE_USE_CONTROLLED_STATE_WITH_VALUE === 'true') {
      enabled$1.enableUseControlledStateWithValue = true;
    } else {
      enabled$1.enableUseControlledStateWithValue = false;
    }
  } else {
    enabled$1.enableUseControlledStateWithValue = false;
  }

  if (process.env.CARBON_ENABLE_CSS_GRID) {
    if (process.env.CARBON_ENABLE_CSS_GRID === 'true') {
      enabled$1.enableCssGrid = true;
    } else {
      enabled$1.enableCssGrid = false;
    }
  } else {
    enabled$1.enableCssGrid = false;
  }

  if (process.env.CARBON_ENABLE_V11_RELEASE) {
    if (process.env.CARBON_ENABLE_V11_RELEASE === 'true') {
      enabled$1.enableV11Release = true;
    } else {
      enabled$1.enableV11Release = false;
    }
  } else {
    enabled$1.enableV11Release = false;
  }
} catch (error) {
  enabled$1.enableCssCustomProperties = false;
  enabled$1.enableUseControlledStateWithValue = false;
  enabled$1.enableCssGrid = false;
  enabled$1.enableV11Release = false;
}

var featureFlagInfo = [{
  name: "enable-css-custom-properties",
  description: "Describe what the flag does",
  enabled: enabled$1.enableCssCustomProperties
}, {
  name: "enable-use-controlled-state-with-value",
  description: "Enable components to be created in either a controlled or uncontrolled mode\n",
  enabled: enabled$1.enableUseControlledStateWithValue
}, {
  name: "enable-css-grid",
  description: "Enable CSS Grid Layout in the Grid and Column React components\n",
  enabled: enabled$1.enableCssGrid
}, {
  name: "enable-v11-release",
  description: "Enable the features and functionality for the v11 Release\n",
  enabled: enabled$1.enableV11Release
}];

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];

  if (!it) {
    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function () {};

      return {
        s: F,
        n: function () {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function (e) {
          throw e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function () {
      it = it.call(o);
    },
    n: function () {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function (e) {
      didErr = true;
      err = e;
    },
    f: function () {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

/**
 * Copyright IBM Corp. 2015, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var FeatureFlagScope = /*#__PURE__*/function () {
  function FeatureFlagScope(flags) {
    var _this = this;

    _classCallCheck(this, FeatureFlagScope);

    this.flags = new Map();

    if (flags) {
      Object.keys(flags).forEach(function (key) {
        _this.flags.set(key, flags[key]);
      });
    }
  }
  /**
   * Check to see if a flag exists
   * @param {string} name
   */


  _createClass(FeatureFlagScope, [{
    key: "checkForFlag",
    value: function checkForFlag(name) {
      if (!this.flags.has(name)) {
        throw new Error("Unable to find a feature flag with the name: `".concat(name, "`"));
      }
    }
    /**
     * Add a feature flag
     * @param {string} name
     * @param {boolean} enabled
     */

  }, {
    key: "add",
    value: function add(name, enabled) {
      if (this.flags.has(name)) {
        throw new Error("The feature flag: ".concat(name, " already exists"));
      }

      this.flags.set(name, enabled);
    }
    /**
     * Enable a feature flag
     * @param {string} name
     */

  }, {
    key: "enable",
    value: function enable(name) {
      this.checkForFlag(name);
      this.flags.set(name, true);
    }
    /**
     * Disable a feature flag
     * @param {string} name
     */

  }, {
    key: "disable",
    value: function disable(name) {
      this.checkForFlag(name);
      this.flags.set(name, false);
    }
    /**
     * Merge the given feature flags with the current set of feature flags.
     * Duplicate keys will be set to the value in the given feature flags.
     * @param {object} flags
     */

  }, {
    key: "merge",
    value: function merge(flags) {
      var _this2 = this;

      Object.keys(flags).forEach(function (key) {
        _this2.flags.set(key, flags[key]);
      });
    }
    /**
     * @param {FeatureFlagScope} scope
     */

  }, {
    key: "mergeWithScope",
    value: function mergeWithScope(scope) {
      var _iterator = _createForOfIteratorHelper(scope.flags),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var _step$value = _slicedToArray(_step.value, 2),
              key = _step$value[0],
              value = _step$value[1];

          if (this.flags.has(key)) {
            continue;
          }

          this.flags.set(key, value);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Check if a feature flag is enabled
     * @param {string} name
     * @returns {boolean}
     */

  }, {
    key: "enabled",
    value: function enabled(name) {
      this.checkForFlag(name);
      return this.flags.get(name);
    }
  }]);

  return FeatureFlagScope;
}();

var FeatureFlags = createScope();

for (var i = 0; i < featureFlagInfo.length; i++) {
  var featureFlag = featureFlagInfo[i];
  FeatureFlags.add(featureFlag.name, featureFlag.enabled);
}
function createScope(flags) {
  return new FeatureFlagScope(flags);
}
function add() {
  return FeatureFlags.add.apply(FeatureFlags, arguments);
}
function enable() {
  return FeatureFlags.enable.apply(FeatureFlags, arguments);
}
function disable() {
  return FeatureFlags.disable.apply(FeatureFlags, arguments);
}
function enabled() {
  return FeatureFlags.enabled.apply(FeatureFlags, arguments);
}
function merge() {
  return FeatureFlags.merge.apply(FeatureFlags, arguments);
}




/***/ }),

/***/ 5495:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "I": () => (/* binding */ Icon),
  "_": () => (/* binding */ Icon_9ecdf98c_objectWithoutProperties),
  "a": () => (/* binding */ _extends)
});

;// CONCATENATED MODULE: ../../node_modules/@carbon/icon-helpers/es/index.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var _excluded = ["width", "height", "viewBox"],
    _excluded2 = ["tabindex"];

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var defaultAttributes = {
  // Reference:
  // https://github.com/IBM/carbon-components-react/issues/1392
  // https://github.com/PolymerElements/iron-iconset-svg/pull/47
  // `focusable` is a string attribute which is why we do not use a boolean here
  focusable: 'false',
  preserveAspectRatio: 'xMidYMid meet'
};
/**
 * Get supplementary HTML attributes for a given <svg> element based on existing
 * attributes.
 */

function getAttributes() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      width = _ref.width,
      height = _ref.height,
      _ref$viewBox = _ref.viewBox,
      viewBox = _ref$viewBox === void 0 ? "0 0 ".concat(width, " ").concat(height) : _ref$viewBox,
      attributes = _objectWithoutProperties(_ref, _excluded);

  var tabindex = attributes.tabindex,
      rest = _objectWithoutProperties(attributes, _excluded2);

  var iconAttributes = _objectSpread2(_objectSpread2(_objectSpread2({}, defaultAttributes), rest), {}, {
    width: width,
    height: height,
    viewBox: viewBox
  }); // TODO: attributes.title assumes that the consumer will implement <title> and
  // correctly set `aria-labelledby`.


  if (iconAttributes['aria-label'] || iconAttributes['aria-labelledby'] || iconAttributes.title) {
    iconAttributes.role = 'img'; // Reference:
    // https://allyjs.io/tutorials/focusing-in-svg.html

    if (tabindex !== undefined && tabindex !== null) {
      iconAttributes.focusable = 'true';
      iconAttributes.tabindex = tabindex;
    }
  } else {
    iconAttributes['aria-hidden'] = true;
  }

  return iconAttributes;
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Convert an icon descriptor to a String
 */

function es_toString(descriptor) {
  var _descriptor$elem = descriptor.elem,
      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,
      _descriptor$attrs = descriptor.attrs,
      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,
      _descriptor$content = descriptor.content,
      content = _descriptor$content === void 0 ? [] : _descriptor$content;
  var children = content.map(es_toString).join('');

  if (elem !== 'svg') {
    return "<".concat(elem, " ").concat(formatAttributes(attrs), ">").concat(children, "</").concat(elem, ">");
  }

  return "<".concat(elem, " ").concat(formatAttributes(getAttributes(attrs)), ">").concat(children, "</").concat(elem, ">");
}
function formatAttributes(attrs) {
  return Object.keys(attrs).reduce(function (acc, key, index) {
    var attribute = "".concat(key, "=\"").concat(attrs[key], "\"");

    if (index === 0) {
      return attribute;
    }

    return acc + ' ' + attribute;
  }, '');
}

/**
 * Copyright IBM Corp. 2018, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
/**
 * Convert an icon descriptor to a DOM node.
 */

function toSVG(descriptor) {
  var _descriptor$elem = descriptor.elem,
      elem = _descriptor$elem === void 0 ? 'svg' : _descriptor$elem,
      _descriptor$attrs = descriptor.attrs,
      attrs = _descriptor$attrs === void 0 ? {} : _descriptor$attrs,
      _descriptor$content = descriptor.content,
      content = _descriptor$content === void 0 ? [] : _descriptor$content;
  var node = document.createElementNS('http://www.w3.org/2000/svg', elem);
  var attributes = elem !== 'svg' ? attrs : getAttributes(attrs);
  Object.keys(attributes).forEach(function (key) {
    node.setAttribute(key, attrs[key]);
  });

  for (var i = 0; i < content.length; i++) {
    node.appendChild(toSVG(content[i]));
  }

  return node;
}



// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(3980);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ../../node_modules/react/index.js
var react = __webpack_require__(2784);
;// CONCATENATED MODULE: ../../node_modules/@carbon/icons-react/es/Icon-9ecdf98c.js
/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.
 */




function Icon_9ecdf98c_ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }

  return keys;
}

function Icon_9ecdf98c_objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? Icon_9ecdf98c_ownKeys(Object(source), !0).forEach(function (key) {
      Icon_9ecdf98c_defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : Icon_9ecdf98c_ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }

  return target;
}

function Icon_9ecdf98c_defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function Icon_9ecdf98c_objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function Icon_9ecdf98c_objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = Icon_9ecdf98c_objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

var Icon_9ecdf98c_excluded = ["className", "children", "tabIndex"],
    Icon_9ecdf98c_excluded2 = ["tabindex"];
var Icon = /*#__PURE__*/react.forwardRef(function Icon(_ref, ref) {
  var className = _ref.className,
      children = _ref.children,
      tabIndex = _ref.tabIndex,
      rest = Icon_9ecdf98c_objectWithoutProperties(_ref, Icon_9ecdf98c_excluded);

  var _getAttributes = getAttributes(Icon_9ecdf98c_objectSpread2(Icon_9ecdf98c_objectSpread2({}, rest), {}, {
    tabindex: tabIndex
  })),
      tabindex = _getAttributes.tabindex,
      props = Icon_9ecdf98c_objectWithoutProperties(_getAttributes, Icon_9ecdf98c_excluded2);

  if (className) {
    props.className = className;
  }

  if (tabindex !== undefined && tabindex !== null) {
    props.tabIndex = tabindex;
  }

  if (ref) {
    props.ref = ref;
  }

  return /*#__PURE__*/react.createElement('svg', props, children);
});
Icon.displayName = 'Icon';
Icon.propTypes = {
  'aria-hidden': (prop_types_default()).string,
  'aria-label': (prop_types_default()).string,
  'aria-labelledby': (prop_types_default()).string,
  children: (prop_types_default()).node,
  className: (prop_types_default()).string,
  height: prop_types_default().oneOfType([(prop_types_default()).number, (prop_types_default()).string]),
  preserveAspectRatio: (prop_types_default()).string,
  tabIndex: (prop_types_default()).string,
  viewBox: (prop_types_default()).string,
  width: prop_types_default().oneOfType([(prop_types_default()).number, (prop_types_default()).string]),
  xmlns: (prop_types_default()).string
};
Icon.defaultProps = {
  xmlns: 'http://www.w3.org/2000/svg',
  preserveAspectRatio: 'xMidYMid meet'
};




/***/ }),

/***/ 2876:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "iv": () => (/* binding */ css)
});

// UNUSED EXPORTS: cache, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet

;// CONCATENATED MODULE: ../../node_modules/@emotion/sheet/dist/emotion-sheet.browser.esm.js
/*

Based off glamor's StyleSheet, thanks Sunil ❤️

high performance StyleSheet for css-in-js systems

- uses multiple style tags behind the scenes for millions of rules
- uses `insertRule` for appending in production for *much* faster performance

// usage

import { StyleSheet } from '@emotion/sheet'

let styleSheet = new StyleSheet({ key: '', container: document.head })

styleSheet.insert('#box { border: 1px solid red; }')
- appends a css rule into the stylesheet

styleSheet.flush()
- empties the stylesheet of all its contents

*/
// $FlowFixMe
function sheetForTag(tag) {
  if (tag.sheet) {
    // $FlowFixMe
    return tag.sheet;
  } // this weirdness brought to you by firefox

  /* istanbul ignore next */


  for (var i = 0; i < document.styleSheets.length; i++) {
    if (document.styleSheets[i].ownerNode === tag) {
      // $FlowFixMe
      return document.styleSheets[i];
    }
  }
}

function createStyleElement(options) {
  var tag = document.createElement('style');
  tag.setAttribute('data-emotion', options.key);

  if (options.nonce !== undefined) {
    tag.setAttribute('nonce', options.nonce);
  }

  tag.appendChild(document.createTextNode(''));
  tag.setAttribute('data-s', '');
  return tag;
}

var StyleSheet = /*#__PURE__*/function () {
  function StyleSheet(options) {
    var _this = this;

    this._insertTag = function (tag) {
      var before;

      if (_this.tags.length === 0) {
        if (_this.insertionPoint) {
          before = _this.insertionPoint.nextSibling;
        } else if (_this.prepend) {
          before = _this.container.firstChild;
        } else {
          before = _this.before;
        }
      } else {
        before = _this.tags[_this.tags.length - 1].nextSibling;
      }

      _this.container.insertBefore(tag, before);

      _this.tags.push(tag);
    };

    this.isSpeedy = options.speedy === undefined ? "production" === 'production' : options.speedy;
    this.tags = [];
    this.ctr = 0;
    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets

    this.key = options.key;
    this.container = options.container;
    this.prepend = options.prepend;
    this.insertionPoint = options.insertionPoint;
    this.before = null;
  }

  var _proto = StyleSheet.prototype;

  _proto.hydrate = function hydrate(nodes) {
    nodes.forEach(this._insertTag);
  };

  _proto.insert = function insert(rule) {
    // the max length is how many rules we have per style tag, it's 65000 in speedy mode
    // it's 1 in dev because we insert source maps that map a single rule to a location
    // and you can only have one source map per style tag
    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
      this._insertTag(createStyleElement(this));
    }

    var tag = this.tags[this.tags.length - 1];

    if (false) { var isImportRule; }

    if (this.isSpeedy) {
      var sheet = sheetForTag(tag);

      try {
        // this is the ultrafast version, works across browsers
        // the big drawback is that the css won't be editable in devtools
        sheet.insertRule(rule, sheet.cssRules.length);
      } catch (e) {
        if (false) {}
      }
    } else {
      tag.appendChild(document.createTextNode(rule));
    }

    this.ctr++;
  };

  _proto.flush = function flush() {
    // $FlowFixMe
    this.tags.forEach(function (tag) {
      return tag.parentNode && tag.parentNode.removeChild(tag);
    });
    this.tags = [];
    this.ctr = 0;

    if (false) {}
  };

  return StyleSheet;
}();



;// CONCATENATED MODULE: ../../node_modules/stylis/src/Utility.js
/**
 * @param {number}
 * @return {number}
 */
var abs = Math.abs

/**
 * @param {number}
 * @return {string}
 */
var Utility_from = String.fromCharCode

/**
 * @param {object}
 * @return {object}
 */
var Utility_assign = Object.assign

/**
 * @param {string} value
 * @param {number} length
 * @return {number}
 */
function hash (value, length) {
	return (((((((length << 2) ^ Utility_charat(value, 0)) << 2) ^ Utility_charat(value, 1)) << 2) ^ Utility_charat(value, 2)) << 2) ^ Utility_charat(value, 3)
}

/**
 * @param {string} value
 * @return {string}
 */
function trim (value) {
	return value.trim()
}

/**
 * @param {string} value
 * @param {RegExp} pattern
 * @return {string?}
 */
function match (value, pattern) {
	return (value = pattern.exec(value)) ? value[0] : value
}

/**
 * @param {string} value
 * @param {(string|RegExp)} pattern
 * @param {string} replacement
 * @return {string}
 */
function replace (value, pattern, replacement) {
	return value.replace(pattern, replacement)
}

/**
 * @param {string} value
 * @param {string} search
 * @return {number}
 */
function indexof (value, search) {
	return value.indexOf(search)
}

/**
 * @param {string} value
 * @param {number} index
 * @return {number}
 */
function Utility_charat (value, index) {
	return value.charCodeAt(index) | 0
}

/**
 * @param {string} value
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function Utility_substr (value, begin, end) {
	return value.slice(begin, end)
}

/**
 * @param {string} value
 * @return {number}
 */
function Utility_strlen (value) {
	return value.length
}

/**
 * @param {any[]} value
 * @return {number}
 */
function Utility_sizeof (value) {
	return value.length
}

/**
 * @param {any} value
 * @param {any[]} array
 * @return {any}
 */
function Utility_append (value, array) {
	return array.push(value), value
}

/**
 * @param {string[]} array
 * @param {function} callback
 * @return {string}
 */
function Utility_combine (array, callback) {
	return array.map(callback).join('')
}

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Tokenizer.js


var line = 1
var column = 1
var Tokenizer_length = 0
var position = 0
var character = 0
var characters = ''

/**
 * @param {string} value
 * @param {object | null} root
 * @param {object | null} parent
 * @param {string} type
 * @param {string[] | string} props
 * @param {object[] | string} children
 * @param {number} length
 */
function node (value, root, parent, type, props, children, length) {
	return {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}
}

/**
 * @param {object} root
 * @param {object} props
 * @return {object}
 */
function copy (root, props) {
	return Utility_assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)
}

/**
 * @return {number}
 */
function Tokenizer_char () {
	return character
}

/**
 * @return {number}
 */
function prev () {
	character = position > 0 ? Utility_charat(characters, --position) : 0

	if (column--, character === 10)
		column = 1, line--

	return character
}

/**
 * @return {number}
 */
function next () {
	character = position < Tokenizer_length ? Utility_charat(characters, position++) : 0

	if (column++, character === 10)
		column = 1, line++

	return character
}

/**
 * @return {number}
 */
function peek () {
	return Utility_charat(characters, position)
}

/**
 * @return {number}
 */
function caret () {
	return position
}

/**
 * @param {number} begin
 * @param {number} end
 * @return {string}
 */
function slice (begin, end) {
	return Utility_substr(characters, begin, end)
}

/**
 * @param {number} type
 * @return {number}
 */
function token (type) {
	switch (type) {
		// \0 \t \n \r \s whitespace token
		case 0: case 9: case 10: case 13: case 32:
			return 5
		// ! + , / > @ ~ isolate token
		case 33: case 43: case 44: case 47: case 62: case 64: case 126:
		// ; { } breakpoint token
		case 59: case 123: case 125:
			return 4
		// : accompanied token
		case 58:
			return 3
		// " ' ( [ opening delimit token
		case 34: case 39: case 40: case 91:
			return 2
		// ) ] closing delimit token
		case 41: case 93:
			return 1
	}

	return 0
}

/**
 * @param {string} value
 * @return {any[]}
 */
function alloc (value) {
	return line = column = 1, Tokenizer_length = Utility_strlen(characters = value), position = 0, []
}

/**
 * @param {any} value
 * @return {any}
 */
function dealloc (value) {
	return characters = '', value
}

/**
 * @param {number} type
 * @return {string}
 */
function delimit (type) {
	return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))
}

/**
 * @param {string} value
 * @return {string[]}
 */
function Tokenizer_tokenize (value) {
	return dealloc(tokenizer(alloc(value)))
}

/**
 * @param {number} type
 * @return {string}
 */
function whitespace (type) {
	while (character = peek())
		if (character < 33)
			next()
		else
			break

	return token(type) > 2 || token(character) > 3 ? '' : ' '
}

/**
 * @param {string[]} children
 * @return {string[]}
 */
function tokenizer (children) {
	while (next())
		switch (token(character)) {
			case 0: append(identifier(position - 1), children)
				break
			case 2: append(delimit(character), children)
				break
			default: append(from(character), children)
		}

	return children
}

/**
 * @param {number} index
 * @param {number} count
 * @return {string}
 */
function escaping (index, count) {
	while (--count && next())
		// not 0-9 A-F a-f
		if (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))
			break

	return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))
}

/**
 * @param {number} type
 * @return {number}
 */
function delimiter (type) {
	while (next())
		switch (character) {
			// ] ) " '
			case type:
				return position
			// " '
			case 34: case 39:
				if (type !== 34 && type !== 39)
					delimiter(character)
				break
			// (
			case 40:
				if (type === 41)
					delimiter(type)
				break
			// \
			case 92:
				next()
				break
		}

	return position
}

/**
 * @param {number} type
 * @param {number} index
 * @return {number}
 */
function commenter (type, index) {
	while (next())
		// //
		if (type + character === 47 + 10)
			break
		// /*
		else if (type + character === 42 + 42 && peek() === 47)
			break

	return '/*' + slice(index, position - 1) + '*' + Utility_from(type === 47 ? type : next())
}

/**
 * @param {number} index
 * @return {string}
 */
function identifier (index) {
	while (!token(peek()))
		next()

	return slice(index, position)
}

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Enum.js
var MS = '-ms-'
var MOZ = '-moz-'
var WEBKIT = '-webkit-'

var COMMENT = 'comm'
var Enum_RULESET = 'rule'
var DECLARATION = 'decl'

var PAGE = '@page'
var MEDIA = '@media'
var IMPORT = '@import'
var CHARSET = '@charset'
var VIEWPORT = '@viewport'
var SUPPORTS = '@supports'
var DOCUMENT = '@document'
var NAMESPACE = '@namespace'
var KEYFRAMES = '@keyframes'
var FONT_FACE = '@font-face'
var COUNTER_STYLE = '@counter-style'
var FONT_FEATURE_VALUES = '@font-feature-values'

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Serializer.js



/**
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function serialize (children, callback) {
	var output = ''
	var length = Utility_sizeof(children)

	for (var i = 0; i < length; i++)
		output += callback(children[i], i, children, callback) || ''

	return output
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 * @return {string}
 */
function stringify (element, index, children, callback) {
	switch (element.type) {
		case IMPORT: case DECLARATION: return element.return = element.return || element.value
		case COMMENT: return ''
		case KEYFRAMES: return element.return = element.value + '{' + serialize(element.children, callback) + '}'
		case Enum_RULESET: element.value = element.props.join(',')
	}

	return Utility_strlen(children = serialize(element.children, callback)) ? element.return = element.value + '{' + children + '}' : ''
}

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Prefixer.js



/**
 * @param {string} value
 * @param {number} length
 * @return {string}
 */
function prefix (value, length) {
	switch (hash(value, length)) {
		// color-adjust
		case 5103:
			return WEBKIT + 'print-' + value + value
		// animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)
		case 5737: case 4201: case 3177: case 3433: case 1641: case 4457: case 2921:
		// text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break
		case 5572: case 6356: case 5844: case 3191: case 6645: case 3005:
		// mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,
		case 6391: case 5879: case 5623: case 6135: case 4599: case 4855:
		// background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)
		case 4215: case 6389: case 5109: case 5365: case 5621: case 3829:
			return WEBKIT + value + value
		// appearance, user-select, transform, hyphens, text-size-adjust
		case 5349: case 4246: case 4810: case 6968: case 2756:
			return WEBKIT + value + MOZ + value + MS + value + value
		// flex, flex-direction
		case 6828: case 4268:
			return WEBKIT + value + MS + value + value
		// order
		case 6165:
			return WEBKIT + value + MS + 'flex-' + value + value
		// align-items
		case 5187:
			return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value
		// align-self
		case 5443:
			return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value
		// align-content
		case 4675:
			return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value
		// flex-shrink
		case 5548:
			return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value
		// flex-basis
		case 5292:
			return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value
		// flex-grow
		case 6060:
			return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value
		// transition
		case 4554:
			return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value
		// cursor
		case 6187:
			return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value
		// background, background-image
		case 5495: case 3959:
			return replace(value, /(image-set\([^]*)/, WEBKIT + '$1' + '$`$1')
		// justify-content
		case 4968:
			return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value
		// (margin|padding)-inline-(start|end)
		case 4095: case 3583: case 4068: case 2532:
			return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value
		// (min|max)?(width|height|inline-size|block-size)
		case 8116: case 7059: case 5753: case 5535:
		case 5445: case 5701: case 4933: case 4677:
		case 5533: case 5789: case 5021: case 4765:
			// stretch, max-content, min-content, fill-available
			if (Utility_strlen(value) - 1 - length > 6)
				switch (Utility_charat(value, length + 1)) {
					// (m)ax-content, (m)in-content
					case 109:
						// -
						if (Utility_charat(value, length + 4) !== 45)
							break
					// (f)ill-available, (f)it-content
					case 102:
						return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (Utility_charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value
					// (s)tretch
					case 115:
						return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value
				}
			break
		// position: sticky
		case 4949:
			// (s)ticky?
			if (Utility_charat(value, length + 1) !== 115)
				break
		// display: (flex|inline-flex)
		case 6444:
			switch (Utility_charat(value, Utility_strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
				// stic(k)y
				case 107:
					return replace(value, ':', ':' + WEBKIT) + value
				// (inline-)?fl(e)x
				case 101:
					return replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (Utility_charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') + value
			}
			break
		// writing-mode
		case 5936:
			switch (Utility_charat(value, length + 11)) {
				// vertical-l(r)
				case 114:
					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value
				// vertical-r(l)
				case 108:
					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value
				// horizontal(-)tb
				case 45:
					return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value
			}

			return WEBKIT + value + MS + value + value
	}

	return value
}

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Middleware.js






/**
 * @param {function[]} collection
 * @return {function}
 */
function middleware (collection) {
	var length = Utility_sizeof(collection)

	return function (element, index, children, callback) {
		var output = ''

		for (var i = 0; i < length; i++)
			output += collection[i](element, index, children, callback) || ''

		return output
	}
}

/**
 * @param {function} callback
 * @return {function}
 */
function rulesheet (callback) {
	return function (element) {
		if (!element.root)
			if (element = element.return)
				callback(element)
	}
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 * @param {function} callback
 */
function prefixer (element, index, children, callback) {
	if (element.length > -1)
		if (!element.return)
			switch (element.type) {
				case DECLARATION: element.return = prefix(element.value, element.length)
					break
				case KEYFRAMES:
					return serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)
				case Enum_RULESET:
					if (element.length)
						return Utility_combine(element.props, function (value) {
							switch (match(value, /(::plac\w+|:read-\w+)/)) {
								// :read-(only|write)
								case ':read-only': case ':read-write':
									return serialize([copy(element, {props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')]})], callback)
								// :placeholder
								case '::placeholder':
									return serialize([
										copy(element, {props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')]}),
										copy(element, {props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')]}),
										copy(element, {props: [replace(value, /:(plac\w+)/, MS + 'input-$1')]})
									], callback)
							}

							return ''
						})
			}
}

/**
 * @param {object} element
 * @param {number} index
 * @param {object[]} children
 */
function namespace (element) {
	switch (element.type) {
		case RULESET:
			element.props = element.props.map(function (value) {
				return combine(tokenize(value), function (value, index, children) {
					switch (charat(value, 0)) {
						// \f
						case 12:
							return substr(value, 1, strlen(value))
						// \0 ( + > ~
						case 0: case 40: case 43: case 62: case 126:
							return value
						// :
						case 58:
							if (children[++index] === 'global')
								children[index] = '', children[++index] = '\f' + substr(children[index], index = 1, -1)
						// \s
						case 32:
							return index === 1 ? '' : value
						default:
							switch (index) {
								case 0: element = value
									return sizeof(children) > 1 ? '' : value
								case index = sizeof(children) - 1: case 2:
									return index === 2 ? value + element + element : value + element
								default:
									return value
							}
					}
				})
			})
	}
}

;// CONCATENATED MODULE: ../../node_modules/stylis/src/Parser.js




/**
 * @param {string} value
 * @return {object[]}
 */
function compile (value) {
	return dealloc(parse('', null, null, null, [''], value = alloc(value), 0, [0], value))
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {string[]} rule
 * @param {string[]} rules
 * @param {string[]} rulesets
 * @param {number[]} pseudo
 * @param {number[]} points
 * @param {string[]} declarations
 * @return {object}
 */
function parse (value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
	var index = 0
	var offset = 0
	var length = pseudo
	var atrule = 0
	var property = 0
	var previous = 0
	var variable = 1
	var scanning = 1
	var ampersand = 1
	var character = 0
	var type = ''
	var props = rules
	var children = rulesets
	var reference = rule
	var characters = type

	while (scanning)
		switch (previous = character, character = next()) {
			// (
			case 40:
				if (previous != 108 && characters.charCodeAt(length - 1) == 58) {
					if (indexof(characters += replace(delimit(character), '&', '&\f'), '&\f') != -1)
						ampersand = -1
					break
				}
			// " ' [
			case 34: case 39: case 91:
				characters += delimit(character)
				break
			// \t \n \r \s
			case 9: case 10: case 13: case 32:
				characters += whitespace(previous)
				break
			// \
			case 92:
				characters += escaping(caret() - 1, 7)
				continue
			// /
			case 47:
				switch (peek()) {
					case 42: case 47:
						Utility_append(comment(commenter(next(), caret()), root, parent), declarations)
						break
					default:
						characters += '/'
				}
				break
			// {
			case 123 * variable:
				points[index++] = Utility_strlen(characters) * ampersand
			// } ; \0
			case 125 * variable: case 59: case 0:
				switch (character) {
					// \0 }
					case 0: case 125: scanning = 0
					// ;
					case 59 + offset:
						if (property > 0 && (Utility_strlen(characters) - length))
							Utility_append(property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2), declarations)
						break
					// @ ;
					case 59: characters += ';'
					// { rule/at-rule
					default:
						Utility_append(reference = ruleset(characters, root, parent, index, offset, rules, points, type, props = [], children = [], length), rulesets)

						if (character === 123)
							if (offset === 0)
								parse(characters, root, reference, reference, props, rulesets, length, points, children)
							else
								switch (atrule) {
									// d m s
									case 100: case 109: case 115:
										parse(value, reference, reference, rule && Utility_append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, props = [], length), children), rules, children, length, points, rule ? props : children)
										break
									default:
										parse(characters, reference, reference, reference, [''], children, 0, points, children)
								}
				}

				index = offset = property = 0, variable = ampersand = 1, type = characters = '', length = pseudo
				break
			// :
			case 58:
				length = 1 + Utility_strlen(characters), property = previous
			default:
				if (variable < 1)
					if (character == 123)
						--variable
					else if (character == 125 && variable++ == 0 && prev() == 125)
						continue

				switch (characters += Utility_from(character), character * variable) {
					// &
					case 38:
						ampersand = offset > 0 ? 1 : (characters += '\f', -1)
						break
					// ,
					case 44:
						points[index++] = (Utility_strlen(characters) - 1) * ampersand, ampersand = 1
						break
					// @
					case 64:
						// -
						if (peek() === 45)
							characters += delimit(next())

						atrule = peek(), offset = length = Utility_strlen(type = characters += identifier(caret())), character++
						break
					// -
					case 45:
						if (previous === 45 && Utility_strlen(characters) == 2)
							variable = 0
				}
		}

	return rulesets
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} index
 * @param {number} offset
 * @param {string[]} rules
 * @param {number[]} points
 * @param {string} type
 * @param {string[]} props
 * @param {string[]} children
 * @param {number} length
 * @return {object}
 */
function ruleset (value, root, parent, index, offset, rules, points, type, props, children, length) {
	var post = offset - 1
	var rule = offset === 0 ? rules : ['']
	var size = Utility_sizeof(rule)

	for (var i = 0, j = 0, k = 0; i < index; ++i)
		for (var x = 0, y = Utility_substr(value, post + 1, post = abs(j = points[i])), z = value; x < size; ++x)
			if (z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\f/g, rule[x])))
				props[k++] = z

	return node(value, root, parent, offset === 0 ? Enum_RULESET : type, props, children, length)
}

/**
 * @param {number} value
 * @param {object} root
 * @param {object?} parent
 * @return {object}
 */
function comment (value, root, parent) {
	return node(value, root, parent, COMMENT, Utility_from(Tokenizer_char()), Utility_substr(value, 2, -2), 0)
}

/**
 * @param {string} value
 * @param {object} root
 * @param {object?} parent
 * @param {number} length
 * @return {object}
 */
function declaration (value, root, parent, length) {
	return node(value, root, parent, DECLARATION, Utility_substr(value, 0, length), Utility_substr(value, length + 1, -1), length)
}

;// CONCATENATED MODULE: ../../node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js





var last = function last(arr) {
  return arr.length ? arr[arr.length - 1] : null;
}; // based on https://github.com/thysultan/stylis.js/blob/e6843c373ebcbbfade25ebcc23f540ed8508da0a/src/Tokenizer.js#L239-L244


var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
  var previous = 0;
  var character = 0;

  while (true) {
    previous = character;
    character = peek(); // &\f

    if (previous === 38 && character === 12) {
      points[index] = 1;
    }

    if (token(character)) {
      break;
    }

    next();
  }

  return slice(begin, position);
};

var toRules = function toRules(parsed, points) {
  // pretend we've started with a comma
  var index = -1;
  var character = 44;

  do {
    switch (token(character)) {
      case 0:
        // &\f
        if (character === 38 && peek() === 12) {
          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
          // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
          // and when it should just concatenate the outer and inner selectors
          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
          points[index] = 1;
        }

        parsed[index] += identifierWithPointTracking(position - 1, points, index);
        break;

      case 2:
        parsed[index] += delimit(character);
        break;

      case 4:
        // comma
        if (character === 44) {
          // colon
          parsed[++index] = peek() === 58 ? '&\f' : '';
          points[index] = parsed[index].length;
          break;
        }

      // fallthrough

      default:
        parsed[index] += Utility_from(character);
    }
  } while (character = next());

  return parsed;
};

var getRules = function getRules(value, points) {
  return dealloc(toRules(alloc(value), points));
}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11


var fixedElements = /* #__PURE__ */new WeakMap();
var compat = function compat(element) {
  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo
  // negative .length indicates that this rule has been already prefixed
  element.length < 1) {
    return;
  }

  var value = element.value,
      parent = element.parent;
  var isImplicitRule = element.column === parent.column && element.line === parent.line;

  while (parent.type !== 'rule') {
    parent = parent.parent;
    if (!parent) return;
  } // short-circuit for the simplest case


  if (element.props.length === 1 && value.charCodeAt(0) !== 58
  /* colon */
  && !fixedElements.get(parent)) {
    return;
  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
  // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"


  if (isImplicitRule) {
    return;
  }

  fixedElements.set(element, true);
  var points = [];
  var rules = getRules(value, points);
  var parentRules = parent.props;

  for (var i = 0, k = 0; i < rules.length; i++) {
    for (var j = 0; j < parentRules.length; j++, k++) {
      element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + " " + rules[i];
    }
  }
};
var removeLabel = function removeLabel(element) {
  if (element.type === 'decl') {
    var value = element.value;

    if ( // charcode for l
    value.charCodeAt(0) === 108 && // charcode for b
    value.charCodeAt(2) === 98) {
      // this ignores label
      element["return"] = '';
      element.value = '';
    }
  }
};
var ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';

var isIgnoringComment = function isIgnoringComment(element) {
  return !!element && element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;
};

var createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {
  return function (element, index, children) {
    if (element.type !== 'rule') return;
    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);

    if (unsafePseudoClasses && cache.compat !== true) {
      var prevElement = index > 0 ? children[index - 1] : null;

      if (prevElement && isIgnoringComment(last(prevElement.children))) {
        return;
      }

      unsafePseudoClasses.forEach(function (unsafePseudoClass) {
        console.error("The pseudo class \"" + unsafePseudoClass + "\" is potentially unsafe when doing server-side rendering. Try changing it to \"" + unsafePseudoClass.split('-child')[0] + "-of-type\".");
      });
    }
  };
};

var isImportRule = function isImportRule(element) {
  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;
};

var isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {
  for (var i = index - 1; i >= 0; i--) {
    if (!isImportRule(children[i])) {
      return true;
    }
  }

  return false;
}; // use this to remove incorrect elements from further processing
// so they don't get handed to the `sheet` (or anything else)
// as that could potentially lead to additional logs which in turn could be overhelming to the user


var nullifyElement = function nullifyElement(element) {
  element.type = '';
  element.value = '';
  element["return"] = '';
  element.children = '';
  element.props = '';
};

var incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {
  if (!isImportRule(element)) {
    return;
  }

  if (element.parent) {
    console.error("`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.");
    nullifyElement(element);
  } else if (isPrependedWithRegularRules(index, children)) {
    console.error("`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.");
    nullifyElement(element);
  }
};

var defaultStylisPlugins = [prefixer];

var createCache = function createCache(options) {
  var key = options.key;

  if (false) {}

  if ( key === 'css') {
    var ssrStyles = document.querySelectorAll("style[data-emotion]:not([data-s])"); // get SSRed styles out of the way of React's hydration
    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
    // note this very very intentionally targets all style elements regardless of the key to ensure
    // that creating a cache works inside of render of a React component

    Array.prototype.forEach.call(ssrStyles, function (node) {
      // we want to only move elements which have a space in the data-emotion attribute value
      // because that indicates that it is an Emotion 11 server-side rendered style elements
      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
      // will not result in the Emotion 10 styles being destroyed
      var dataEmotionAttribute = node.getAttribute('data-emotion');

      if (dataEmotionAttribute.indexOf(' ') === -1) {
        return;
      }
      document.head.appendChild(node);
      node.setAttribute('data-s', '');
    });
  }

  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;

  if (false) {}

  var inserted = {}; // $FlowFixMe

  var container;
  var nodesToHydrate = [];

  {
    container = options.container || document.head;
    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which
    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
    document.querySelectorAll("style[data-emotion^=\"" + key + " \"]"), function (node) {
      var attrib = node.getAttribute("data-emotion").split(' '); // $FlowFixMe

      for (var i = 1; i < attrib.length; i++) {
        inserted[attrib[i]] = true;
      }

      nodesToHydrate.push(node);
    });
  }

  var _insert;

  var omnipresentPlugins = [compat, removeLabel];

  if (false) {}

  {
    var currentSheet;
    var finalizingPlugins = [stringify,  false ? 0 : rulesheet(function (rule) {
      currentSheet.insert(rule);
    })];
    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));

    var stylis = function stylis(styles) {
      return serialize(compile(styles), serializer);
    };

    _insert = function insert(selector, serialized, sheet, shouldCache) {
      currentSheet = sheet;

      if (false) {}

      stylis(selector ? selector + "{" + serialized.styles + "}" : serialized.styles);

      if (shouldCache) {
        cache.inserted[serialized.name] = true;
      }
    };
  }

  var cache = {
    key: key,
    sheet: new StyleSheet({
      key: key,
      container: container,
      nonce: options.nonce,
      speedy: options.speedy,
      prepend: options.prepend,
      insertionPoint: options.insertionPoint
    }),
    nonce: options.nonce,
    inserted: inserted,
    registered: {},
    insert: _insert
  };
  cache.sheet.hydrate(nodesToHydrate);
  return cache;
};

/* harmony default export */ const emotion_cache_browser_esm = (createCache);

;// CONCATENATED MODULE: ../../node_modules/@emotion/hash/dist/hash.browser.esm.js
/* eslint-disable */
// Inspired by https://github.com/garycourt/murmurhash-js
// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
function murmur2(str) {
  // 'm' and 'r' are mixing constants generated offline.
  // They're not really 'magic', they just happen to work well.
  // const m = 0x5bd1e995;
  // const r = 24;
  // Initialize the hash
  var h = 0; // Mix 4 bytes at a time into the hash

  var k,
      i = 0,
      len = str.length;

  for (; len >= 4; ++i, len -= 4) {
    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;
    k =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);
    k ^=
    /* k >>> r: */
    k >>> 24;
    h =
    /* Math.imul(k, m): */
    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^
    /* Math.imul(h, m): */
    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Handle the last few bytes of the input array


  switch (len) {
    case 3:
      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;

    case 2:
      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;

    case 1:
      h ^= str.charCodeAt(i) & 0xff;
      h =
      /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  } // Do a few final mixes of the hash to ensure the last few
  // bytes are well-incorporated.


  h ^= h >>> 13;
  h =
  /* Math.imul(h, m): */
  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);
  return ((h ^ h >>> 15) >>> 0).toString(36);
}

/* harmony default export */ const hash_browser_esm = (murmur2);

;// CONCATENATED MODULE: ../../node_modules/@emotion/unitless/dist/unitless.browser.esm.js
var unitlessKeys = {
  animationIterationCount: 1,
  borderImageOutset: 1,
  borderImageSlice: 1,
  borderImageWidth: 1,
  boxFlex: 1,
  boxFlexGroup: 1,
  boxOrdinalGroup: 1,
  columnCount: 1,
  columns: 1,
  flex: 1,
  flexGrow: 1,
  flexPositive: 1,
  flexShrink: 1,
  flexNegative: 1,
  flexOrder: 1,
  gridRow: 1,
  gridRowEnd: 1,
  gridRowSpan: 1,
  gridRowStart: 1,
  gridColumn: 1,
  gridColumnEnd: 1,
  gridColumnSpan: 1,
  gridColumnStart: 1,
  msGridRow: 1,
  msGridRowSpan: 1,
  msGridColumn: 1,
  msGridColumnSpan: 1,
  fontWeight: 1,
  lineHeight: 1,
  opacity: 1,
  order: 1,
  orphans: 1,
  tabSize: 1,
  widows: 1,
  zIndex: 1,
  zoom: 1,
  WebkitLineClamp: 1,
  // SVG-related properties
  fillOpacity: 1,
  floodOpacity: 1,
  stopOpacity: 1,
  strokeDasharray: 1,
  strokeDashoffset: 1,
  strokeMiterlimit: 1,
  strokeOpacity: 1,
  strokeWidth: 1
};

/* harmony default export */ const unitless_browser_esm = (unitlessKeys);

;// CONCATENATED MODULE: ../../node_modules/@emotion/memoize/dist/emotion-memoize.browser.esm.js
function memoize(fn) {
  var cache = Object.create(null);
  return function (arg) {
    if (cache[arg] === undefined) cache[arg] = fn(arg);
    return cache[arg];
  };
}

/* harmony default export */ const emotion_memoize_browser_esm = (memoize);

;// CONCATENATED MODULE: ../../node_modules/@emotion/serialize/dist/emotion-serialize.browser.esm.js




var ILLEGAL_ESCAPE_SEQUENCE_ERROR = "You have illegal escape sequence in your template literal, most likely inside content's property value.\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \"content: '\\00d7';\" should become \"content: '\\\\00d7';\".\nYou can read more about this here:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences";
var UNDEFINED_AS_OBJECT_KEY_ERROR = "You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).";
var hyphenateRegex = /[A-Z]|^ms/g;
var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;

var isCustomProperty = function isCustomProperty(property) {
  return property.charCodeAt(1) === 45;
};

var isProcessableValue = function isProcessableValue(value) {
  return value != null && typeof value !== 'boolean';
};

var processStyleName = /* #__PURE__ */emotion_memoize_browser_esm(function (styleName) {
  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();
});

var processStyleValue = function processStyleValue(key, value) {
  switch (key) {
    case 'animation':
    case 'animationName':
      {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor
            };
            return p1;
          });
        }
      }
  }

  if (unitless_browser_esm[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
    return value + 'px';
  }

  return value;
};

if (false) { var hyphenatedCache, hyphenPattern, msPattern, oldProcessStyleValue, contentValues, contentValuePattern; }

function handleInterpolation(mergedProps, registered, interpolation) {
  if (interpolation == null) {
    return '';
  }

  if (interpolation.__emotion_styles !== undefined) {
    if (false) {}

    return interpolation;
  }

  switch (typeof interpolation) {
    case 'boolean':
      {
        return '';
      }

    case 'object':
      {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor
          };
          return interpolation.name;
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next;

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor
              };
              next = next.next;
            }
          }

          var styles = interpolation.styles + ";";

          if (false) {}

          return styles;
        }

        return createStringFromObject(mergedProps, registered, interpolation);
      }

    case 'function':
      {
        if (mergedProps !== undefined) {
          var previousCursor = cursor;
          var result = interpolation(mergedProps);
          cursor = previousCursor;
          return handleInterpolation(mergedProps, registered, result);
        } else if (false) {}

        break;
      }

    case 'string':
      if (false) { var replaced, matched; }

      break;
  } // finalize string values (regular strings and functions interpolated into css calls)


  if (registered == null) {
    return interpolation;
  }

  var cached = registered[interpolation];
  return cached !== undefined ? cached : interpolation;
}

function createStringFromObject(mergedProps, registered, obj) {
  var string = '';

  if (Array.isArray(obj)) {
    for (var i = 0; i < obj.length; i++) {
      string += handleInterpolation(mergedProps, registered, obj[i]) + ";";
    }
  } else {
    for (var _key in obj) {
      var value = obj[_key];

      if (typeof value !== 'object') {
        if (registered != null && registered[value] !== undefined) {
          string += _key + "{" + registered[value] + "}";
        } else if (isProcessableValue(value)) {
          string += processStyleName(_key) + ":" + processStyleValue(_key, value) + ";";
        }
      } else {
        if (_key === 'NO_COMPONENT_SELECTOR' && "production" !== 'production') {}

        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
          for (var _i = 0; _i < value.length; _i++) {
            if (isProcessableValue(value[_i])) {
              string += processStyleName(_key) + ":" + processStyleValue(_key, value[_i]) + ";";
            }
          }
        } else {
          var interpolated = handleInterpolation(mergedProps, registered, value);

          switch (_key) {
            case 'animation':
            case 'animationName':
              {
                string += processStyleName(_key) + ":" + interpolated + ";";
                break;
              }

            default:
              {
                if (false) {}

                string += _key + "{" + interpolated + "}";
              }
          }
        }
      }
    }
  }

  return string;
}

var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g;
var sourceMapPattern;

if (false) {} // this is the cursor for keyframes
// keyframes are stored on the SerializedStyles object as a linked list


var cursor;
var serializeStyles = function serializeStyles(args, registered, mergedProps) {
  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
    return args[0];
  }

  var stringMode = true;
  var styles = '';
  cursor = undefined;
  var strings = args[0];

  if (strings == null || strings.raw === undefined) {
    stringMode = false;
    styles += handleInterpolation(mergedProps, registered, strings);
  } else {
    if (false) {}

    styles += strings[0];
  } // we start at 1 since we've already handled the first arg


  for (var i = 1; i < args.length; i++) {
    styles += handleInterpolation(mergedProps, registered, args[i]);

    if (stringMode) {
      if (false) {}

      styles += strings[i];
    }
  }

  var sourceMap;

  if (false) {} // using a global regex with .exec is stateful so lastIndex has to be reset each time


  labelPattern.lastIndex = 0;
  var identifierName = '';
  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

  while ((match = labelPattern.exec(styles)) !== null) {
    identifierName += '-' + // $FlowFixMe we know it's not null
    match[1];
  }

  var name = hash_browser_esm(styles) + identifierName;

  if (false) {}

  return {
    name: name,
    styles: styles,
    next: cursor
  };
};



;// CONCATENATED MODULE: ../../node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js
var isBrowser = "object" !== 'undefined';
function getRegisteredStyles(registered, registeredStyles, classNames) {
  var rawClassName = '';
  classNames.split(' ').forEach(function (className) {
    if (registered[className] !== undefined) {
      registeredStyles.push(registered[className] + ";");
    } else {
      rawClassName += className + " ";
    }
  });
  return rawClassName;
}
var insertStyles = function insertStyles(cache, serialized, isStringTag) {
  var className = cache.key + "-" + serialized.name;

  if ( // we only need to add the styles to the registered cache if the
  // class name could be used further down
  // the tree but if it's a string tag, we know it won't
  // so we don't have to add it to registered cache.
  // this improves memory usage since we can avoid storing the whole style string
  (isStringTag === false || // we need to always store it if we're in compat mode and
  // in node since emotion-server relies on whether a style is in
  // the registered cache to know whether a style is global or not
  // also, note that this check will be dead code eliminated in the browser
  isBrowser === false ) && cache.registered[className] === undefined) {
    cache.registered[className] = serialized.styles;
  }

  if (cache.inserted[serialized.name] === undefined) {
    var current = serialized;

    do {
      var maybeStyles = cache.insert(serialized === current ? "." + className : '', current, cache.sheet, true);

      current = current.next;
    } while (current !== undefined);
  }
};



;// CONCATENATED MODULE: ../../node_modules/@emotion/css/create-instance/dist/emotion-css-create-instance.esm.js




function insertWithoutScoping(cache, serialized) {
  if (cache.inserted[serialized.name] === undefined) {
    return cache.insert('', serialized, cache.sheet, true);
  }
}

function merge(registered, css, className) {
  var registeredStyles = [];
  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);

  if (registeredStyles.length < 2) {
    return className;
  }

  return rawClassName + css(registeredStyles);
}

var createEmotion = function createEmotion(options) {
  var cache = emotion_cache_browser_esm(options); // $FlowFixMe

  cache.sheet.speedy = function (value) {
    if (false) {}

    this.isSpeedy = value;
  };

  cache.compat = true;

  var css = function css() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var serialized = serializeStyles(args, cache.registered, undefined);
    insertStyles(cache, serialized, false);
    return cache.key + "-" + serialized.name;
  };

  var keyframes = function keyframes() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    var serialized = serializeStyles(args, cache.registered);
    var animation = "animation-" + serialized.name;
    insertWithoutScoping(cache, {
      name: serialized.name,
      styles: "@keyframes " + animation + "{" + serialized.styles + "}"
    });
    return animation;
  };

  var injectGlobal = function injectGlobal() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    var serialized = serializeStyles(args, cache.registered);
    insertWithoutScoping(cache, serialized);
  };

  var cx = function cx() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    return merge(cache.registered, css, classnames(args));
  };

  return {
    css: css,
    cx: cx,
    injectGlobal: injectGlobal,
    keyframes: keyframes,
    hydrate: function hydrate(ids) {
      ids.forEach(function (key) {
        cache.inserted[key] = true;
      });
    },
    flush: function flush() {
      cache.registered = {};
      cache.inserted = {};
      cache.sheet.flush();
    },
    // $FlowFixMe
    sheet: cache.sheet,
    cache: cache,
    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),
    merge: merge.bind(null, cache.registered, css)
  };
};

var classnames = function classnames(args) {
  var cls = '';

  for (var i = 0; i < args.length; i++) {
    var arg = args[i];
    if (arg == null) continue;
    var toAdd = void 0;

    switch (typeof arg) {
      case 'boolean':
        break;

      case 'object':
        {
          if (Array.isArray(arg)) {
            toAdd = classnames(arg);
          } else {
            toAdd = '';

            for (var k in arg) {
              if (arg[k] && k) {
                toAdd && (toAdd += ' ');
                toAdd += k;
              }
            }
          }

          break;
        }

      default:
        {
          toAdd = arg;
        }
    }

    if (toAdd) {
      cls && (cls += ' ');
      cls += toAdd;
    }
  }

  return cls;
};

/* harmony default export */ const emotion_css_create_instance_esm = (createEmotion);

;// CONCATENATED MODULE: ../../node_modules/@emotion/css/dist/emotion-css.esm.js





var _createEmotion = emotion_css_create_instance_esm({
  key: 'css'
}),
    flush = _createEmotion.flush,
    hydrate = _createEmotion.hydrate,
    cx = _createEmotion.cx,
    emotion_css_esm_merge = _createEmotion.merge,
    emotion_css_esm_getRegisteredStyles = _createEmotion.getRegisteredStyles,
    injectGlobal = _createEmotion.injectGlobal,
    keyframes = _createEmotion.keyframes,
    css = _createEmotion.css,
    sheet = _createEmotion.sheet,
    cache = _createEmotion.cache;




/***/ }),

/***/ 5275:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ components_Modal)
});

// EXTERNAL MODULE: ../../node_modules/@carbon/feature-flags/es/index.js
var es = __webpack_require__(145);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(5882);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4245);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(8775);
// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(3980);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ../../node_modules/react/index.js
var react = __webpack_require__(2784);
// EXTERNAL MODULE: ../../node_modules/classnames/index.js
var classnames = __webpack_require__(2779);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ../../node_modules/@carbon/icons-react/es/Icon-9ecdf98c.js + 1 modules
var Icon_9ecdf98c = __webpack_require__(5495);
;// CONCATENATED MODULE: ../../node_modules/@carbon/icons-react/es/__generated__/bucket-5.js
/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.
 */





var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _circle, _path105, _circle2, _path106, _circle3, _path107, _circle4, _path108, _circle5, _circle6, _circle7, _circle8, _path109, _path110, _path111, _path112, _circle9, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _path122, _path123, _path124, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _circle10, _path134, _circle11, _path135, _circle12, _path136, _circle13, _path137, _path138, _path139, _path140, _path141, _path142, _path143, _path144, _path145, _path146, _path147, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _path186, _path187, _path188, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _circle14, _path309, _circle15, _path310, _circle16, _path311, _circle17, _path312, _circle18, _path313, _circle19, _path314, _circle20, _path315, _circle21, _path316, _path317, _circle22, _path318, _circle23, _path319, _path320, _circle24, _path321, _circle25, _path322, _path323, _circle26, _path324, _circle27, _path325, _path326, _circle28, _path327, _circle29, _path328, _path329, _path330, _circle30, _path331, _circle31, _path332, _path333, _path334, _circle32, _path335, _circle33, _path336, _path337, _path338, _circle34, _path339, _circle35, _path340, _path341, _path342, _circle36, _path343, _circle37, _path344, _path345, _circle38, _path346, _circle39, _path347, _path348, _circle40, _path349, _circle41, _path350, _path351, _circle42, _path352, _circle43, _path353, _path354, _circle44, _path355, _circle45, _path356, _path357, _path358, _path359, _path360, _path361, _path362, _path363, _path364, _path365, _path366, _path367, _path368, _path369, _path370, _path371, _path372, _path373, _path374, _path375, _path376, _path377, _path378, _path379, _path380, _path381, _path382, _path383, _path384, _path385, _path386, _path387, _path388, _path389, _path390, _path391, _path392, _path393, _path394, _path395, _path396, _circle46, _path397, _circle47, _path398, _circle48, _path399, _circle49, _path400, _path401, _path402, _path403, _path404;

var _excluded = (/* unused pure expression or super */ null && (["children"])),
    _excluded2 = (/* unused pure expression or super */ null && (["children"])),
    _excluded3 = (/* unused pure expression or super */ null && (["children"])),
    _excluded4 = (/* unused pure expression or super */ null && (["children"])),
    _excluded5 = (/* unused pure expression or super */ null && (["children"])),
    _excluded6 = (/* unused pure expression or super */ null && (["children"])),
    _excluded7 = (/* unused pure expression or super */ null && (["children"])),
    _excluded8 = (/* unused pure expression or super */ null && (["children"])),
    _excluded9 = (/* unused pure expression or super */ null && (["children"])),
    _excluded10 = (/* unused pure expression or super */ null && (["children"])),
    _excluded11 = (/* unused pure expression or super */ null && (["children"])),
    _excluded12 = (/* unused pure expression or super */ null && (["children"])),
    _excluded13 = (/* unused pure expression or super */ null && (["children"])),
    _excluded14 = (/* unused pure expression or super */ null && (["children"])),
    _excluded15 = (/* unused pure expression or super */ null && (["children"])),
    _excluded16 = (/* unused pure expression or super */ null && (["children"])),
    _excluded17 = (/* unused pure expression or super */ null && (["children"])),
    _excluded18 = (/* unused pure expression or super */ null && (["children"])),
    _excluded19 = (/* unused pure expression or super */ null && (["children"])),
    _excluded20 = (/* unused pure expression or super */ null && (["children"])),
    _excluded21 = (/* unused pure expression or super */ null && (["children"])),
    _excluded22 = (/* unused pure expression or super */ null && (["children"])),
    _excluded23 = (/* unused pure expression or super */ null && (["children"])),
    _excluded24 = (/* unused pure expression or super */ null && (["children"])),
    _excluded25 = (/* unused pure expression or super */ null && (["children"])),
    _excluded26 = (/* unused pure expression or super */ null && (["children"])),
    _excluded27 = (/* unused pure expression or super */ null && (["children"])),
    _excluded28 = (/* unused pure expression or super */ null && (["children"])),
    _excluded29 = (/* unused pure expression or super */ null && (["children"])),
    _excluded30 = (/* unused pure expression or super */ null && (["children"])),
    _excluded31 = (/* unused pure expression or super */ null && (["children"])),
    _excluded32 = (/* unused pure expression or super */ null && (["children"])),
    _excluded33 = (/* unused pure expression or super */ null && (["children"])),
    _excluded34 = (/* unused pure expression or super */ null && (["children"])),
    _excluded35 = (/* unused pure expression or super */ null && (["children"])),
    _excluded36 = (/* unused pure expression or super */ null && (["children"])),
    _excluded37 = (/* unused pure expression or super */ null && (["children"])),
    _excluded38 = (/* unused pure expression or super */ null && (["children"])),
    _excluded39 = (/* unused pure expression or super */ null && (["children"])),
    _excluded40 = (/* unused pure expression or super */ null && (["children"])),
    _excluded41 = (/* unused pure expression or super */ null && (["children"])),
    _excluded42 = (/* unused pure expression or super */ null && (["children"])),
    _excluded43 = (/* unused pure expression or super */ null && (["children"])),
    _excluded44 = (/* unused pure expression or super */ null && (["children"])),
    _excluded45 = (/* unused pure expression or super */ null && (["children"])),
    _excluded46 = (/* unused pure expression or super */ null && (["children"])),
    _excluded47 = (/* unused pure expression or super */ null && (["children"])),
    _excluded48 = (/* unused pure expression or super */ null && (["children"])),
    _excluded49 = (/* unused pure expression or super */ null && (["children"])),
    _excluded50 = (/* unused pure expression or super */ null && (["children"])),
    _excluded51 = (/* unused pure expression or super */ null && (["children"])),
    _excluded52 = (/* unused pure expression or super */ null && (["children"])),
    _excluded53 = (/* unused pure expression or super */ null && (["children"])),
    _excluded54 = (/* unused pure expression or super */ null && (["children"])),
    _excluded55 = (/* unused pure expression or super */ null && (["children"])),
    _excluded56 = (/* unused pure expression or super */ null && (["children"])),
    _excluded57 = (/* unused pure expression or super */ null && (["children"])),
    _excluded58 = (/* unused pure expression or super */ null && (["children"])),
    _excluded59 = (/* unused pure expression or super */ null && (["children"])),
    _excluded60 = (/* unused pure expression or super */ null && (["children"])),
    _excluded61 = (/* unused pure expression or super */ null && (["children"])),
    _excluded62 = (/* unused pure expression or super */ null && (["children"])),
    _excluded63 = (/* unused pure expression or super */ null && (["children"])),
    _excluded64 = (/* unused pure expression or super */ null && (["children"])),
    _excluded65 = (/* unused pure expression or super */ null && (["children"])),
    _excluded66 = (/* unused pure expression or super */ null && (["children"])),
    _excluded67 = (/* unused pure expression or super */ null && (["children"])),
    _excluded68 = (/* unused pure expression or super */ null && (["children"])),
    _excluded69 = (/* unused pure expression or super */ null && (["children"])),
    _excluded70 = (/* unused pure expression or super */ null && (["children"])),
    _excluded71 = (/* unused pure expression or super */ null && (["children"])),
    _excluded72 = (/* unused pure expression or super */ null && (["children"])),
    _excluded73 = (/* unused pure expression or super */ null && (["children"])),
    _excluded74 = (/* unused pure expression or super */ null && (["children"])),
    _excluded75 = (/* unused pure expression or super */ null && (["children"])),
    _excluded76 = (/* unused pure expression or super */ null && (["children"])),
    _excluded77 = (/* unused pure expression or super */ null && (["children"])),
    _excluded78 = (/* unused pure expression or super */ null && (["children"])),
    _excluded79 = (/* unused pure expression or super */ null && (["children"])),
    _excluded80 = (/* unused pure expression or super */ null && (["children"])),
    _excluded81 = (/* unused pure expression or super */ null && (["children"])),
    _excluded82 = (/* unused pure expression or super */ null && (["children"])),
    _excluded83 = (/* unused pure expression or super */ null && (["children"])),
    _excluded84 = (/* unused pure expression or super */ null && (["children"])),
    _excluded85 = (/* unused pure expression or super */ null && (["children"])),
    _excluded86 = (/* unused pure expression or super */ null && (["children"])),
    _excluded87 = (/* unused pure expression or super */ null && (["children"])),
    _excluded88 = (/* unused pure expression or super */ null && (["children"])),
    _excluded89 = (/* unused pure expression or super */ null && (["children"])),
    _excluded90 = (/* unused pure expression or super */ null && (["children"])),
    _excluded91 = (/* unused pure expression or super */ null && (["children"])),
    _excluded92 = (/* unused pure expression or super */ null && (["children"])),
    _excluded93 = (/* unused pure expression or super */ null && (["children"])),
    _excluded94 = (/* unused pure expression or super */ null && (["children"])),
    _excluded95 = (/* unused pure expression or super */ null && (["children"])),
    _excluded96 = (/* unused pure expression or super */ null && (["children"])),
    _excluded97 = (/* unused pure expression or super */ null && (["children"])),
    _excluded98 = (/* unused pure expression or super */ null && (["children"])),
    _excluded99 = (/* unused pure expression or super */ null && (["children"])),
    _excluded100 = (/* unused pure expression or super */ null && (["children"])),
    _excluded101 = (/* unused pure expression or super */ null && (["children"])),
    _excluded102 = (/* unused pure expression or super */ null && (["children"])),
    _excluded103 = (/* unused pure expression or super */ null && (["children"])),
    _excluded104 = (/* unused pure expression or super */ null && (["children"])),
    _excluded105 = (/* unused pure expression or super */ null && (["children"])),
    _excluded106 = (/* unused pure expression or super */ null && (["children"])),
    _excluded107 = (/* unused pure expression or super */ null && (["children"])),
    _excluded108 = (/* unused pure expression or super */ null && (["children"])),
    _excluded109 = ["children"],
    _excluded110 = (/* unused pure expression or super */ null && (["children"])),
    _excluded111 = (/* unused pure expression or super */ null && (["children"])),
    _excluded112 = (/* unused pure expression or super */ null && (["children"])),
    _excluded113 = (/* unused pure expression or super */ null && (["children"])),
    _excluded114 = (/* unused pure expression or super */ null && (["children"])),
    _excluded115 = (/* unused pure expression or super */ null && (["children"])),
    _excluded116 = (/* unused pure expression or super */ null && (["children"])),
    _excluded117 = (/* unused pure expression or super */ null && (["children"])),
    _excluded118 = (/* unused pure expression or super */ null && (["children"])),
    _excluded119 = (/* unused pure expression or super */ null && (["children"])),
    _excluded120 = (/* unused pure expression or super */ null && (["children"])),
    _excluded121 = (/* unused pure expression or super */ null && (["children"])),
    _excluded122 = (/* unused pure expression or super */ null && (["children"])),
    _excluded123 = (/* unused pure expression or super */ null && (["children"])),
    _excluded124 = (/* unused pure expression or super */ null && (["children"])),
    _excluded125 = (/* unused pure expression or super */ null && (["children"])),
    _excluded126 = (/* unused pure expression or super */ null && (["children"])),
    _excluded127 = (/* unused pure expression or super */ null && (["children"])),
    _excluded128 = (/* unused pure expression or super */ null && (["children"])),
    _excluded129 = (/* unused pure expression or super */ null && (["children"])),
    _excluded130 = (/* unused pure expression or super */ null && (["children"])),
    _excluded131 = (/* unused pure expression or super */ null && (["children"])),
    _excluded132 = (/* unused pure expression or super */ null && (["children"])),
    _excluded133 = (/* unused pure expression or super */ null && (["children"])),
    _excluded134 = (/* unused pure expression or super */ null && (["children"])),
    _excluded135 = (/* unused pure expression or super */ null && (["children"])),
    _excluded136 = (/* unused pure expression or super */ null && (["children"])),
    _excluded137 = (/* unused pure expression or super */ null && (["children"])),
    _excluded138 = (/* unused pure expression or super */ null && (["children"])),
    _excluded139 = (/* unused pure expression or super */ null && (["children"])),
    _excluded140 = (/* unused pure expression or super */ null && (["children"])),
    _excluded141 = (/* unused pure expression or super */ null && (["children"])),
    _excluded142 = (/* unused pure expression or super */ null && (["children"])),
    _excluded143 = (/* unused pure expression or super */ null && (["children"])),
    _excluded144 = (/* unused pure expression or super */ null && (["children"])),
    _excluded145 = (/* unused pure expression or super */ null && (["children"])),
    _excluded146 = (/* unused pure expression or super */ null && (["children"])),
    _excluded147 = (/* unused pure expression or super */ null && (["children"])),
    _excluded148 = (/* unused pure expression or super */ null && (["children"])),
    _excluded149 = (/* unused pure expression or super */ null && (["children"])),
    _excluded150 = (/* unused pure expression or super */ null && (["children"])),
    _excluded151 = (/* unused pure expression or super */ null && (["children"])),
    _excluded152 = (/* unused pure expression or super */ null && (["children"])),
    _excluded153 = (/* unused pure expression or super */ null && (["children"])),
    _excluded154 = (/* unused pure expression or super */ null && (["children"])),
    _excluded155 = (/* unused pure expression or super */ null && (["children"])),
    _excluded156 = (/* unused pure expression or super */ null && (["children"])),
    _excluded157 = (/* unused pure expression or super */ null && (["children"])),
    _excluded158 = (/* unused pure expression or super */ null && (["children"])),
    _excluded159 = (/* unused pure expression or super */ null && (["children"])),
    _excluded160 = (/* unused pure expression or super */ null && (["children"])),
    _excluded161 = (/* unused pure expression or super */ null && (["children"])),
    _excluded162 = (/* unused pure expression or super */ null && (["children"])),
    _excluded163 = (/* unused pure expression or super */ null && (["children"])),
    _excluded164 = (/* unused pure expression or super */ null && (["children"])),
    _excluded165 = (/* unused pure expression or super */ null && (["children"])),
    _excluded166 = (/* unused pure expression or super */ null && (["children"])),
    _excluded167 = (/* unused pure expression or super */ null && (["children"])),
    _excluded168 = (/* unused pure expression or super */ null && (["children"])),
    _excluded169 = (/* unused pure expression or super */ null && (["children"])),
    _excluded170 = (/* unused pure expression or super */ null && (["children"])),
    _excluded171 = (/* unused pure expression or super */ null && (["children"])),
    _excluded172 = (/* unused pure expression or super */ null && (["children"])),
    _excluded173 = (/* unused pure expression or super */ null && (["children"])),
    _excluded174 = (/* unused pure expression or super */ null && (["children"])),
    _excluded175 = (/* unused pure expression or super */ null && (["children"])),
    _excluded176 = (/* unused pure expression or super */ null && (["children"])),
    _excluded177 = (/* unused pure expression or super */ null && (["children"])),
    _excluded178 = (/* unused pure expression or super */ null && (["children"])),
    _excluded179 = (/* unused pure expression or super */ null && (["children"])),
    _excluded180 = (/* unused pure expression or super */ null && (["children"])),
    _excluded181 = (/* unused pure expression or super */ null && (["children"])),
    _excluded182 = (/* unused pure expression or super */ null && (["children"])),
    _excluded183 = (/* unused pure expression or super */ null && (["children"])),
    _excluded184 = (/* unused pure expression or super */ null && (["children"])),
    _excluded185 = (/* unused pure expression or super */ null && (["children"])),
    _excluded186 = (/* unused pure expression or super */ null && (["children"])),
    _excluded187 = (/* unused pure expression or super */ null && (["children"])),
    _excluded188 = (/* unused pure expression or super */ null && (["children"])),
    _excluded189 = (/* unused pure expression or super */ null && (["children"])),
    _excluded190 = (/* unused pure expression or super */ null && (["children"])),
    _excluded191 = (/* unused pure expression or super */ null && (["children"])),
    _excluded192 = (/* unused pure expression or super */ null && (["children"])),
    _excluded193 = (/* unused pure expression or super */ null && (["children"])),
    _excluded194 = (/* unused pure expression or super */ null && (["children"])),
    _excluded195 = (/* unused pure expression or super */ null && (["children"])),
    _excluded196 = (/* unused pure expression or super */ null && (["children"])),
    _excluded197 = (/* unused pure expression or super */ null && (["children"])),
    _excluded198 = (/* unused pure expression or super */ null && (["children"])),
    _excluded199 = (/* unused pure expression or super */ null && (["children"])),
    _excluded200 = (/* unused pure expression or super */ null && (["children"])),
    _excluded201 = (/* unused pure expression or super */ null && (["children"])),
    _excluded202 = (/* unused pure expression or super */ null && (["children"])),
    _excluded203 = (/* unused pure expression or super */ null && (["children"])),
    _excluded204 = (/* unused pure expression or super */ null && (["children"])),
    _excluded205 = (/* unused pure expression or super */ null && (["children"])),
    _excluded206 = (/* unused pure expression or super */ null && (["children"])),
    _excluded207 = (/* unused pure expression or super */ null && (["children"])),
    _excluded208 = (/* unused pure expression or super */ null && (["children"])),
    _excluded209 = (/* unused pure expression or super */ null && (["children"])),
    _excluded210 = (/* unused pure expression or super */ null && (["children"])),
    _excluded211 = (/* unused pure expression or super */ null && (["children"])),
    _excluded212 = (/* unused pure expression or super */ null && (["children"])),
    _excluded213 = (/* unused pure expression or super */ null && (["children"])),
    _excluded214 = (/* unused pure expression or super */ null && (["children"])),
    _excluded215 = (/* unused pure expression or super */ null && (["children"])),
    _excluded216 = (/* unused pure expression or super */ null && (["children"])),
    _excluded217 = (/* unused pure expression or super */ null && (["children"])),
    _excluded218 = (/* unused pure expression or super */ null && (["children"])),
    _excluded219 = (/* unused pure expression or super */ null && (["children"])),
    _excluded220 = (/* unused pure expression or super */ null && (["children"])),
    _excluded221 = (/* unused pure expression or super */ null && (["children"])),
    _excluded222 = (/* unused pure expression or super */ null && (["children"])),
    _excluded223 = (/* unused pure expression or super */ null && (["children"])),
    _excluded224 = (/* unused pure expression or super */ null && (["children"])),
    _excluded225 = (/* unused pure expression or super */ null && (["children"])),
    _excluded226 = (/* unused pure expression or super */ null && (["children"])),
    _excluded227 = (/* unused pure expression or super */ null && (["children"])),
    _excluded228 = (/* unused pure expression or super */ null && (["children"])),
    _excluded229 = (/* unused pure expression or super */ null && (["children"])),
    _excluded230 = (/* unused pure expression or super */ null && (["children"])),
    _excluded231 = (/* unused pure expression or super */ null && (["children"])),
    _excluded232 = (/* unused pure expression or super */ null && (["children"])),
    _excluded233 = (/* unused pure expression or super */ null && (["children"])),
    _excluded234 = (/* unused pure expression or super */ null && (["children"])),
    _excluded235 = (/* unused pure expression or super */ null && (["children"])),
    _excluded236 = (/* unused pure expression or super */ null && (["children"])),
    _excluded237 = (/* unused pure expression or super */ null && (["children"])),
    _excluded238 = (/* unused pure expression or super */ null && (["children"])),
    _excluded239 = (/* unused pure expression or super */ null && (["children"])),
    _excluded240 = (/* unused pure expression or super */ null && (["children"])),
    _excluded241 = (/* unused pure expression or super */ null && (["children"])),
    _excluded242 = (/* unused pure expression or super */ null && (["children"])),
    _excluded243 = (/* unused pure expression or super */ null && (["children"])),
    _excluded244 = (/* unused pure expression or super */ null && (["children"])),
    _excluded245 = (/* unused pure expression or super */ null && (["children"])),
    _excluded246 = (/* unused pure expression or super */ null && (["children"])),
    _excluded247 = (/* unused pure expression or super */ null && (["children"])),
    _excluded248 = (/* unused pure expression or super */ null && (["children"])),
    _excluded249 = (/* unused pure expression or super */ null && (["children"])),
    _excluded250 = (/* unused pure expression or super */ null && (["children"]));
var didWarnAboutDeprecation = {};
var ChevronRight20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronRight20(_ref, ref) {
  var children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M22 16L12 26 10.6 24.6 19.2 16 10.6 7.4 12 6z"
  })), children);
})));
var ChevronRight16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronRight16(_ref2, ref) {
  var children = _ref2.children,
      rest = _objectWithoutProperties(_ref2, _excluded2);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    d: "M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"
  })), children);
})));
var ChevronRightGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronRightGlyph(_ref3, ref) {
  var children = _ref3.children,
      rest = _objectWithoutProperties(_ref3, _excluded3);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 6,
    height: 10,
    viewBox: "0 0 6 10",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path3 || (_path3 = /*#__PURE__*/React.createElement("path", {
    d: "M6 5L1 10 0.3 9.3 4.6 5 0.3 0.7 1 0z"
  })), children);
})));
var ChevronSort32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSort32(_ref4, ref) {
  var children = _ref4.children,
      rest = _objectWithoutProperties(_ref4, _excluded4);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path4 || (_path4 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.41 19.59 16 25.17 21.59 19.59 23 21 16 28zM16 4L23 11 21.59 12.41 16 6.83 10.41 12.41 9 11 16 4z"
  })), children);
})));
var ChevronSort24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSort24(_ref5, ref) {
  var children = _ref5.children,
      rest = _objectWithoutProperties(_ref5, _excluded5);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path5 || (_path5 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.41 19.59 16 25.17 21.59 19.59 23 21 16 28zM16 4L23 11 21.59 12.41 16 6.83 10.41 12.41 9 11 16 4z"
  })), children);
})));
var ChevronSort20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSort20(_ref6, ref) {
  var children = _ref6.children,
      rest = _objectWithoutProperties(_ref6, _excluded6);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path6 || (_path6 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.41 19.59 16 25.17 21.59 19.59 23 21 16 28zM16 4L23 11 21.59 12.41 16 6.83 10.41 12.41 9 11 16 4z"
  })), children);
})));
var ChevronSort16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSort16(_ref7, ref) {
  var children = _ref7.children,
      rest = _objectWithoutProperties(_ref7, _excluded7);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path7 || (_path7 = /*#__PURE__*/React.createElement("path", {
    d: "M8 14L4.5 10.5 5.2 9.8 8 12.6 10.8 9.8 11.5 10.5zM8 2L11.5 5.5 10.8 6.2 8 3.4 5.2 6.2 4.5 5.5z"
  })), children);
})));
var ChevronSortDown32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortDown32(_ref8, ref) {
  var children = _ref8.children,
      rest = _objectWithoutProperties(_ref8, _excluded8);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path8 || (_path8 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.4 19.6 16 25.2 21.6 19.6 23 21z"
  })), children);
})));
var ChevronSortDown24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortDown24(_ref9, ref) {
  var children = _ref9.children,
      rest = _objectWithoutProperties(_ref9, _excluded9);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path9 || (_path9 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.4 19.6 16 25.2 21.6 19.6 23 21z"
  })), children);
})));
var ChevronSortDown20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortDown20(_ref10, ref) {
  var children = _ref10.children,
      rest = _objectWithoutProperties(_ref10, _excluded10);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path10 || (_path10 = /*#__PURE__*/React.createElement("path", {
    d: "M16 28L9 21 10.4 19.6 16 25.2 21.6 19.6 23 21z"
  })), children);
})));
var ChevronSortDown16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortDown16(_ref11, ref) {
  var children = _ref11.children,
      rest = _objectWithoutProperties(_ref11, _excluded11);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path11 || (_path11 = /*#__PURE__*/React.createElement("path", {
    d: "M8 14L4.5 10.5 5.2 9.8 8 12.6 10.8 9.8 11.5 10.5z"
  })), children);
})));
var ChevronSortUp32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortUp32(_ref12, ref) {
  var children = _ref12.children,
      rest = _objectWithoutProperties(_ref12, _excluded12);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path12 || (_path12 = /*#__PURE__*/React.createElement("path", {
    d: "M16 4L23 11 21.6 12.4 16 6.8 10.4 12.4 9 11z"
  })), children);
})));
var ChevronSortUp24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortUp24(_ref13, ref) {
  var children = _ref13.children,
      rest = _objectWithoutProperties(_ref13, _excluded13);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path13 || (_path13 = /*#__PURE__*/React.createElement("path", {
    d: "M16 4L23 11 21.6 12.4 16 6.8 10.4 12.4 9 11z"
  })), children);
})));
var ChevronSortUp20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortUp20(_ref14, ref) {
  var children = _ref14.children,
      rest = _objectWithoutProperties(_ref14, _excluded14);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path14 || (_path14 = /*#__PURE__*/React.createElement("path", {
    d: "M16 4L23 11 21.6 12.4 16 6.8 10.4 12.4 9 11z"
  })), children);
})));
var ChevronSortUp16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronSortUp16(_ref15, ref) {
  var children = _ref15.children,
      rest = _objectWithoutProperties(_ref15, _excluded15);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path15 || (_path15 = /*#__PURE__*/React.createElement("path", {
    d: "M8 2L11.5 5.5 10.8 6.2 8 3.4 5.2 6.2 4.5 5.5z"
  })), children);
})));
var ChevronUp32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronUp32(_ref16, ref) {
  var children = _ref16.children,
      rest = _objectWithoutProperties(_ref16, _excluded16);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path16 || (_path16 = /*#__PURE__*/React.createElement("path", {
    d: "M16 10L26 20 24.6 21.4 16 12.8 7.4 21.4 6 20z"
  })), children);
})));
var ChevronUp24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronUp24(_ref17, ref) {
  var children = _ref17.children,
      rest = _objectWithoutProperties(_ref17, _excluded17);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path17 || (_path17 = /*#__PURE__*/React.createElement("path", {
    d: "M16 10L26 20 24.6 21.4 16 12.8 7.4 21.4 6 20z"
  })), children);
})));
var ChevronUp20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronUp20(_ref18, ref) {
  var children = _ref18.children,
      rest = _objectWithoutProperties(_ref18, _excluded18);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path18 || (_path18 = /*#__PURE__*/React.createElement("path", {
    d: "M16 10L26 20 24.6 21.4 16 12.8 7.4 21.4 6 20z"
  })), children);
})));
var ChevronUp16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronUp16(_ref19, ref) {
  var children = _ref19.children,
      rest = _objectWithoutProperties(_ref19, _excluded19);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path19 || (_path19 = /*#__PURE__*/React.createElement("path", {
    d: "M8 5L13 10 12.3 10.7 8 6.4 3.7 10.7 3 10z"
  })), children);
})));
var ChevronUpGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronUpGlyph(_ref20, ref) {
  var children = _ref20.children,
      rest = _objectWithoutProperties(_ref20, _excluded20);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 10,
    height: 6,
    viewBox: "0 0 10 6",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path20 || (_path20 = /*#__PURE__*/React.createElement("path", {
    d: "M5 0L10 5 9.3 5.7 5 1.4 0.7 5.7 0 5z"
  })), children);
})));
var Chip32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chip32(_ref21, ref) {
  var children = _ref21.children,
      rest = _objectWithoutProperties(_ref21, _excluded21);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path21 || (_path21 = /*#__PURE__*/React.createElement("path", {
    d: "M11,11V21H21V11Zm8,8H13V13h6Z"
  })), _path22 || (_path22 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13V11H26V8a2,2,0,0,0-2-2H21V2H19V6H13V2H11V6H8A2,2,0,0,0,6,8v3H2v2H6v6H2v2H6v3a2,2,0,0,0,2,2h3v4h2V26h6v4h2V26h3a2,2,0,0,0,2-2V21h4V19H26V13ZM24,24H8V8H24Z"
  })), children);
})));
var Chip24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chip24(_ref22, ref) {
  var children = _ref22.children,
      rest = _objectWithoutProperties(_ref22, _excluded22);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path23 || (_path23 = /*#__PURE__*/React.createElement("path", {
    d: "M11,11V21H21V11Zm8,8H13V13h6Z"
  })), _path24 || (_path24 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13V11H26V8a2,2,0,0,0-2-2H21V2H19V6H13V2H11V6H8A2,2,0,0,0,6,8v3H2v2H6v6H2v2H6v3a2,2,0,0,0,2,2h3v4h2V26h6v4h2V26h3a2,2,0,0,0,2-2V21h4V19H26V13ZM24,24H8V8H24Z"
  })), children);
})));
var Chip20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chip20(_ref23, ref) {
  var children = _ref23.children,
      rest = _objectWithoutProperties(_ref23, _excluded23);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path25 || (_path25 = /*#__PURE__*/React.createElement("path", {
    d: "M11,11V21H21V11Zm8,8H13V13h6Z"
  })), _path26 || (_path26 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13V11H26V8a2,2,0,0,0-2-2H21V2H19V6H13V2H11V6H8A2,2,0,0,0,6,8v3H2v2H6v6H2v2H6v3a2,2,0,0,0,2,2h3v4h2V26h6v4h2V26h3a2,2,0,0,0,2-2V21h4V19H26V13ZM24,24H8V8H24Z"
  })), children);
})));
var Chip16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chip16(_ref24, ref) {
  var children = _ref24.children,
      rest = _objectWithoutProperties(_ref24, _excluded24);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path27 || (_path27 = /*#__PURE__*/React.createElement("path", {
    d: "M11,11V21H21V11Zm8,8H13V13h6Z"
  })), _path28 || (_path28 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13V11H26V8a2,2,0,0,0-2-2H21V2H19V6H13V2H11V6H8A2,2,0,0,0,6,8v3H2v2H6v6H2v2H6v3a2,2,0,0,0,2,2h3v4h2V26h6v4h2V26h3a2,2,0,0,0,2-2V21h4V19H26V13ZM24,24H8V8H24Z"
  })), children);
})));
var Choices32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Choices32(_ref25, ref) {
  var children = _ref25.children,
      rest = _objectWithoutProperties(_ref25, _excluded25);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path29 || (_path29 = /*#__PURE__*/React.createElement("path", {
    d: "M28 13L28 4 19 4 19 6 24.586 6 16 14.586 7.414 6 13 6 13 4 4 4 4 13 6 13 6 7.414 15 16.414 15 26 4 26 4 28 28 28 28 26 17 26 17 16.414 26 7.414 26 13 28 13z"
  })), children);
})));
var Choices24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Choices24(_ref26, ref) {
  var children = _ref26.children,
      rest = _objectWithoutProperties(_ref26, _excluded26);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path30 || (_path30 = /*#__PURE__*/React.createElement("path", {
    d: "M28 13L28 4 19 4 19 6 24.586 6 16 14.586 7.414 6 13 6 13 4 4 4 4 13 6 13 6 7.414 15 16.414 15 26 4 26 4 28 28 28 28 26 17 26 17 16.414 26 7.414 26 13 28 13z"
  })), children);
})));
var Choices20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Choices20(_ref27, ref) {
  var children = _ref27.children,
      rest = _objectWithoutProperties(_ref27, _excluded27);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path31 || (_path31 = /*#__PURE__*/React.createElement("path", {
    d: "M28 13L28 4 19 4 19 6 24.586 6 16 14.586 7.414 6 13 6 13 4 4 4 4 13 6 13 6 7.414 15 16.414 15 26 4 26 4 28 28 28 28 26 17 26 17 16.414 26 7.414 26 13 28 13z"
  })), children);
})));
var Choices16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Choices16(_ref28, ref) {
  var children = _ref28.children,
      rest = _objectWithoutProperties(_ref28, _excluded28);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path32 || (_path32 = /*#__PURE__*/React.createElement("path", {
    d: "M28 13L28 4 19 4 19 6 24.586 6 16 14.586 7.414 6 13 6 13 4 4 4 4 13 6 13 6 7.414 15 16.414 15 26 4 26 4 28 28 28 28 26 17 26 17 16.414 26 7.414 26 13 28 13z"
  })), children);
})));
var ChooseItem32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChooseItem32(_ref29, ref) {
  var children = _ref29.children,
      rest = _objectWithoutProperties(_ref29, _excluded29);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path33 || (_path33 = /*#__PURE__*/React.createElement("path", {
    d: "M28 6H30V26H28zM17 6L15.57 7.393 23.15 15 2 15 2 17 23.15 17 15.57 24.573 17 26 27 16 17 6z"
  })), children);
})));
var ChooseItem24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChooseItem24(_ref30, ref) {
  var children = _ref30.children,
      rest = _objectWithoutProperties(_ref30, _excluded30);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path34 || (_path34 = /*#__PURE__*/React.createElement("path", {
    d: "M28 6H30V26H28zM17 6L15.57 7.393 23.15 15 2 15 2 17 23.15 17 15.57 24.573 17 26 27 16 17 6z"
  })), children);
})));
var ChooseItem20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChooseItem20(_ref31, ref) {
  var children = _ref31.children,
      rest = _objectWithoutProperties(_ref31, _excluded31);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path35 || (_path35 = /*#__PURE__*/React.createElement("path", {
    d: "M28 6H30V26H28zM17 6L15.57 7.393 23.15 15 2 15 2 17 23.15 17 15.57 24.573 17 26 27 16 17 6z"
  })), children);
})));
var ChooseItem16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChooseItem16(_ref32, ref) {
  var children = _ref32.children,
      rest = _objectWithoutProperties(_ref32, _excluded32);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path36 || (_path36 = /*#__PURE__*/React.createElement("path", {
    d: "M28 6H30V26H28zM17 6L15.57 7.393 23.15 15 2 15 2 17 23.15 17 15.57 24.573 17 26 27 16 17 6z"
  })), children);
})));
var ChoroplethMap32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChoroplethMap32(_ref33, ref) {
  var children = _ref33.children,
      rest = _objectWithoutProperties(_ref33, _excluded33);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path37 || (_path37 = /*#__PURE__*/React.createElement("path", {
    d: "M29.2427,4.03l-8-2a1.0065,1.0065,0,0,0-.6143.0415l-9.7,3.88L3.2427,4.03A1,1,0,0,0,2,5V27a1,1,0,0,0,.7573.97l8,2A1.0244,1.0244,0,0,0,11,30a.9953.9953,0,0,0,.3716-.0718l9.7-3.88,7.686,1.9219A1,1,0,0,0,30,27V5A1,1,0,0,0,29.2427,4.03ZM28,11H22V4.2806l6,1.5ZM10,19H4V13h6Zm2-8V7.6771l8-3.2V11Zm8,2v6H12V13Zm-8,8h8v3.3227l-8,3.2Zm10-8h6v6H22ZM10,7.7806V11H4V6.2806ZM4,21h6v6.7192l-6-1.5Zm18,3.2187V21h6v4.7192Z"
  })), children);
})));
var ChoroplethMap24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChoroplethMap24(_ref34, ref) {
  var children = _ref34.children,
      rest = _objectWithoutProperties(_ref34, _excluded34);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path38 || (_path38 = /*#__PURE__*/React.createElement("path", {
    d: "M29.2427,4.03l-8-2a1.0065,1.0065,0,0,0-.6143.0415l-9.7,3.88L3.2427,4.03A1,1,0,0,0,2,5V27a1,1,0,0,0,.7573.97l8,2A1.0244,1.0244,0,0,0,11,30a.9953.9953,0,0,0,.3716-.0718l9.7-3.88,7.686,1.9219A1,1,0,0,0,30,27V5A1,1,0,0,0,29.2427,4.03ZM28,11H22V4.2806l6,1.5ZM10,19H4V13h6Zm2-8V7.6771l8-3.2V11Zm8,2v6H12V13Zm-8,8h8v3.3227l-8,3.2Zm10-8h6v6H22ZM10,7.7806V11H4V6.2806ZM4,21h6v6.7192l-6-1.5Zm18,3.2187V21h6v4.7192Z"
  })), children);
})));
var ChoroplethMap20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChoroplethMap20(_ref35, ref) {
  var children = _ref35.children,
      rest = _objectWithoutProperties(_ref35, _excluded35);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path39 || (_path39 = /*#__PURE__*/React.createElement("path", {
    d: "M29.2427,4.03l-8-2a1.0065,1.0065,0,0,0-.6143.0415l-9.7,3.88L3.2427,4.03A1,1,0,0,0,2,5V27a1,1,0,0,0,.7573.97l8,2A1.0244,1.0244,0,0,0,11,30a.9953.9953,0,0,0,.3716-.0718l9.7-3.88,7.686,1.9219A1,1,0,0,0,30,27V5A1,1,0,0,0,29.2427,4.03ZM28,11H22V4.2806l6,1.5ZM10,19H4V13h6Zm2-8V7.6771l8-3.2V11Zm8,2v6H12V13Zm-8,8h8v3.3227l-8,3.2Zm10-8h6v6H22ZM10,7.7806V11H4V6.2806ZM4,21h6v6.7192l-6-1.5Zm18,3.2187V21h6v4.7192Z"
  })), children);
})));
var ChoroplethMap16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChoroplethMap16(_ref36, ref) {
  var children = _ref36.children,
      rest = _objectWithoutProperties(_ref36, _excluded36);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path40 || (_path40 = /*#__PURE__*/React.createElement("path", {
    d: "M29.2427,4.03l-8-2a1.0065,1.0065,0,0,0-.6143.0415l-9.7,3.88L3.2427,4.03A1,1,0,0,0,2,5V27a1,1,0,0,0,.7573.97l8,2A1.0244,1.0244,0,0,0,11,30a.9953.9953,0,0,0,.3716-.0718l9.7-3.88,7.686,1.9219A1,1,0,0,0,30,27V5A1,1,0,0,0,29.2427,4.03ZM28,11H22V4.2806l6,1.5ZM10,19H4V13h6Zm2-8V7.6771l8-3.2V11Zm8,2v6H12V13Zm-8,8h8v3.3227l-8,3.2Zm10-8h6v6H22ZM10,7.7806V11H4V6.2806ZM4,21h6v6.7192l-6-1.5Zm18,3.2187V21h6v4.7192Z"
  })), children);
})));
var CicsCmas32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsCmas32(_ref37, ref) {
  var children = _ref37.children,
      rest = _objectWithoutProperties(_ref37, _excluded37);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path41 || (_path41 = /*#__PURE__*/React.createElement("path", {
    d: "M30.3335 30H26V28h4V26H28a2.002 2.002 0 01-2-2V21.6665A1.6684 1.6684 0 0127.6665 20H32v2H28v2h2a2.002 2.002 0 012 2v2.3335A1.6684 1.6684 0 0130.3335 30zM22.3335 20h-2.667A1.6665 1.6665 0 0018 21.6665V30h2V26h2v4h2V21.6665A1.6665 1.6665 0 0022.3335 20zM20 24V22h2v2zM12.5 24L11 20 9 20 9 30 11 30 11 23 12.5 27 14 23 14 30 16 30 16 20 14 20 12.5 24zM1 22v6.5A1.4727 1.4727 0 002.5 30H7V28H3V22H7V20H3A2.0059 2.0059 0 001 22zM13 8L11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11 13 11 13 8z"
  })), _path42 || (_path42 = /*#__PURE__*/React.createElement("path", {
    d: "M6,6H26V18h2V6a2.0059,2.0059,0,0,0-2-2H6A2.0059,2.0059,0,0,0,4,6V18H6Z"
  })), children);
})));
var CicsCmas24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsCmas24(_ref38, ref) {
  var children = _ref38.children,
      rest = _objectWithoutProperties(_ref38, _excluded38);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path43 || (_path43 = /*#__PURE__*/React.createElement("path", {
    d: "M30.3335 30H26V28h4V26H28a2.002 2.002 0 01-2-2V21.6665A1.6684 1.6684 0 0127.6665 20H32v2H28v2h2a2.002 2.002 0 012 2v2.3335A1.6684 1.6684 0 0130.3335 30zM22.3335 20h-2.667A1.6665 1.6665 0 0018 21.6665V30h2V26h2v4h2V21.6665A1.6665 1.6665 0 0022.3335 20zM20 24V22h2v2zM12.5 24L11 20 9 20 9 30 11 30 11 23 12.5 27 14 23 14 30 16 30 16 20 14 20 12.5 24zM1 22v6.5A1.4727 1.4727 0 002.5 30H7V28H3V22H7V20H3A2.0059 2.0059 0 001 22zM13 8L11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11 13 11 13 8z"
  })), _path44 || (_path44 = /*#__PURE__*/React.createElement("path", {
    d: "M6,6H26V18h2V6a2.0059,2.0059,0,0,0-2-2H6A2.0059,2.0059,0,0,0,4,6V18H6Z"
  })), children);
})));
var CicsCmas20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsCmas20(_ref39, ref) {
  var children = _ref39.children,
      rest = _objectWithoutProperties(_ref39, _excluded39);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path45 || (_path45 = /*#__PURE__*/React.createElement("path", {
    d: "M30.3335 30H26V28h4V26H28a2.002 2.002 0 01-2-2V21.6665A1.6684 1.6684 0 0127.6665 20H32v2H28v2h2a2.002 2.002 0 012 2v2.3335A1.6684 1.6684 0 0130.3335 30zM22.3335 20h-2.667A1.6665 1.6665 0 0018 21.6665V30h2V26h2v4h2V21.6665A1.6665 1.6665 0 0022.3335 20zM20 24V22h2v2zM12.5 24L11 20 9 20 9 30 11 30 11 23 12.5 27 14 23 14 30 16 30 16 20 14 20 12.5 24zM1 22v6.5A1.4727 1.4727 0 002.5 30H7V28H3V22H7V20H3A2.0059 2.0059 0 001 22zM13 8L11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11 13 11 13 8z"
  })), _path46 || (_path46 = /*#__PURE__*/React.createElement("path", {
    d: "M6,6H26V18h2V6a2.0059,2.0059,0,0,0-2-2H6A2.0059,2.0059,0,0,0,4,6V18H6Z"
  })), children);
})));
var CicsCmas16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsCmas16(_ref40, ref) {
  var children = _ref40.children,
      rest = _objectWithoutProperties(_ref40, _excluded40);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path47 || (_path47 = /*#__PURE__*/React.createElement("path", {
    d: "M30.3335 30H26V28h4V26H28a2.002 2.002 0 01-2-2V21.6665A1.6684 1.6684 0 0127.6665 20H32v2H28v2h2a2.002 2.002 0 012 2v2.3335A1.6684 1.6684 0 0130.3335 30zM22.3335 20h-2.667A1.6665 1.6665 0 0018 21.6665V30h2V26h2v4h2V21.6665A1.6665 1.6665 0 0022.3335 20zM20 24V22h2v2zM12.5 24L11 20 9 20 9 30 11 30 11 23 12.5 27 14 23 14 30 16 30 16 20 14 20 12.5 24zM1 22v6.5A1.4727 1.4727 0 002.5 30H7V28H3V22H7V20H3A2.0059 2.0059 0 001 22zM13 8L11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11 13 11 13 8z"
  })), _path48 || (_path48 = /*#__PURE__*/React.createElement("path", {
    d: "M6,6H26V18h2V6a2.0059,2.0059,0,0,0-2-2H6A2.0059,2.0059,0,0,0,4,6V18H6Z"
  })), children);
})));
var CicsExplorer32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsExplorer32(_ref41, ref) {
  var children = _ref41.children,
      rest = _objectWithoutProperties(_ref41, _excluded41);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path49 || (_path49 = /*#__PURE__*/React.createElement("path", {
    d: "M24 16L19.4 14.6 21.7 10.3 17.4 12.6 16 8 14.6 12.6 10.3 10.3 12.6 14.6 8 16 12.6 17.4 10.3 21.7 14.6 19.4 16 24 17.4 19.4 21.7 21.7 19.4 17.4 24 16z"
  })), _path50 || (_path50 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CicsExplorer24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsExplorer24(_ref42, ref) {
  var children = _ref42.children,
      rest = _objectWithoutProperties(_ref42, _excluded42);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path51 || (_path51 = /*#__PURE__*/React.createElement("path", {
    d: "M24 16L19.4 14.6 21.7 10.3 17.4 12.6 16 8 14.6 12.6 10.3 10.3 12.6 14.6 8 16 12.6 17.4 10.3 21.7 14.6 19.4 16 24 17.4 19.4 21.7 21.7 19.4 17.4 24 16z"
  })), _path52 || (_path52 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CicsExplorer20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsExplorer20(_ref43, ref) {
  var children = _ref43.children,
      rest = _objectWithoutProperties(_ref43, _excluded43);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path53 || (_path53 = /*#__PURE__*/React.createElement("path", {
    d: "M24 16L19.4 14.6 21.7 10.3 17.4 12.6 16 8 14.6 12.6 10.3 10.3 12.6 14.6 8 16 12.6 17.4 10.3 21.7 14.6 19.4 16 24 17.4 19.4 21.7 21.7 19.4 17.4 24 16z"
  })), _path54 || (_path54 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CicsExplorer16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsExplorer16(_ref44, ref) {
  var children = _ref44.children,
      rest = _objectWithoutProperties(_ref44, _excluded44);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path55 || (_path55 = /*#__PURE__*/React.createElement("path", {
    d: "M24 16L19.4 14.6 21.7 10.3 17.4 12.6 16 8 14.6 12.6 10.3 10.3 12.6 14.6 8 16 12.6 17.4 10.3 21.7 14.6 19.4 16 24 17.4 19.4 21.7 21.7 19.4 17.4 24 16z"
  })), _path56 || (_path56 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CicsSystemGroup32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsSystemGroup32(_ref45, ref) {
  var children = _ref45.children,
      rest = _objectWithoutProperties(_ref45, _excluded45);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path57 || (_path57 = /*#__PURE__*/React.createElement("path", {
    d: "M28 2H23V4h5V28H23v2h5a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0028 2zM14 17H8a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V18A.9448.9448 0 0014 17zm-1 6H9V19h4z"
  })), _path58 || (_path58 = /*#__PURE__*/React.createElement("path", {
    d: "M25 24V18a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6A1.0021 1.0021 0 0025 24zm-2-1H19V19h4zM14 7H8A.9448.9448 0 007 8v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V8A.9448.9448 0 0014 7zm-1 6H9V9h4zM18 15h6a.9448.9448 0 001-1V8a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6A1.0021 1.0021 0 0018 15zm1-6h4v4H19z"
  })), _path59 || (_path59 = /*#__PURE__*/React.createElement("path", {
    d: "M4,4H9V2H4A2.0059,2.0059,0,0,0,2,4V28a2.0059,2.0059,0,0,0,2,2H9V28H4Z"
  })), children);
})));
var CicsSystemGroup24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsSystemGroup24(_ref46, ref) {
  var children = _ref46.children,
      rest = _objectWithoutProperties(_ref46, _excluded46);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path60 || (_path60 = /*#__PURE__*/React.createElement("path", {
    d: "M28 2H23V4h5V28H23v2h5a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0028 2zM14 17H8a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V18A.9448.9448 0 0014 17zm-1 6H9V19h4z"
  })), _path61 || (_path61 = /*#__PURE__*/React.createElement("path", {
    d: "M25 24V18a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6A1.0021 1.0021 0 0025 24zm-2-1H19V19h4zM14 7H8A.9448.9448 0 007 8v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V8A.9448.9448 0 0014 7zm-1 6H9V9h4zM18 15h6a.9448.9448 0 001-1V8a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6A1.0021 1.0021 0 0018 15zm1-6h4v4H19z"
  })), _path62 || (_path62 = /*#__PURE__*/React.createElement("path", {
    d: "M4,4H9V2H4A2.0059,2.0059,0,0,0,2,4V28a2.0059,2.0059,0,0,0,2,2H9V28H4Z"
  })), children);
})));
var CicsSystemGroup20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsSystemGroup20(_ref47, ref) {
  var children = _ref47.children,
      rest = _objectWithoutProperties(_ref47, _excluded47);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path63 || (_path63 = /*#__PURE__*/React.createElement("path", {
    d: "M28 2H23V4h5V28H23v2h5a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0028 2zM14 17H8a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V18A.9448.9448 0 0014 17zm-1 6H9V19h4z"
  })), _path64 || (_path64 = /*#__PURE__*/React.createElement("path", {
    d: "M25 24V18a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6A1.0021 1.0021 0 0025 24zm-2-1H19V19h4zM14 7H8A.9448.9448 0 007 8v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V8A.9448.9448 0 0014 7zm-1 6H9V9h4zM18 15h6a.9448.9448 0 001-1V8a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6A1.0021 1.0021 0 0018 15zm1-6h4v4H19z"
  })), _path65 || (_path65 = /*#__PURE__*/React.createElement("path", {
    d: "M4,4H9V2H4A2.0059,2.0059,0,0,0,2,4V28a2.0059,2.0059,0,0,0,2,2H9V28H4Z"
  })), children);
})));
var CicsSystemGroup16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsSystemGroup16(_ref48, ref) {
  var children = _ref48.children,
      rest = _objectWithoutProperties(_ref48, _excluded48);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path66 || (_path66 = /*#__PURE__*/React.createElement("path", {
    d: "M28 2H23V4h5V28H23v2h5a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0028 2zM14 17H8a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V18A.9448.9448 0 0014 17zm-1 6H9V19h4z"
  })), _path67 || (_path67 = /*#__PURE__*/React.createElement("path", {
    d: "M25 24V18a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6a.9448.9448 0 001 1h6A1.0021 1.0021 0 0025 24zm-2-1H19V19h4zM14 7H8A.9448.9448 0 007 8v6a.9448.9448 0 001 1h6a.9448.9448 0 001-1V8A.9448.9448 0 0014 7zm-1 6H9V9h4zM18 15h6a.9448.9448 0 001-1V8a.9448.9448 0 00-1-1H18a.9448.9448 0 00-1 1v6A1.0021 1.0021 0 0018 15zm1-6h4v4H19z"
  })), _path68 || (_path68 = /*#__PURE__*/React.createElement("path", {
    d: "M4,4H9V2H4A2.0059,2.0059,0,0,0,2,4V28a2.0059,2.0059,0,0,0,2,2H9V28H4Z"
  })), children);
})));
var CicsWuiRegion32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsWuiRegion32(_ref49, ref) {
  var children = _ref49.children,
      rest = _objectWithoutProperties(_ref49, _excluded49);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path69 || (_path69 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22L24 22 24 28 22 28 22 30 28 30 28 28 26 28 26 22 28 22 28 20 22 20 22 22zM18 28H16V20H14v8.6A1.4529 1.4529 0 0015.5 30h3A1.4529 1.4529 0 0020 28.6V20H18zM10.2 20L10 28.5 9 22 7 22 6 28.5 5.8 20 4 20 4.72 30 7 30 8 23.5 9 30 11.28 30 12 20 10.2 20zM16 11L13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11z"
  })), _path70 || (_path70 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V18H6V6H26V18h2V6A2.0059,2.0059,0,0,0,26,4Z"
  })), children);
})));
var CicsWuiRegion24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsWuiRegion24(_ref50, ref) {
  var children = _ref50.children,
      rest = _objectWithoutProperties(_ref50, _excluded50);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path71 || (_path71 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22L24 22 24 28 22 28 22 30 28 30 28 28 26 28 26 22 28 22 28 20 22 20 22 22zM18 28H16V20H14v8.6A1.4529 1.4529 0 0015.5 30h3A1.4529 1.4529 0 0020 28.6V20H18zM10.2 20L10 28.5 9 22 7 22 6 28.5 5.8 20 4 20 4.72 30 7 30 8 23.5 9 30 11.28 30 12 20 10.2 20zM16 11L13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11z"
  })), _path72 || (_path72 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V18H6V6H26V18h2V6A2.0059,2.0059,0,0,0,26,4Z"
  })), children);
})));
var CicsWuiRegion20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsWuiRegion20(_ref51, ref) {
  var children = _ref51.children,
      rest = _objectWithoutProperties(_ref51, _excluded51);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path73 || (_path73 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22L24 22 24 28 22 28 22 30 28 30 28 28 26 28 26 22 28 22 28 20 22 20 22 22zM18 28H16V20H14v8.6A1.4529 1.4529 0 0015.5 30h3A1.4529 1.4529 0 0020 28.6V20H18zM10.2 20L10 28.5 9 22 7 22 6 28.5 5.8 20 4 20 4.72 30 7 30 8 23.5 9 30 11.28 30 12 20 10.2 20zM16 11L13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11z"
  })), _path74 || (_path74 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V18H6V6H26V18h2V6A2.0059,2.0059,0,0,0,26,4Z"
  })), children);
})));
var CicsWuiRegion16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsWuiRegion16(_ref52, ref) {
  var children = _ref52.children,
      rest = _objectWithoutProperties(_ref52, _excluded52);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path75 || (_path75 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22L24 22 24 28 22 28 22 30 28 30 28 28 26 28 26 22 28 22 28 20 22 20 22 22zM18 28H16V20H14v8.6A1.4529 1.4529 0 0015.5 30h3A1.4529 1.4529 0 0020 28.6V20H18zM10.2 20L10 28.5 9 22 7 22 6 28.5 5.8 20 4 20 4.72 30 7 30 8 23.5 9 30 11.28 30 12 20 10.2 20zM16 11L13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13 16 11z"
  })), _path76 || (_path76 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V18H6V6H26V18h2V6A2.0059,2.0059,0,0,0,26,4Z"
  })), children);
})));
var CicsRegion32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegion32(_ref53, ref) {
  var children = _ref53.children,
      rest = _objectWithoutProperties(_ref53, _excluded53);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path77 || (_path77 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 18L21 18.7 21 16 19 16 19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18zM16 13L16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13z"
  })), _path78 || (_path78 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CicsRegion24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegion24(_ref54, ref) {
  var children = _ref54.children,
      rest = _objectWithoutProperties(_ref54, _excluded54);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path79 || (_path79 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 18L21 18.7 21 16 19 16 19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18zM16 13L16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13z"
  })), _path80 || (_path80 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CicsRegion20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegion20(_ref55, ref) {
  var children = _ref55.children,
      rest = _objectWithoutProperties(_ref55, _excluded55);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path81 || (_path81 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 18L21 18.7 21 16 19 16 19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18zM16 13L16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13z"
  })), _path82 || (_path82 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CicsRegion16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegion16(_ref56, ref) {
  var children = _ref56.children,
      rest = _objectWithoutProperties(_ref56, _excluded56);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path83 || (_path83 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 18L21 18.7 21 16 19 16 19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18zM16 13L16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16 13 13 16 13z"
  })), _path84 || (_path84 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CicsRegionRouting32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionRouting32(_ref57, ref) {
  var children = _ref57.children,
      rest = _objectWithoutProperties(_ref57, _excluded57);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path85 || (_path85 = /*#__PURE__*/React.createElement("path", {
    d: "M22 2L22 4 26.6 4 20 10.6 21.4 12 28 5.4 28 10 30 10 30 2 22 2zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path86 || (_path86 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionRouting24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionRouting24(_ref58, ref) {
  var children = _ref58.children,
      rest = _objectWithoutProperties(_ref58, _excluded58);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path87 || (_path87 = /*#__PURE__*/React.createElement("path", {
    d: "M22 2L22 4 26.6 4 20 10.6 21.4 12 28 5.4 28 10 30 10 30 2 22 2zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path88 || (_path88 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionRouting20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionRouting20(_ref59, ref) {
  var children = _ref59.children,
      rest = _objectWithoutProperties(_ref59, _excluded59);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path89 || (_path89 = /*#__PURE__*/React.createElement("path", {
    d: "M22 2L22 4 26.6 4 20 10.6 21.4 12 28 5.4 28 10 30 10 30 2 22 2zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path90 || (_path90 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionRouting16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionRouting16(_ref60, ref) {
  var children = _ref60.children,
      rest = _objectWithoutProperties(_ref60, _excluded60);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path91 || (_path91 = /*#__PURE__*/React.createElement("path", {
    d: "M22 2L22 4 26.6 4 20 10.6 21.4 12 28 5.4 28 10 30 10 30 2 22 2zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path92 || (_path92 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionTarget32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionTarget32(_ref61, ref) {
  var children = _ref61.children,
      rest = _objectWithoutProperties(_ref61, _excluded61);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path93 || (_path93 = /*#__PURE__*/React.createElement("path", {
    d: "M26 7H28V10H26zM29 4H32V6H29zM26 0H28V3H26zM22 4H25V6H22zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path94 || (_path94 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionTarget24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionTarget24(_ref62, ref) {
  var children = _ref62.children,
      rest = _objectWithoutProperties(_ref62, _excluded62);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path95 || (_path95 = /*#__PURE__*/React.createElement("path", {
    d: "M26 7H28V10H26zM29 4H32V6H29zM26 0H28V3H26zM22 4H25V6H22zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path96 || (_path96 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionTarget20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionTarget20(_ref63, ref) {
  var children = _ref63.children,
      rest = _objectWithoutProperties(_ref63, _excluded63);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path97 || (_path97 = /*#__PURE__*/React.createElement("path", {
    d: "M26 7H28V10H26zM29 4H32V6H29zM26 0H28V3H26zM22 4H25V6H22zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path98 || (_path98 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var CicsRegionTarget16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CicsRegionTarget16(_ref64, ref) {
  var children = _ref64.children,
      rest = _objectWithoutProperties(_ref64, _excluded64);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path99 || (_path99 = /*#__PURE__*/React.createElement("path", {
    d: "M26 7H28V10H26zM29 4H32V6H29zM26 0H28V3H26zM22 4H25V6H22zM19 16L19 18.7 16.5 18 16 19.9 18.4 20.6 17 23 18.7 24 20 21.8 21.3 24 23 23 21.6 20.6 24 19.9 23.5 18 21 18.7 21 16 19 16zM13 16L13 13 16 13 16 11 13 11 13 8 11 8 11 11 8 11 8 13 11 13 11 16 13 16z"
  })), _path100 || (_path100 = /*#__PURE__*/React.createElement("path", {
    d: "M26,26H6V6H19V4H6A2.0059,2.0059,0,0,0,4,6V26a2.0059,2.0059,0,0,0,2,2H26a2.0059,2.0059,0,0,0,2-2V13H26Z"
  })), children);
})));
var Cicsplex32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cicsplex32(_ref65, ref) {
  var children = _ref65.children,
      rest = _objectWithoutProperties(_ref65, _excluded65);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path101 || (_path101 = /*#__PURE__*/React.createElement("path", {
    d: "M8 18.6V17H6v1.6A7.3833 7.3833 0 0013.4 26H15V24H13.4A5.3775 5.3775 0 018 18.6zM28 18H20a2.0059 2.0059 0 00-2 2v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V20A2.0059 2.0059 0 0028 18zM20 28V20h8v8zM24 13.4V15h2V13.4A7.3833 7.3833 0 0018.6 6H17V8h1.6A5.3775 5.3775 0 0124 13.4zM12 2H4A2.0059 2.0059 0 002 4v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0012 2zM4 12V4h8v8z"
  })), children);
})));
var Cicsplex24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cicsplex24(_ref66, ref) {
  var children = _ref66.children,
      rest = _objectWithoutProperties(_ref66, _excluded66);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path102 || (_path102 = /*#__PURE__*/React.createElement("path", {
    d: "M8 18.6V17H6v1.6A7.3833 7.3833 0 0013.4 26H15V24H13.4A5.3775 5.3775 0 018 18.6zM28 18H20a2.0059 2.0059 0 00-2 2v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V20A2.0059 2.0059 0 0028 18zM20 28V20h8v8zM24 13.4V15h2V13.4A7.3833 7.3833 0 0018.6 6H17V8h1.6A5.3775 5.3775 0 0124 13.4zM12 2H4A2.0059 2.0059 0 002 4v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0012 2zM4 12V4h8v8z"
  })), children);
})));
var Cicsplex20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cicsplex20(_ref67, ref) {
  var children = _ref67.children,
      rest = _objectWithoutProperties(_ref67, _excluded67);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path103 || (_path103 = /*#__PURE__*/React.createElement("path", {
    d: "M8 18.6V17H6v1.6A7.3833 7.3833 0 0013.4 26H15V24H13.4A5.3775 5.3775 0 018 18.6zM28 18H20a2.0059 2.0059 0 00-2 2v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V20A2.0059 2.0059 0 0028 18zM20 28V20h8v8zM24 13.4V15h2V13.4A7.3833 7.3833 0 0018.6 6H17V8h1.6A5.3775 5.3775 0 0124 13.4zM12 2H4A2.0059 2.0059 0 002 4v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0012 2zM4 12V4h8v8z"
  })), children);
})));
var Cicsplex16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cicsplex16(_ref68, ref) {
  var children = _ref68.children,
      rest = _objectWithoutProperties(_ref68, _excluded68);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path104 || (_path104 = /*#__PURE__*/React.createElement("path", {
    d: "M8 18.6V17H6v1.6A7.3833 7.3833 0 0013.4 26H15V24H13.4A5.3775 5.3775 0 018 18.6zM28 18H20a2.0059 2.0059 0 00-2 2v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V20A2.0059 2.0059 0 0028 18zM20 28V20h8v8zM24 13.4V15h2V13.4A7.3833 7.3833 0 0018.6 6H17V8h1.6A5.3775 5.3775 0 0124 13.4zM12 2H4A2.0059 2.0059 0 002 4v8a2.0059 2.0059 0 002 2h8a2.0059 2.0059 0 002-2V4A2.0059 2.0059 0 0012 2zM4 12V4h8v8z"
  })), children);
})));
var CircleFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleFilled32(_ref69, ref) {
  var children = _ref69.children,
      rest = _objectWithoutProperties(_ref69, _excluded69);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle || (_circle = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "10"
  })), _path105 || (_path105 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CircleFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleFilled24(_ref70, ref) {
  var children = _ref70.children,
      rest = _objectWithoutProperties(_ref70, _excluded70);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle2 || (_circle2 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "10"
  })), _path106 || (_path106 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CircleFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleFilled20(_ref71, ref) {
  var children = _ref71.children,
      rest = _objectWithoutProperties(_ref71, _excluded71);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle3 || (_circle3 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "10"
  })), _path107 || (_path107 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CircleFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleFilled16(_ref72, ref) {
  var children = _ref72.children,
      rest = _objectWithoutProperties(_ref72, _excluded72);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle4 || (_circle4 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "10"
  })), _path108 || (_path108 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14.0158,14.0158,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12.0137,12.0137,0,0,0,16,4Z"
  })), children);
})));
var CircleSolid32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleSolid32(_ref73, ref) {
  var children = _ref73.children,
      rest = _objectWithoutProperties(_ref73, _excluded73);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle5 || (_circle5 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "14"
  })), children);
})));
var CircleSolid24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleSolid24(_ref74, ref) {
  var children = _ref74.children,
      rest = _objectWithoutProperties(_ref74, _excluded74);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle6 || (_circle6 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "14"
  })), children);
})));
var CircleSolid20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleSolid20(_ref75, ref) {
  var children = _ref75.children,
      rest = _objectWithoutProperties(_ref75, _excluded75);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle7 || (_circle7 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "14"
  })), children);
})));
var CircleSolid16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleSolid16(_ref76, ref) {
  var children = _ref76.children,
      rest = _objectWithoutProperties(_ref76, _excluded76);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle8 || (_circle8 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "16",
    r: "14"
  })), children);
})));
var CircleDash32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleDash32(_ref77, ref) {
  var children = _ref77.children,
      rest = _objectWithoutProperties(_ref77, _excluded77);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path109 || (_path109 = /*#__PURE__*/React.createElement("path", {
    d: "M7.7 4.7a14.7 14.7 0 00-3 3.1L6.3 9A13.26 13.26 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.51 12.51 0 002 16H4A11.48 11.48 0 014.6 12.3zM2.7 20.4a14.4 14.4 0 002 3.9l1.6-1.2a12.89 12.89 0 01-1.7-3.3zM7.8 27.3a14.4 14.4 0 003.9 2l.6-1.9A12.89 12.89 0 019 25.7zM11.7 2.7l.6 1.9A11.48 11.48 0 0116 4V2A12.51 12.51 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.53 11.53 0 0123 25.7zM27.4 19.7l1.9.6A15.47 15.47 0 0030 16H28A11.48 11.48 0 0127.4 19.7zM29.2 11.6a14.4 14.4 0 00-2-3.9L25.6 8.9a12.89 12.89 0 011.7 3.3zM24.1 4.6a14.4 14.4 0 00-3.9-2l-.6 1.9a12.89 12.89 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.48 11.48 0 0116 28v2A21.42 21.42 0 0020.3 29.3z"
  })), children);
})));
var CircleDash24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleDash24(_ref78, ref) {
  var children = _ref78.children,
      rest = _objectWithoutProperties(_ref78, _excluded78);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path110 || (_path110 = /*#__PURE__*/React.createElement("path", {
    d: "M7.7 4.7a14.7 14.7 0 00-3 3.1L6.3 9A13.26 13.26 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.51 12.51 0 002 16H4A11.48 11.48 0 014.6 12.3zM2.7 20.4a14.4 14.4 0 002 3.9l1.6-1.2a12.89 12.89 0 01-1.7-3.3zM7.8 27.3a14.4 14.4 0 003.9 2l.6-1.9A12.89 12.89 0 019 25.7zM11.7 2.7l.6 1.9A11.48 11.48 0 0116 4V2A12.51 12.51 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.53 11.53 0 0123 25.7zM27.4 19.7l1.9.6A15.47 15.47 0 0030 16H28A11.48 11.48 0 0127.4 19.7zM29.2 11.6a14.4 14.4 0 00-2-3.9L25.6 8.9a12.89 12.89 0 011.7 3.3zM24.1 4.6a14.4 14.4 0 00-3.9-2l-.6 1.9a12.89 12.89 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.48 11.48 0 0116 28v2A21.42 21.42 0 0020.3 29.3z"
  })), children);
})));
var CircleDash20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleDash20(_ref79, ref) {
  var children = _ref79.children,
      rest = _objectWithoutProperties(_ref79, _excluded79);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path111 || (_path111 = /*#__PURE__*/React.createElement("path", {
    d: "M7.7 4.7a14.7 14.7 0 00-3 3.1L6.3 9A13.26 13.26 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.51 12.51 0 002 16H4A11.48 11.48 0 014.6 12.3zM2.7 20.4a14.4 14.4 0 002 3.9l1.6-1.2a12.89 12.89 0 01-1.7-3.3zM7.8 27.3a14.4 14.4 0 003.9 2l.6-1.9A12.89 12.89 0 019 25.7zM11.7 2.7l.6 1.9A11.48 11.48 0 0116 4V2A12.51 12.51 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.53 11.53 0 0123 25.7zM27.4 19.7l1.9.6A15.47 15.47 0 0030 16H28A11.48 11.48 0 0127.4 19.7zM29.2 11.6a14.4 14.4 0 00-2-3.9L25.6 8.9a12.89 12.89 0 011.7 3.3zM24.1 4.6a14.4 14.4 0 00-3.9-2l-.6 1.9a12.89 12.89 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.48 11.48 0 0116 28v2A21.42 21.42 0 0020.3 29.3z"
  })), children);
})));
var CircleDash16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleDash16(_ref80, ref) {
  var children = _ref80.children,
      rest = _objectWithoutProperties(_ref80, _excluded80);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path112 || (_path112 = /*#__PURE__*/React.createElement("path", {
    d: "M7.7 4.7a14.7 14.7 0 00-3 3.1L6.3 9A13.26 13.26 0 018.9 6.3zM4.6 12.3l-1.9-.6A12.51 12.51 0 002 16H4A11.48 11.48 0 014.6 12.3zM2.7 20.4a14.4 14.4 0 002 3.9l1.6-1.2a12.89 12.89 0 01-1.7-3.3zM7.8 27.3a14.4 14.4 0 003.9 2l.6-1.9A12.89 12.89 0 019 25.7zM11.7 2.7l.6 1.9A11.48 11.48 0 0116 4V2A12.51 12.51 0 0011.7 2.7zM24.2 27.3a15.18 15.18 0 003.1-3.1L25.7 23A11.53 11.53 0 0123 25.7zM27.4 19.7l1.9.6A15.47 15.47 0 0030 16H28A11.48 11.48 0 0127.4 19.7zM29.2 11.6a14.4 14.4 0 00-2-3.9L25.6 8.9a12.89 12.89 0 011.7 3.3zM24.1 4.6a14.4 14.4 0 00-3.9-2l-.6 1.9a12.89 12.89 0 013.3 1.7zM20.3 29.3l-.6-1.9A11.48 11.48 0 0116 28v2A21.42 21.42 0 0020.3 29.3z"
  })), children);
})));
var CircleFillGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleFillGlyph(_ref81, ref) {
  var children = _ref81.children,
      rest = _objectWithoutProperties(_ref81, _excluded81);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle9 || (_circle9 = /*#__PURE__*/React.createElement("circle", {
    cx: "8",
    cy: "8",
    r: "6"
  })), children);
})));
var WatsonHealthCircleMeasurement32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCircleMeasurement32(_ref82, ref) {
  var children = _ref82.children,
      rest = _objectWithoutProperties(_ref82, _excluded82);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path113 || (_path113 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z"
  })), _path114 || (_path114 = /*#__PURE__*/React.createElement("path", {
    d: "M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z"
  })), children);
})));
var WatsonHealthCircleMeasurement24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCircleMeasurement24(_ref83, ref) {
  var children = _ref83.children,
      rest = _objectWithoutProperties(_ref83, _excluded83);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path115 || (_path115 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z"
  })), _path116 || (_path116 = /*#__PURE__*/React.createElement("path", {
    d: "M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z"
  })), children);
})));
var WatsonHealthCircleMeasurement20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCircleMeasurement20(_ref84, ref) {
  var children = _ref84.children,
      rest = _objectWithoutProperties(_ref84, _excluded84);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path117 || (_path117 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z"
  })), _path118 || (_path118 = /*#__PURE__*/React.createElement("path", {
    d: "M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z"
  })), children);
})));
var WatsonHealthCircleMeasurement16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCircleMeasurement16(_ref85, ref) {
  var children = _ref85.children,
      rest = _objectWithoutProperties(_ref85, _excluded85);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path119 || (_path119 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14,14,0,1,1,30,16,14,14,0,0,1,16,30ZM16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Z"
  })), _path120 || (_path120 = /*#__PURE__*/React.createElement("path", {
    d: "M21,12.41V16h2V9H16v2h3.59L11,19.59V16H9v7h7V21H12.41Z"
  })), children);
})));
var CirclePacking32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CirclePacking32(_ref86, ref) {
  var children = _ref86.children,
      rest = _objectWithoutProperties(_ref86, _excluded86);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path121 || (_path121 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.5,7A3.5,3.5,0,1,1,20,12.5,3.5041,3.5041,0,0,1,23.5,9Zm.4348-1.978C23.791,7.0107,23.6467,7,23.5,7a5.4826,5.4826,0,0,0-4.1323,1.8784,8.0109,8.0109,0,0,0-5.5664-4.6675A11.8554,11.8554,0,0,1,23.9348,7.022ZM16,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,28ZM12,18a6,6,0,1,1,6-6A6.0067,6.0067,0,0,1,12,18ZM4,16a11.97,11.97,0,0,1,.2112-2.1987,7.9921,7.9921,0,0,0,7.3459,6.1762,5.9581,5.9581,0,0,0-.89,6.7564A12.0025,12.0025,0,0,1,4,16ZM21.3325,26.7339a5.9834,5.9834,0,0,0-4.1782-8.6206,8.02,8.02,0,0,0,1.9126-2.3672,5.4883,5.4883,0,0,0,8.9167-.0679c.003.1079.0164.2134.0164.3218A12.0025,12.0025,0,0,1,21.3325,26.7339Z"
  })), children);
})));
var CirclePacking24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CirclePacking24(_ref87, ref) {
  var children = _ref87.children,
      rest = _objectWithoutProperties(_ref87, _excluded87);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path122 || (_path122 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.5,7A3.5,3.5,0,1,1,20,12.5,3.5041,3.5041,0,0,1,23.5,9Zm.4348-1.978C23.791,7.0107,23.6467,7,23.5,7a5.4826,5.4826,0,0,0-4.1323,1.8784,8.0109,8.0109,0,0,0-5.5664-4.6675A11.8554,11.8554,0,0,1,23.9348,7.022ZM16,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,28ZM12,18a6,6,0,1,1,6-6A6.0067,6.0067,0,0,1,12,18ZM4,16a11.97,11.97,0,0,1,.2112-2.1987,7.9921,7.9921,0,0,0,7.3459,6.1762,5.9581,5.9581,0,0,0-.89,6.7564A12.0025,12.0025,0,0,1,4,16ZM21.3325,26.7339a5.9834,5.9834,0,0,0-4.1782-8.6206,8.02,8.02,0,0,0,1.9126-2.3672,5.4883,5.4883,0,0,0,8.9167-.0679c.003.1079.0164.2134.0164.3218A12.0025,12.0025,0,0,1,21.3325,26.7339Z"
  })), children);
})));
var CirclePacking20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CirclePacking20(_ref88, ref) {
  var children = _ref88.children,
      rest = _objectWithoutProperties(_ref88, _excluded88);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path123 || (_path123 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.5,7A3.5,3.5,0,1,1,20,12.5,3.5041,3.5041,0,0,1,23.5,9Zm.4348-1.978C23.791,7.0107,23.6467,7,23.5,7a5.4826,5.4826,0,0,0-4.1323,1.8784,8.0109,8.0109,0,0,0-5.5664-4.6675A11.8554,11.8554,0,0,1,23.9348,7.022ZM16,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,28ZM12,18a6,6,0,1,1,6-6A6.0067,6.0067,0,0,1,12,18ZM4,16a11.97,11.97,0,0,1,.2112-2.1987,7.9921,7.9921,0,0,0,7.3459,6.1762,5.9581,5.9581,0,0,0-.89,6.7564A12.0025,12.0025,0,0,1,4,16ZM21.3325,26.7339a5.9834,5.9834,0,0,0-4.1782-8.6206,8.02,8.02,0,0,0,1.9126-2.3672,5.4883,5.4883,0,0,0,8.9167-.0679c.003.1079.0164.2134.0164.3218A12.0025,12.0025,0,0,1,21.3325,26.7339Z"
  })), children);
})));
var CirclePacking16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CirclePacking16(_ref89, ref) {
  var children = _ref89.children,
      rest = _objectWithoutProperties(_ref89, _excluded89);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path124 || (_path124 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm7.5,7A3.5,3.5,0,1,1,20,12.5,3.5041,3.5041,0,0,1,23.5,9Zm.4348-1.978C23.791,7.0107,23.6467,7,23.5,7a5.4826,5.4826,0,0,0-4.1323,1.8784,8.0109,8.0109,0,0,0-5.5664-4.6675A11.8554,11.8554,0,0,1,23.9348,7.022ZM16,28a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,28ZM12,18a6,6,0,1,1,6-6A6.0067,6.0067,0,0,1,12,18ZM4,16a11.97,11.97,0,0,1,.2112-2.1987,7.9921,7.9921,0,0,0,7.3459,6.1762,5.9581,5.9581,0,0,0-.89,6.7564A12.0025,12.0025,0,0,1,4,16ZM21.3325,26.7339a5.9834,5.9834,0,0,0-4.1782-8.6206,8.02,8.02,0,0,0,1.9126-2.3672,5.4883,5.4883,0,0,0,8.9167-.0679c.003.1079.0164.2134.0164.3218A12.0025,12.0025,0,0,1,21.3325,26.7339Z"
  })), children);
})));
var CircleStrokeGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CircleStrokeGlyph(_ref90, ref) {
  var children = _ref90.children,
      rest = _objectWithoutProperties(_ref90, _excluded90);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path125 || (_path125 = /*#__PURE__*/React.createElement("path", {
    d: "M8,4A4,4,0,1,1,4,8,4.0045,4.0045,0,0,1,8,4M8,2a6,6,0,1,0,6,6A6,6,0,0,0,8,2Z"
  })), children);
})));
var QCircuitComposer32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function QCircuitComposer32(_ref91, ref) {
  var children = _ref91.children,
      rest = _objectWithoutProperties(_ref91, _excluded91);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path126 || (_path126 = /*#__PURE__*/React.createElement("path", {
    d: "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z"
  })), _path127 || (_path127 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H26V6a2,2,0,0,0-2-2H8A2,2,0,0,0,6,6v9H2v2H6v9a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2V17h4ZM8,26V6H24V26Z"
  })), children);
})));
var QCircuitComposer24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function QCircuitComposer24(_ref92, ref) {
  var children = _ref92.children,
      rest = _objectWithoutProperties(_ref92, _excluded92);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path128 || (_path128 = /*#__PURE__*/React.createElement("path", {
    d: "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z"
  })), _path129 || (_path129 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H26V6a2,2,0,0,0-2-2H8A2,2,0,0,0,6,6v9H2v2H6v9a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2V17h4ZM8,26V6H24V26Z"
  })), children);
})));
var QCircuitComposer20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function QCircuitComposer20(_ref93, ref) {
  var children = _ref93.children,
      rest = _objectWithoutProperties(_ref93, _excluded93);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path130 || (_path130 = /*#__PURE__*/React.createElement("path", {
    d: "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z"
  })), _path131 || (_path131 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H26V6a2,2,0,0,0-2-2H8A2,2,0,0,0,6,6v9H2v2H6v9a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2V17h4ZM8,26V6H24V26Z"
  })), children);
})));
var QCircuitComposer16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function QCircuitComposer16(_ref94, ref) {
  var children = _ref94.children,
      rest = _objectWithoutProperties(_ref94, _excluded94);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path132 || (_path132 = /*#__PURE__*/React.createElement("path", {
    d: "M18 9L18 15 14 15 14 9 12 9 12 23 14 23 14 17 18 17 18 23 20 23 20 9 18 9z"
  })), _path133 || (_path133 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H26V6a2,2,0,0,0-2-2H8A2,2,0,0,0,6,6v9H2v2H6v9a2,2,0,0,0,2,2H24a2,2,0,0,0,2-2V17h4ZM8,26V6H24V26Z"
  })), children);
})));
var Classification32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Classification32(_ref95, ref) {
  var children = _ref95.children,
      rest = _objectWithoutProperties(_ref95, _excluded95);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle10 || (_circle10 = /*#__PURE__*/React.createElement("circle", {
    cx: "15",
    cy: "19",
    r: "1"
  })), _path134 || (_path134 = /*#__PURE__*/React.createElement("path", {
    d: "M27.7,9.3l-7-7A.9087.9087,0,0,0,20,2H10A2.0058,2.0058,0,0,0,8,4V14H6a2.0023,2.0023,0,0,0-2,2v6a2.0023,2.0023,0,0,0,2,2H8v4a2.0058,2.0058,0,0,0,2,2H26a2.0058,2.0058,0,0,0,2-2V10A.9092.9092,0,0,0,27.7,9.3ZM20,4.4,25.6,10H20ZM6,16h9.5972L19,19l-3.3926,3H6ZM26,28H10V24h5.6089a2.0076,2.0076,0,0,0,1.3135-.4927l3.3833-2.9917a2.0015,2.0015,0,0,0,.01-3.0229l-3.4033-3.0083A1.9961,1.9961,0,0,0,15.6089,14H10V4h8v6a2.0058,2.0058,0,0,0,2,2h6Z"
  })), children);
})));
var Classification24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Classification24(_ref96, ref) {
  var children = _ref96.children,
      rest = _objectWithoutProperties(_ref96, _excluded96);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle11 || (_circle11 = /*#__PURE__*/React.createElement("circle", {
    cx: "15",
    cy: "19",
    r: "1"
  })), _path135 || (_path135 = /*#__PURE__*/React.createElement("path", {
    d: "M27.7,9.3l-7-7A.9087.9087,0,0,0,20,2H10A2.0058,2.0058,0,0,0,8,4V14H6a2.0023,2.0023,0,0,0-2,2v6a2.0023,2.0023,0,0,0,2,2H8v4a2.0058,2.0058,0,0,0,2,2H26a2.0058,2.0058,0,0,0,2-2V10A.9092.9092,0,0,0,27.7,9.3ZM20,4.4,25.6,10H20ZM6,16h9.5972L19,19l-3.3926,3H6ZM26,28H10V24h5.6089a2.0076,2.0076,0,0,0,1.3135-.4927l3.3833-2.9917a2.0015,2.0015,0,0,0,.01-3.0229l-3.4033-3.0083A1.9961,1.9961,0,0,0,15.6089,14H10V4h8v6a2.0058,2.0058,0,0,0,2,2h6Z"
  })), children);
})));
var Classification20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Classification20(_ref97, ref) {
  var children = _ref97.children,
      rest = _objectWithoutProperties(_ref97, _excluded97);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle12 || (_circle12 = /*#__PURE__*/React.createElement("circle", {
    cx: "15",
    cy: "19",
    r: "1"
  })), _path136 || (_path136 = /*#__PURE__*/React.createElement("path", {
    d: "M27.7,9.3l-7-7A.9087.9087,0,0,0,20,2H10A2.0058,2.0058,0,0,0,8,4V14H6a2.0023,2.0023,0,0,0-2,2v6a2.0023,2.0023,0,0,0,2,2H8v4a2.0058,2.0058,0,0,0,2,2H26a2.0058,2.0058,0,0,0,2-2V10A.9092.9092,0,0,0,27.7,9.3ZM20,4.4,25.6,10H20ZM6,16h9.5972L19,19l-3.3926,3H6ZM26,28H10V24h5.6089a2.0076,2.0076,0,0,0,1.3135-.4927l3.3833-2.9917a2.0015,2.0015,0,0,0,.01-3.0229l-3.4033-3.0083A1.9961,1.9961,0,0,0,15.6089,14H10V4h8v6a2.0058,2.0058,0,0,0,2,2h6Z"
  })), children);
})));
var Classification16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Classification16(_ref98, ref) {
  var children = _ref98.children,
      rest = _objectWithoutProperties(_ref98, _excluded98);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle13 || (_circle13 = /*#__PURE__*/React.createElement("circle", {
    cx: "15",
    cy: "19",
    r: "1"
  })), _path137 || (_path137 = /*#__PURE__*/React.createElement("path", {
    d: "M27.7,9.3l-7-7A.9087.9087,0,0,0,20,2H10A2.0058,2.0058,0,0,0,8,4V14H6a2.0023,2.0023,0,0,0-2,2v6a2.0023,2.0023,0,0,0,2,2H8v4a2.0058,2.0058,0,0,0,2,2H26a2.0058,2.0058,0,0,0,2-2V10A.9092.9092,0,0,0,27.7,9.3ZM20,4.4,25.6,10H20ZM6,16h9.5972L19,19l-3.3926,3H6ZM26,28H10V24h5.6089a2.0076,2.0076,0,0,0,1.3135-.4927l3.3833-2.9917a2.0015,2.0015,0,0,0,.01-3.0229l-3.4033-3.0083A1.9961,1.9961,0,0,0,15.6089,14H10V4h8v6a2.0058,2.0058,0,0,0,2,2h6Z"
  })), children);
})));
var ClassifierLanguage32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClassifierLanguage32(_ref99, ref) {
  var children = _ref99.children,
      rest = _objectWithoutProperties(_ref99, _excluded99);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path138 || (_path138 = /*#__PURE__*/React.createElement("path", {
    d: "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 10-2 0V14H2v2H9V14H7zM4 6A2 2 0 116 8 2 2 0 014 6z"
  })), children);
})));
var ClassifierLanguage24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClassifierLanguage24(_ref100, ref) {
  var children = _ref100.children,
      rest = _objectWithoutProperties(_ref100, _excluded100);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path139 || (_path139 = /*#__PURE__*/React.createElement("path", {
    d: "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 10-2 0V14H2v2H9V14H7zM4 6A2 2 0 116 8 2 2 0 014 6z"
  })), children);
})));
var ClassifierLanguage20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClassifierLanguage20(_ref101, ref) {
  var children = _ref101.children,
      rest = _objectWithoutProperties(_ref101, _excluded101);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path140 || (_path140 = /*#__PURE__*/React.createElement("path", {
    d: "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 10-2 0V14H2v2H9V14H7zM4 6A2 2 0 116 8 2 2 0 014 6z"
  })), children);
})));
var ClassifierLanguage16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClassifierLanguage16(_ref102, ref) {
  var children = _ref102.children,
      rest = _objectWithoutProperties(_ref102, _excluded102);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path141 || (_path141 = /*#__PURE__*/React.createElement("path", {
    d: "M30 10V2H22v8h3v4H23v2h7V14H27V10zM24 4h4V8H24zM20 23.41L18.59 22 16 24.59 13.41 22 12 23.41 14.59 26 12 28.59 13.41 30 16 27.41 18.59 30 20 28.59 17.41 26 20 23.41zM20 14L12 14 12 16 15 16 15 21 17 21 17 16 20 16 20 14zM7 9.86a4 4 0 10-2 0V14H2v2H9V14H7zM4 6A2 2 0 116 8 2 2 0 014 6z"
  })), children);
})));
var Clean32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Clean32(_ref103, ref) {
  var children = _ref103.children,
      rest = _objectWithoutProperties(_ref103, _excluded103);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path142 || (_path142 = /*#__PURE__*/React.createElement("path", {
    d: "M20 18H26V20H20z",
    transform: "rotate(-180 23 19)"
  })), _path143 || (_path143 = /*#__PURE__*/React.createElement("path", {
    d: "M24 26H30V28H24z",
    transform: "rotate(-180 27 27)"
  })), _path144 || (_path144 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22H28V24H22z",
    transform: "rotate(-180 25 23)"
  })), _path145 || (_path145 = /*#__PURE__*/React.createElement("path", {
    d: "M17.0029,20a4.8952,4.8952,0,0,0-2.4044-4.1729L22,3,20.2691,2,12.6933,15.126A5.6988,5.6988,0,0,0,7.45,16.6289C3.7064,20.24,3.9963,28.6821,4.01,29.04a1,1,0,0,0,1,.96H20.0012a1,1,0,0,0,.6-1.8C17.0615,25.5439,17.0029,20.0537,17.0029,20ZM11.93,16.9971A3.11,3.11,0,0,1,15.0041,20c0,.0381.0019.208.0168.4688L9.1215,17.8452A3.8,3.8,0,0,1,11.93,16.9971ZM15.4494,28A5.2,5.2,0,0,1,14,25H12a6.4993,6.4993,0,0,0,.9684,3H10.7451A16.6166,16.6166,0,0,1,10,24H8a17.3424,17.3424,0,0,0,.6652,4H6c.031-1.8364.29-5.8921,1.8027-8.5527l7.533,3.35A13.0253,13.0253,0,0,0,17.5968,28Z"
  })), children);
})));
var Clean24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Clean24(_ref104, ref) {
  var children = _ref104.children,
      rest = _objectWithoutProperties(_ref104, _excluded104);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path146 || (_path146 = /*#__PURE__*/React.createElement("path", {
    d: "M20 18H26V20H20z",
    transform: "rotate(-180 23 19)"
  })), _path147 || (_path147 = /*#__PURE__*/React.createElement("path", {
    d: "M24 26H30V28H24z",
    transform: "rotate(-180 27 27)"
  })), _path148 || (_path148 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22H28V24H22z",
    transform: "rotate(-180 25 23)"
  })), _path149 || (_path149 = /*#__PURE__*/React.createElement("path", {
    d: "M17.0029,20a4.8952,4.8952,0,0,0-2.4044-4.1729L22,3,20.2691,2,12.6933,15.126A5.6988,5.6988,0,0,0,7.45,16.6289C3.7064,20.24,3.9963,28.6821,4.01,29.04a1,1,0,0,0,1,.96H20.0012a1,1,0,0,0,.6-1.8C17.0615,25.5439,17.0029,20.0537,17.0029,20ZM11.93,16.9971A3.11,3.11,0,0,1,15.0041,20c0,.0381.0019.208.0168.4688L9.1215,17.8452A3.8,3.8,0,0,1,11.93,16.9971ZM15.4494,28A5.2,5.2,0,0,1,14,25H12a6.4993,6.4993,0,0,0,.9684,3H10.7451A16.6166,16.6166,0,0,1,10,24H8a17.3424,17.3424,0,0,0,.6652,4H6c.031-1.8364.29-5.8921,1.8027-8.5527l7.533,3.35A13.0253,13.0253,0,0,0,17.5968,28Z"
  })), children);
})));
var Clean20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Clean20(_ref105, ref) {
  var children = _ref105.children,
      rest = _objectWithoutProperties(_ref105, _excluded105);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path150 || (_path150 = /*#__PURE__*/React.createElement("path", {
    d: "M20 18H26V20H20z",
    transform: "rotate(-180 23 19)"
  })), _path151 || (_path151 = /*#__PURE__*/React.createElement("path", {
    d: "M24 26H30V28H24z",
    transform: "rotate(-180 27 27)"
  })), _path152 || (_path152 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22H28V24H22z",
    transform: "rotate(-180 25 23)"
  })), _path153 || (_path153 = /*#__PURE__*/React.createElement("path", {
    d: "M17.0029,20a4.8952,4.8952,0,0,0-2.4044-4.1729L22,3,20.2691,2,12.6933,15.126A5.6988,5.6988,0,0,0,7.45,16.6289C3.7064,20.24,3.9963,28.6821,4.01,29.04a1,1,0,0,0,1,.96H20.0012a1,1,0,0,0,.6-1.8C17.0615,25.5439,17.0029,20.0537,17.0029,20ZM11.93,16.9971A3.11,3.11,0,0,1,15.0041,20c0,.0381.0019.208.0168.4688L9.1215,17.8452A3.8,3.8,0,0,1,11.93,16.9971ZM15.4494,28A5.2,5.2,0,0,1,14,25H12a6.4993,6.4993,0,0,0,.9684,3H10.7451A16.6166,16.6166,0,0,1,10,24H8a17.3424,17.3424,0,0,0,.6652,4H6c.031-1.8364.29-5.8921,1.8027-8.5527l7.533,3.35A13.0253,13.0253,0,0,0,17.5968,28Z"
  })), children);
})));
var Clean16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Clean16(_ref106, ref) {
  var children = _ref106.children,
      rest = _objectWithoutProperties(_ref106, _excluded106);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path154 || (_path154 = /*#__PURE__*/React.createElement("path", {
    d: "M20 18H26V20H20z",
    transform: "rotate(-180 23 19)"
  })), _path155 || (_path155 = /*#__PURE__*/React.createElement("path", {
    d: "M24 26H30V28H24z",
    transform: "rotate(-180 27 27)"
  })), _path156 || (_path156 = /*#__PURE__*/React.createElement("path", {
    d: "M22 22H28V24H22z",
    transform: "rotate(-180 25 23)"
  })), _path157 || (_path157 = /*#__PURE__*/React.createElement("path", {
    d: "M17.0029,20a4.8952,4.8952,0,0,0-2.4044-4.1729L22,3,20.2691,2,12.6933,15.126A5.6988,5.6988,0,0,0,7.45,16.6289C3.7064,20.24,3.9963,28.6821,4.01,29.04a1,1,0,0,0,1,.96H20.0012a1,1,0,0,0,.6-1.8C17.0615,25.5439,17.0029,20.0537,17.0029,20ZM11.93,16.9971A3.11,3.11,0,0,1,15.0041,20c0,.0381.0019.208.0168.4688L9.1215,17.8452A3.8,3.8,0,0,1,11.93,16.9971ZM15.4494,28A5.2,5.2,0,0,1,14,25H12a6.4993,6.4993,0,0,0,.9684,3H10.7451A16.6166,16.6166,0,0,1,10,24H8a17.3424,17.3424,0,0,0,.6652,4H6c.031-1.8364.29-5.8921,1.8027-8.5527l7.533,3.35A13.0253,13.0253,0,0,0,17.5968,28Z"
  })), children);
})));
var Close32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Close32(_ref107, ref) {
  var children = _ref107.children,
      rest = _objectWithoutProperties(_ref107, _excluded107);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path158 || (_path158 = /*#__PURE__*/React.createElement("path", {
    d: "M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
  })), children);
})));
var Close24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Close24(_ref108, ref) {
  var children = _ref108.children,
      rest = _objectWithoutProperties(_ref108, _excluded108);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path159 || (_path159 = /*#__PURE__*/React.createElement("path", {
    d: "M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
  })), children);
})));
var Close20 = /*#__PURE__*/react.forwardRef(function Close20(_ref109, ref) {
  var children = _ref109.children,
      rest = (0,Icon_9ecdf98c._)(_ref109, _excluded109);

  return /*#__PURE__*/react.createElement(Icon_9ecdf98c.I, (0,Icon_9ecdf98c.a)({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path160 || (_path160 = /*#__PURE__*/react.createElement("path", {
    d: "M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
  })), children);
});
var Close16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Close16(_ref110, ref) {
  var children = _ref110.children,
      rest = _objectWithoutProperties(_ref110, _excluded110);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path161 || (_path161 = /*#__PURE__*/React.createElement("path", {
    d: "M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
  })), children);
})));
var CloseFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseFilled32(_ref111, ref) {
  var children = _ref111.children,
      rest = _objectWithoutProperties(_ref111, _excluded111);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path162 || (_path162 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M21.4,23L16,17.6L10.6,23L9,21.4l5.4-5.4L9,10.6L10.6,9\tl5.4,5.4L21.4,9l1.6,1.6L17.6,16l5.4,5.4L21.4,23z"
  })), _path163 || (_path163 = /*#__PURE__*/React.createElement("path", {
    d: "M14.4 16L9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4 21.4 23 16 17.6 10.6 23 9 21.4 14.4 16",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CloseFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseFilled24(_ref112, ref) {
  var children = _ref112.children,
      rest = _objectWithoutProperties(_ref112, _excluded112);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path164 || (_path164 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M21.4,23L16,17.6L10.6,23L9,21.4l5.4-5.4L9,10.6L10.6,9\tl5.4,5.4L21.4,9l1.6,1.6L17.6,16l5.4,5.4L21.4,23z"
  })), _path165 || (_path165 = /*#__PURE__*/React.createElement("path", {
    d: "M14.4 16L9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4 21.4 23 16 17.6 10.6 23 9 21.4 14.4 16",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CloseFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseFilled20(_ref113, ref) {
  var children = _ref113.children,
      rest = _objectWithoutProperties(_ref113, _excluded113);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path166 || (_path166 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M21.4,23L16,17.6L10.6,23L9,21.4l5.4-5.4L9,10.6L10.6,9\tl5.4,5.4L21.4,9l1.6,1.6L17.6,16l5.4,5.4L21.4,23z"
  })), _path167 || (_path167 = /*#__PURE__*/React.createElement("path", {
    d: "M14.4 16L9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4 21.4 23 16 17.6 10.6 23 9 21.4 14.4 16",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CloseFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseFilled16(_ref114, ref) {
  var children = _ref114.children,
      rest = _objectWithoutProperties(_ref114, _excluded114);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path168 || (_path168 = /*#__PURE__*/React.createElement("path", {
    d: "M8,1C4.1,1,1,4.1,1,8s3.1,7,7,7s7-3.1,7-7S11.9,1,8,1z M10.7,11.5L8,8.8l-2.7,2.7l-0.8-0.8L7.2,8L4.5,5.3l0.8-0.8L8,7.2\tl2.7-2.7l0.8,0.8L8.8,8l2.7,2.7L10.7,11.5z"
  })), children);
})));
var CloseOutline32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseOutline32(_ref115, ref) {
  var children = _ref115.children,
      rest = _objectWithoutProperties(_ref115, _excluded115);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path169 || (_path169 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M16,28C9.4,28,4,22.6,4,16S9.4,4,16,4s12,5.4,12,12\tS22.6,28,16,28z"
  })), _path170 || (_path170 = /*#__PURE__*/React.createElement("path", {
    d: "M21.4 23L16 17.6 10.6 23 9 21.4 14.4 16 9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4z"
  })), children);
})));
var CloseOutline24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseOutline24(_ref116, ref) {
  var children = _ref116.children,
      rest = _objectWithoutProperties(_ref116, _excluded116);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path171 || (_path171 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M16,28C9.4,28,4,22.6,4,16S9.4,4,16,4s12,5.4,12,12\tS22.6,28,16,28z"
  })), _path172 || (_path172 = /*#__PURE__*/React.createElement("path", {
    d: "M21.4 23L16 17.6 10.6 23 9 21.4 14.4 16 9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4z"
  })), children);
})));
var CloseOutline20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseOutline20(_ref117, ref) {
  var children = _ref117.children,
      rest = _objectWithoutProperties(_ref117, _excluded117);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path173 || (_path173 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M16,28C9.4,28,4,22.6,4,16S9.4,4,16,4s12,5.4,12,12\tS22.6,28,16,28z"
  })), _path174 || (_path174 = /*#__PURE__*/React.createElement("path", {
    d: "M21.4 23L16 17.6 10.6 23 9 21.4 14.4 16 9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4z"
  })), children);
})));
var CloseOutline16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloseOutline16(_ref118, ref) {
  var children = _ref118.children,
      rest = _objectWithoutProperties(_ref118, _excluded118);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path175 || (_path175 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2C8.2,2,2,8.2,2,16s6.2,14,14,14s14-6.2,14-14S23.8,2,16,2z M16,28C9.4,28,4,22.6,4,16S9.4,4,16,4s12,5.4,12,12\tS22.6,28,16,28z"
  })), _path176 || (_path176 = /*#__PURE__*/React.createElement("path", {
    d: "M21.4 23L16 17.6 10.6 23 9 21.4 14.4 16 9 10.6 10.6 9 16 14.4 21.4 9 23 10.6 17.6 16 23 21.4z"
  })), children);
})));
var ClosedCaption32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaption32(_ref119, ref) {
  var children = _ref119.children,
      rest = _objectWithoutProperties(_ref119, _excluded119);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path177 || (_path177 = /*#__PURE__*/React.createElement("path", {
    d: "M15 21H10a2 2 0 01-2-2V13a2 2 0 012-2h5v2H10v6h5zM25 21H20a2 2 0 01-2-2V13a2 2 0 012-2h5v2H20v6h5z"
  })), _path178 || (_path178 = /*#__PURE__*/React.createElement("path", {
    d: "M28,26H4a2,2,0,0,1-2-2V8A2,2,0,0,1,4,6H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,8V24H28V8Z"
  })), children);
})));
var ClosedCaption24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaption24(_ref120, ref) {
  var children = _ref120.children,
      rest = _objectWithoutProperties(_ref120, _excluded120);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path179 || (_path179 = /*#__PURE__*/React.createElement("path", {
    d: "M15 21H10a2 2 0 01-2-2V13a2 2 0 012-2h5v2H10v6h5zM25 21H20a2 2 0 01-2-2V13a2 2 0 012-2h5v2H20v6h5z"
  })), _path180 || (_path180 = /*#__PURE__*/React.createElement("path", {
    d: "M28,26H4a2,2,0,0,1-2-2V8A2,2,0,0,1,4,6H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,8V24H28V8Z"
  })), children);
})));
var ClosedCaption20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaption20(_ref121, ref) {
  var children = _ref121.children,
      rest = _objectWithoutProperties(_ref121, _excluded121);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path181 || (_path181 = /*#__PURE__*/React.createElement("path", {
    d: "M15 21H10a2 2 0 01-2-2V13a2 2 0 012-2h5v2H10v6h5zM25 21H20a2 2 0 01-2-2V13a2 2 0 012-2h5v2H20v6h5z"
  })), _path182 || (_path182 = /*#__PURE__*/React.createElement("path", {
    d: "M28,26H4a2,2,0,0,1-2-2V8A2,2,0,0,1,4,6H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,8V24H28V8Z"
  })), children);
})));
var ClosedCaption16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaption16(_ref122, ref) {
  var children = _ref122.children,
      rest = _objectWithoutProperties(_ref122, _excluded122);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path183 || (_path183 = /*#__PURE__*/React.createElement("path", {
    d: "M15 21H10a2 2 0 01-2-2V13a2 2 0 012-2h5v2H10v6h5zM25 21H20a2 2 0 01-2-2V13a2 2 0 012-2h5v2H20v6h5z"
  })), _path184 || (_path184 = /*#__PURE__*/React.createElement("path", {
    d: "M28,26H4a2,2,0,0,1-2-2V8A2,2,0,0,1,4,6H28a2,2,0,0,1,2,2V24A2,2,0,0,1,28,26ZM4,8V24H28V8Z"
  })), children);
})));
var ClosedCaptionAlt32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionAlt32(_ref123, ref) {
  var children = _ref123.children,
      rest = _objectWithoutProperties(_ref123, _excluded123);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path185 || (_path185 = /*#__PURE__*/React.createElement("path", {
    d: "M19 17H25V19H19zM11 17H17V19H11zM6 17H9V19H6zM22 13H26V15H22zM13 13H20V15H13zM6 13H11V15H6z"
  })), _path186 || (_path186 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ClosedCaptionAlt24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionAlt24(_ref124, ref) {
  var children = _ref124.children,
      rest = _objectWithoutProperties(_ref124, _excluded124);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path187 || (_path187 = /*#__PURE__*/React.createElement("path", {
    d: "M19 17H25V19H19zM11 17H17V19H11zM6 17H9V19H6zM22 13H26V15H22zM13 13H20V15H13zM6 13H11V15H6z"
  })), _path188 || (_path188 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ClosedCaptionAlt20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionAlt20(_ref125, ref) {
  var children = _ref125.children,
      rest = _objectWithoutProperties(_ref125, _excluded125);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path189 || (_path189 = /*#__PURE__*/React.createElement("path", {
    d: "M19 17H25V19H19zM11 17H17V19H11zM6 17H9V19H6zM22 13H26V15H22zM13 13H20V15H13zM6 13H11V15H6z"
  })), _path190 || (_path190 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ClosedCaptionAlt16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionAlt16(_ref126, ref) {
  var children = _ref126.children,
      rest = _objectWithoutProperties(_ref126, _excluded126);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path191 || (_path191 = /*#__PURE__*/React.createElement("path", {
    d: "M19 17H25V19H19zM11 17H17V19H11zM6 17H9V19H6zM22 13H26V15H22zM13 13H20V15H13zM6 13H11V15H6z"
  })), _path192 || (_path192 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ClosedCaptionFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionFilled32(_ref127, ref) {
  var children = _ref127.children,
      rest = _objectWithoutProperties(_ref127, _excluded127);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path193 || (_path193 = /*#__PURE__*/React.createElement("path", {
    d: "M28,6H4A2,2,0,0,0,2,8V24a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V8A2,2,0,0,0,28,6ZM15,13H10v6h5v2H10a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Zm10,0H20v6h5v2H20a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Z"
  })), children);
})));
var ClosedCaptionFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionFilled24(_ref128, ref) {
  var children = _ref128.children,
      rest = _objectWithoutProperties(_ref128, _excluded128);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path194 || (_path194 = /*#__PURE__*/React.createElement("path", {
    d: "M28,6H4A2,2,0,0,0,2,8V24a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V8A2,2,0,0,0,28,6ZM15,13H10v6h5v2H10a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Zm10,0H20v6h5v2H20a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Z"
  })), children);
})));
var ClosedCaptionFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionFilled20(_ref129, ref) {
  var children = _ref129.children,
      rest = _objectWithoutProperties(_ref129, _excluded129);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path195 || (_path195 = /*#__PURE__*/React.createElement("path", {
    d: "M28,6H4A2,2,0,0,0,2,8V24a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V8A2,2,0,0,0,28,6ZM15,13H10v6h5v2H10a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Zm10,0H20v6h5v2H20a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Z"
  })), children);
})));
var ClosedCaptionFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ClosedCaptionFilled16(_ref130, ref) {
  var children = _ref130.children,
      rest = _objectWithoutProperties(_ref130, _excluded130);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path196 || (_path196 = /*#__PURE__*/React.createElement("path", {
    d: "M28,6H4A2,2,0,0,0,2,8V24a2,2,0,0,0,2,2H28a2,2,0,0,0,2-2V8A2,2,0,0,0,28,6ZM15,13H10v6h5v2H10a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Zm10,0H20v6h5v2H20a2,2,0,0,1-2-2V13a2,2,0,0,1,2-2h5Z"
  })), children);
})));
var Cloud32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloud32(_ref131, ref) {
  var children = _ref131.children,
      rest = _objectWithoutProperties(_ref131, _excluded131);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path197 || (_path197 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), children);
})));
var Cloud24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloud24(_ref132, ref) {
  var children = _ref132.children,
      rest = _objectWithoutProperties(_ref132, _excluded132);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path198 || (_path198 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), children);
})));
var Cloud20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloud20(_ref133, ref) {
  var children = _ref133.children,
      rest = _objectWithoutProperties(_ref133, _excluded133);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path199 || (_path199 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), children);
})));
var Cloud16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloud16(_ref134, ref) {
  var children = _ref134.children,
      rest = _objectWithoutProperties(_ref134, _excluded134);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path200 || (_path200 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), children);
})));
var CloudAlerting32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAlerting32(_ref135, ref) {
  var children = _ref135.children,
      rest = _objectWithoutProperties(_ref135, _excluded135);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path201 || (_path201 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H15V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path202 || (_path202 = /*#__PURE__*/React.createElement("path", {
    d: "M29,14H17a1,1,0,0,1-.8574-1.5144l6-10a1,1,0,0,1,1.7154,0l6,10A1,1,0,0,1,29,14ZM18.7661,12h8.4678L23,4.9436Z"
  })), children);
})));
var CloudAlerting24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAlerting24(_ref136, ref) {
  var children = _ref136.children,
      rest = _objectWithoutProperties(_ref136, _excluded136);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path203 || (_path203 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H15V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path204 || (_path204 = /*#__PURE__*/React.createElement("path", {
    d: "M29,14H17a1,1,0,0,1-.8574-1.5144l6-10a1,1,0,0,1,1.7154,0l6,10A1,1,0,0,1,29,14ZM18.7661,12h8.4678L23,4.9436Z"
  })), children);
})));
var CloudAlerting20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAlerting20(_ref137, ref) {
  var children = _ref137.children,
      rest = _objectWithoutProperties(_ref137, _excluded137);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path205 || (_path205 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H15V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path206 || (_path206 = /*#__PURE__*/React.createElement("path", {
    d: "M29,14H17a1,1,0,0,1-.8574-1.5144l6-10a1,1,0,0,1,1.7154,0l6,10A1,1,0,0,1,29,14ZM18.7661,12h8.4678L23,4.9436Z"
  })), children);
})));
var CloudAlerting16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAlerting16(_ref138, ref) {
  var children = _ref138.children,
      rest = _objectWithoutProperties(_ref138, _excluded138);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path207 || (_path207 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H15V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path208 || (_path208 = /*#__PURE__*/React.createElement("path", {
    d: "M29,14H17a1,1,0,0,1-.8574-1.5144l6-10a1,1,0,0,1,1.7154,0l6,10A1,1,0,0,1,29,14ZM18.7661,12h8.4678L23,4.9436Z"
  })), children);
})));
var CloudAuditing32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAuditing32(_ref139, ref) {
  var children = _ref139.children,
      rest = _objectWithoutProperties(_ref139, _excluded139);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path209 || (_path209 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6H16V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path210 || (_path210 = /*#__PURE__*/React.createElement("path", {
    d: "M21 15L16 10.04 17.59 8.47 21 11.85 28.41 4.5 30 6.08 21 15z"
  })), children);
})));
var CloudAuditing24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAuditing24(_ref140, ref) {
  var children = _ref140.children,
      rest = _objectWithoutProperties(_ref140, _excluded140);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path211 || (_path211 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6H16V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path212 || (_path212 = /*#__PURE__*/React.createElement("path", {
    d: "M21 15L16 10.04 17.59 8.47 21 11.85 28.41 4.5 30 6.08 21 15z"
  })), children);
})));
var CloudAuditing20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAuditing20(_ref141, ref) {
  var children = _ref141.children,
      rest = _objectWithoutProperties(_ref141, _excluded141);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path213 || (_path213 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6H16V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path214 || (_path214 = /*#__PURE__*/React.createElement("path", {
    d: "M21 15L16 10.04 17.59 8.47 21 11.85 28.41 4.5 30 6.08 21 15z"
  })), children);
})));
var CloudAuditing16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudAuditing16(_ref142, ref) {
  var children = _ref142.children,
      rest = _objectWithoutProperties(_ref142, _excluded142);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path215 || (_path215 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6H16V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path216 || (_path216 = /*#__PURE__*/React.createElement("path", {
    d: "M21 15L16 10.04 17.59 8.47 21 11.85 28.41 4.5 30 6.08 21 15z"
  })), children);
})));
var CloudDataOps32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDataOps32(_ref143, ref) {
  var children = _ref143.children,
      rest = _objectWithoutProperties(_ref143, _excluded143);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path217 || (_path217 = /*#__PURE__*/React.createElement("path", {
    d: "M28 18H30V28H28zM24 14H26V28H24zM20 22H22V28H20zM22.175 10L23.76 8.7339A9.9522 9.9522 0 0017.89 5.1816 10.0025 10.0025 0 006.17 13.1152 7.5054 7.5054 0 00.0544 21.4087 7.6843 7.6843 0 007.7692 28H16V26H7.6945a5.632 5.632 0 01-5.6023-4.4858 5.5064 5.5064 0 014.4339-6.4307l1.3486-.2441.2139-1.11a8.206 8.206 0 016.7426-6.6426 7.9666 7.9666 0 013.0137.13A7.8037 7.8037 0 0122.175 10z"
  })), children);
})));
var CloudDataOps24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDataOps24(_ref144, ref) {
  var children = _ref144.children,
      rest = _objectWithoutProperties(_ref144, _excluded144);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path218 || (_path218 = /*#__PURE__*/React.createElement("path", {
    d: "M28 18H30V28H28zM24 14H26V28H24zM20 22H22V28H20zM22.175 10L23.76 8.7339A9.9522 9.9522 0 0017.89 5.1816 10.0025 10.0025 0 006.17 13.1152 7.5054 7.5054 0 00.0544 21.4087 7.6843 7.6843 0 007.7692 28H16V26H7.6945a5.632 5.632 0 01-5.6023-4.4858 5.5064 5.5064 0 014.4339-6.4307l1.3486-.2441.2139-1.11a8.206 8.206 0 016.7426-6.6426 7.9666 7.9666 0 013.0137.13A7.8037 7.8037 0 0122.175 10z"
  })), children);
})));
var CloudDataOps20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDataOps20(_ref145, ref) {
  var children = _ref145.children,
      rest = _objectWithoutProperties(_ref145, _excluded145);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path219 || (_path219 = /*#__PURE__*/React.createElement("path", {
    d: "M28 18H30V28H28zM24 14H26V28H24zM20 22H22V28H20zM22.175 10L23.76 8.7339A9.9522 9.9522 0 0017.89 5.1816 10.0025 10.0025 0 006.17 13.1152 7.5054 7.5054 0 00.0544 21.4087 7.6843 7.6843 0 007.7692 28H16V26H7.6945a5.632 5.632 0 01-5.6023-4.4858 5.5064 5.5064 0 014.4339-6.4307l1.3486-.2441.2139-1.11a8.206 8.206 0 016.7426-6.6426 7.9666 7.9666 0 013.0137.13A7.8037 7.8037 0 0122.175 10z"
  })), children);
})));
var CloudDataOps16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDataOps16(_ref146, ref) {
  var children = _ref146.children,
      rest = _objectWithoutProperties(_ref146, _excluded146);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path220 || (_path220 = /*#__PURE__*/React.createElement("path", {
    d: "M28 18H30V28H28zM24 14H26V28H24zM20 22H22V28H20zM22.175 10L23.76 8.7339A9.9522 9.9522 0 0017.89 5.1816 10.0025 10.0025 0 006.17 13.1152 7.5054 7.5054 0 00.0544 21.4087 7.6843 7.6843 0 007.7692 28H16V26H7.6945a5.632 5.632 0 01-5.6023-4.4858 5.5064 5.5064 0 014.4339-6.4307l1.3486-.2441.2139-1.11a8.206 8.206 0 016.7426-6.6426 7.9666 7.9666 0 013.0137.13A7.8037 7.8037 0 0122.175 10z"
  })), children);
})));
var CloudDownload32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDownload32(_ref147, ref) {
  var children = _ref147.children,
      rest = _objectWithoutProperties(_ref147, _excluded147);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path221 || (_path221 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), _path222 || (_path222 = /*#__PURE__*/React.createElement("path", {
    d: "M17 26.17L17 14 15 14 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17z"
  })), children);
})));
var CloudDownload24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDownload24(_ref148, ref) {
  var children = _ref148.children,
      rest = _objectWithoutProperties(_ref148, _excluded148);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path223 || (_path223 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), _path224 || (_path224 = /*#__PURE__*/React.createElement("path", {
    d: "M17 26.17L17 14 15 14 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17z"
  })), children);
})));
var CloudDownload20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDownload20(_ref149, ref) {
  var children = _ref149.children,
      rest = _objectWithoutProperties(_ref149, _excluded149);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path225 || (_path225 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), _path226 || (_path226 = /*#__PURE__*/React.createElement("path", {
    d: "M17 26.17L17 14 15 14 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17z"
  })), children);
})));
var CloudDownload16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudDownload16(_ref150, ref) {
  var children = _ref150.children,
      rest = _objectWithoutProperties(_ref150, _excluded150);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path227 || (_path227 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), _path228 || (_path228 = /*#__PURE__*/React.createElement("path", {
    d: "M17 26.17L17 14 15 14 15 26.17 12.41 23.59 11 25 16 30 21 25 19.59 23.59 17 26.17z"
  })), children);
})));
var CloudLightning32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLightning32(_ref151, ref) {
  var children = _ref151.children,
      rest = _objectWithoutProperties(_ref151, _excluded151);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path229 || (_path229 = /*#__PURE__*/React.createElement("path", {
    d: "M11.61,29.92a1,1,0,0,1-.6-1.07L12.83,17H8a1,1,0,0,1-1-1.23l3-13A1,1,0,0,1,11,2H21a1,1,0,0,1,.78.37,1,1,0,0,1,.2.85L20.25,11H25a1,1,0,0,1,.9.56,1,1,0,0,1-.11,1l-13,17A1,1,0,0,1,12,30,1.09,1.09,0,0,1,11.61,29.92ZM17.75,13l2-9H11.8L9.26,15h5.91L13.58,25.28,23,13Z"
  })), children);
})));
var CloudLightning24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLightning24(_ref152, ref) {
  var children = _ref152.children,
      rest = _objectWithoutProperties(_ref152, _excluded152);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path230 || (_path230 = /*#__PURE__*/React.createElement("path", {
    d: "M11.61,29.92a1,1,0,0,1-.6-1.07L12.83,17H8a1,1,0,0,1-1-1.23l3-13A1,1,0,0,1,11,2H21a1,1,0,0,1,.78.37,1,1,0,0,1,.2.85L20.25,11H25a1,1,0,0,1,.9.56,1,1,0,0,1-.11,1l-13,17A1,1,0,0,1,12,30,1.09,1.09,0,0,1,11.61,29.92ZM17.75,13l2-9H11.8L9.26,15h5.91L13.58,25.28,23,13Z"
  })), children);
})));
var CloudLightning20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLightning20(_ref153, ref) {
  var children = _ref153.children,
      rest = _objectWithoutProperties(_ref153, _excluded153);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path231 || (_path231 = /*#__PURE__*/React.createElement("path", {
    d: "M11.61,29.92a1,1,0,0,1-.6-1.07L12.83,17H8a1,1,0,0,1-1-1.23l3-13A1,1,0,0,1,11,2H21a1,1,0,0,1,.78.37,1,1,0,0,1,.2.85L20.25,11H25a1,1,0,0,1,.9.56,1,1,0,0,1-.11,1l-13,17A1,1,0,0,1,12,30,1.09,1.09,0,0,1,11.61,29.92ZM17.75,13l2-9H11.8L9.26,15h5.91L13.58,25.28,23,13Z"
  })), children);
})));
var CloudLightning16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLightning16(_ref154, ref) {
  var children = _ref154.children,
      rest = _objectWithoutProperties(_ref154, _excluded154);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path232 || (_path232 = /*#__PURE__*/React.createElement("path", {
    d: "M11.61,29.92a1,1,0,0,1-.6-1.07L12.83,17H8a1,1,0,0,1-1-1.23l3-13A1,1,0,0,1,11,2H21a1,1,0,0,1,.78.37,1,1,0,0,1,.2.85L20.25,11H25a1,1,0,0,1,.9.56,1,1,0,0,1-.11,1l-13,17A1,1,0,0,1,12,30,1.09,1.09,0,0,1,11.61,29.92ZM17.75,13l2-9H11.8L9.26,15h5.91L13.58,25.28,23,13Z"
  })), children);
})));
var CloudLogging32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLogging32(_ref155, ref) {
  var children = _ref155.children,
      rest = _objectWithoutProperties(_ref155, _excluded155);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path233 || (_path233 = /*#__PURE__*/React.createElement("path", {
    d: "M28 16v6H4V6H15V4H4A2 2 0 002 6V22a2 2 0 002 2h8v4H8v2H24V28H20V24h8a2 2 0 002-2V16zM18 28H14V24h4zM18 4H30V6H18z"
  })), _path234 || (_path234 = /*#__PURE__*/React.createElement("path", {
    d: "M18 8H30V10H18zM18 12H24V14H18z"
  })), children);
})));
var CloudLogging24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLogging24(_ref156, ref) {
  var children = _ref156.children,
      rest = _objectWithoutProperties(_ref156, _excluded156);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path235 || (_path235 = /*#__PURE__*/React.createElement("path", {
    d: "M28 16v6H4V6H15V4H4A2 2 0 002 6V22a2 2 0 002 2h8v4H8v2H24V28H20V24h8a2 2 0 002-2V16zM18 28H14V24h4zM18 4H30V6H18z"
  })), _path236 || (_path236 = /*#__PURE__*/React.createElement("path", {
    d: "M18 8H30V10H18zM18 12H24V14H18z"
  })), children);
})));
var CloudLogging20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLogging20(_ref157, ref) {
  var children = _ref157.children,
      rest = _objectWithoutProperties(_ref157, _excluded157);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path237 || (_path237 = /*#__PURE__*/React.createElement("path", {
    d: "M28 16v6H4V6H15V4H4A2 2 0 002 6V22a2 2 0 002 2h8v4H8v2H24V28H20V24h8a2 2 0 002-2V16zM18 28H14V24h4zM18 4H30V6H18z"
  })), _path238 || (_path238 = /*#__PURE__*/React.createElement("path", {
    d: "M18 8H30V10H18zM18 12H24V14H18z"
  })), children);
})));
var CloudLogging16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudLogging16(_ref158, ref) {
  var children = _ref158.children,
      rest = _objectWithoutProperties(_ref158, _excluded158);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path239 || (_path239 = /*#__PURE__*/React.createElement("path", {
    d: "M28 16v6H4V6H15V4H4A2 2 0 002 6V22a2 2 0 002 2h8v4H8v2H24V28H20V24h8a2 2 0 002-2V16zM18 28H14V24h4zM18 4H30V6H18z"
  })), _path240 || (_path240 = /*#__PURE__*/React.createElement("path", {
    d: "M18 8H30V10H18zM18 12H24V14H18z"
  })), children);
})));
var CloudMonitoring32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudMonitoring32(_ref159, ref) {
  var children = _ref159.children,
      rest = _objectWithoutProperties(_ref159, _excluded159);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path241 || (_path241 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6h7V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path242 || (_path242 = /*#__PURE__*/React.createElement("path", {
    d: "M18,18h-.01a1,1,0,0,1-.9511-.7253L15.2456,11H11V9h5a1,1,0,0,1,.9615.7252l1.0742,3.7589,3.0088-9.7783A1.0142,1.0142,0,0,1,22,3a.98.98,0,0,1,.9487.6838L24.7207,9H30v2H24a1,1,0,0,1-.9487-.6838l-1.0132-3.04L18.9556,17.2942A1,1,0,0,1,18,18Z"
  })), children);
})));
var CloudMonitoring24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudMonitoring24(_ref160, ref) {
  var children = _ref160.children,
      rest = _objectWithoutProperties(_ref160, _excluded160);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path243 || (_path243 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6h7V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path244 || (_path244 = /*#__PURE__*/React.createElement("path", {
    d: "M18,18h-.01a1,1,0,0,1-.9511-.7253L15.2456,11H11V9h5a1,1,0,0,1,.9615.7252l1.0742,3.7589,3.0088-9.7783A1.0142,1.0142,0,0,1,22,3a.98.98,0,0,1,.9487.6838L24.7207,9H30v2H24a1,1,0,0,1-.9487-.6838l-1.0132-3.04L18.9556,17.2942A1,1,0,0,1,18,18Z"
  })), children);
})));
var CloudMonitoring20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudMonitoring20(_ref161, ref) {
  var children = _ref161.children,
      rest = _objectWithoutProperties(_ref161, _excluded161);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path245 || (_path245 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6h7V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path246 || (_path246 = /*#__PURE__*/React.createElement("path", {
    d: "M18,18h-.01a1,1,0,0,1-.9511-.7253L15.2456,11H11V9h5a1,1,0,0,1,.9615.7252l1.0742,3.7589,3.0088-9.7783A1.0142,1.0142,0,0,1,22,3a.98.98,0,0,1,.9487.6838L24.7207,9H30v2H24a1,1,0,0,1-.9487-.6838l-1.0132-3.04L18.9556,17.2942A1,1,0,0,1,18,18Z"
  })), children);
})));
var CloudMonitoring16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudMonitoring16(_ref162, ref) {
  var children = _ref162.children,
      rest = _objectWithoutProperties(_ref162, _excluded162);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path247 || (_path247 = /*#__PURE__*/React.createElement("path", {
    d: "M28,16v6H4V6h7V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V16ZM18,28H14V24h4Z"
  })), _path248 || (_path248 = /*#__PURE__*/React.createElement("path", {
    d: "M18,18h-.01a1,1,0,0,1-.9511-.7253L15.2456,11H11V9h5a1,1,0,0,1,.9615.7252l1.0742,3.7589,3.0088-9.7783A1.0142,1.0142,0,0,1,22,3a.98.98,0,0,1,.9487.6838L24.7207,9H30v2H24a1,1,0,0,1-.9487-.6838l-1.0132-3.04L18.9556,17.2942A1,1,0,0,1,18,18Z"
  })), children);
})));
var CloudOffline32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudOffline32(_ref163, ref) {
  var children = _ref163.children,
      rest = _objectWithoutProperties(_ref163, _excluded163);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path249 || (_path249 = /*#__PURE__*/React.createElement("path", {
    d: "M24.8008 12.1362a8.8694 8.8694 0 00-.9795-2.5434L30 3.4142 28.5872 2 2 28.5872 3.4142 30l5-5H23.5a6.4974 6.4974 0 001.3008-12.8638zM23.5 23H10.4141L22.3418 11.0723a6.9049 6.9049 0 01.6006 2.0708l.0986.812.8154.0639A4.4975 4.4975 0 0123.5 23zM4.2964 23.4487l1.4313-1.4311A4.4774 4.4774 0 018.144 14.019l.8155-.0639.0991-.812a6.9867 6.9867 0 0110.63-5.0865l1.4431-1.4428A8.9859 8.9859 0 007.2 12.1362 6.4891 6.4891 0 004.2964 23.4487z"
  })), children);
})));
var CloudOffline24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudOffline24(_ref164, ref) {
  var children = _ref164.children,
      rest = _objectWithoutProperties(_ref164, _excluded164);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path250 || (_path250 = /*#__PURE__*/React.createElement("path", {
    d: "M24.8008 12.1362a8.8694 8.8694 0 00-.9795-2.5434L30 3.4142 28.5872 2 2 28.5872 3.4142 30l5-5H23.5a6.4974 6.4974 0 001.3008-12.8638zM23.5 23H10.4141L22.3418 11.0723a6.9049 6.9049 0 01.6006 2.0708l.0986.812.8154.0639A4.4975 4.4975 0 0123.5 23zM4.2964 23.4487l1.4313-1.4311A4.4774 4.4774 0 018.144 14.019l.8155-.0639.0991-.812a6.9867 6.9867 0 0110.63-5.0865l1.4431-1.4428A8.9859 8.9859 0 007.2 12.1362 6.4891 6.4891 0 004.2964 23.4487z"
  })), children);
})));
var CloudOffline20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudOffline20(_ref165, ref) {
  var children = _ref165.children,
      rest = _objectWithoutProperties(_ref165, _excluded165);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path251 || (_path251 = /*#__PURE__*/React.createElement("path", {
    d: "M24.8008 12.1362a8.8694 8.8694 0 00-.9795-2.5434L30 3.4142 28.5872 2 2 28.5872 3.4142 30l5-5H23.5a6.4974 6.4974 0 001.3008-12.8638zM23.5 23H10.4141L22.3418 11.0723a6.9049 6.9049 0 01.6006 2.0708l.0986.812.8154.0639A4.4975 4.4975 0 0123.5 23zM4.2964 23.4487l1.4313-1.4311A4.4774 4.4774 0 018.144 14.019l.8155-.0639.0991-.812a6.9867 6.9867 0 0110.63-5.0865l1.4431-1.4428A8.9859 8.9859 0 007.2 12.1362 6.4891 6.4891 0 004.2964 23.4487z"
  })), children);
})));
var CloudOffline16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudOffline16(_ref166, ref) {
  var children = _ref166.children,
      rest = _objectWithoutProperties(_ref166, _excluded166);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path252 || (_path252 = /*#__PURE__*/React.createElement("path", {
    d: "M24.8008 12.1362a8.8694 8.8694 0 00-.9795-2.5434L30 3.4142 28.5872 2 2 28.5872 3.4142 30l5-5H23.5a6.4974 6.4974 0 001.3008-12.8638zM23.5 23H10.4141L22.3418 11.0723a6.9049 6.9049 0 01.6006 2.0708l.0986.812.8154.0639A4.4975 4.4975 0 0123.5 23zM4.2964 23.4487l1.4313-1.4311A4.4774 4.4774 0 018.144 14.019l.8155-.0639.0991-.812a6.9867 6.9867 0 0110.63-5.0865l1.4431-1.4428A8.9859 8.9859 0 007.2 12.1362 6.4891 6.4891 0 004.2964 23.4487z"
  })), children);
})));
var CloudRain32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRain32(_ref167, ref) {
  var children = _ref167.children,
      rest = _objectWithoutProperties(_ref167, _excluded167);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path253 || (_path253 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM14 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0114 30zM20 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0120 30zM8 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 018 30z"
  })), children);
})));
var CloudRain24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRain24(_ref168, ref) {
  var children = _ref168.children,
      rest = _objectWithoutProperties(_ref168, _excluded168);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path254 || (_path254 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM14 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0114 30zM20 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0120 30zM8 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 018 30z"
  })), children);
})));
var CloudRain20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRain20(_ref169, ref) {
  var children = _ref169.children,
      rest = _objectWithoutProperties(_ref169, _excluded169);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path255 || (_path255 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM14 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0114 30zM20 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0120 30zM8 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 018 30z"
  })), children);
})));
var CloudRain16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRain16(_ref170, ref) {
  var children = _ref170.children,
      rest = _objectWithoutProperties(_ref170, _excluded170);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path256 || (_path256 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM14 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0114 30zM20 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 0120 30zM8 30a.93.93 0 01-.45-.11 1 1 0 01-.44-1.34l2-4a1 1 0 111.78.9l-2 4A1 1 0 018 30z"
  })), children);
})));
var CloudServiceManagement32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServiceManagement32(_ref171, ref) {
  var children = _ref171.children,
      rest = _objectWithoutProperties(_ref171, _excluded171);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path257 || (_path257 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H14V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path258 || (_path258 = /*#__PURE__*/React.createElement("path", {
    d: "M30,10V8H27.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,24,4.1011V2H22V4.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,18.1011,8H16v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,22,13.8989V16h2V13.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,27.8989,10Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,23,12Z"
  })), children);
})));
var CloudServiceManagement24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServiceManagement24(_ref172, ref) {
  var children = _ref172.children,
      rest = _objectWithoutProperties(_ref172, _excluded172);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path259 || (_path259 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H14V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path260 || (_path260 = /*#__PURE__*/React.createElement("path", {
    d: "M30,10V8H27.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,24,4.1011V2H22V4.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,18.1011,8H16v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,22,13.8989V16h2V13.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,27.8989,10Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,23,12Z"
  })), children);
})));
var CloudServiceManagement20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServiceManagement20(_ref173, ref) {
  var children = _ref173.children,
      rest = _objectWithoutProperties(_ref173, _excluded173);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path261 || (_path261 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H14V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path262 || (_path262 = /*#__PURE__*/React.createElement("path", {
    d: "M30,10V8H27.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,24,4.1011V2H22V4.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,18.1011,8H16v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,22,13.8989V16h2V13.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,27.8989,10Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,23,12Z"
  })), children);
})));
var CloudServiceManagement16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServiceManagement16(_ref174, ref) {
  var children = _ref174.children,
      rest = _objectWithoutProperties(_ref174, _excluded174);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path263 || (_path263 = /*#__PURE__*/React.createElement("path", {
    d: "M28,17v5H4V6H14V4H4A2,2,0,0,0,2,6V22a2,2,0,0,0,2,2h8v4H8v2H24V28H20V24h8a2,2,0,0,0,2-2V17ZM18,28H14V24h4Z"
  })), _path264 || (_path264 = /*#__PURE__*/React.createElement("path", {
    d: "M30,10V8H27.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,24,4.1011V2H22V4.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,18.1011,8H16v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,22,13.8989V16h2V13.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,27.8989,10Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,23,12Z"
  })), children);
})));
var CloudSnow32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSnow32(_ref175, ref) {
  var children = _ref175.children,
      rest = _objectWithoutProperties(_ref175, _excluded175);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path265 || (_path265 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM12 25.05L10.95 24 9.5 25.45 8.05 24 7 25.05 8.45 26.5 7 27.95 8.05 29 9.5 27.55 10.95 29 12 27.95 10.55 26.5 12 25.05zM26 25.05L24.95 24 23.5 25.45 22.05 24 21 25.05 22.45 26.5 21 27.95 22.05 29 23.5 27.55 24.95 29 26 27.95 24.55 26.5 26 25.05zM19 27.05L17.95 26 16.5 27.45 15.05 26 14 27.05 15.45 28.5 14 29.95 15.05 31 16.5 29.55 17.95 31 19 29.95 17.55 28.5 19 27.05z"
  })), children);
})));
var CloudSnow24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSnow24(_ref176, ref) {
  var children = _ref176.children,
      rest = _objectWithoutProperties(_ref176, _excluded176);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path266 || (_path266 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM12 25.05L10.95 24 9.5 25.45 8.05 24 7 25.05 8.45 26.5 7 27.95 8.05 29 9.5 27.55 10.95 29 12 27.95 10.55 26.5 12 25.05zM26 25.05L24.95 24 23.5 25.45 22.05 24 21 25.05 22.45 26.5 21 27.95 22.05 29 23.5 27.55 24.95 29 26 27.95 24.55 26.5 26 25.05zM19 27.05L17.95 26 16.5 27.45 15.05 26 14 27.05 15.45 28.5 14 29.95 15.05 31 16.5 29.55 17.95 31 19 29.95 17.55 28.5 19 27.05z"
  })), children);
})));
var CloudSnow20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSnow20(_ref177, ref) {
  var children = _ref177.children,
      rest = _objectWithoutProperties(_ref177, _excluded177);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path267 || (_path267 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM12 25.05L10.95 24 9.5 25.45 8.05 24 7 25.05 8.45 26.5 7 27.95 8.05 29 9.5 27.55 10.95 29 12 27.95 10.55 26.5 12 25.05zM26 25.05L24.95 24 23.5 25.45 22.05 24 21 25.05 22.45 26.5 21 27.95 22.05 29 23.5 27.55 24.95 29 26 27.95 24.55 26.5 26 25.05zM19 27.05L17.95 26 16.5 27.45 15.05 26 14 27.05 15.45 28.5 14 29.95 15.05 31 16.5 29.55 17.95 31 19 29.95 17.55 28.5 19 27.05z"
  })), children);
})));
var CloudSnow16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSnow16(_ref178, ref) {
  var children = _ref178.children,
      rest = _objectWithoutProperties(_ref178, _excluded178);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path268 || (_path268 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5 22H8.5A6.5 6.5 0 017.2 9.14a9 9 0 0117.6 0A6.5 6.5 0 0123.5 22zM16 4a7 7 0 00-6.94 6.14L9 11 8.14 11a4.5 4.5 0 00.36 9h15a4.5 4.5 0 00.36-9L23 11l-.1-.82A7 7 0 0016 4zM12 25.05L10.95 24 9.5 25.45 8.05 24 7 25.05 8.45 26.5 7 27.95 8.05 29 9.5 27.55 10.95 29 12 27.95 10.55 26.5 12 25.05zM26 25.05L24.95 24 23.5 25.45 22.05 24 21 25.05 22.45 26.5 21 27.95 22.05 29 23.5 27.55 24.95 29 26 27.95 24.55 26.5 26 25.05zM19 27.05L17.95 26 16.5 27.45 15.05 26 14 27.05 15.45 28.5 14 29.95 15.05 31 16.5 29.55 17.95 31 19 29.95 17.55 28.5 19 27.05z"
  })), children);
})));
var CloudUpload32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudUpload32(_ref179, ref) {
  var children = _ref179.children,
      rest = _objectWithoutProperties(_ref179, _excluded179);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path269 || (_path269 = /*#__PURE__*/React.createElement("path", {
    d: "M11 18L12.41 19.41 15 16.83 15 29 17 29 17 16.83 19.59 19.41 21 18 16 13 11 18z"
  })), _path270 || (_path270 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), children);
})));
var CloudUpload24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudUpload24(_ref180, ref) {
  var children = _ref180.children,
      rest = _objectWithoutProperties(_ref180, _excluded180);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path271 || (_path271 = /*#__PURE__*/React.createElement("path", {
    d: "M11 18L12.41 19.41 15 16.83 15 29 17 29 17 16.83 19.59 19.41 21 18 16 13 11 18z"
  })), _path272 || (_path272 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), children);
})));
var CloudUpload20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudUpload20(_ref181, ref) {
  var children = _ref181.children,
      rest = _objectWithoutProperties(_ref181, _excluded181);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path273 || (_path273 = /*#__PURE__*/React.createElement("path", {
    d: "M11 18L12.41 19.41 15 16.83 15 29 17 29 17 16.83 19.59 19.41 21 18 16 13 11 18z"
  })), _path274 || (_path274 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), children);
})));
var CloudUpload16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudUpload16(_ref182, ref) {
  var children = _ref182.children,
      rest = _objectWithoutProperties(_ref182, _excluded182);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path275 || (_path275 = /*#__PURE__*/React.createElement("path", {
    d: "M11 18L12.41 19.41 15 16.83 15 29 17 29 17 16.83 19.59 19.41 21 18 16 13 11 18z"
  })), _path276 || (_path276 = /*#__PURE__*/React.createElement("path", {
    d: "M23.5,22H23V20h.5a4.5,4.5,0,0,0,.36-9L23,11l-.1-.82a7,7,0,0,0-13.88,0L9,11,8.14,11a4.5,4.5,0,0,0,.36,9H9v2H8.5A6.5,6.5,0,0,1,7.2,9.14a9,9,0,0,1,17.6,0A6.5,6.5,0,0,1,23.5,22Z"
  })), children);
})));
var CloudApp32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudApp32(_ref183, ref) {
  var children = _ref183.children,
      rest = _objectWithoutProperties(_ref183, _excluded183);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path277 || (_path277 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8289 13.1155A10.02 10.02 0 0016 5.0005V7a8.0233 8.0233 0 017.8649 6.4934l.2591 1.346 1.3488.2441A5.5019 5.5019 0 0124.5076 26H16v2h8.5076a7.5019 7.5019 0 001.3213-14.8845zM8 24H14V26H8zM4 24H6V26H4zM6 20H14V22H6zM2 20H4V22H2zM8 16H14V18H8zM4 16H6V18H4zM10 12H14V14H10zM6 12H8V14H6zM12 8H14V10H12z"
  })), children);
})));
var CloudApp24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudApp24(_ref184, ref) {
  var children = _ref184.children,
      rest = _objectWithoutProperties(_ref184, _excluded184);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path278 || (_path278 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8289 13.1155A10.02 10.02 0 0016 5.0005V7a8.0233 8.0233 0 017.8649 6.4934l.2591 1.346 1.3488.2441A5.5019 5.5019 0 0124.5076 26H16v2h8.5076a7.5019 7.5019 0 001.3213-14.8845zM8 24H14V26H8zM4 24H6V26H4zM6 20H14V22H6zM2 20H4V22H2zM8 16H14V18H8zM4 16H6V18H4zM10 12H14V14H10zM6 12H8V14H6zM12 8H14V10H12z"
  })), children);
})));
var CloudApp20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudApp20(_ref185, ref) {
  var children = _ref185.children,
      rest = _objectWithoutProperties(_ref185, _excluded185);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path279 || (_path279 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8289 13.1155A10.02 10.02 0 0016 5.0005V7a8.0233 8.0233 0 017.8649 6.4934l.2591 1.346 1.3488.2441A5.5019 5.5019 0 0124.5076 26H16v2h8.5076a7.5019 7.5019 0 001.3213-14.8845zM8 24H14V26H8zM4 24H6V26H4zM6 20H14V22H6zM2 20H4V22H2zM8 16H14V18H8zM4 16H6V18H4zM10 12H14V14H10zM6 12H8V14H6zM12 8H14V10H12z"
  })), children);
})));
var CloudApp16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudApp16(_ref186, ref) {
  var children = _ref186.children,
      rest = _objectWithoutProperties(_ref186, _excluded186);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path280 || (_path280 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8289 13.1155A10.02 10.02 0 0016 5.0005V7a8.0233 8.0233 0 017.8649 6.4934l.2591 1.346 1.3488.2441A5.5019 5.5019 0 0124.5076 26H16v2h8.5076a7.5019 7.5019 0 001.3213-14.8845zM8 24H14V26H8zM4 24H6V26H4zM6 20H14V22H6zM2 20H4V22H2zM8 16H14V18H8zM4 16H6V18H4zM10 12H14V14H10zM6 12H8V14H6zM12 8H14V10H12z"
  })), children);
})));
var CloudCeiling32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudCeiling32(_ref187, ref) {
  var children = _ref187.children,
      rest = _objectWithoutProperties(_ref187, _excluded187);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path281 || (_path281 = /*#__PURE__*/React.createElement("path", {
    d: "M2 28H11V30H2zM21 28H30V30H21zM17 26.167L17 17.832 19.586 20.414 21 19 16 14 11 19 12.413 20.415 15 17.832 15 26.167 12.413 23.584 11 25 16 30 21 25 19.586 23.586 17 26.167z"
  })), _path282 || (_path282 = /*#__PURE__*/React.createElement("path", {
    d: "M23,16H21V14h2a3,3,0,0,0,0-6c-.0938.0144-.1538.0219-.2153.0263l-.8037.0572L21.7544,7.31a5.9927,5.9927,0,0,0-11.1758-.8655l-.2832.5994-.8423-.0455A3.5008,3.5008,0,0,0,9.5,14H11v2H9.5A5.5,5.5,0,0,1,9.07,5.0166,7.9909,7.9909,0,0,1,23.42,6.0175,5,5,0,0,1,23,16Z"
  })), children);
})));
var CloudCeiling24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudCeiling24(_ref188, ref) {
  var children = _ref188.children,
      rest = _objectWithoutProperties(_ref188, _excluded188);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path283 || (_path283 = /*#__PURE__*/React.createElement("path", {
    d: "M2 28H11V30H2zM21 28H30V30H21zM17 26.167L17 17.832 19.586 20.414 21 19 16 14 11 19 12.413 20.415 15 17.832 15 26.167 12.413 23.584 11 25 16 30 21 25 19.586 23.586 17 26.167z"
  })), _path284 || (_path284 = /*#__PURE__*/React.createElement("path", {
    d: "M23,16H21V14h2a3,3,0,0,0,0-6c-.0938.0144-.1538.0219-.2153.0263l-.8037.0572L21.7544,7.31a5.9927,5.9927,0,0,0-11.1758-.8655l-.2832.5994-.8423-.0455A3.5008,3.5008,0,0,0,9.5,14H11v2H9.5A5.5,5.5,0,0,1,9.07,5.0166,7.9909,7.9909,0,0,1,23.42,6.0175,5,5,0,0,1,23,16Z"
  })), children);
})));
var CloudCeiling20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudCeiling20(_ref189, ref) {
  var children = _ref189.children,
      rest = _objectWithoutProperties(_ref189, _excluded189);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path285 || (_path285 = /*#__PURE__*/React.createElement("path", {
    d: "M2 28H11V30H2zM21 28H30V30H21zM17 26.167L17 17.832 19.586 20.414 21 19 16 14 11 19 12.413 20.415 15 17.832 15 26.167 12.413 23.584 11 25 16 30 21 25 19.586 23.586 17 26.167z"
  })), _path286 || (_path286 = /*#__PURE__*/React.createElement("path", {
    d: "M23,16H21V14h2a3,3,0,0,0,0-6c-.0938.0144-.1538.0219-.2153.0263l-.8037.0572L21.7544,7.31a5.9927,5.9927,0,0,0-11.1758-.8655l-.2832.5994-.8423-.0455A3.5008,3.5008,0,0,0,9.5,14H11v2H9.5A5.5,5.5,0,0,1,9.07,5.0166,7.9909,7.9909,0,0,1,23.42,6.0175,5,5,0,0,1,23,16Z"
  })), children);
})));
var CloudCeiling16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudCeiling16(_ref190, ref) {
  var children = _ref190.children,
      rest = _objectWithoutProperties(_ref190, _excluded190);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path287 || (_path287 = /*#__PURE__*/React.createElement("path", {
    d: "M2 28H11V30H2zM21 28H30V30H21zM17 26.167L17 17.832 19.586 20.414 21 19 16 14 11 19 12.413 20.415 15 17.832 15 26.167 12.413 23.584 11 25 16 30 21 25 19.586 23.586 17 26.167z"
  })), _path288 || (_path288 = /*#__PURE__*/React.createElement("path", {
    d: "M23,16H21V14h2a3,3,0,0,0,0-6c-.0938.0144-.1538.0219-.2153.0263l-.8037.0572L21.7544,7.31a5.9927,5.9927,0,0,0-11.1758-.8655l-.2832.5994-.8423-.0455A3.5008,3.5008,0,0,0,9.5,14H11v2H9.5A5.5,5.5,0,0,1,9.07,5.0166,7.9909,7.9909,0,0,1,23.42,6.0175,5,5,0,0,1,23,16Z"
  })), children);
})));
var CloudFoundry_132 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_132(_ref191, ref) {
  var children = _ref191.children,
      rest = _objectWithoutProperties(_ref191, _excluded191);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path289 || (_path289 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), _path290 || (_path290 = /*#__PURE__*/React.createElement("path", {
    d: "M14 24H11a2 2 0 01-2-2V19a2 2 0 012-2h3v2H11v3h3zM21 15V13H19a2 2 0 00-2 2v2H16v2h1v5h2V19h2V17H19V15z"
  })), children);
})));
var CloudFoundry_124 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_124(_ref192, ref) {
  var children = _ref192.children,
      rest = _objectWithoutProperties(_ref192, _excluded192);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path291 || (_path291 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), _path292 || (_path292 = /*#__PURE__*/React.createElement("path", {
    d: "M14 24H11a2 2 0 01-2-2V19a2 2 0 012-2h3v2H11v3h3zM21 15V13H19a2 2 0 00-2 2v2H16v2h1v5h2V19h2V17H19V15z"
  })), children);
})));
var CloudFoundry_120 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_120(_ref193, ref) {
  var children = _ref193.children,
      rest = _objectWithoutProperties(_ref193, _excluded193);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path293 || (_path293 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), _path294 || (_path294 = /*#__PURE__*/React.createElement("path", {
    d: "M14 24H11a2 2 0 01-2-2V19a2 2 0 012-2h3v2H11v3h3zM21 15V13H19a2 2 0 00-2 2v2H16v2h1v5h2V19h2V17H19V15z"
  })), children);
})));
var CloudFoundry_116 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_116(_ref194, ref) {
  var children = _ref194.children,
      rest = _objectWithoutProperties(_ref194, _excluded194);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path295 || (_path295 = /*#__PURE__*/React.createElement("path", {
    d: "M16,7h0a7.66,7.66,0,0,1,1.51.15,8,8,0,0,1,6.35,6.34l.26,1.35,1.35.24a5.5,5.5,0,0,1-1,10.92H7.5a5.5,5.5,0,0,1-1-10.92l1.34-.24.26-1.35A8,8,0,0,1,16,7m0-2a10,10,0,0,0-9.83,8.12A7.5,7.5,0,0,0,7.49,28h17a7.5,7.5,0,0,0,1.32-14.88,10,10,0,0,0-7.94-7.94A10.27,10.27,0,0,0,16,5Z"
  })), _path296 || (_path296 = /*#__PURE__*/React.createElement("path", {
    d: "M14 24H11a2 2 0 01-2-2V19a2 2 0 012-2h3v2H11v3h3zM21 15V13H19a2 2 0 00-2 2v2H16v2h1v5h2V19h2V17H19V15z"
  })), children);
})));
var CloudFoundry_232 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_232(_ref195, ref) {
  var children = _ref195.children,
      rest = _objectWithoutProperties(_ref195, _excluded195);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path297 || (_path297 = /*#__PURE__*/React.createElement("path", {
    d: "M25 11L25 9 17 9 17 23 19 23 19 17 24 17 24 15 19 15 19 11 25 11zM15 23H9a2 2 0 01-2-2V11A2 2 0 019 9h6v2H9V21h6z"
  })), children);
})));
var CloudFoundry_224 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_224(_ref196, ref) {
  var children = _ref196.children,
      rest = _objectWithoutProperties(_ref196, _excluded196);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path298 || (_path298 = /*#__PURE__*/React.createElement("path", {
    d: "M25 11L25 9 17 9 17 23 19 23 19 17 24 17 24 15 19 15 19 11 25 11zM15 23H9a2 2 0 01-2-2V11A2 2 0 019 9h6v2H9V21h6z"
  })), children);
})));
var CloudFoundry_220 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_220(_ref197, ref) {
  var children = _ref197.children,
      rest = _objectWithoutProperties(_ref197, _excluded197);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path299 || (_path299 = /*#__PURE__*/React.createElement("path", {
    d: "M25 11L25 9 17 9 17 23 19 23 19 17 24 17 24 15 19 15 19 11 25 11zM15 23H9a2 2 0 01-2-2V11A2 2 0 019 9h6v2H9V21h6z"
  })), children);
})));
var CloudFoundry_216 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudFoundry_216(_ref198, ref) {
  var children = _ref198.children,
      rest = _objectWithoutProperties(_ref198, _excluded198);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path300 || (_path300 = /*#__PURE__*/React.createElement("path", {
    d: "M25 11L25 9 17 9 17 23 19 23 19 17 24 17 24 15 19 15 19 11 25 11zM15 23H9a2 2 0 01-2-2V11A2 2 0 019 9h6v2H9V21h6z"
  })), children);
})));
var CloudRegistry32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRegistry32(_ref199, ref) {
  var children = _ref199.children,
      rest = _objectWithoutProperties(_ref199, _excluded199);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path301 || (_path301 = /*#__PURE__*/React.createElement("path", {
    d: "M28 30H23a2.0023 2.0023 0 01-2-2V23a2.0023 2.0023 0 012-2h5a2.0023 2.0023 0 012 2v5A2.0023 2.0023 0 0128 30zm-5-7h-.0012L23 28h5V23zM16 23H11a2.0023 2.0023 0 01-2-2V11a2.0023 2.0023 0 012-2H21a2.0023 2.0023 0 012 2v5H21V11H11V21h5z"
  })), _path302 || (_path302 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30H4a2.0023,2.0023,0,0,1-2-2V4A2.0023,2.0023,0,0,1,4,2H28a2.0023,2.0023,0,0,1,2,2V16H28V4H4V28H16Z"
  })), children);
})));
var CloudRegistry24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRegistry24(_ref200, ref) {
  var children = _ref200.children,
      rest = _objectWithoutProperties(_ref200, _excluded200);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path303 || (_path303 = /*#__PURE__*/React.createElement("path", {
    d: "M28 30H23a2.0023 2.0023 0 01-2-2V23a2.0023 2.0023 0 012-2h5a2.0023 2.0023 0 012 2v5A2.0023 2.0023 0 0128 30zm-5-7h-.0012L23 28h5V23zM16 23H11a2.0023 2.0023 0 01-2-2V11a2.0023 2.0023 0 012-2H21a2.0023 2.0023 0 012 2v5H21V11H11V21h5z"
  })), _path304 || (_path304 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30H4a2.0023,2.0023,0,0,1-2-2V4A2.0023,2.0023,0,0,1,4,2H28a2.0023,2.0023,0,0,1,2,2V16H28V4H4V28H16Z"
  })), children);
})));
var CloudRegistry20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRegistry20(_ref201, ref) {
  var children = _ref201.children,
      rest = _objectWithoutProperties(_ref201, _excluded201);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path305 || (_path305 = /*#__PURE__*/React.createElement("path", {
    d: "M28 30H23a2.0023 2.0023 0 01-2-2V23a2.0023 2.0023 0 012-2h5a2.0023 2.0023 0 012 2v5A2.0023 2.0023 0 0128 30zm-5-7h-.0012L23 28h5V23zM16 23H11a2.0023 2.0023 0 01-2-2V11a2.0023 2.0023 0 012-2H21a2.0023 2.0023 0 012 2v5H21V11H11V21h5z"
  })), _path306 || (_path306 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30H4a2.0023,2.0023,0,0,1-2-2V4A2.0023,2.0023,0,0,1,4,2H28a2.0023,2.0023,0,0,1,2,2V16H28V4H4V28H16Z"
  })), children);
})));
var CloudRegistry16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudRegistry16(_ref202, ref) {
  var children = _ref202.children,
      rest = _objectWithoutProperties(_ref202, _excluded202);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path307 || (_path307 = /*#__PURE__*/React.createElement("path", {
    d: "M28 30H23a2.0023 2.0023 0 01-2-2V23a2.0023 2.0023 0 012-2h5a2.0023 2.0023 0 012 2v5A2.0023 2.0023 0 0128 30zm-5-7h-.0012L23 28h5V23zM16 23H11a2.0023 2.0023 0 01-2-2V11a2.0023 2.0023 0 012-2H21a2.0023 2.0023 0 012 2v5H21V11H11V21h5z"
  })), _path308 || (_path308 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30H4a2.0023,2.0023,0,0,1-2-2V4A2.0023,2.0023,0,0,1,4,2H28a2.0023,2.0023,0,0,1,2,2V16H28V4H4V28H16Z"
  })), children);
})));
var CloudSatellite32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatellite32(_ref203, ref) {
  var children = _ref203.children,
      rest = _objectWithoutProperties(_ref203, _excluded203);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle14 || (_circle14 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "20",
    r: "2"
  })), _path309 || (_path309 = /*#__PURE__*/React.createElement("path", {
    d: "M16,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,16,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,16,14Z"
  })), _circle15 || (_circle15 = /*#__PURE__*/React.createElement("circle", {
    cx: "23",
    cy: "12",
    r: "2"
  })), _path310 || (_path310 = /*#__PURE__*/React.createElement("path", {
    d: "M16,31a.9988.9988,0,0,1-.5039-.1357l-12-7A1.0008,1.0008,0,0,1,3,23V9a.9994.9994,0,0,1,.4961-.8638l12-7a1,1,0,0,1,1.0078,0l12,7L27.4961,9.8638,16,3.1577,5,9.5742V22.4258l11,6.417,11-6.417V15h2v8a1.0008,1.0008,0,0,1-.4961.8643l-12,7A.9988.9988,0,0,1,16,31Z"
  })), children);
})));
var CloudSatellite24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatellite24(_ref204, ref) {
  var children = _ref204.children,
      rest = _objectWithoutProperties(_ref204, _excluded204);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle16 || (_circle16 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "20",
    r: "2"
  })), _path311 || (_path311 = /*#__PURE__*/React.createElement("path", {
    d: "M16,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,16,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,16,14Z"
  })), _circle17 || (_circle17 = /*#__PURE__*/React.createElement("circle", {
    cx: "23",
    cy: "12",
    r: "2"
  })), _path312 || (_path312 = /*#__PURE__*/React.createElement("path", {
    d: "M16,31a.9988.9988,0,0,1-.5039-.1357l-12-7A1.0008,1.0008,0,0,1,3,23V9a.9994.9994,0,0,1,.4961-.8638l12-7a1,1,0,0,1,1.0078,0l12,7L27.4961,9.8638,16,3.1577,5,9.5742V22.4258l11,6.417,11-6.417V15h2v8a1.0008,1.0008,0,0,1-.4961.8643l-12,7A.9988.9988,0,0,1,16,31Z"
  })), children);
})));
var CloudSatellite20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatellite20(_ref205, ref) {
  var children = _ref205.children,
      rest = _objectWithoutProperties(_ref205, _excluded205);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle18 || (_circle18 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "20",
    r: "2"
  })), _path313 || (_path313 = /*#__PURE__*/React.createElement("path", {
    d: "M16,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,16,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,16,14Z"
  })), _circle19 || (_circle19 = /*#__PURE__*/React.createElement("circle", {
    cx: "23",
    cy: "12",
    r: "2"
  })), _path314 || (_path314 = /*#__PURE__*/React.createElement("path", {
    d: "M16,31a.9988.9988,0,0,1-.5039-.1357l-12-7A1.0008,1.0008,0,0,1,3,23V9a.9994.9994,0,0,1,.4961-.8638l12-7a1,1,0,0,1,1.0078,0l12,7L27.4961,9.8638,16,3.1577,5,9.5742V22.4258l11,6.417,11-6.417V15h2v8a1.0008,1.0008,0,0,1-.4961.8643l-12,7A.9988.9988,0,0,1,16,31Z"
  })), children);
})));
var CloudSatellite16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatellite16(_ref206, ref) {
  var children = _ref206.children,
      rest = _objectWithoutProperties(_ref206, _excluded206);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle20 || (_circle20 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "20",
    r: "2"
  })), _path315 || (_path315 = /*#__PURE__*/React.createElement("path", {
    d: "M16,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,16,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,16,14Z"
  })), _circle21 || (_circle21 = /*#__PURE__*/React.createElement("circle", {
    cx: "23",
    cy: "12",
    r: "2"
  })), _path316 || (_path316 = /*#__PURE__*/React.createElement("path", {
    d: "M16,31a.9988.9988,0,0,1-.5039-.1357l-12-7A1.0008,1.0008,0,0,1,3,23V9a.9994.9994,0,0,1,.4961-.8638l12-7a1,1,0,0,1,1.0078,0l12,7L27.4961,9.8638,16,3.1577,5,9.5742V22.4258l11,6.417,11-6.417V15h2v8a1.0008,1.0008,0,0,1-.4961.8643l-12,7A.9988.9988,0,0,1,16,31Z"
  })), children);
})));
var CloudSatelliteConfig32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteConfig32(_ref207, ref) {
  var children = _ref207.children,
      rest = _objectWithoutProperties(_ref207, _excluded207);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path317 || (_path317 = /*#__PURE__*/React.createElement("path", {
    d: "M32,26V24H29.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,26,20.1011V18H24v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,20.1011,24H18v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,24,29.8989V32h2V29.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,29.8989,26Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,25,28Z"
  })), _circle22 || (_circle22 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path318 || (_path318 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle23 || (_circle23 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path319 || (_path319 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteConfig24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteConfig24(_ref208, ref) {
  var children = _ref208.children,
      rest = _objectWithoutProperties(_ref208, _excluded208);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path320 || (_path320 = /*#__PURE__*/React.createElement("path", {
    d: "M32,26V24H29.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,26,20.1011V18H24v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,20.1011,24H18v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,24,29.8989V32h2V29.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,29.8989,26Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,25,28Z"
  })), _circle24 || (_circle24 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path321 || (_path321 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle25 || (_circle25 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path322 || (_path322 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteConfig20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteConfig20(_ref209, ref) {
  var children = _ref209.children,
      rest = _objectWithoutProperties(_ref209, _excluded209);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path323 || (_path323 = /*#__PURE__*/React.createElement("path", {
    d: "M32,26V24H29.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,26,20.1011V18H24v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,20.1011,24H18v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,24,29.8989V32h2V29.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,29.8989,26Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,25,28Z"
  })), _circle26 || (_circle26 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path324 || (_path324 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle27 || (_circle27 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path325 || (_path325 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteConfig16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteConfig16(_ref210, ref) {
  var children = _ref210.children,
      rest = _objectWithoutProperties(_ref210, _excluded210);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path326 || (_path326 = /*#__PURE__*/React.createElement("path", {
    d: "M32,26V24H29.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,26,20.1011V18H24v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,20.1011,24H18v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,24,29.8989V32h2V29.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,29.8989,26Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,25,28Z"
  })), _circle28 || (_circle28 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path327 || (_path327 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle29 || (_circle29 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path328 || (_path328 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteLink32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteLink32(_ref211, ref) {
  var children = _ref211.children,
      rest = _objectWithoutProperties(_ref211, _excluded211);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path329 || (_path329 = /*#__PURE__*/React.createElement("path", {
    d: "M30.9763,24.9748l-5.0015,5.0015a3.501,3.501,0,0,1-4.9511-4.9511L22.4383,26.44A1.5,1.5,0,0,0,24.56,28.5617L29.5617,23.56A1.5,1.5,0,0,0,27.44,21.4383l-1.4146-1.4146a3.501,3.501,0,0,1,4.9511,4.9511Z"
  })), _path330 || (_path330 = /*#__PURE__*/React.createElement("path", {
    d: "M20.0252,21.0237l-5.0015,5.0015a3.501,3.501,0,0,0,4.9511,4.9511L18.56,29.5617A1.5,1.5,0,0,1,16.4383,27.44L21.44,22.4383A1.5,1.5,0,0,1,23.5617,24.56l1.4146,1.4146a3.501,3.501,0,0,0-4.9511-4.9511Z"
  })), _circle30 || (_circle30 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path331 || (_path331 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle31 || (_circle31 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path332 || (_path332 = /*#__PURE__*/React.createElement("path", {
    d: "M11.3076,27.2725,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L10.3,29Z"
  })), children);
})));
var CloudSatelliteLink24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteLink24(_ref212, ref) {
  var children = _ref212.children,
      rest = _objectWithoutProperties(_ref212, _excluded212);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path333 || (_path333 = /*#__PURE__*/React.createElement("path", {
    d: "M30.9763,24.9748l-5.0015,5.0015a3.501,3.501,0,0,1-4.9511-4.9511L22.4383,26.44A1.5,1.5,0,0,0,24.56,28.5617L29.5617,23.56A1.5,1.5,0,0,0,27.44,21.4383l-1.4146-1.4146a3.501,3.501,0,0,1,4.9511,4.9511Z"
  })), _path334 || (_path334 = /*#__PURE__*/React.createElement("path", {
    d: "M20.0252,21.0237l-5.0015,5.0015a3.501,3.501,0,0,0,4.9511,4.9511L18.56,29.5617A1.5,1.5,0,0,1,16.4383,27.44L21.44,22.4383A1.5,1.5,0,0,1,23.5617,24.56l1.4146,1.4146a3.501,3.501,0,0,0-4.9511-4.9511Z"
  })), _circle32 || (_circle32 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path335 || (_path335 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle33 || (_circle33 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path336 || (_path336 = /*#__PURE__*/React.createElement("path", {
    d: "M11.3076,27.2725,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L10.3,29Z"
  })), children);
})));
var CloudSatelliteLink20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteLink20(_ref213, ref) {
  var children = _ref213.children,
      rest = _objectWithoutProperties(_ref213, _excluded213);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path337 || (_path337 = /*#__PURE__*/React.createElement("path", {
    d: "M30.9763,24.9748l-5.0015,5.0015a3.501,3.501,0,0,1-4.9511-4.9511L22.4383,26.44A1.5,1.5,0,0,0,24.56,28.5617L29.5617,23.56A1.5,1.5,0,0,0,27.44,21.4383l-1.4146-1.4146a3.501,3.501,0,0,1,4.9511,4.9511Z"
  })), _path338 || (_path338 = /*#__PURE__*/React.createElement("path", {
    d: "M20.0252,21.0237l-5.0015,5.0015a3.501,3.501,0,0,0,4.9511,4.9511L18.56,29.5617A1.5,1.5,0,0,1,16.4383,27.44L21.44,22.4383A1.5,1.5,0,0,1,23.5617,24.56l1.4146,1.4146a3.501,3.501,0,0,0-4.9511-4.9511Z"
  })), _circle34 || (_circle34 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path339 || (_path339 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle35 || (_circle35 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path340 || (_path340 = /*#__PURE__*/React.createElement("path", {
    d: "M11.3076,27.2725,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L10.3,29Z"
  })), children);
})));
var CloudSatelliteLink16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteLink16(_ref214, ref) {
  var children = _ref214.children,
      rest = _objectWithoutProperties(_ref214, _excluded214);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path341 || (_path341 = /*#__PURE__*/React.createElement("path", {
    d: "M30.9763,24.9748l-5.0015,5.0015a3.501,3.501,0,0,1-4.9511-4.9511L22.4383,26.44A1.5,1.5,0,0,0,24.56,28.5617L29.5617,23.56A1.5,1.5,0,0,0,27.44,21.4383l-1.4146-1.4146a3.501,3.501,0,0,1,4.9511,4.9511Z"
  })), _path342 || (_path342 = /*#__PURE__*/React.createElement("path", {
    d: "M20.0252,21.0237l-5.0015,5.0015a3.501,3.501,0,0,0,4.9511,4.9511L18.56,29.5617A1.5,1.5,0,0,1,16.4383,27.44L21.44,22.4383A1.5,1.5,0,0,1,23.5617,24.56l1.4146,1.4146a3.501,3.501,0,0,0-4.9511-4.9511Z"
  })), _circle36 || (_circle36 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path343 || (_path343 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle37 || (_circle37 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path344 || (_path344 = /*#__PURE__*/React.createElement("path", {
    d: "M11.3076,27.2725,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L10.3,29Z"
  })), children);
})));
var CloudSatelliteServices32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteServices32(_ref215, ref) {
  var children = _ref215.children,
      rest = _objectWithoutProperties(_ref215, _excluded215);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path345 || (_path345 = /*#__PURE__*/React.createElement("path", {
    d: "M29,26a2.97,2.97,0,0,0-1.8551.6607L25,25.4224V23.8157a3,3,0,1,0-2,0v1.6067l-2.1449,1.2383A2.97,2.97,0,0,0,19,26a3.02,3.02,0,1,0,2.9254,2.3525L24,27.1548l2.0746,1.1977A2.9978,2.9978,0,1,0,29,26ZM19,30a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,19,30Zm5-10a1,1,0,1,1-1,1A1.0009,1.0009,0,0,1,24,20Zm5,10a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,29,30Z"
  })), _circle38 || (_circle38 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path346 || (_path346 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle39 || (_circle39 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path347 || (_path347 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteServices24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteServices24(_ref216, ref) {
  var children = _ref216.children,
      rest = _objectWithoutProperties(_ref216, _excluded216);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path348 || (_path348 = /*#__PURE__*/React.createElement("path", {
    d: "M29,26a2.97,2.97,0,0,0-1.8551.6607L25,25.4224V23.8157a3,3,0,1,0-2,0v1.6067l-2.1449,1.2383A2.97,2.97,0,0,0,19,26a3.02,3.02,0,1,0,2.9254,2.3525L24,27.1548l2.0746,1.1977A2.9978,2.9978,0,1,0,29,26ZM19,30a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,19,30Zm5-10a1,1,0,1,1-1,1A1.0009,1.0009,0,0,1,24,20Zm5,10a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,29,30Z"
  })), _circle40 || (_circle40 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path349 || (_path349 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle41 || (_circle41 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path350 || (_path350 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteServices20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteServices20(_ref217, ref) {
  var children = _ref217.children,
      rest = _objectWithoutProperties(_ref217, _excluded217);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path351 || (_path351 = /*#__PURE__*/React.createElement("path", {
    d: "M29,26a2.97,2.97,0,0,0-1.8551.6607L25,25.4224V23.8157a3,3,0,1,0-2,0v1.6067l-2.1449,1.2383A2.97,2.97,0,0,0,19,26a3.02,3.02,0,1,0,2.9254,2.3525L24,27.1548l2.0746,1.1977A2.9978,2.9978,0,1,0,29,26ZM19,30a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,19,30Zm5-10a1,1,0,1,1-1,1A1.0009,1.0009,0,0,1,24,20Zm5,10a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,29,30Z"
  })), _circle42 || (_circle42 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path352 || (_path352 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle43 || (_circle43 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path353 || (_path353 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudSatelliteServices16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudSatelliteServices16(_ref218, ref) {
  var children = _ref218.children,
      rest = _objectWithoutProperties(_ref218, _excluded218);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path354 || (_path354 = /*#__PURE__*/React.createElement("path", {
    d: "M29,26a2.97,2.97,0,0,0-1.8551.6607L25,25.4224V23.8157a3,3,0,1,0-2,0v1.6067l-2.1449,1.2383A2.97,2.97,0,0,0,19,26a3.02,3.02,0,1,0,2.9254,2.3525L24,27.1548l2.0746,1.1977A2.9978,2.9978,0,1,0,29,26ZM19,30a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,19,30Zm5-10a1,1,0,1,1-1,1A1.0009,1.0009,0,0,1,24,20Zm5,10a1,1,0,1,1,1-1A1.0006,1.0006,0,0,1,29,30Z"
  })), _circle44 || (_circle44 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "20",
    r: "2"
  })), _path355 || (_path355 = /*#__PURE__*/React.createElement("path", {
    d: "M14,20a4,4,0,1,1,4-4A4.0118,4.0118,0,0,1,14,20Zm0-6a2,2,0,1,0,2,2A2.0059,2.0059,0,0,0,14,14Z"
  })), _circle45 || (_circle45 = /*#__PURE__*/React.createElement("circle", {
    cx: "21",
    cy: "12",
    r: "2"
  })), _path356 || (_path356 = /*#__PURE__*/React.createElement("path", {
    d: "M13.0205,28.2715,3,22.4258V9.5742L14,3.1577,25.4961,9.8638l1.0078-1.7276-12-7a1,1,0,0,0-1.0078,0l-12,7A.9994.9994,0,0,0,1,9V23a1.0008,1.0008,0,0,0,.4961.8643L12.0127,30Z"
  })), children);
})));
var CloudServices32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServices32(_ref219, ref) {
  var children = _ref219.children,
      rest = _objectWithoutProperties(_ref219, _excluded219);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path357 || (_path357 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8218,10.124a9.9991,9.9991,0,0,0-19.6435,0A7.4964,7.4964,0,0,0,7.5,25H8V23H7.5a5.4961,5.4961,0,0,1-.3769-10.9795l.8364-.0571.09-.8335a7.9979,7.9979,0,0,1,15.9013,0l.09.8335.8364.0571A5.4961,5.4961,0,0,1,24.5,23H24v2h.5a7.4964,7.4964,0,0,0,1.3218-14.876Z"
  })), _path358 || (_path358 = /*#__PURE__*/React.createElement("path", {
    d: "M23,22V20H20.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,17,16.1011V14H15v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,11.1011,20H9v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,15,25.8989V28h2V25.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,20.8989,22Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,16,24Z"
  })), children);
})));
var CloudServices24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServices24(_ref220, ref) {
  var children = _ref220.children,
      rest = _objectWithoutProperties(_ref220, _excluded220);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path359 || (_path359 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8218,10.124a9.9991,9.9991,0,0,0-19.6435,0A7.4964,7.4964,0,0,0,7.5,25H8V23H7.5a5.4961,5.4961,0,0,1-.3769-10.9795l.8364-.0571.09-.8335a7.9979,7.9979,0,0,1,15.9013,0l.09.8335.8364.0571A5.4961,5.4961,0,0,1,24.5,23H24v2h.5a7.4964,7.4964,0,0,0,1.3218-14.876Z"
  })), _path360 || (_path360 = /*#__PURE__*/React.createElement("path", {
    d: "M23,22V20H20.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,17,16.1011V14H15v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,11.1011,20H9v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,15,25.8989V28h2V25.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,20.8989,22Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,16,24Z"
  })), children);
})));
var CloudServices20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServices20(_ref221, ref) {
  var children = _ref221.children,
      rest = _objectWithoutProperties(_ref221, _excluded221);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path361 || (_path361 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8218,10.124a9.9991,9.9991,0,0,0-19.6435,0A7.4964,7.4964,0,0,0,7.5,25H8V23H7.5a5.4961,5.4961,0,0,1-.3769-10.9795l.8364-.0571.09-.8335a7.9979,7.9979,0,0,1,15.9013,0l.09.8335.8364.0571A5.4961,5.4961,0,0,1,24.5,23H24v2h.5a7.4964,7.4964,0,0,0,1.3218-14.876Z"
  })), _path362 || (_path362 = /*#__PURE__*/React.createElement("path", {
    d: "M23,22V20H20.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,17,16.1011V14H15v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,11.1011,20H9v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,15,25.8989V28h2V25.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,20.8989,22Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,16,24Z"
  })), children);
})));
var CloudServices16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CloudServices16(_ref222, ref) {
  var children = _ref222.children,
      rest = _objectWithoutProperties(_ref222, _excluded222);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path363 || (_path363 = /*#__PURE__*/React.createElement("path", {
    d: "M25.8218,10.124a9.9991,9.9991,0,0,0-19.6435,0A7.4964,7.4964,0,0,0,7.5,25H8V23H7.5a5.4961,5.4961,0,0,1-.3769-10.9795l.8364-.0571.09-.8335a7.9979,7.9979,0,0,1,15.9013,0l.09.8335.8364.0571A5.4961,5.4961,0,0,1,24.5,23H24v2h.5a7.4964,7.4964,0,0,0,1.3218-14.876Z"
  })), _path364 || (_path364 = /*#__PURE__*/React.createElement("path", {
    d: "M23,22V20H20.8989a4.9678,4.9678,0,0,0-.7319-1.7529l1.49-1.49-1.414-1.414-1.49,1.49A4.9678,4.9678,0,0,0,17,16.1011V14H15v2.1011a4.9678,4.9678,0,0,0-1.7529.7319l-1.49-1.49-1.414,1.414,1.49,1.49A4.9678,4.9678,0,0,0,11.1011,20H9v2h2.1011a4.9678,4.9678,0,0,0,.7319,1.7529l-1.49,1.49,1.414,1.414,1.49-1.49A4.9678,4.9678,0,0,0,15,25.8989V28h2V25.8989a4.9678,4.9678,0,0,0,1.7529-.7319l1.49,1.49,1.414-1.414-1.49-1.49A4.9678,4.9678,0,0,0,20.8989,22Zm-7,2a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,16,24Z"
  })), children);
})));
var Cloudy32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloudy32(_ref223, ref) {
  var children = _ref223.children,
      rest = _objectWithoutProperties(_ref223, _excluded223);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path365 || (_path365 = /*#__PURE__*/React.createElement("path", {
    d: "M30.0005,15.5005a6.5324,6.5324,0,0,0-5.1992-6.3638,8.9943,8.9943,0,0,0-17.6006,0,6.5321,6.5321,0,0,0-5.2,6.3638,6.4543,6.4543,0,0,0,1.6887,4.35A5.9829,5.9829,0,0,0,8,30H19a5.9764,5.9764,0,0,0,5.6094-8.1016A6.5051,6.5051,0,0,0,30.0005,15.5005ZM19,28H8a3.9925,3.9925,0,0,1-.6731-7.9292L7.99,19.958l.1458-.6562a5.496,5.496,0,0,1,10.7294,0l.1458.6562.6626.1128A3.9925,3.9925,0,0,1,19,28Zm4.5-8h-.0554a5.9562,5.9562,0,0,0-2.7959-1.7564,7.4952,7.4952,0,0,0-14.2984,0,5.9877,5.9877,0,0,0-1.0315.4073A4.4446,4.4446,0,0,1,4,15.5005a4.5171,4.5171,0,0,1,4.144-4.481l.8155-.0639.0991-.812a6.9938,6.9938,0,0,1,13.8838,0l.0986.812.8154.0639a4.4975,4.4975,0,0,1-.3564,8.981Z"
  })), children);
})));
var Cloudy24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloudy24(_ref224, ref) {
  var children = _ref224.children,
      rest = _objectWithoutProperties(_ref224, _excluded224);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path366 || (_path366 = /*#__PURE__*/React.createElement("path", {
    d: "M30.0005,15.5005a6.5324,6.5324,0,0,0-5.1992-6.3638,8.9943,8.9943,0,0,0-17.6006,0,6.5321,6.5321,0,0,0-5.2,6.3638,6.4543,6.4543,0,0,0,1.6887,4.35A5.9829,5.9829,0,0,0,8,30H19a5.9764,5.9764,0,0,0,5.6094-8.1016A6.5051,6.5051,0,0,0,30.0005,15.5005ZM19,28H8a3.9925,3.9925,0,0,1-.6731-7.9292L7.99,19.958l.1458-.6562a5.496,5.496,0,0,1,10.7294,0l.1458.6562.6626.1128A3.9925,3.9925,0,0,1,19,28Zm4.5-8h-.0554a5.9562,5.9562,0,0,0-2.7959-1.7564,7.4952,7.4952,0,0,0-14.2984,0,5.9877,5.9877,0,0,0-1.0315.4073A4.4446,4.4446,0,0,1,4,15.5005a4.5171,4.5171,0,0,1,4.144-4.481l.8155-.0639.0991-.812a6.9938,6.9938,0,0,1,13.8838,0l.0986.812.8154.0639a4.4975,4.4975,0,0,1-.3564,8.981Z"
  })), children);
})));
var Cloudy20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloudy20(_ref225, ref) {
  var children = _ref225.children,
      rest = _objectWithoutProperties(_ref225, _excluded225);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path367 || (_path367 = /*#__PURE__*/React.createElement("path", {
    d: "M30.0005,15.5005a6.5324,6.5324,0,0,0-5.1992-6.3638,8.9943,8.9943,0,0,0-17.6006,0,6.5321,6.5321,0,0,0-5.2,6.3638,6.4543,6.4543,0,0,0,1.6887,4.35A5.9829,5.9829,0,0,0,8,30H19a5.9764,5.9764,0,0,0,5.6094-8.1016A6.5051,6.5051,0,0,0,30.0005,15.5005ZM19,28H8a3.9925,3.9925,0,0,1-.6731-7.9292L7.99,19.958l.1458-.6562a5.496,5.496,0,0,1,10.7294,0l.1458.6562.6626.1128A3.9925,3.9925,0,0,1,19,28Zm4.5-8h-.0554a5.9562,5.9562,0,0,0-2.7959-1.7564,7.4952,7.4952,0,0,0-14.2984,0,5.9877,5.9877,0,0,0-1.0315.4073A4.4446,4.4446,0,0,1,4,15.5005a4.5171,4.5171,0,0,1,4.144-4.481l.8155-.0639.0991-.812a6.9938,6.9938,0,0,1,13.8838,0l.0986.812.8154.0639a4.4975,4.4975,0,0,1-.3564,8.981Z"
  })), children);
})));
var Cloudy16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cloudy16(_ref226, ref) {
  var children = _ref226.children,
      rest = _objectWithoutProperties(_ref226, _excluded226);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path368 || (_path368 = /*#__PURE__*/React.createElement("path", {
    d: "M30.0005,15.5005a6.5324,6.5324,0,0,0-5.1992-6.3638,8.9943,8.9943,0,0,0-17.6006,0,6.5321,6.5321,0,0,0-5.2,6.3638,6.4543,6.4543,0,0,0,1.6887,4.35A5.9829,5.9829,0,0,0,8,30H19a5.9764,5.9764,0,0,0,5.6094-8.1016A6.5051,6.5051,0,0,0,30.0005,15.5005ZM19,28H8a3.9925,3.9925,0,0,1-.6731-7.9292L7.99,19.958l.1458-.6562a5.496,5.496,0,0,1,10.7294,0l.1458.6562.6626.1128A3.9925,3.9925,0,0,1,19,28Zm4.5-8h-.0554a5.9562,5.9562,0,0,0-2.7959-1.7564,7.4952,7.4952,0,0,0-14.2984,0,5.9877,5.9877,0,0,0-1.0315.4073A4.4446,4.4446,0,0,1,4,15.5005a4.5171,4.5171,0,0,1,4.144-4.481l.8155-.0639.0991-.812a6.9938,6.9938,0,0,1,13.8838,0l.0986.812.8154.0639a4.4975,4.4975,0,0,1-.3564,8.981Z"
  })), children);
})));
var WatsonHealthCobbAngle32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCobbAngle32(_ref227, ref) {
  var children = _ref227.children,
      rest = _objectWithoutProperties(_ref227, _excluded227);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path369 || (_path369 = /*#__PURE__*/React.createElement("path", {
    d: "M20 17V15a2 2 0 00-2-2H10a2 2 0 00-2 2v2a2 2 0 002 2h8A2 2 0 0020 17zM10 15h8v2H10zM23.42 24.48A2 2 0 0021 23.06l-7.73 2.07a2 2 0 00-1.42 2.44h0l.52 1.93A2 2 0 0014.27 31a3 3 0 00.52-.07l7.73-2.07h0a2 2 0 001.41-2.45zM14.27 29l-.51-1.94L21.48 25 22 26.92zM13.24 6.86L21 8.93h0a2.24 2.24 0 00.51.07 2 2 0 001.94-1.48L24 5.58a2 2 0 00-1.41-2.45L14.79 1.06a2 2 0 00-2.45 1.41h0l-.52 1.93a2 2 0 001.42 2.44zm1-3.86L22 5.07 21.48 7 13.76 4.93zM14 21H16V23H14zM14 9H16V11H14z"
  })), children);
})));
var WatsonHealthCobbAngle24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCobbAngle24(_ref228, ref) {
  var children = _ref228.children,
      rest = _objectWithoutProperties(_ref228, _excluded228);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path370 || (_path370 = /*#__PURE__*/React.createElement("path", {
    d: "M20 17V15a2 2 0 00-2-2H10a2 2 0 00-2 2v2a2 2 0 002 2h8A2 2 0 0020 17zM10 15h8v2H10zM23.42 24.48A2 2 0 0021 23.06l-7.73 2.07a2 2 0 00-1.42 2.44h0l.52 1.93A2 2 0 0014.27 31a3 3 0 00.52-.07l7.73-2.07h0a2 2 0 001.41-2.45zM14.27 29l-.51-1.94L21.48 25 22 26.92zM13.24 6.86L21 8.93h0a2.24 2.24 0 00.51.07 2 2 0 001.94-1.48L24 5.58a2 2 0 00-1.41-2.45L14.79 1.06a2 2 0 00-2.45 1.41h0l-.52 1.93a2 2 0 001.42 2.44zm1-3.86L22 5.07 21.48 7 13.76 4.93zM14 21H16V23H14zM14 9H16V11H14z"
  })), children);
})));
var WatsonHealthCobbAngle20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCobbAngle20(_ref229, ref) {
  var children = _ref229.children,
      rest = _objectWithoutProperties(_ref229, _excluded229);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path371 || (_path371 = /*#__PURE__*/React.createElement("path", {
    d: "M20 17V15a2 2 0 00-2-2H10a2 2 0 00-2 2v2a2 2 0 002 2h8A2 2 0 0020 17zM10 15h8v2H10zM23.42 24.48A2 2 0 0021 23.06l-7.73 2.07a2 2 0 00-1.42 2.44h0l.52 1.93A2 2 0 0014.27 31a3 3 0 00.52-.07l7.73-2.07h0a2 2 0 001.41-2.45zM14.27 29l-.51-1.94L21.48 25 22 26.92zM13.24 6.86L21 8.93h0a2.24 2.24 0 00.51.07 2 2 0 001.94-1.48L24 5.58a2 2 0 00-1.41-2.45L14.79 1.06a2 2 0 00-2.45 1.41h0l-.52 1.93a2 2 0 001.42 2.44zm1-3.86L22 5.07 21.48 7 13.76 4.93zM14 21H16V23H14zM14 9H16V11H14z"
  })), children);
})));
var WatsonHealthCobbAngle16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function WatsonHealthCobbAngle16(_ref230, ref) {
  var children = _ref230.children,
      rest = _objectWithoutProperties(_ref230, _excluded230);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path372 || (_path372 = /*#__PURE__*/React.createElement("path", {
    d: "M20 17V15a2 2 0 00-2-2H10a2 2 0 00-2 2v2a2 2 0 002 2h8A2 2 0 0020 17zM10 15h8v2H10zM23.42 24.48A2 2 0 0021 23.06l-7.73 2.07a2 2 0 00-1.42 2.44h0l.52 1.93A2 2 0 0014.27 31a3 3 0 00.52-.07l7.73-2.07h0a2 2 0 001.41-2.45zM14.27 29l-.51-1.94L21.48 25 22 26.92zM13.24 6.86L21 8.93h0a2.24 2.24 0 00.51.07 2 2 0 001.94-1.48L24 5.58a2 2 0 00-1.41-2.45L14.79 1.06a2 2 0 00-2.45 1.41h0l-.52 1.93a2 2 0 001.42 2.44zm1-3.86L22 5.07 21.48 7 13.76 4.93zM14 21H16V23H14zM14 9H16V11H14z"
  })), children);
})));
var Code32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Code32(_ref231, ref) {
  var children = _ref231.children,
      rest = _objectWithoutProperties(_ref231, _excluded231);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path373 || (_path373 = /*#__PURE__*/React.createElement("path", {
    d: "M31 16L24 23 22.59 21.59 28.17 16 22.59 10.41 24 9 31 16zM1 16L8 9 9.41 10.41 3.83 16 9.41 21.59 8 23 1 16z"
  })), _path374 || (_path374 = /*#__PURE__*/React.createElement("path", {
    d: "M5.91 15H26.080000000000002V17H5.91z",
    transform: "rotate(-75 15.996 16)"
  })), children);
})));
var Code24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Code24(_ref232, ref) {
  var children = _ref232.children,
      rest = _objectWithoutProperties(_ref232, _excluded232);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path375 || (_path375 = /*#__PURE__*/React.createElement("path", {
    d: "M31 16L24 23 22.59 21.59 28.17 16 22.59 10.41 24 9 31 16zM1 16L8 9 9.41 10.41 3.83 16 9.41 21.59 8 23 1 16z"
  })), _path376 || (_path376 = /*#__PURE__*/React.createElement("path", {
    d: "M5.91 15H26.080000000000002V17H5.91z",
    transform: "rotate(-75 15.996 16)"
  })), children);
})));
var Code20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Code20(_ref233, ref) {
  var children = _ref233.children,
      rest = _objectWithoutProperties(_ref233, _excluded233);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path377 || (_path377 = /*#__PURE__*/React.createElement("path", {
    d: "M31 16L24 23 22.59 21.59 28.17 16 22.59 10.41 24 9 31 16zM1 16L8 9 9.41 10.41 3.83 16 9.41 21.59 8 23 1 16z"
  })), _path378 || (_path378 = /*#__PURE__*/React.createElement("path", {
    d: "M5.91 15H26.080000000000002V17H5.91z",
    transform: "rotate(-75 15.996 16)"
  })), children);
})));
var Code16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Code16(_ref234, ref) {
  var children = _ref234.children,
      rest = _objectWithoutProperties(_ref234, _excluded234);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path379 || (_path379 = /*#__PURE__*/React.createElement("path", {
    d: "M31 16L24 23 22.59 21.59 28.17 16 22.59 10.41 24 9 31 16zM1 16L8 9 9.41 10.41 3.83 16 9.41 21.59 8 23 1 16z"
  })), _path380 || (_path380 = /*#__PURE__*/React.createElement("path", {
    d: "M5.91 15H26.080000000000002V17H5.91z",
    transform: "rotate(-75 15.996 16)"
  })), children);
})));
var CodeHide32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeHide32(_ref235, ref) {
  var children = _ref235.children,
      rest = _objectWithoutProperties(_ref235, _excluded235);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path381 || (_path381 = /*#__PURE__*/React.createElement("path", {
    d: "M17.713 13.471L19.576 6.518 17.645 6 16.08 11.838 17.713 13.471zM24.207 19.965L25.621 21.379 31 16 24 9 22.586 10.414 28.172 16 24.207 19.965zM30 28.586L3.414 2 2 3.414 7.793 9.207 1 16 8 23 9.414 21.586 3.828 16 9.207 10.621 14.884 16.298 12.423 25.482 14.355 26 16.517 17.931 28.586 30 30 28.586z"
  })), children);
})));
var CodeHide24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeHide24(_ref236, ref) {
  var children = _ref236.children,
      rest = _objectWithoutProperties(_ref236, _excluded236);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path382 || (_path382 = /*#__PURE__*/React.createElement("path", {
    d: "M17.713 13.471L19.576 6.518 17.645 6 16.08 11.838 17.713 13.471zM24.207 19.965L25.621 21.379 31 16 24 9 22.586 10.414 28.172 16 24.207 19.965zM30 28.586L3.414 2 2 3.414 7.793 9.207 1 16 8 23 9.414 21.586 3.828 16 9.207 10.621 14.884 16.298 12.423 25.482 14.355 26 16.517 17.931 28.586 30 30 28.586z"
  })), children);
})));
var CodeHide20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeHide20(_ref237, ref) {
  var children = _ref237.children,
      rest = _objectWithoutProperties(_ref237, _excluded237);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path383 || (_path383 = /*#__PURE__*/React.createElement("path", {
    d: "M17.713 13.471L19.576 6.518 17.645 6 16.08 11.838 17.713 13.471zM24.207 19.965L25.621 21.379 31 16 24 9 22.586 10.414 28.172 16 24.207 19.965zM30 28.586L3.414 2 2 3.414 7.793 9.207 1 16 8 23 9.414 21.586 3.828 16 9.207 10.621 14.884 16.298 12.423 25.482 14.355 26 16.517 17.931 28.586 30 30 28.586z"
  })), children);
})));
var CodeHide16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeHide16(_ref238, ref) {
  var children = _ref238.children,
      rest = _objectWithoutProperties(_ref238, _excluded238);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path384 || (_path384 = /*#__PURE__*/React.createElement("path", {
    d: "M17.713 13.471L19.576 6.518 17.645 6 16.08 11.838 17.713 13.471zM24.207 19.965L25.621 21.379 31 16 24 9 22.586 10.414 28.172 16 24.207 19.965zM30 28.586L3.414 2 2 3.414 7.793 9.207 1 16 8 23 9.414 21.586 3.828 16 9.207 10.621 14.884 16.298 12.423 25.482 14.355 26 16.517 17.931 28.586 30 30 28.586z"
  })), children);
})));
var CodeReference32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeReference32(_ref239, ref) {
  var children = _ref239.children,
      rest = _objectWithoutProperties(_ref239, _excluded239);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path385 || (_path385 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM30 10L24 4 22.586 5.414 27.172 10 22.586 14.586 24 16 30 10z"
  })), _path386 || (_path386 = /*#__PURE__*/React.createElement("path", {
    d: "M8.944 9.001H24.974000000000004V11.001H8.944z",
    transform: "rotate(-74.995 16.96 10)"
  })), _path387 || (_path387 = /*#__PURE__*/React.createElement("path", {
    d: "M4 10L10 4 11.414 5.414 6.828 10 11.414 14.586 10 16 4 10z"
  })), children);
})));
var CodeReference24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeReference24(_ref240, ref) {
  var children = _ref240.children,
      rest = _objectWithoutProperties(_ref240, _excluded240);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path388 || (_path388 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM30 10L24 4 22.586 5.414 27.172 10 22.586 14.586 24 16 30 10z"
  })), _path389 || (_path389 = /*#__PURE__*/React.createElement("path", {
    d: "M8.944 9.001H24.974000000000004V11.001H8.944z",
    transform: "rotate(-74.995 16.96 10)"
  })), _path390 || (_path390 = /*#__PURE__*/React.createElement("path", {
    d: "M4 10L10 4 11.414 5.414 6.828 10 11.414 14.586 10 16 4 10z"
  })), children);
})));
var CodeReference20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeReference20(_ref241, ref) {
  var children = _ref241.children,
      rest = _objectWithoutProperties(_ref241, _excluded241);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path391 || (_path391 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM30 10L24 4 22.586 5.414 27.172 10 22.586 14.586 24 16 30 10z"
  })), _path392 || (_path392 = /*#__PURE__*/React.createElement("path", {
    d: "M8.944 9.001H24.974000000000004V11.001H8.944z",
    transform: "rotate(-74.995 16.96 10)"
  })), _path393 || (_path393 = /*#__PURE__*/React.createElement("path", {
    d: "M4 10L10 4 11.414 5.414 6.828 10 11.414 14.586 10 16 4 10z"
  })), children);
})));
var CodeReference16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeReference16(_ref242, ref) {
  var children = _ref242.children,
      rest = _objectWithoutProperties(_ref242, _excluded242);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path394 || (_path394 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20zM30 10L24 4 22.586 5.414 27.172 10 22.586 14.586 24 16 30 10z"
  })), _path395 || (_path395 = /*#__PURE__*/React.createElement("path", {
    d: "M8.944 9.001H24.974000000000004V11.001H8.944z",
    transform: "rotate(-74.995 16.96 10)"
  })), _path396 || (_path396 = /*#__PURE__*/React.createElement("path", {
    d: "M4 10L10 4 11.414 5.414 6.828 10 11.414 14.586 10 16 4 10z"
  })), children);
})));
var CodeSigningService32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeSigningService32(_ref243, ref) {
  var children = _ref243.children,
      rest = _objectWithoutProperties(_ref243, _excluded243);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle46 || (_circle46 = /*#__PURE__*/React.createElement("circle", {
    cx: "25",
    cy: "20",
    r: "1"
  })), _path397 || (_path397 = /*#__PURE__*/React.createElement("path", {
    d: "M19.4141 30H15V25.5857l5.0337-5.0337A4.6069 4.6069 0 0120 20a5 5 0 114.4478 4.9663zM17 28h1.5859l5.2061-5.2063.5395.1238a3.0351 3.0351 0 10-2.249-2.2488l.1236.5393L17 26.4143zM6 8H8V16H6zM2 8H4V16H2zM18 8H20V14H18zM14 16H12a2 2 0 01-2-2V10a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0114 16zm-2-2h2V10H12zM2 18H4V26H2zM14 18H16V22H14zM10 26H8a2 2 0 01-2-2V20a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0110 26zM8 24h2V20H8zM2 2H4V6H2zM14 2H16V6H14zM18 2H20V6H18zM10 6H8A2 2 0 016 4V2H8V4h2V2h2V4A2 2 0 0110 6z"
  })), children);
})));
var CodeSigningService24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeSigningService24(_ref244, ref) {
  var children = _ref244.children,
      rest = _objectWithoutProperties(_ref244, _excluded244);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle47 || (_circle47 = /*#__PURE__*/React.createElement("circle", {
    cx: "25",
    cy: "20",
    r: "1"
  })), _path398 || (_path398 = /*#__PURE__*/React.createElement("path", {
    d: "M19.4141 30H15V25.5857l5.0337-5.0337A4.6069 4.6069 0 0120 20a5 5 0 114.4478 4.9663zM17 28h1.5859l5.2061-5.2063.5395.1238a3.0351 3.0351 0 10-2.249-2.2488l.1236.5393L17 26.4143zM6 8H8V16H6zM2 8H4V16H2zM18 8H20V14H18zM14 16H12a2 2 0 01-2-2V10a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0114 16zm-2-2h2V10H12zM2 18H4V26H2zM14 18H16V22H14zM10 26H8a2 2 0 01-2-2V20a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0110 26zM8 24h2V20H8zM2 2H4V6H2zM14 2H16V6H14zM18 2H20V6H18zM10 6H8A2 2 0 016 4V2H8V4h2V2h2V4A2 2 0 0110 6z"
  })), children);
})));
var CodeSigningService20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeSigningService20(_ref245, ref) {
  var children = _ref245.children,
      rest = _objectWithoutProperties(_ref245, _excluded245);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle48 || (_circle48 = /*#__PURE__*/React.createElement("circle", {
    cx: "25",
    cy: "20",
    r: "1"
  })), _path399 || (_path399 = /*#__PURE__*/React.createElement("path", {
    d: "M19.4141 30H15V25.5857l5.0337-5.0337A4.6069 4.6069 0 0120 20a5 5 0 114.4478 4.9663zM17 28h1.5859l5.2061-5.2063.5395.1238a3.0351 3.0351 0 10-2.249-2.2488l.1236.5393L17 26.4143zM6 8H8V16H6zM2 8H4V16H2zM18 8H20V14H18zM14 16H12a2 2 0 01-2-2V10a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0114 16zm-2-2h2V10H12zM2 18H4V26H2zM14 18H16V22H14zM10 26H8a2 2 0 01-2-2V20a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0110 26zM8 24h2V20H8zM2 2H4V6H2zM14 2H16V6H14zM18 2H20V6H18zM10 6H8A2 2 0 016 4V2H8V4h2V2h2V4A2 2 0 0110 6z"
  })), children);
})));
var CodeSigningService16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CodeSigningService16(_ref246, ref) {
  var children = _ref246.children,
      rest = _objectWithoutProperties(_ref246, _excluded246);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle49 || (_circle49 = /*#__PURE__*/React.createElement("circle", {
    cx: "25",
    cy: "20",
    r: "1"
  })), _path400 || (_path400 = /*#__PURE__*/React.createElement("path", {
    d: "M19.4141 30H15V25.5857l5.0337-5.0337A4.6069 4.6069 0 0120 20a5 5 0 114.4478 4.9663zM17 28h1.5859l5.2061-5.2063.5395.1238a3.0351 3.0351 0 10-2.249-2.2488l.1236.5393L17 26.4143zM6 8H8V16H6zM2 8H4V16H2zM18 8H20V14H18zM14 16H12a2 2 0 01-2-2V10a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0114 16zm-2-2h2V10H12zM2 18H4V26H2zM14 18H16V22H14zM10 26H8a2 2 0 01-2-2V20a2 2 0 012-2h2a2 2 0 012 2v4A2 2 0 0110 26zM8 24h2V20H8zM2 2H4V6H2zM14 2H16V6H14zM18 2H20V6H18zM10 6H8A2 2 0 016 4V2H8V4h2V2h2V4A2 2 0 0110 6z"
  })), children);
})));
var Cognitive32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cognitive32(_ref247, ref) {
  var children = _ref247.children,
      rest = _objectWithoutProperties(_ref247, _excluded247);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path401 || (_path401 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13A11,11,0,0,0,19,2H11a9,9,0,0,0-9,9v3a5,5,0,0,0,5,5H8.1A5,5,0,0,0,13,23h1.38l4,7,1.73-1-4-6.89A2,2,0,0,0,14.38,21H13a3,3,0,0,1,0-6h1V13H13a5,5,0,0,0-4.9,4H7a3,3,0,0,1-3-3V12H6A3,3,0,0,0,9,9V8H7V9a1,1,0,0,1-1,1H4.08A7,7,0,0,1,11,4h6V6a1,1,0,0,1-1,1H14V9h2a3,3,0,0,0,3-3V4a9,9,0,0,1,8.05,5H26a3,3,0,0,0-3,3v1h2V12a1,1,0,0,1,1-1h1.77A8.76,8.76,0,0,1,28,13v1a5,5,0,0,1-5,5H20v2h3a7,7,0,0,0,3-.68V21a3,3,0,0,1-3,3H22v2h1a5,5,0,0,0,5-5V18.89A7,7,0,0,0,30,14Z"
  })), children);
})));
var Cognitive24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cognitive24(_ref248, ref) {
  var children = _ref248.children,
      rest = _objectWithoutProperties(_ref248, _excluded248);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path402 || (_path402 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13A11,11,0,0,0,19,2H11a9,9,0,0,0-9,9v3a5,5,0,0,0,5,5H8.1A5,5,0,0,0,13,23h1.38l4,7,1.73-1-4-6.89A2,2,0,0,0,14.38,21H13a3,3,0,0,1,0-6h1V13H13a5,5,0,0,0-4.9,4H7a3,3,0,0,1-3-3V12H6A3,3,0,0,0,9,9V8H7V9a1,1,0,0,1-1,1H4.08A7,7,0,0,1,11,4h6V6a1,1,0,0,1-1,1H14V9h2a3,3,0,0,0,3-3V4a9,9,0,0,1,8.05,5H26a3,3,0,0,0-3,3v1h2V12a1,1,0,0,1,1-1h1.77A8.76,8.76,0,0,1,28,13v1a5,5,0,0,1-5,5H20v2h3a7,7,0,0,0,3-.68V21a3,3,0,0,1-3,3H22v2h1a5,5,0,0,0,5-5V18.89A7,7,0,0,0,30,14Z"
  })), children);
})));
var Cognitive20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cognitive20(_ref249, ref) {
  var children = _ref249.children,
      rest = _objectWithoutProperties(_ref249, _excluded249);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path403 || (_path403 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13A11,11,0,0,0,19,2H11a9,9,0,0,0-9,9v3a5,5,0,0,0,5,5H8.1A5,5,0,0,0,13,23h1.38l4,7,1.73-1-4-6.89A2,2,0,0,0,14.38,21H13a3,3,0,0,1,0-6h1V13H13a5,5,0,0,0-4.9,4H7a3,3,0,0,1-3-3V12H6A3,3,0,0,0,9,9V8H7V9a1,1,0,0,1-1,1H4.08A7,7,0,0,1,11,4h6V6a1,1,0,0,1-1,1H14V9h2a3,3,0,0,0,3-3V4a9,9,0,0,1,8.05,5H26a3,3,0,0,0-3,3v1h2V12a1,1,0,0,1,1-1h1.77A8.76,8.76,0,0,1,28,13v1a5,5,0,0,1-5,5H20v2h3a7,7,0,0,0,3-.68V21a3,3,0,0,1-3,3H22v2h1a5,5,0,0,0,5-5V18.89A7,7,0,0,0,30,14Z"
  })), children);
})));
var Cognitive16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Cognitive16(_ref250, ref) {
  var children = _ref250.children,
      rest = _objectWithoutProperties(_ref250, _excluded250);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path404 || (_path404 = /*#__PURE__*/React.createElement("path", {
    d: "M30,13A11,11,0,0,0,19,2H11a9,9,0,0,0-9,9v3a5,5,0,0,0,5,5H8.1A5,5,0,0,0,13,23h1.38l4,7,1.73-1-4-6.89A2,2,0,0,0,14.38,21H13a3,3,0,0,1,0-6h1V13H13a5,5,0,0,0-4.9,4H7a3,3,0,0,1-3-3V12H6A3,3,0,0,0,9,9V8H7V9a1,1,0,0,1-1,1H4.08A7,7,0,0,1,11,4h6V6a1,1,0,0,1-1,1H14V9h2a3,3,0,0,0,3-3V4a9,9,0,0,1,8.05,5H26a3,3,0,0,0-3,3v1h2V12a1,1,0,0,1,1-1h1.77A8.76,8.76,0,0,1,28,13v1a5,5,0,0,1-5,5H20v2h3a7,7,0,0,0,3-.68V21a3,3,0,0,1-3,3H22v2h1a5,5,0,0,0,5-5V18.89A7,7,0,0,0,30,14Z"
  })), children);
})));



;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/tools/toggleClass.js
/**
 * Adds or removes a CSS class to an element.
 * @param {Element} element An element.
 * @param {string} name A CSS class name.
 * @param {boolean} add `true` to add the given CSS class to given the element. Otherwise to remove.
 */
function toggleClass(element, name, add) {
  if (element.classList.contains(name) === !add) {
    element.classList[add ? 'add' : 'remove'](name);
  }
}
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js
var arrayLikeToArray = __webpack_require__(821);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return (0,arrayLikeToArray/* default */.Z)(arr);
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/iterableToArray.js
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(8458);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js




function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || (0,unsupportedIterableToArray/* default */.Z)(arr) || _nonIterableSpread();
}
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(1905);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/prop-types/types.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ButtonKinds = ['primary', 'secondary', 'danger', 'ghost', 'danger--primary', 'danger--ghost', 'danger--tertiary', 'tertiary'];
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/prop-types/deprecate.js
var deprecate = __webpack_require__(3597);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/tools/events.js
var events = __webpack_require__(3834);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/keyboard/match.js
var keyboard_match = __webpack_require__(4509);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/keyboard/keys.js
var keys = __webpack_require__(4817);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/usePrefix.js
var usePrefix = __webpack_require__(330);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/tools/setupGetInstanceId.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generic utility to initialize a method that will return a unique instance id
 * for a component.
 */
function setupGetInstanceId() {
  var instanceId = 0;
  return function getInstanceId() {
    return ++instanceId;
  };
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/internal/environment.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Indicate whether current execution environment can access the DOM.
 *
 * @see https://github.com/facebook/fbjs/blob/4d1751311d3f67af2dcce2e40df8512a23c7b9c6/packages/fbjs/src/core/ExecutionEnvironment.js#L12
 */
var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/internal/useId.js


/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
// This file was heavily inspired by Reach UI and their work on their auto-id
// package
// https://github.com/reach/reach-ui/blob/86a046f54d53b6420e392b3fa56dd991d9d4e458/packages/auto-id/src/index.ts
//
// The problem that this solves is an id mismatch when auto-generating
// ids on both the server and the client. When using server-side rendering,
// there can be the chance of a mismatch between what the server renders and
// what the client renders when the id value is auto-generated.
//
// To get around this, we set the initial value of the `id` to `null` and then
// conditionally use `useLayoutEffect` on the client and `useEffect` on the
// server. On the client, `useLayoutEffect` will patch up the id to the correct
// value. On the server, `useEffect` will not run.
//
// This ensures that we won't encounter a mismatch in ids between server and
// client, at the cost of runtime patching of the id value in
// `useLayoutEffect`



var getId = setupGetInstanceId();
var useIsomorphicLayoutEffect = canUseDOM ? react.useLayoutEffect : react.useEffect;
var serverHandoffCompleted = false;
/**
 * Generate a unique ID with an optional prefix prepended to it
 * @param {string} [prefix]
 * @returns {string}
 */

function useId() {
  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id';

  var _useState = (0,react.useState)(function () {
    if (serverHandoffCompleted) {
      return "".concat(prefix, "-").concat(getId());
    }

    return null;
  }),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      id = _useState2[0],
      setId = _useState2[1];

  useIsomorphicLayoutEffect(function () {
    if (id === null) {
      setId("".concat(prefix, "-").concat(getId()));
    }
  }, [getId]);
  (0,react.useEffect)(function () {
    if (serverHandoffCompleted === false) {
      serverHandoffCompleted = true;
    }
  }, []);
  return id;
}
/**
 * Generate a unique id if a given `id` is not provided
 * @param {string} id
 * @returns {string}
 */

function useFallbackId(id) {
  var fallback = useId();
  return id !== null && id !== void 0 ? id : fallback;
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/FeatureFlags/index.js


/**
 * Copyright IBM Corp. 2015, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Our FeatureFlagContext is used alongside the FeatureFlags component to enable
 * or disable feature flags in a given React tree
 */

var FeatureFlagContext = /*#__PURE__*/(0,react.createContext)(es/* FeatureFlags */.TP);
/**
 * Supports an object of feature flag values with the `flags` prop, merging them
 * along with the current `FeatureFlagContext` to provide consumers to check if
 * a feature flag is enabled or disabled in a given React tree
 */

function FeatureFlags(_ref) {
  var children = _ref.children,
      _ref$flags = _ref.flags,
      flags = _ref$flags === void 0 ? {} : _ref$flags;
  var parentScope = (0,react.useContext)(FeatureFlagContext);

  var _useState = (0,react.useState)(parentScope),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      prevParentScope = _useState2[0],
      setPrevParentScope = _useState2[1];

  var _useState3 = (0,react.useState)(function () {
    var scope = (0,es/* createScope */.tp)(flags);
    scope.mergeWithScope(parentScope);
    return scope;
  }),
      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),
      scope = _useState4[0],
      updateScope = _useState4[1];

  if (parentScope !== prevParentScope) {
    var _scope = (0,es/* createScope */.tp)(flags);

    _scope.mergeWithScope(parentScope);

    updateScope(_scope);
    setPrevParentScope(parentScope);
  } // We use a custom hook to detect if any of the keys or their values change
  // for flags that are passed in. If they have changed, then we re-create the
  // FeatureFlagScope using the new flags


  useChangedValue(flags, isEqual, function (changedFlags) {
    var scope = (0,es/* createScope */.tp)(changedFlags);
    scope.mergeWithScope(parentScope);
    updateScope(scope);
  });
  return /*#__PURE__*/react.createElement(FeatureFlagContext.Provider, {
    value: scope
  }, children);
}

FeatureFlags.propTypes = {
  children: (prop_types_default()).node,

  /**
   * Provide the feature flags to enabled or disabled in the current React tree
   */
  flags: prop_types_default().objectOf((prop_types_default()).bool)
};
/**
 * This hook will store previous versions of the given `value` and compare the
 * current value to the previous one using the `compare` function. If the
 * compare function returns true, then the given `callback` is invoked in an
 * effect.
 *
 * @param {any} value
 * @param {Function} compare
 * @param {Function} callback
 */

function useChangedValue(value, compare, callback) {
  var initialRender = (0,react.useRef)(false);
  var savedCallback = (0,react.useRef)(callback);

  var _useState5 = (0,react.useState)(value),
      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),
      prevValue = _useState6[0],
      setPrevValue = _useState6[1];

  if (!compare(prevValue, value)) {
    setPrevValue(value);
  }

  (0,react.useEffect)(function () {
    savedCallback.current = callback;
  });
  (0,react.useEffect)(function () {
    // We only want the callback triggered after the first render
    if (initialRender.current) {
      savedCallback.current(prevValue);
    }
  }, [prevValue]);
  (0,react.useEffect)(function () {
    initialRender.current = true;
  }, []);
}
/**
 * Access whether a given flag is enabled or disabled in a given
 * FeatureFlagContext
 *
 * @returns {boolean}
 */


function useFeatureFlag(flag) {
  var scope = (0,react.useContext)(FeatureFlagContext);
  return scope.enabled(flag);
}
/**
 * Access all feature flag information for the given FeatureFlagContext
 *
 * @returns {FeatureFlagScope}
 */


function useFeatureFlags() {
  return useContext(FeatureFlagContext);
}
/**
 * Compare two objects and determine if they are equal. This is a shallow
 * comparison since the objects we are comparing are objects with boolean flags
 * from the flags prop in the `FeatureFlags` component
 *
 * @param {object} a
 * @param {object} b
 * @returns {boolean}
 */


function isEqual(a, b) {
  if (a === b) {
    return true;
  }

  for (var _i = 0, _Object$keys = Object.keys(a); _i < _Object$keys.length; _i++) {
    var key = _Object$keys[_i];

    if (a[key] !== b[key]) {
      return false;
    }
  }

  for (var _i2 = 0, _Object$keys2 = Object.keys(b); _i2 < _Object$keys2.length; _i2++) {
    var _key = _Object$keys2[_i2];

    if (b[_key] !== a[_key]) {
      return false;
    }
  }

  return true;
}


;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Button/Button.js




var Button_excluded = ["children", "as", "className", "disabled", "small", "size", "kind", "href", "isExpressive", "isSelected", "tabIndex", "type", "renderIcon", "dangerDescription", "iconDescription", "hasIconOnly", "tooltipPosition", "tooltipAlignment", "onClick", "onBlur", "onFocus", "onMouseEnter", "onMouseLeave"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */











var Button = /*#__PURE__*/react.forwardRef(function Button(_ref, ref) {
  var _classNames;

  var children = _ref.children,
      as = _ref.as,
      className = _ref.className,
      disabled = _ref.disabled,
      small = _ref.small,
      size = _ref.size,
      kind = _ref.kind,
      href = _ref.href,
      isExpressive = _ref.isExpressive,
      isSelected = _ref.isSelected,
      tabIndex = _ref.tabIndex,
      type = _ref.type,
      ButtonImageElement = _ref.renderIcon,
      dangerDescription = _ref.dangerDescription,
      iconDescription = _ref.iconDescription,
      hasIconOnly = _ref.hasIconOnly,
      tooltipPosition = _ref.tooltipPosition,
      tooltipAlignment = _ref.tooltipAlignment,
      onClick = _ref.onClick,
      onBlur = _ref.onBlur,
      onFocus = _ref.onFocus,
      onMouseEnter = _ref.onMouseEnter,
      onMouseLeave = _ref.onMouseLeave,
      other = (0,objectWithoutProperties/* default */.Z)(_ref, Button_excluded);

  var _useState = (0,react.useState)(false),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      allowTooltipVisibility = _useState2[0],
      setAllowTooltipVisibility = _useState2[1];

  var _useState3 = (0,react.useState)(false),
      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),
      isHovered = _useState4[0],
      setIsHovered = _useState4[1];

  var _useState5 = (0,react.useState)(false),
      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),
      isFocused = _useState6[0],
      setIsFocused = _useState6[1];

  var tooltipRef = (0,react.useRef)(null);
  var tooltipTimeout = (0,react.useRef)(null);
  var prefix = (0,usePrefix/* usePrefix */.A)();

  var closeTooltips = function closeTooltips(evt) {
    var _document;

    var tooltipNode = (_document = document) === null || _document === void 0 ? void 0 : _document.querySelectorAll(".".concat(prefix, "--tooltip--a11y"));

    _toConsumableArray(tooltipNode).map(function (node) {
      toggleClass(node, "".concat(prefix, "--tooltip--hidden"), node !== evt.currentTarget);
    });
  };

  var handleFocus = function handleFocus(evt) {
    if (hasIconOnly) {
      closeTooltips(evt);
      setIsFocused(true);
      setAllowTooltipVisibility(true);
    }
  };

  var handleBlur = function handleBlur() {
    if (hasIconOnly) {
      setIsHovered(false);
      setIsFocused(false);
      setAllowTooltipVisibility(false);
    }
  };

  var handleMouseEnter = function handleMouseEnter(evt) {
    if (hasIconOnly) {
      tooltipTimeout.current && clearTimeout(tooltipTimeout.current);

      if (evt.target === tooltipRef.current) {
        setAllowTooltipVisibility(true);
        return;
      }

      closeTooltips(evt);
      setAllowTooltipVisibility(true);
    }
  };

  var handleMouseLeave = function handleMouseLeave() {
    if (!isFocused && hasIconOnly) {
      tooltipTimeout.current = setTimeout(function () {
        setAllowTooltipVisibility(false);
        setIsHovered(false);
      }, 100);
    }
  };

  var handleClick = function handleClick(evt) {
    // Prevent clicks on the tooltip from triggering the button click event
    setAllowTooltipVisibility(false);

    if (evt.target === tooltipRef.current) {
      evt.preventDefault();
      return;
    }
  };

  (0,react.useEffect)(function () {
    var handleEscKeyDown = function handleEscKeyDown(event) {
      if ((0,keyboard_match/* matches */.wB)(event, [keys/* Escape */.L1])) {
        setAllowTooltipVisibility(false);
        setIsHovered(false);
      }
    };

    document.addEventListener('keydown', handleEscKeyDown);
    return function () {
      return document.removeEventListener('keydown', handleEscKeyDown);
    };
  }, []);
  var enabled = useFeatureFlag('enable-v11-release');
  var buttonClasses = classnames_default()(className, (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn"), true), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--sm"), size === 'small' && !isExpressive || size === 'sm' && !isExpressive || small && !isExpressive), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--md"), size === 'field' && !isExpressive || size === 'md' && !isExpressive), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--lg"), enabled ? size === 'xl' : size === 'lg'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--xl"), enabled ? size === '2xl' : size === 'xl'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--").concat(kind), kind), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--disabled"), disabled), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--expressive"), isExpressive), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--tooltip--visible"), !enabled && isHovered), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--tooltip--hidden"), !enabled && hasIconOnly && !allowTooltipVisibility), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--icon-only"), hasIconOnly), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--selected"), hasIconOnly && isSelected && kind === 'ghost'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--tooltip__trigger"), !enabled && hasIconOnly), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--tooltip--a11y"), !enabled && hasIconOnly), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--btn--icon-only--").concat(tooltipPosition), !enabled && hasIconOnly && tooltipPosition), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--tooltip--align-").concat(tooltipAlignment), !enabled && hasIconOnly && tooltipAlignment), _classNames));
  var commonProps = {
    tabIndex: tabIndex,
    className: buttonClasses,
    ref: ref
  };
  var buttonImage = !ButtonImageElement ? null : /*#__PURE__*/react.createElement(ButtonImageElement, {
    "aria-label": iconDescription,
    className: "".concat(prefix, "--btn__icon"),
    "aria-hidden": "true"
  });
  var dangerButtonVariants = ['danger', 'danger--tertiary', 'danger--ghost'];
  var component = 'button';
  var assistiveId = useId('danger-description');
  var otherProps = {
    disabled: disabled,
    type: type,
    'aria-describedby': dangerButtonVariants.includes(kind) ? assistiveId : null,
    'aria-pressed': hasIconOnly && kind === 'ghost' ? isSelected : null
  };
  var anchorProps = {
    href: href
  };
  var assistiveText;

  if (hasIconOnly) {
    assistiveText = /*#__PURE__*/react.createElement("div", {
      ref: tooltipRef,
      onMouseEnter: handleMouseEnter,
      className: "".concat(prefix, "--assistive-text")
    }, iconDescription);
  } else if (dangerButtonVariants.includes(kind)) {
    assistiveText = /*#__PURE__*/react.createElement("span", {
      id: assistiveId,
      className: "".concat(prefix, "--visually-hidden")
    }, dangerDescription);
  } else {
    assistiveText = null;
  }

  if (as) {
    component = as;
    otherProps = _objectSpread(_objectSpread({}, otherProps), anchorProps);
  } else if (href && !disabled) {
    component = 'a';
    otherProps = anchorProps;
  }

  if (enabled) {
    delete otherProps['aria-describedby'];
    return /*#__PURE__*/react.createElement(component, _objectSpread(_objectSpread(_objectSpread({
      onMouseEnter: onMouseEnter,
      onMouseLeave: onMouseLeave,
      onFocus: onFocus,
      onBlur: onBlur,
      onClick: onClick,
      type: type
    }, other), commonProps), otherProps), children);
  }

  return /*#__PURE__*/react.createElement(component, _objectSpread(_objectSpread(_objectSpread({
    onMouseEnter: (0,events/* composeEventHandlers */.M)([onMouseEnter, handleMouseEnter]),
    onMouseLeave: (0,events/* composeEventHandlers */.M)([onMouseLeave, handleMouseLeave]),
    onFocus: (0,events/* composeEventHandlers */.M)([onFocus, handleFocus]),
    onBlur: (0,events/* composeEventHandlers */.M)([onBlur, handleBlur]),
    onClick: (0,events/* composeEventHandlers */.M)([onClick, handleClick])
  }, other), commonProps), otherProps), assistiveText, children, buttonImage);
});
Button.displayName = 'Button';
Button.propTypes = {
  /**
   * Specify how the button itself should be rendered.
   * Make sure to apply all props to the root node and render children appropriately
   */
  as: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).string, (prop_types_default()).elementType]),

  /**
   * Specify the content of your Button
   */
  children: (prop_types_default()).node,

  /**
   * Specify an optional className to be added to your Button
   */
  className: (prop_types_default()).string,

  /**
   * Specify the message read by screen readers for the danger button variant
   */
  dangerDescription: (prop_types_default()).string,

  /**
   * Specify whether the Button should be disabled, or not
   */
  disabled: (prop_types_default()).bool,

  /**
   * Specify if the button is an icon-only button
   */
  hasIconOnly: (prop_types_default()).bool,

  /**
   * Optionally specify an href for your Button to become an `<a>` element
   */
  href: (prop_types_default()).string,

  /**
   * If specifying the `renderIcon` prop, provide a description for that icon that can
   * be read by screen readers
   */
  iconDescription: function iconDescription(props) {
    if (props.renderIcon && !props.children && !props.iconDescription) {
      return new Error('renderIcon property specified without also providing an iconDescription property.');
    }

    return undefined;
  },

  /**
   * Specify whether the Button is expressive, or not
   */
  isExpressive: (prop_types_default()).bool,

  /**
   * Specify whether the Button is currently selected
   */
  isSelected: (prop_types_default()).bool,

  /**
   * Specify the kind of Button you want to create
   */
  kind: prop_types_default().oneOf(ButtonKinds).isRequired,

  /**
   * Provide an optional function to be called when the button element
   * loses focus
   */
  onBlur: (prop_types_default()).func,

  /**
   * Provide an optional function to be called when the button element
   * is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * Provide an optional function to be called when the button element
   * receives focus
   */
  onFocus: (prop_types_default()).func,

  /**
   * Provide an optional function to be called when the mouse
   * enters the button element
   */
  onMouseEnter: (prop_types_default()).func,

  /**
   * Provide an optional function to be called when the mouse
   * leaves the button element
   */
  onMouseLeave: (prop_types_default()).func,

  /**
   * Optional prop to allow overriding the icon rendering.
   * Can be a React component class
   */
  renderIcon: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).object]),

  /**
   * Optional prop to specify the role of the Button
   */
  role: (prop_types_default()).string,

  /**
   * Specify the size of the button, from a list of available sizes.
   * For `default` buttons, this prop can remain unspecified or use `default`.
   * In the next major release of Carbon, `default`, `field`, and `small` will be removed
   */
  size: prop_types_default().oneOf(['default', 'field', 'small', 'sm', 'md', 'lg', 'xl', '2xl']),

  /**
   * Deprecated in v10 in favor of `size`.
   * Specify whether the Button should be a small variant
   */
  small: (0,deprecate/* default */.Z)((prop_types_default()).bool, "\nThe prop `small` for Button has been deprecated in favor of `size`. Please use `size=\"sm\"` instead."),

  /**
   * Optional prop to specify the tabIndex of the Button
   */
  tabIndex: (prop_types_default()).number,

  /**
   * Specify the alignment of the tooltip to the icon-only button.
   * Can be one of: start, center, or end.
   */
  tooltipAlignment: prop_types_default().oneOf(['start', 'center', 'end']),

  /**
   * Specify the direction of the tooltip for icon-only buttons.
   * Can be either top, right, bottom, or left.
   */
  tooltipPosition: prop_types_default().oneOf(['top', 'right', 'bottom', 'left']),

  /**
   * Optional prop to specify the type of the Button
   */
  type: prop_types_default().oneOf(['button', 'reset', 'submit'])
};
Button.defaultProps = {
  tabIndex: 0,
  type: 'button',
  disabled: false,
  kind: 'primary',
  size: 'default',
  dangerDescription: 'danger',
  tooltipAlignment: 'center',
  tooltipPosition: 'top',
  isExpressive: false
};
/* harmony default export */ const Button_Button = (Button);
// EXTERNAL MODULE: ../../node_modules/carbon-components/es/globals/js/settings.js
var settings = __webpack_require__(5498);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/ButtonSet/ButtonSet.js



var ButtonSet_excluded = ["children", "className", "stacked"];

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */




var prefix = settings/* default.prefix */.Z.prefix;
var ButtonSet = /*#__PURE__*/react.forwardRef(function ButtonSet(_ref, ref) {
  var children = _ref.children,
      className = _ref.className,
      stacked = _ref.stacked,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref, ButtonSet_excluded);

  var buttonSetClasses = classnames_default()(className, "".concat(prefix, "--btn-set"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--btn-set--stacked"), stacked));
  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({}, rest, {
    className: buttonSetClasses,
    ref: ref
  }), children);
});
ButtonSet.displayName = 'ButtonSet';
ButtonSet.propTypes = {
  /**
   * Specify the content of your ButtonSet
   */
  children: (prop_types_default()).node,

  /**
   * Specify an optional className to be added to your ButtonSet
   */
  className: (prop_types_default()).string,

  /**
   * Specify the button arrangement of the set (vertically stacked or
   * horizontal)
   */
  stacked: (prop_types_default()).bool
};
/* harmony default export */ const ButtonSet_ButtonSet = (ButtonSet);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/prop-types/requiredIfGivenPropIsTruthy.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {Function} name The name of the prop that must exist to validate
 * the current prop.
 * @param {Function} propType The original prop type checker.
 * @returns {Function} The new prop type checker for the current prop that
 * becomes required if the prop corresponding to the provided prop name exists.
 */
function requiredIfGivenPropIsTruthy(name, propType) {
  return function check(props, propName, componentName) {
    if (false) {}

    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(void 0, [props, propName, componentName].concat(rest));
  };
}
// EXTERNAL MODULE: ../../node_modules/lodash.findlast/index.js
var lodash_findlast = __webpack_require__(8431);
var lodash_findlast_default = /*#__PURE__*/__webpack_require__.n(lodash_findlast);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/internal/keyboard/navigation.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/**
 * Various utilities to help with a11y work
 */

/**
 * A "ring buffer" function that takes an array and depending on an ArrowRight
 * or ArrowLeft key input loops from last index to first or first index to last.
 *
 * @param {string} key - the left or right arrow keys
 * @param {number} index - the current index in a given array
 * @param {number} arrayLength - the total length of the array
 *
 * @example
 * 	getNextIndex(keyCodes.RIGHT, 0, 4)
 */

var getNextIndex = function getNextIndex(key, index, arrayLength) {
  if (match(key, ArrowRight)) {
    return (index + 1) % arrayLength;
  }

  if (match(key, ArrowLeft)) {
    return (index + arrayLength - 1) % arrayLength;
  }
};
/**
 * A flag `node.compareDocumentPosition(target)` returns,
 * that indicates `target` is located earlier than `node` in the document or `target` contains `node`.
 */

var DOCUMENT_POSITION_BROAD_PRECEDING = // Checks `typeof Node` for `react-docgen`
typeof Node !== 'undefined' && Node.DOCUMENT_POSITION_PRECEDING | Node.DOCUMENT_POSITION_CONTAINS;
/**
 * A flag `node.compareDocumentPosition(target)` returns,
 * that indicates `target` is located later than `node` in the document or `node` contains `target`.
 */

var DOCUMENT_POSITION_BROAD_FOLLOWING = // Checks `typeof Node` for `react-docgen`
typeof Node !== 'undefined' && Node.DOCUMENT_POSITION_FOLLOWING | Node.DOCUMENT_POSITION_CONTAINED_BY;
/**
 * CSS selector that selects major nodes that are sequential-focusable.
 */

var selectorTabbable = "\n  a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n  button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n  textarea:not([disabled]):not([tabindex='-1']),\n  iframe, object, embed, *[tabindex]:not([tabindex='-1']):not([disabled]), *[contenteditable=true]\n";
/**
 * CSS selector that selects major nodes that are click focusable
 */

var selectorFocusable = "\n  a[href], area[href], input:not([disabled]),\n  button:not([disabled]),select:not([disabled]),\n  textarea:not([disabled]),\n  iframe, object, embed, *[tabindex]:not([disabled]), *[contenteditable=true]\n";
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/internal/wrapFocus.js


/**
 * Copyright IBM Corp. 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */



var wrapFocus_prefix = settings/* default.prefix */.Z.prefix;
/**
 * @param {Node} node A DOM node.
 * @param {string[]} selectorsFloatingMenus The CSS selectors that matches floating menus.
 * @returns {boolean} `true` of the given `node` is in a floating menu.
 */

function elementOrParentIsFloatingMenu(node) {
  var selectorsFloatingMenus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

  if (node && typeof node.closest === 'function') {
    var allSelectorsFloatingMenus = [".".concat(wrapFocus_prefix, "--overflow-menu-options"), ".".concat(wrapFocus_prefix, "--tooltip"), '.flatpickr-calendar'].concat(_toConsumableArray(selectorsFloatingMenus));
    return allSelectorsFloatingMenus.some(function (selector) {
      return node.closest(selector);
    });
  }
}
/**
 * Ensures the focus is kept in the given `modalNode`, implementing "focus-wrap" behavior.
 * @param {object} options The options.
 * @param {Node} options.bodyNode
 * @param {Node} options.startTrapNode The DOM node of the focus sentinel the is placed earlier next to `modalNode`.
 * @param {Node} options.endTrapNode The DOM node of the focus sentinel the is placed next to `modalNode`.
 * @param {Node} options.currentActiveNode The DOM node that has focus.
 * @param {Node} options.oldActiveNode The DOM node that previously had focus.
 * @param {Node} [options.selectorsFloatingMenus] The CSS selectors that matches floating menus.
 */


function wrapFocus(_ref) {
  var bodyNode = _ref.bodyNode,
      startTrapNode = _ref.startTrapNode,
      endTrapNode = _ref.endTrapNode,
      currentActiveNode = _ref.currentActiveNode,
      oldActiveNode = _ref.oldActiveNode,
      selectorsFloatingMenus = _ref.selectorsFloatingMenus;

  if (bodyNode && currentActiveNode && oldActiveNode && !bodyNode.contains(currentActiveNode) && !elementOrParentIsFloatingMenu(currentActiveNode, selectorsFloatingMenus)) {
    var comparisonResult = oldActiveNode.compareDocumentPosition(currentActiveNode);

    if (currentActiveNode === startTrapNode || comparisonResult & DOCUMENT_POSITION_BROAD_PRECEDING) {
      var tabbable = lodash_findlast_default()(bodyNode.querySelectorAll(selectorTabbable), function (elem) {
        return Boolean(elem.offsetParent);
      });

      if (tabbable) {
        tabbable.focus();
      } else if (bodyNode !== oldActiveNode) {
        bodyNode.focus();
      }
    } else if (currentActiveNode === endTrapNode || comparisonResult & DOCUMENT_POSITION_BROAD_FOLLOWING) {
      var _tabbable = Array.prototype.find.call(bodyNode.querySelectorAll(selectorTabbable), function (elem) {
        return Boolean(elem.offsetParent);
      });

      if (_tabbable) {
        _tabbable.focus();
      } else if (bodyNode !== oldActiveNode) {
        bodyNode.focus();
      }
    }
  }
}


/* harmony default export */ const internal_wrapFocus = (wrapFocus);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Modal/next/Modal.js




var _Modal$propTypes;

var Modal_excluded = ["children", "className", "modalHeading", "modalLabel", "modalAriaLabel", "passiveModal", "hasForm", "secondaryButtonText", "primaryButtonText", "open", "onRequestClose", "onRequestSubmit", "onSecondarySubmit", "iconDescription", "primaryButtonDisabled", "danger", "alert", "secondaryButtons", "selectorPrimaryFocus", "selectorsFloatingMenus", "shouldSubmitOnEnter", "size", "hasScrollingContent", "closeButtonLabel", "preventCloseOnClickOutside"];

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












var getInstanceId = setupGetInstanceId();
var Modal = /*#__PURE__*/react.forwardRef(function Modal(_ref, ref) {
  var _classNames, _classNames3;

  var children = _ref.children,
      className = _ref.className,
      modalHeading = _ref.modalHeading,
      modalLabel = _ref.modalLabel,
      modalAriaLabel = _ref.modalAriaLabel,
      passiveModal = _ref.passiveModal,
      hasForm = _ref.hasForm,
      secondaryButtonText = _ref.secondaryButtonText,
      primaryButtonText = _ref.primaryButtonText,
      open = _ref.open,
      onRequestClose = _ref.onRequestClose,
      onRequestSubmit = _ref.onRequestSubmit,
      onSecondarySubmit = _ref.onSecondarySubmit,
      iconDescription = _ref.iconDescription,
      primaryButtonDisabled = _ref.primaryButtonDisabled,
      danger = _ref.danger,
      alert = _ref.alert,
      secondaryButtons = _ref.secondaryButtons,
      selectorPrimaryFocus = _ref.selectorPrimaryFocus,
      selectorsFloatingMenus = _ref.selectorsFloatingMenus,
      shouldSubmitOnEnter = _ref.shouldSubmitOnEnter,
      size = _ref.size,
      hasScrollingContent = _ref.hasScrollingContent,
      closeButtonLabel = _ref.closeButtonLabel,
      preventCloseOnClickOutside = _ref.preventCloseOnClickOutside,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref, Modal_excluded);

  var prefix = (0,usePrefix/* usePrefix */.A)();
  var button = (0,react.useRef)();
  var secondaryButton = (0,react.useRef)();
  var innerModal = (0,react.useRef)();
  var startTrap = (0,react.useRef)();
  var endTrap = (0,react.useRef)();
  var modalInstanceId = "modal-".concat(getInstanceId());
  var modalLabelId = "".concat(prefix, "--modal-header__label--").concat(modalInstanceId);
  var modalHeadingId = "".concat(prefix, "--modal-header__heading--").concat(modalInstanceId);
  var modalBodyId = "".concat(prefix, "--modal-body--").concat(modalInstanceId);
  var modalCloseButtonClass = "".concat(prefix, "--modal-close");

  function isCloseButton(element) {
    return !onSecondarySubmit && element === secondaryButton.current || element.classList.contains(modalCloseButtonClass);
  }

  function handleKeyDown(evt) {
    if (open) {
      if (evt.which === 27) {
        onRequestClose(evt);
      }

      if (evt.which === 13 && shouldSubmitOnEnter && !isCloseButton(evt.target)) {
        onRequestSubmit(evt);
      }
    }
  }

  function handleMousedown(evt) {
    if (innerModal.current && !innerModal.current.contains(evt.target) && !elementOrParentIsFloatingMenu(evt.target, selectorsFloatingMenus) && !preventCloseOnClickOutside) {
      onRequestClose(evt);
    }
  }

  function handleBlur(_ref2) {
    var oldActiveNode = _ref2.target,
        currentActiveNode = _ref2.relatedTarget;

    if (open && currentActiveNode && oldActiveNode) {
      var bodyNode = innerModal.current;
      var startTrapNode = startTrap.current;
      var endTrapNode = endTrap.current;
      internal_wrapFocus({
        bodyNode: bodyNode,
        startTrapNode: startTrapNode,
        endTrapNode: endTrapNode,
        currentActiveNode: currentActiveNode,
        oldActiveNode: oldActiveNode,
        selectorsFloatingMenus: selectorsFloatingMenus
      });
    }
  }

  var onSecondaryButtonClick = onSecondarySubmit ? onSecondarySubmit : onRequestClose;
  var modalClasses = classnames_default()("".concat(prefix, "--modal"), (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--modal-tall"), !passiveModal), (0,defineProperty/* default */.Z)(_classNames, 'is-visible', open), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefix, "--modal--danger"), danger), (0,defineProperty/* default */.Z)(_classNames, className, className), _classNames));
  var containerClasses = classnames_default()("".concat(prefix, "--modal-container"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--modal-container--").concat(size), size));
  var contentClasses = classnames_default()("".concat(prefix, "--modal-content"), (_classNames3 = {}, (0,defineProperty/* default */.Z)(_classNames3, "".concat(prefix, "--modal-content--with-form"), hasForm), (0,defineProperty/* default */.Z)(_classNames3, "".concat(prefix, "--modal-scroll-content"), hasScrollingContent), _classNames3));
  var footerClasses = classnames_default()("".concat(prefix, "--modal-footer"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--modal-footer--three-button"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2));
  var modalButton = /*#__PURE__*/react.createElement("button", {
    className: modalCloseButtonClass,
    type: "button",
    onClick: onRequestClose,
    title: ariaLabel ? ariaLabel : iconDescription,
    "aria-label": closeButtonLabel ? closeButtonLabel : 'close',
    ref: button
  }, /*#__PURE__*/react.createElement(Close20, {
    "aria-hidden": "true",
    tabIndex: "-1",
    className: "".concat(modalCloseButtonClass, "__icon")
  }));
  var ariaLabel = modalLabel || ['aria-label'] || 0 || 0;
  var getAriaLabelledBy = modalLabel ? modalLabelId : modalHeadingId;
  var hasScrollingContentProps = hasScrollingContent ? {
    tabIndex: 0,
    role: 'region',
    'aria-label': ariaLabel,
    'aria-labelledby': getAriaLabelledBy
  } : {};
  var alertDialogProps = {};

  if (alert && passiveModal) {
    alertDialogProps.role = 'alert';
  }

  if (alert && !passiveModal) {
    alertDialogProps.role = 'alertdialog';
    alertDialogProps['aria-describedby'] = modalBodyId;
  }

  (0,react.useEffect)(function () {
    return function () {
      toggleClass(document.body, "".concat(prefix, "--body--with-modal-open"), false);
    };
  }, [prefix]);
  (0,react.useEffect)(function () {
    toggleClass(document.body, "".concat(prefix, "--body--with-modal-open"), open);
  }, [open, prefix]);
  (0,react.useEffect)(function () {
    var initialFocus = function initialFocus(focusContainerElement) {
      var containerElement = focusContainerElement || innerModal.current;
      var primaryFocusElement = containerElement ? containerElement.querySelector(selectorPrimaryFocus) : null;

      if (primaryFocusElement) {
        return primaryFocusElement;
      }

      return button && button.current;
    };

    var focusButton = function focusButton(focusContainerElement) {
      var target = initialFocus(focusContainerElement);

      if (target) {
        target.focus();
      }
    };

    if (open) {
      focusButton(innerModal.current);
    }
  }, [open, selectorPrimaryFocus]);
  var modalBody = /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
    ref: innerModal,
    role: "dialog"
  }, alertDialogProps, {
    className: containerClasses,
    "aria-label": ariaLabel,
    "aria-modal": "true",
    tabIndex: "-1"
  }), /*#__PURE__*/react.createElement("div", {
    className: "".concat(prefix, "--modal-header")
  }, passiveModal && modalButton, modalLabel && /*#__PURE__*/react.createElement("h2", {
    id: modalLabelId,
    className: "".concat(prefix, "--modal-header__label")
  }, modalLabel), /*#__PURE__*/react.createElement("h3", {
    id: modalHeadingId,
    className: "".concat(prefix, "--modal-header__heading")
  }, modalHeading), !passiveModal && modalButton), /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
    id: modalBodyId,
    className: contentClasses
  }, hasScrollingContentProps, {
    "aria-labelledby": getAriaLabelledBy
  }), children), hasScrollingContent && /*#__PURE__*/react.createElement("div", {
    className: "".concat(prefix, "--modal-content--overflow-indicator")
  }), !passiveModal && /*#__PURE__*/react.createElement(ButtonSet_ButtonSet, {
    className: footerClasses
  }, Array.isArray(secondaryButtons) && secondaryButtons.length <= 2 ? secondaryButtons.map(function (_ref3, i) {
    var buttonText = _ref3.buttonText,
        onButtonClick = _ref3.onClick;
    return /*#__PURE__*/react.createElement(Button_Button, {
      key: "".concat(buttonText, "-").concat(i),
      kind: "secondary",
      onClick: onButtonClick
    }, buttonText);
  }) : secondaryButtonText && /*#__PURE__*/react.createElement(Button_Button, {
    kind: "secondary",
    onClick: onSecondaryButtonClick,
    ref: secondaryButton
  }, secondaryButtonText), /*#__PURE__*/react.createElement(Button_Button, {
    kind: danger ? 'danger' : 'primary',
    disabled: primaryButtonDisabled,
    onClick: onRequestSubmit,
    ref: button
  }, primaryButtonText)));
  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({}, rest, {
    onKeyDown: handleKeyDown,
    onMouseDown: handleMousedown,
    onBlur: handleBlur,
    className: modalClasses,
    role: "presentation",
    ref: ref
  }), /*#__PURE__*/react.createElement("span", {
    ref: startTrap,
    tabIndex: "0",
    role: "link",
    className: "".concat(prefix, "--visually-hidden")
  }, "Focus sentinel"), modalBody, /*#__PURE__*/react.createElement("span", {
    ref: endTrap,
    tabIndex: "0",
    role: "link",
    className: "".concat(prefix, "--visually-hidden")
  }, "Focus sentinel"));
});
Modal.propTypes = (_Modal$propTypes = {
  /**
   * Specify whether the Modal is displaying an alert, error or warning
   * Should go hand in hand with the danger prop.
   */
  alert: (prop_types_default()).bool
}, (0,defineProperty/* default */.Z)(_Modal$propTypes, 'aria-label', requiredIfGivenPropIsTruthy('hasScrollingContent', (prop_types_default()).string)), (0,defineProperty/* default */.Z)(_Modal$propTypes, "children", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_Modal$propTypes, "className", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_Modal$propTypes, "closeButtonLabel", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_Modal$propTypes, "danger", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "focusTrap", (0,deprecate/* default */.Z)((prop_types_default()).bool, "\nThe prop `focusTrap` for Modal has been deprecated, as the feature of `focusTrap` runs by default.")), (0,defineProperty/* default */.Z)(_Modal$propTypes, "hasForm", (0,deprecate/* default */.Z)((prop_types_default()).bool, "\nThe prop `hasForm` for Modal has been deprecated, as the feature of `hasForm` runs by default.")), (0,defineProperty/* default */.Z)(_Modal$propTypes, "hasScrollingContent", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "iconDescription", (0,deprecate/* default */.Z)((prop_types_default()).string, 'The iconDescription prop is no longer needed and can be safely removed. This prop will be removed in the next major release of Carbon.')), (0,defineProperty/* default */.Z)(_Modal$propTypes, "id", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_Modal$propTypes, "modalAriaLabel", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_Modal$propTypes, "modalHeading", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_Modal$propTypes, "modalLabel", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_Modal$propTypes, "onKeyDown", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_Modal$propTypes, "onRequestClose", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_Modal$propTypes, "onRequestSubmit", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_Modal$propTypes, "onSecondarySubmit", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_Modal$propTypes, "open", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "passiveModal", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "preventCloseOnClickOutside", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "primaryButtonDisabled", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "primaryButtonText", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_Modal$propTypes, "secondaryButtonText", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_Modal$propTypes, "secondaryButtons", function secondaryButtons(props, propName, componentName) {
  if (props.secondaryButtons) {
    if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {
      return new Error("".concat(propName, " needs to be an array of two button config objects"));
    }

    var shape = {
      buttonText: (prop_types_default()).node,
      onClick: (prop_types_default()).func
    };
    props[propName].forEach(function (secondaryButton) {
      prop_types_default().checkPropTypes(shape, secondaryButton, propName, componentName);
    });
  }

  return null;
}), (0,defineProperty/* default */.Z)(_Modal$propTypes, "selectorPrimaryFocus", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_Modal$propTypes, "selectorsFloatingMenus", prop_types_default().arrayOf((prop_types_default()).string)), (0,defineProperty/* default */.Z)(_Modal$propTypes, "shouldSubmitOnEnter", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_Modal$propTypes, "size", prop_types_default().oneOf(['xs', 'sm', 'md', 'lg'])), _Modal$propTypes);
Modal.defaultProps = {
  onRequestClose: function onRequestClose() {},
  onRequestSubmit: function onRequestSubmit() {},
  primaryButtonDisabled: false,
  onKeyDown: function onKeyDown() {},
  passiveModal: false,
  modalHeading: '',
  modalLabel: '',
  preventCloseOnClickOutside: false,
  selectorPrimaryFocus: '[data-modal-primary-focus]',
  hasScrollingContent: false
};
/* harmony default export */ const next_Modal = (Modal);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(7055);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(220);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(8127);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__(927);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js + 1 modules
var possibleConstructorReturn = __webpack_require__(780);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(5806);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Modal/Modal.js










var _defineProperty2;

var Modal_Modal_excluded = ["modalHeading", "modalLabel", "modalAriaLabel", "passiveModal", "hasForm", "secondaryButtonText", "primaryButtonText", "open", "onRequestClose", "onRequestSubmit", "onSecondarySubmit", "iconDescription", "primaryButtonDisabled", "danger", "alert", "secondaryButtons", "selectorPrimaryFocus", "selectorsFloatingMenus", "shouldSubmitOnEnter", "size", "hasScrollingContent", "closeButtonLabel", "preventCloseOnClickOutside"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */












var Modal_prefix = settings/* default.prefix */.Z.prefix;
var Modal_getInstanceId = setupGetInstanceId();

var Modal_Modal = /*#__PURE__*/function (_Component) {
  (0,inherits/* default */.Z)(Modal, _Component);

  var _super = _createSuper(Modal);

  function Modal() {
    var _this;

    (0,classCallCheck/* default */.Z)(this, Modal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "button", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "secondaryButton", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "outerModal", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "innerModal", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "startTrap", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "endTrap", /*#__PURE__*/react.createRef());

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "modalInstanceId", "modal-".concat(Modal_getInstanceId()));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "modalLabelId", "".concat(Modal_prefix, "--modal-header__label--").concat(_this.modalInstanceId));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "modalHeadingId", "".concat(Modal_prefix, "--modal-header__heading--").concat(_this.modalInstanceId));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "modalBodyId", "".concat(Modal_prefix, "--modal-body--").concat(_this.modalInstanceId));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "modalCloseButtonClass", "".concat(Modal_prefix, "--modal-close"));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "isCloseButton", function (element) {
      return !_this.props.onSecondarySubmit && element === _this.secondaryButton.current || element.classList.contains(_this.modalCloseButtonClass);
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleKeyDown", function (evt) {
      if (_this.props.open) {
        if (evt.which === 27) {
          _this.props.onRequestClose(evt);
        }

        if (evt.which === 13 && _this.props.shouldSubmitOnEnter && !_this.isCloseButton(evt.target)) {
          _this.props.onRequestSubmit(evt);
        }
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleMousedown", function (evt) {
      if (_this.innerModal.current && !_this.innerModal.current.contains(evt.target) && !elementOrParentIsFloatingMenu(evt.target, _this.props.selectorsFloatingMenus) && !_this.props.preventCloseOnClickOutside) {
        _this.props.onRequestClose(evt);
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleBlur", function (_ref) {
      var oldActiveNode = _ref.target,
          currentActiveNode = _ref.relatedTarget;
      var _this$props = _this.props,
          open = _this$props.open,
          selectorsFloatingMenus = _this$props.selectorsFloatingMenus;

      if (open && currentActiveNode && oldActiveNode) {
        var bodyNode = _this.innerModal.current;
        var startTrapNode = _this.startTrap.current;
        var endTrapNode = _this.endTrap.current;
        internal_wrapFocus({
          bodyNode: bodyNode,
          startTrapNode: startTrapNode,
          endTrapNode: endTrapNode,
          currentActiveNode: currentActiveNode,
          oldActiveNode: oldActiveNode,
          selectorsFloatingMenus: selectorsFloatingMenus
        });
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "initialFocus", function (focusContainerElement) {
      var containerElement = focusContainerElement || _this.innerModal.current;
      var primaryFocusElement = containerElement ? containerElement.querySelector(_this.props.selectorPrimaryFocus) : null;

      if (primaryFocusElement) {
        return primaryFocusElement;
      }

      return _this.button && _this.button.current;
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "focusButton", function (focusContainerElement) {
      var target = _this.initialFocus(focusContainerElement);

      if (target) {
        target.focus();
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleTransitionEnd", function (evt) {
      if (evt.target === evt.currentTarget && // Not to handle `onTransitionEnd` on child DOM nodes
      _this.outerModal.current && _this.outerModal.current.offsetWidth && _this.outerModal.current.offsetHeight && _this.beingOpen) {
        _this.focusButton(evt.currentTarget);

        _this.beingOpen = false;
      }
    });

    return _this;
  }

  (0,createClass/* default */.Z)(Modal, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (!prevProps.open && this.props.open) {
        this.beingOpen = true;
      } else if (prevProps.open && !this.props.open) {
        this.beingOpen = false;
      }

      toggleClass(document.body, "".concat(Modal_prefix, "--body--with-modal-open"), this.props.open);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      toggleClass(document.body, "".concat(Modal_prefix, "--body--with-modal-open"), false);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      toggleClass(document.body, "".concat(Modal_prefix, "--body--with-modal-open"), this.props.open);

      if (!this.props.open) {
        return;
      }

      this.focusButton(this.innerModal.current);
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames, _classNames3;

      var _this$props2 = this.props,
          modalHeading = _this$props2.modalHeading,
          modalLabel = _this$props2.modalLabel,
          modalAriaLabel = _this$props2.modalAriaLabel,
          passiveModal = _this$props2.passiveModal,
          hasForm = _this$props2.hasForm,
          secondaryButtonText = _this$props2.secondaryButtonText,
          primaryButtonText = _this$props2.primaryButtonText,
          open = _this$props2.open,
          onRequestClose = _this$props2.onRequestClose,
          onRequestSubmit = _this$props2.onRequestSubmit,
          onSecondarySubmit = _this$props2.onSecondarySubmit,
          iconDescription = _this$props2.iconDescription,
          primaryButtonDisabled = _this$props2.primaryButtonDisabled,
          danger = _this$props2.danger,
          alert = _this$props2.alert,
          secondaryButtons = _this$props2.secondaryButtons,
          selectorPrimaryFocus = _this$props2.selectorPrimaryFocus,
          selectorsFloatingMenus = _this$props2.selectorsFloatingMenus,
          shouldSubmitOnEnter = _this$props2.shouldSubmitOnEnter,
          size = _this$props2.size,
          hasScrollingContent = _this$props2.hasScrollingContent,
          closeButtonLabel = _this$props2.closeButtonLabel,
          preventCloseOnClickOutside = _this$props2.preventCloseOnClickOutside,
          other = (0,objectWithoutProperties/* default */.Z)(_this$props2, Modal_Modal_excluded);

      var onSecondaryButtonClick = onSecondarySubmit ? onSecondarySubmit : onRequestClose;
      var modalClasses = classnames_default()((_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(Modal_prefix, "--modal"), true), (0,defineProperty/* default */.Z)(_classNames, "".concat(Modal_prefix, "--modal-tall"), !passiveModal), (0,defineProperty/* default */.Z)(_classNames, 'is-visible', open), (0,defineProperty/* default */.Z)(_classNames, "".concat(Modal_prefix, "--modal--danger"), this.props.danger), (0,defineProperty/* default */.Z)(_classNames, this.props.className, this.props.className), _classNames));
      var containerClasses = classnames_default()("".concat(Modal_prefix, "--modal-container"), (0,defineProperty/* default */.Z)({}, "".concat(Modal_prefix, "--modal-container--").concat(size), size));
      var contentClasses = classnames_default()("".concat(Modal_prefix, "--modal-content"), (_classNames3 = {}, (0,defineProperty/* default */.Z)(_classNames3, "".concat(Modal_prefix, "--modal-content--with-form"), hasForm), (0,defineProperty/* default */.Z)(_classNames3, "".concat(Modal_prefix, "--modal-scroll-content"), hasScrollingContent), _classNames3));
      var footerClasses = classnames_default()("".concat(Modal_prefix, "--modal-footer"), (0,defineProperty/* default */.Z)({}, "".concat(Modal_prefix, "--modal-footer--three-button"), Array.isArray(secondaryButtons) && secondaryButtons.length === 2));
      var modalButton = /*#__PURE__*/react.createElement("button", {
        className: this.modalCloseButtonClass,
        type: "button",
        onClick: onRequestClose,
        title: ariaLabel ? ariaLabel : iconDescription,
        "aria-label": closeButtonLabel ? closeButtonLabel : 'close',
        ref: this.button
      }, /*#__PURE__*/react.createElement(Close20, {
        "aria-hidden": "true",
        tabIndex: "-1",
        className: "".concat(this.modalCloseButtonClass, "__icon")
      }));
      var ariaLabel = modalLabel || this.props['aria-label'] || modalAriaLabel || modalHeading;
      var getAriaLabelledBy = modalLabel ? this.modalLabelId : this.modalHeadingId;
      var hasScrollingContentProps = hasScrollingContent ? {
        tabIndex: 0,
        role: 'region',
        'aria-label': ariaLabel,
        'aria-labelledby': getAriaLabelledBy
      } : {};
      var alertDialogProps = {};

      if (alert && passiveModal) {
        alertDialogProps.role = 'alert';
      }

      if (alert && !passiveModal) {
        alertDialogProps.role = 'alertdialog';
        alertDialogProps['aria-describedby'] = this.modalBodyId;
      }

      var modalBody = /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
        ref: this.innerModal,
        role: "dialog"
      }, alertDialogProps, {
        className: containerClasses,
        "aria-label": ariaLabel,
        "aria-modal": "true",
        tabIndex: "-1"
      }), /*#__PURE__*/react.createElement("div", {
        className: "".concat(Modal_prefix, "--modal-header")
      }, passiveModal && modalButton, modalLabel && /*#__PURE__*/react.createElement("h2", {
        id: this.modalLabelId,
        className: "".concat(Modal_prefix, "--modal-header__label")
      }, modalLabel), /*#__PURE__*/react.createElement("h3", {
        id: this.modalHeadingId,
        className: "".concat(Modal_prefix, "--modal-header__heading")
      }, modalHeading), !passiveModal && modalButton), /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
        id: this.modalBodyId,
        className: contentClasses
      }, hasScrollingContentProps, {
        "aria-labelledby": getAriaLabelledBy
      }), this.props.children), hasScrollingContent && /*#__PURE__*/react.createElement("div", {
        className: "".concat(Modal_prefix, "--modal-content--overflow-indicator")
      }), !passiveModal && /*#__PURE__*/react.createElement(ButtonSet_ButtonSet, {
        className: footerClasses
      }, Array.isArray(secondaryButtons) && secondaryButtons.length <= 2 ? secondaryButtons.map(function (_ref2, i) {
        var buttonText = _ref2.buttonText,
            onButtonClick = _ref2.onClick;
        return /*#__PURE__*/react.createElement(Button_Button, {
          key: "".concat(buttonText, "-").concat(i),
          kind: "secondary",
          onClick: onButtonClick
        }, buttonText);
      }) : secondaryButtonText && /*#__PURE__*/react.createElement(Button_Button, {
        kind: "secondary",
        onClick: onSecondaryButtonClick,
        ref: this.secondaryButton
      }, secondaryButtonText), /*#__PURE__*/react.createElement(Button_Button, {
        kind: danger ? 'danger' : 'primary',
        disabled: primaryButtonDisabled,
        onClick: onRequestSubmit,
        ref: this.button
      }, primaryButtonText)));
      return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({}, other, {
        onKeyDown: this.handleKeyDown,
        onMouseDown: this.handleMousedown,
        onBlur: this.handleBlur,
        className: modalClasses,
        role: "presentation",
        onTransitionEnd: this.props.open ? this.handleTransitionEnd : undefined,
        ref: this.outerModal
      }), /*#__PURE__*/react.createElement("span", {
        ref: this.startTrap,
        tabIndex: "0",
        role: "link",
        className: "".concat(Modal_prefix, "--visually-hidden")
      }, "Focus sentinel"), modalBody, /*#__PURE__*/react.createElement("span", {
        ref: this.endTrap,
        tabIndex: "0",
        role: "link",
        className: "".concat(Modal_prefix, "--visually-hidden")
      }, "Focus sentinel"));
    }
  }]);

  return Modal;
}(react.Component);

(0,defineProperty/* default */.Z)(Modal_Modal, "propTypes", (_defineProperty2 = {
  /**
   * Specify whether the Modal is displaying an alert, error or warning
   * Should go hand in hand with the danger prop.
   */
  alert: (prop_types_default()).bool
}, (0,defineProperty/* default */.Z)(_defineProperty2, 'aria-label', requiredIfGivenPropIsTruthy('hasScrollingContent', (prop_types_default()).string)), (0,defineProperty/* default */.Z)(_defineProperty2, "children", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_defineProperty2, "className", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_defineProperty2, "closeButtonLabel", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_defineProperty2, "danger", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "focusTrap", (0,deprecate/* default */.Z)((prop_types_default()).bool, "\nThe prop `focusTrap` for Modal has been deprecated, as the feature of `focusTrap` runs by default.")), (0,defineProperty/* default */.Z)(_defineProperty2, "hasForm", (0,deprecate/* default */.Z)((prop_types_default()).bool, "\nThe prop `hasForm` for Modal has been deprecated, as the feature of `hasForm` runs by default.")), (0,defineProperty/* default */.Z)(_defineProperty2, "hasScrollingContent", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "iconDescription", (0,deprecate/* default */.Z)((prop_types_default()).string, 'The iconDescription prop is no longer needed and can be safely removed. This prop will be removed in the next major release of Carbon.')), (0,defineProperty/* default */.Z)(_defineProperty2, "id", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_defineProperty2, "modalAriaLabel", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_defineProperty2, "modalHeading", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_defineProperty2, "modalLabel", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_defineProperty2, "onKeyDown", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_defineProperty2, "onRequestClose", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_defineProperty2, "onRequestSubmit", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_defineProperty2, "onSecondarySubmit", (prop_types_default()).func), (0,defineProperty/* default */.Z)(_defineProperty2, "open", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "passiveModal", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "preventCloseOnClickOutside", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "primaryButtonDisabled", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "primaryButtonText", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_defineProperty2, "secondaryButtonText", (prop_types_default()).node), (0,defineProperty/* default */.Z)(_defineProperty2, "secondaryButtons", function secondaryButtons(props, propName, componentName) {
  if (props.secondaryButtons) {
    if (!Array.isArray(props.secondaryButtons) || props.secondaryButtons.length !== 2) {
      return new Error("".concat(propName, " needs to be an array of two button config objects"));
    }

    var shape = {
      buttonText: (prop_types_default()).node,
      onClick: (prop_types_default()).func
    };
    props[propName].forEach(function (secondaryButton) {
      prop_types_default().checkPropTypes(shape, secondaryButton, propName, componentName);
    });
  }

  return null;
}), (0,defineProperty/* default */.Z)(_defineProperty2, "selectorPrimaryFocus", (prop_types_default()).string), (0,defineProperty/* default */.Z)(_defineProperty2, "selectorsFloatingMenus", prop_types_default().arrayOf((prop_types_default()).string)), (0,defineProperty/* default */.Z)(_defineProperty2, "shouldSubmitOnEnter", (prop_types_default()).bool), (0,defineProperty/* default */.Z)(_defineProperty2, "size", prop_types_default().oneOf(['xs', 'sm', 'md', 'lg'])), _defineProperty2));

(0,defineProperty/* default */.Z)(Modal_Modal, "defaultProps", {
  onRequestClose: function onRequestClose() {},
  onRequestSubmit: function onRequestSubmit() {},
  primaryButtonDisabled: false,
  onKeyDown: function onKeyDown() {},
  passiveModal: false,
  modalHeading: '',
  modalLabel: '',
  preventCloseOnClickOutside: false,
  selectorPrimaryFocus: '[data-modal-primary-focus]',
  hasScrollingContent: false
});


;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Modal/index.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */



var components_Modal_Modal = es/* enabled */.am('enable-v11-release') ? next_Modal : Modal_Modal;
/* harmony default export */ const components_Modal = (components_Modal_Modal);

/***/ }),

/***/ 9095:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "n9": () => (/* binding */ components_Tile_Tile)
});

// UNUSED EXPORTS: ClickableTile, ExpandableTile, SelectableTile, TileAboveTheFoldContent, TileBelowTheFoldContent

// EXTERNAL MODULE: ../../node_modules/@carbon/feature-flags/es/index.js
var es = __webpack_require__(145);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules
var slicedToArray = __webpack_require__(1905);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(5882);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4245);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(8775);
// EXTERNAL MODULE: ../../node_modules/react/index.js
var react = __webpack_require__(2784);
// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(3980);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ../../node_modules/classnames/index.js
var classnames = __webpack_require__(2779);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ../../node_modules/@carbon/icons-react/es/Icon-9ecdf98c.js + 1 modules
var Icon_9ecdf98c = __webpack_require__(5495);
;// CONCATENATED MODULE: ../../node_modules/@carbon/icons-react/es/__generated__/bucket-4.js
/**
 * Copyright IBM Corp. 2019, 2020
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * Code generated by @carbon/icon-build-helpers. DO NOT EDIT.
 */





var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12, _path13, _path14, _path15, _path16, _path17, _path18, _path19, _path20, _path21, _path22, _path23, _path24, _path25, _path26, _path27, _path28, _path29, _path30, _path31, _path32, _path33, _path34, _path35, _path36, _path37, _path38, _path39, _path40, _path41, _path42, _path43, _path44, _path45, _path46, _path47, _path48, _path49, _path50, _path51, _path52, _path53, _path54, _path55, _path56, _path57, _path58, _path59, _path60, _path61, _path62, _path63, _path64, _path65, _path66, _path67, _path68, _path69, _path70, _path71, _path72, _path73, _path74, _path75, _path76, _path77, _path78, _path79, _path80, _path81, _path82, _path83, _path84, _path85, _path86, _path87, _path88, _path89, _path90, _path91, _path92, _path93, _path94, _path95, _path96, _path97, _path98, _path99, _path100, _path101, _path102, _path103, _path104, _path105, _path106, _path107, _path108, _path109, _path110, _path111, _path112, _path113, _path114, _path115, _path116, _path117, _path118, _path119, _path120, _path121, _circle, _circle2, _circle3, _circle4, _circle5, _path122, _circle6, _circle7, _circle8, _circle9, _circle10, _path123, _circle11, _circle12, _circle13, _circle14, _circle15, _path124, _circle16, _circle17, _circle18, _circle19, _circle20, _path125, _path126, _path127, _path128, _path129, _path130, _path131, _path132, _path133, _path134, _path135, _path136, _path137, _circle21, _circle22, _circle23, _path138, _circle24, _circle25, _path139, _path140, _circle26, _circle27, _circle28, _path141, _circle29, _circle30, _path142, _path143, _circle31, _circle32, _circle33, _path144, _circle34, _circle35, _path145, _path146, _circle36, _circle37, _circle38, _path147, _circle39, _circle40, _path148, _path149, _path150, _path151, _path152, _path153, _path154, _path155, _path156, _path157, _path158, _path159, _path160, _path161, _path162, _path163, _path164, _path165, _path166, _path167, _path168, _path169, _path170, _path171, _path172, _path173, _path174, _path175, _path176, _path177, _path178, _path179, _path180, _path181, _path182, _path183, _path184, _path185, _circle41, _circle42, _circle43, _circle44, _circle45, _path186, _circle46, _circle47, _circle48, _circle49, _circle50, _path187, _circle51, _circle52, _circle53, _circle54, _circle55, _path188, _circle56, _circle57, _circle58, _circle59, _circle60, _path189, _path190, _path191, _path192, _path193, _path194, _path195, _path196, _path197, _path198, _path199, _path200, _path201, _path202, _path203, _path204, _circle61, _circle62, _circle63, _circle64, _circle65, _circle66, _circle67, _circle68, _circle69, _circle70, _circle71, _circle72, _circle73, _circle74, _circle75, _circle76, _circle77, _circle78, _circle79, _circle80, _circle81, _circle82, _circle83, _circle84, _circle85, _circle86, _circle87, _circle88, _circle89, _circle90, _circle91, _circle92, _circle93, _circle94, _circle95, _circle96, _circle97, _circle98, _circle99, _circle100, _circle101, _circle102, _circle103, _circle104, _circle105, _circle106, _circle107, _circle108, _circle109, _circle110, _circle111, _circle112, _circle113, _circle114, _circle115, _circle116, _path205, _path206, _path207, _path208, _path209, _path210, _path211, _path212, _path213, _path214, _path215, _path216, _path217, _path218, _path219, _path220, _path221, _path222, _path223, _path224, _path225, _path226, _path227, _path228, _path229, _path230, _path231, _path232, _path233, _path234, _path235, _path236, _path237, _path238, _path239, _path240, _path241, _path242, _path243, _path244, _path245, _path246, _path247, _path248, _path249, _path250, _path251, _path252, _path253, _path254, _path255, _path256, _path257, _path258, _path259, _path260, _path261, _path262, _path263, _path264, _path265, _path266, _path267, _path268, _path269, _path270, _path271, _path272, _path273, _path274, _path275, _path276, _path277, _path278, _path279, _path280, _path281, _path282, _path283, _path284, _path285, _path286, _path287, _path288, _path289, _path290, _path291, _path292, _path293, _path294, _path295, _path296, _path297, _path298, _path299, _path300, _path301, _path302, _path303, _path304, _path305, _path306, _path307, _path308, _path309, _path310, _path311, _path312, _path313, _path314, _path315, _path316, _path317, _path318, _path319, _path320, _path321, _path322, _path323, _path324, _path325, _path326, _path327, _path328, _path329, _path330, _path331, _path332, _path333, _path334, _path335, _path336, _path337, _path338, _path339, _path340, _path341, _path342, _path343, _path344, _path345, _path346, _path347, _path348, _path349, _path350, _path351, _path352, _path353, _path354, _path355, _path356, _path357, _path358, _path359, _path360, _path361, _path362, _path363, _path364, _path365, _path366, _path367, _path368, _path369, _path370, _path371, _path372, _path373, _path374, _path375, _path376, _path377, _path378, _path379, _path380, _path381, _path382, _path383, _path384, _path385, _path386, _path387, _path388, _path389, _path390, _path391, _path392, _path393, _path394, _path395, _path396, _path397, _path398, _path399, _path400, _path401, _path402, _path403, _path404, _path405;

var _excluded = (/* unused pure expression or super */ null && (["children"])),
    _excluded2 = (/* unused pure expression or super */ null && (["children"])),
    _excluded3 = (/* unused pure expression or super */ null && (["children"])),
    _excluded4 = (/* unused pure expression or super */ null && (["children"])),
    _excluded5 = (/* unused pure expression or super */ null && (["children"])),
    _excluded6 = (/* unused pure expression or super */ null && (["children"])),
    _excluded7 = (/* unused pure expression or super */ null && (["children"])),
    _excluded8 = (/* unused pure expression or super */ null && (["children"])),
    _excluded9 = (/* unused pure expression or super */ null && (["children"])),
    _excluded10 = (/* unused pure expression or super */ null && (["children"])),
    _excluded11 = (/* unused pure expression or super */ null && (["children"])),
    _excluded12 = (/* unused pure expression or super */ null && (["children"])),
    _excluded13 = (/* unused pure expression or super */ null && (["children"])),
    _excluded14 = (/* unused pure expression or super */ null && (["children"])),
    _excluded15 = (/* unused pure expression or super */ null && (["children"])),
    _excluded16 = (/* unused pure expression or super */ null && (["children"])),
    _excluded17 = (/* unused pure expression or super */ null && (["children"])),
    _excluded18 = (/* unused pure expression or super */ null && (["children"])),
    _excluded19 = (/* unused pure expression or super */ null && (["children"])),
    _excluded20 = (/* unused pure expression or super */ null && (["children"])),
    _excluded21 = (/* unused pure expression or super */ null && (["children"])),
    _excluded22 = (/* unused pure expression or super */ null && (["children"])),
    _excluded23 = (/* unused pure expression or super */ null && (["children"])),
    _excluded24 = (/* unused pure expression or super */ null && (["children"])),
    _excluded25 = (/* unused pure expression or super */ null && (["children"])),
    _excluded26 = (/* unused pure expression or super */ null && (["children"])),
    _excluded27 = (/* unused pure expression or super */ null && (["children"])),
    _excluded28 = (/* unused pure expression or super */ null && (["children"])),
    _excluded29 = (/* unused pure expression or super */ null && (["children"])),
    _excluded30 = (/* unused pure expression or super */ null && (["children"])),
    _excluded31 = (/* unused pure expression or super */ null && (["children"])),
    _excluded32 = (/* unused pure expression or super */ null && (["children"])),
    _excluded33 = (/* unused pure expression or super */ null && (["children"])),
    _excluded34 = (/* unused pure expression or super */ null && (["children"])),
    _excluded35 = (/* unused pure expression or super */ null && (["children"])),
    _excluded36 = (/* unused pure expression or super */ null && (["children"])),
    _excluded37 = (/* unused pure expression or super */ null && (["children"])),
    _excluded38 = (/* unused pure expression or super */ null && (["children"])),
    _excluded39 = (/* unused pure expression or super */ null && (["children"])),
    _excluded40 = (/* unused pure expression or super */ null && (["children"])),
    _excluded41 = (/* unused pure expression or super */ null && (["children"])),
    _excluded42 = (/* unused pure expression or super */ null && (["children"])),
    _excluded43 = (/* unused pure expression or super */ null && (["children"])),
    _excluded44 = (/* unused pure expression or super */ null && (["children"])),
    _excluded45 = (/* unused pure expression or super */ null && (["children"])),
    _excluded46 = (/* unused pure expression or super */ null && (["children"])),
    _excluded47 = (/* unused pure expression or super */ null && (["children"])),
    _excluded48 = (/* unused pure expression or super */ null && (["children"])),
    _excluded49 = (/* unused pure expression or super */ null && (["children"])),
    _excluded50 = (/* unused pure expression or super */ null && (["children"])),
    _excluded51 = (/* unused pure expression or super */ null && (["children"])),
    _excluded52 = (/* unused pure expression or super */ null && (["children"])),
    _excluded53 = (/* unused pure expression or super */ null && (["children"])),
    _excluded54 = (/* unused pure expression or super */ null && (["children"])),
    _excluded55 = (/* unused pure expression or super */ null && (["children"])),
    _excluded56 = (/* unused pure expression or super */ null && (["children"])),
    _excluded57 = (/* unused pure expression or super */ null && (["children"])),
    _excluded58 = (/* unused pure expression or super */ null && (["children"])),
    _excluded59 = (/* unused pure expression or super */ null && (["children"])),
    _excluded60 = (/* unused pure expression or super */ null && (["children"])),
    _excluded61 = (/* unused pure expression or super */ null && (["children"])),
    _excluded62 = (/* unused pure expression or super */ null && (["children"])),
    _excluded63 = (/* unused pure expression or super */ null && (["children"])),
    _excluded64 = (/* unused pure expression or super */ null && (["children"])),
    _excluded65 = (/* unused pure expression or super */ null && (["children"])),
    _excluded66 = (/* unused pure expression or super */ null && (["children"])),
    _excluded67 = (/* unused pure expression or super */ null && (["children"])),
    _excluded68 = (/* unused pure expression or super */ null && (["children"])),
    _excluded69 = (/* unused pure expression or super */ null && (["children"])),
    _excluded70 = (/* unused pure expression or super */ null && (["children"])),
    _excluded71 = (/* unused pure expression or super */ null && (["children"])),
    _excluded72 = (/* unused pure expression or super */ null && (["children"])),
    _excluded73 = (/* unused pure expression or super */ null && (["children"])),
    _excluded74 = (/* unused pure expression or super */ null && (["children"])),
    _excluded75 = (/* unused pure expression or super */ null && (["children"])),
    _excluded76 = (/* unused pure expression or super */ null && (["children"])),
    _excluded77 = (/* unused pure expression or super */ null && (["children"])),
    _excluded78 = (/* unused pure expression or super */ null && (["children"])),
    _excluded79 = (/* unused pure expression or super */ null && (["children"])),
    _excluded80 = (/* unused pure expression or super */ null && (["children"])),
    _excluded81 = (/* unused pure expression or super */ null && (["children"])),
    _excluded82 = (/* unused pure expression or super */ null && (["children"])),
    _excluded83 = (/* unused pure expression or super */ null && (["children"])),
    _excluded84 = (/* unused pure expression or super */ null && (["children"])),
    _excluded85 = (/* unused pure expression or super */ null && (["children"])),
    _excluded86 = (/* unused pure expression or super */ null && (["children"])),
    _excluded87 = (/* unused pure expression or super */ null && (["children"])),
    _excluded88 = (/* unused pure expression or super */ null && (["children"])),
    _excluded89 = (/* unused pure expression or super */ null && (["children"])),
    _excluded90 = (/* unused pure expression or super */ null && (["children"])),
    _excluded91 = (/* unused pure expression or super */ null && (["children"])),
    _excluded92 = (/* unused pure expression or super */ null && (["children"])),
    _excluded93 = (/* unused pure expression or super */ null && (["children"])),
    _excluded94 = (/* unused pure expression or super */ null && (["children"])),
    _excluded95 = (/* unused pure expression or super */ null && (["children"])),
    _excluded96 = (/* unused pure expression or super */ null && (["children"])),
    _excluded97 = (/* unused pure expression or super */ null && (["children"])),
    _excluded98 = (/* unused pure expression or super */ null && (["children"])),
    _excluded99 = (/* unused pure expression or super */ null && (["children"])),
    _excluded100 = (/* unused pure expression or super */ null && (["children"])),
    _excluded101 = (/* unused pure expression or super */ null && (["children"])),
    _excluded102 = (/* unused pure expression or super */ null && (["children"])),
    _excluded103 = (/* unused pure expression or super */ null && (["children"])),
    _excluded104 = (/* unused pure expression or super */ null && (["children"])),
    _excluded105 = (/* unused pure expression or super */ null && (["children"])),
    _excluded106 = (/* unused pure expression or super */ null && (["children"])),
    _excluded107 = (/* unused pure expression or super */ null && (["children"])),
    _excluded108 = (/* unused pure expression or super */ null && (["children"])),
    _excluded109 = (/* unused pure expression or super */ null && (["children"])),
    _excluded110 = (/* unused pure expression or super */ null && (["children"])),
    _excluded111 = (/* unused pure expression or super */ null && (["children"])),
    _excluded112 = (/* unused pure expression or super */ null && (["children"])),
    _excluded113 = (/* unused pure expression or super */ null && (["children"])),
    _excluded114 = (/* unused pure expression or super */ null && (["children"])),
    _excluded115 = (/* unused pure expression or super */ null && (["children"])),
    _excluded116 = (/* unused pure expression or super */ null && (["children"])),
    _excluded117 = (/* unused pure expression or super */ null && (["children"])),
    _excluded118 = (/* unused pure expression or super */ null && (["children"])),
    _excluded119 = (/* unused pure expression or super */ null && (["children"])),
    _excluded120 = (/* unused pure expression or super */ null && (["children"])),
    _excluded121 = (/* unused pure expression or super */ null && (["children"])),
    _excluded122 = (/* unused pure expression or super */ null && (["children"])),
    _excluded123 = (/* unused pure expression or super */ null && (["children"])),
    _excluded124 = (/* unused pure expression or super */ null && (["children"])),
    _excluded125 = (/* unused pure expression or super */ null && (["children"])),
    _excluded126 = (/* unused pure expression or super */ null && (["children"])),
    _excluded127 = (/* unused pure expression or super */ null && (["children"])),
    _excluded128 = (/* unused pure expression or super */ null && (["children"])),
    _excluded129 = (/* unused pure expression or super */ null && (["children"])),
    _excluded130 = (/* unused pure expression or super */ null && (["children"])),
    _excluded131 = (/* unused pure expression or super */ null && (["children"])),
    _excluded132 = (/* unused pure expression or super */ null && (["children"])),
    _excluded133 = (/* unused pure expression or super */ null && (["children"])),
    _excluded134 = (/* unused pure expression or super */ null && (["children"])),
    _excluded135 = (/* unused pure expression or super */ null && (["children"])),
    _excluded136 = (/* unused pure expression or super */ null && (["children"])),
    _excluded137 = (/* unused pure expression or super */ null && (["children"])),
    _excluded138 = (/* unused pure expression or super */ null && (["children"])),
    _excluded139 = (/* unused pure expression or super */ null && (["children"])),
    _excluded140 = (/* unused pure expression or super */ null && (["children"])),
    _excluded141 = (/* unused pure expression or super */ null && (["children"])),
    _excluded142 = (/* unused pure expression or super */ null && (["children"])),
    _excluded143 = (/* unused pure expression or super */ null && (["children"])),
    _excluded144 = (/* unused pure expression or super */ null && (["children"])),
    _excluded145 = (/* unused pure expression or super */ null && (["children"])),
    _excluded146 = (/* unused pure expression or super */ null && (["children"])),
    _excluded147 = (/* unused pure expression or super */ null && (["children"])),
    _excluded148 = (/* unused pure expression or super */ null && (["children"])),
    _excluded149 = (/* unused pure expression or super */ null && (["children"])),
    _excluded150 = (/* unused pure expression or super */ null && (["children"])),
    _excluded151 = (/* unused pure expression or super */ null && (["children"])),
    _excluded152 = (/* unused pure expression or super */ null && (["children"])),
    _excluded153 = (/* unused pure expression or super */ null && (["children"])),
    _excluded154 = (/* unused pure expression or super */ null && (["children"])),
    _excluded155 = (/* unused pure expression or super */ null && (["children"])),
    _excluded156 = (/* unused pure expression or super */ null && (["children"])),
    _excluded157 = (/* unused pure expression or super */ null && (["children"])),
    _excluded158 = (/* unused pure expression or super */ null && (["children"])),
    _excluded159 = (/* unused pure expression or super */ null && (["children"])),
    _excluded160 = (/* unused pure expression or super */ null && (["children"])),
    _excluded161 = (/* unused pure expression or super */ null && (["children"])),
    _excluded162 = (/* unused pure expression or super */ null && (["children"])),
    _excluded163 = (/* unused pure expression or super */ null && (["children"])),
    _excluded164 = (/* unused pure expression or super */ null && (["children"])),
    _excluded165 = (/* unused pure expression or super */ null && (["children"])),
    _excluded166 = (/* unused pure expression or super */ null && (["children"])),
    _excluded167 = (/* unused pure expression or super */ null && (["children"])),
    _excluded168 = (/* unused pure expression or super */ null && (["children"])),
    _excluded169 = (/* unused pure expression or super */ null && (["children"])),
    _excluded170 = (/* unused pure expression or super */ null && (["children"])),
    _excluded171 = (/* unused pure expression or super */ null && (["children"])),
    _excluded172 = (/* unused pure expression or super */ null && (["children"])),
    _excluded173 = (/* unused pure expression or super */ null && (["children"])),
    _excluded174 = ["children"],
    _excluded175 = (/* unused pure expression or super */ null && (["children"])),
    _excluded176 = (/* unused pure expression or super */ null && (["children"])),
    _excluded177 = (/* unused pure expression or super */ null && (["children"])),
    _excluded178 = (/* unused pure expression or super */ null && (["children"])),
    _excluded179 = (/* unused pure expression or super */ null && (["children"])),
    _excluded180 = (/* unused pure expression or super */ null && (["children"])),
    _excluded181 = (/* unused pure expression or super */ null && (["children"])),
    _excluded182 = ["children"],
    _excluded183 = (/* unused pure expression or super */ null && (["children"])),
    _excluded184 = (/* unused pure expression or super */ null && (["children"])),
    _excluded185 = (/* unused pure expression or super */ null && (["children"])),
    _excluded186 = (/* unused pure expression or super */ null && (["children"])),
    _excluded187 = (/* unused pure expression or super */ null && (["children"])),
    _excluded188 = (/* unused pure expression or super */ null && (["children"])),
    _excluded189 = (/* unused pure expression or super */ null && (["children"])),
    _excluded190 = (/* unused pure expression or super */ null && (["children"])),
    _excluded191 = (/* unused pure expression or super */ null && (["children"])),
    _excluded192 = (/* unused pure expression or super */ null && (["children"])),
    _excluded193 = (/* unused pure expression or super */ null && (["children"])),
    _excluded194 = (/* unused pure expression or super */ null && (["children"])),
    _excluded195 = (/* unused pure expression or super */ null && (["children"])),
    _excluded196 = (/* unused pure expression or super */ null && (["children"])),
    _excluded197 = (/* unused pure expression or super */ null && (["children"])),
    _excluded198 = (/* unused pure expression or super */ null && (["children"])),
    _excluded199 = (/* unused pure expression or super */ null && (["children"])),
    _excluded200 = (/* unused pure expression or super */ null && (["children"])),
    _excluded201 = (/* unused pure expression or super */ null && (["children"])),
    _excluded202 = (/* unused pure expression or super */ null && (["children"])),
    _excluded203 = (/* unused pure expression or super */ null && (["children"])),
    _excluded204 = (/* unused pure expression or super */ null && (["children"])),
    _excluded205 = (/* unused pure expression or super */ null && (["children"])),
    _excluded206 = (/* unused pure expression or super */ null && (["children"])),
    _excluded207 = (/* unused pure expression or super */ null && (["children"])),
    _excluded208 = (/* unused pure expression or super */ null && (["children"])),
    _excluded209 = (/* unused pure expression or super */ null && (["children"])),
    _excluded210 = (/* unused pure expression or super */ null && (["children"])),
    _excluded211 = (/* unused pure expression or super */ null && (["children"])),
    _excluded212 = (/* unused pure expression or super */ null && (["children"])),
    _excluded213 = (/* unused pure expression or super */ null && (["children"])),
    _excluded214 = (/* unused pure expression or super */ null && (["children"])),
    _excluded215 = (/* unused pure expression or super */ null && (["children"])),
    _excluded216 = (/* unused pure expression or super */ null && (["children"])),
    _excluded217 = (/* unused pure expression or super */ null && (["children"])),
    _excluded218 = (/* unused pure expression or super */ null && (["children"])),
    _excluded219 = (/* unused pure expression or super */ null && (["children"])),
    _excluded220 = (/* unused pure expression or super */ null && (["children"])),
    _excluded221 = (/* unused pure expression or super */ null && (["children"])),
    _excluded222 = (/* unused pure expression or super */ null && (["children"])),
    _excluded223 = (/* unused pure expression or super */ null && (["children"])),
    _excluded224 = (/* unused pure expression or super */ null && (["children"])),
    _excluded225 = (/* unused pure expression or super */ null && (["children"])),
    _excluded226 = (/* unused pure expression or super */ null && (["children"])),
    _excluded227 = (/* unused pure expression or super */ null && (["children"])),
    _excluded228 = (/* unused pure expression or super */ null && (["children"])),
    _excluded229 = (/* unused pure expression or super */ null && (["children"])),
    _excluded230 = (/* unused pure expression or super */ null && (["children"])),
    _excluded231 = (/* unused pure expression or super */ null && (["children"])),
    _excluded232 = (/* unused pure expression or super */ null && (["children"])),
    _excluded233 = (/* unused pure expression or super */ null && (["children"])),
    _excluded234 = (/* unused pure expression or super */ null && (["children"])),
    _excluded235 = (/* unused pure expression or super */ null && (["children"])),
    _excluded236 = (/* unused pure expression or super */ null && (["children"])),
    _excluded237 = (/* unused pure expression or super */ null && (["children"])),
    _excluded238 = ["children"],
    _excluded239 = (/* unused pure expression or super */ null && (["children"])),
    _excluded240 = (/* unused pure expression or super */ null && (["children"])),
    _excluded241 = (/* unused pure expression or super */ null && (["children"])),
    _excluded242 = (/* unused pure expression or super */ null && (["children"])),
    _excluded243 = (/* unused pure expression or super */ null && (["children"])),
    _excluded244 = (/* unused pure expression or super */ null && (["children"])),
    _excluded245 = (/* unused pure expression or super */ null && (["children"])),
    _excluded246 = (/* unused pure expression or super */ null && (["children"])),
    _excluded247 = (/* unused pure expression or super */ null && (["children"])),
    _excluded248 = (/* unused pure expression or super */ null && (["children"])),
    _excluded249 = (/* unused pure expression or super */ null && (["children"])),
    _excluded250 = (/* unused pure expression or super */ null && (["children"]));
var didWarnAboutDeprecation = {};
var ChartComboStacked20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartComboStacked20(_ref, ref) {
  var children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path || (_path = /*#__PURE__*/React.createElement("path", {
    d: "M27,28V16H19V28H15V12H7V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM13,14v6H9V14Zm12,4v6H21V18Z"
  })), _path2 || (_path2 = /*#__PURE__*/React.createElement("path", {
    d: "M22.7856,14a1.9877,1.9877,0,0,1-1.1787-.3865L11.2041,5.987,8.2419,10,6.6374,8.8065l2.9812-4a1.9978,1.9978,0,0,1,2.749-.446l10.4214,7.64,3.6045-4.8613L28,8.3306l-3.6045,4.8611A2.0014,2.0014,0,0,1,22.7856,14Z"
  })), children);
})));
var ChartComboStacked16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartComboStacked16(_ref2, ref) {
  var children = _ref2.children,
      rest = _objectWithoutProperties(_ref2, _excluded2);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path3 || (_path3 = /*#__PURE__*/React.createElement("path", {
    d: "M27,28V16H19V28H15V12H7V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM13,14v6H9V14Zm12,4v6H21V18Z"
  })), _path4 || (_path4 = /*#__PURE__*/React.createElement("path", {
    d: "M22.7856,14a1.9877,1.9877,0,0,1-1.1787-.3865L11.2041,5.987,8.2419,10,6.6374,8.8065l2.9812-4a1.9978,1.9978,0,0,1,2.749-.446l10.4214,7.64,3.6045-4.8613L28,8.3306l-3.6045,4.8611A2.0014,2.0014,0,0,1,22.7856,14Z"
  })), children);
})));
var ChartCustom32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartCustom32(_ref3, ref) {
  var children = _ref3.children,
      rest = _objectWithoutProperties(_ref3, _excluded3);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path5 || (_path5 = /*#__PURE__*/React.createElement("path", {
    d: "M29.707,19.293l-3-3a.9994.9994,0,0,0-1.414,0L16,25.5859V30h4.4141l9.2929-9.293A.9994.9994,0,0,0,29.707,19.293ZM19.5859,28H18V26.4141l5-5L24.5859,23ZM26,21.5859,24.4141,20,26,18.4141,27.5859,20Z"
  })), _path6 || (_path6 = /*#__PURE__*/React.createElement("path", {
    d: "M17 15H21V17H17z",
    transform: "rotate(-90 19 16)"
  })), _path7 || (_path7 = /*#__PURE__*/React.createElement("path", {
    d: "M12 14H18V16H12z",
    transform: "rotate(-90 15 15)"
  })), _path8 || (_path8 = /*#__PURE__*/React.createElement("path", {
    d: "M6 12H16V14H6z",
    transform: "rotate(-90 11 13)"
  })), _path9 || (_path9 = /*#__PURE__*/React.createElement("path", {
    d: "M12,30H6a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,6,2H22a2.0021,2.0021,0,0,1,2,2V14H22V4H6V28h6Z"
  })), children);
})));
var ChartCustom24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartCustom24(_ref4, ref) {
  var children = _ref4.children,
      rest = _objectWithoutProperties(_ref4, _excluded4);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path10 || (_path10 = /*#__PURE__*/React.createElement("path", {
    d: "M29.707,19.293l-3-3a.9994.9994,0,0,0-1.414,0L16,25.5859V30h4.4141l9.2929-9.293A.9994.9994,0,0,0,29.707,19.293ZM19.5859,28H18V26.4141l5-5L24.5859,23ZM26,21.5859,24.4141,20,26,18.4141,27.5859,20Z"
  })), _path11 || (_path11 = /*#__PURE__*/React.createElement("path", {
    d: "M17 15H21V17H17z",
    transform: "rotate(-90 19 16)"
  })), _path12 || (_path12 = /*#__PURE__*/React.createElement("path", {
    d: "M12 14H18V16H12z",
    transform: "rotate(-90 15 15)"
  })), _path13 || (_path13 = /*#__PURE__*/React.createElement("path", {
    d: "M6 12H16V14H6z",
    transform: "rotate(-90 11 13)"
  })), _path14 || (_path14 = /*#__PURE__*/React.createElement("path", {
    d: "M12,30H6a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,6,2H22a2.0021,2.0021,0,0,1,2,2V14H22V4H6V28h6Z"
  })), children);
})));
var ChartCustom20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartCustom20(_ref5, ref) {
  var children = _ref5.children,
      rest = _objectWithoutProperties(_ref5, _excluded5);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path15 || (_path15 = /*#__PURE__*/React.createElement("path", {
    d: "M29.707,19.293l-3-3a.9994.9994,0,0,0-1.414,0L16,25.5859V30h4.4141l9.2929-9.293A.9994.9994,0,0,0,29.707,19.293ZM19.5859,28H18V26.4141l5-5L24.5859,23ZM26,21.5859,24.4141,20,26,18.4141,27.5859,20Z"
  })), _path16 || (_path16 = /*#__PURE__*/React.createElement("path", {
    d: "M17 15H21V17H17z",
    transform: "rotate(-90 19 16)"
  })), _path17 || (_path17 = /*#__PURE__*/React.createElement("path", {
    d: "M12 14H18V16H12z",
    transform: "rotate(-90 15 15)"
  })), _path18 || (_path18 = /*#__PURE__*/React.createElement("path", {
    d: "M6 12H16V14H6z",
    transform: "rotate(-90 11 13)"
  })), _path19 || (_path19 = /*#__PURE__*/React.createElement("path", {
    d: "M12,30H6a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,6,2H22a2.0021,2.0021,0,0,1,2,2V14H22V4H6V28h6Z"
  })), children);
})));
var ChartCustom16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartCustom16(_ref6, ref) {
  var children = _ref6.children,
      rest = _objectWithoutProperties(_ref6, _excluded6);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path20 || (_path20 = /*#__PURE__*/React.createElement("path", {
    d: "M29.707,19.293l-3-3a.9994.9994,0,0,0-1.414,0L16,25.5859V30h4.4141l9.2929-9.293A.9994.9994,0,0,0,29.707,19.293ZM19.5859,28H18V26.4141l5-5L24.5859,23ZM26,21.5859,24.4141,20,26,18.4141,27.5859,20Z"
  })), _path21 || (_path21 = /*#__PURE__*/React.createElement("path", {
    d: "M17 15H21V17H17z",
    transform: "rotate(-90 19 16)"
  })), _path22 || (_path22 = /*#__PURE__*/React.createElement("path", {
    d: "M12 14H18V16H12z",
    transform: "rotate(-90 15 15)"
  })), _path23 || (_path23 = /*#__PURE__*/React.createElement("path", {
    d: "M6 12H16V14H6z",
    transform: "rotate(-90 11 13)"
  })), _path24 || (_path24 = /*#__PURE__*/React.createElement("path", {
    d: "M12,30H6a2.0021,2.0021,0,0,1-2-2V4A2.0021,2.0021,0,0,1,6,2H22a2.0021,2.0021,0,0,1,2,2V14H22V4H6V28h6Z"
  })), children);
})));
var ChartErrorBar32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBar32(_ref7, ref) {
  var children = _ref7.children,
      rest = _objectWithoutProperties(_ref7, _excluded7);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path25 || (_path25 = /*#__PURE__*/React.createElement("path", {
    d: "M22,28V12H18V8h2V6H14V8h2v4H12V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM14,14h2v4H14Zm6,14H14V20h6Zm0-10H18V14h2Z"
  })), children);
})));
var ChartErrorBar24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBar24(_ref8, ref) {
  var children = _ref8.children,
      rest = _objectWithoutProperties(_ref8, _excluded8);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path26 || (_path26 = /*#__PURE__*/React.createElement("path", {
    d: "M22,28V12H18V8h2V6H14V8h2v4H12V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM14,14h2v4H14Zm6,14H14V20h6Zm0-10H18V14h2Z"
  })), children);
})));
var ChartErrorBar20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBar20(_ref9, ref) {
  var children = _ref9.children,
      rest = _objectWithoutProperties(_ref9, _excluded9);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path27 || (_path27 = /*#__PURE__*/React.createElement("path", {
    d: "M22,28V12H18V8h2V6H14V8h2v4H12V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM14,14h2v4H14Zm6,14H14V20h6Zm0-10H18V14h2Z"
  })), children);
})));
var ChartErrorBar16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBar16(_ref10, ref) {
  var children = _ref10.children,
      rest = _objectWithoutProperties(_ref10, _excluded10);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path28 || (_path28 = /*#__PURE__*/React.createElement("path", {
    d: "M22,28V12H18V8h2V6H14V8h2v4H12V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM14,14h2v4H14Zm6,14H14V20h6Zm0-10H18V14h2Z"
  })), children);
})));
var ChartErrorBarAlt32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBarAlt32(_ref11, ref) {
  var children = _ref11.children,
      rest = _objectWithoutProperties(_ref11, _excluded11);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path29 || (_path29 = /*#__PURE__*/React.createElement("path", {
    d: "M14 10V8H8v2h2v4.1836a2.983 2.983 0 000 5.6328V24H8v2h6V24H12V19.8164a2.983 2.983 0 000-5.6328V10zM26 6V4H20V6h2V8.1836a2.983 2.983 0 000 5.6328V18H20v2h6V18H24V13.8164a2.983 2.983 0 000-5.6328V6z"
  })), _path30 || (_path30 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartErrorBarAlt24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBarAlt24(_ref12, ref) {
  var children = _ref12.children,
      rest = _objectWithoutProperties(_ref12, _excluded12);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path31 || (_path31 = /*#__PURE__*/React.createElement("path", {
    d: "M14 10V8H8v2h2v4.1836a2.983 2.983 0 000 5.6328V24H8v2h6V24H12V19.8164a2.983 2.983 0 000-5.6328V10zM26 6V4H20V6h2V8.1836a2.983 2.983 0 000 5.6328V18H20v2h6V18H24V13.8164a2.983 2.983 0 000-5.6328V6z"
  })), _path32 || (_path32 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartErrorBarAlt20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBarAlt20(_ref13, ref) {
  var children = _ref13.children,
      rest = _objectWithoutProperties(_ref13, _excluded13);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path33 || (_path33 = /*#__PURE__*/React.createElement("path", {
    d: "M14 10V8H8v2h2v4.1836a2.983 2.983 0 000 5.6328V24H8v2h6V24H12V19.8164a2.983 2.983 0 000-5.6328V10zM26 6V4H20V6h2V8.1836a2.983 2.983 0 000 5.6328V18H20v2h6V18H24V13.8164a2.983 2.983 0 000-5.6328V6z"
  })), _path34 || (_path34 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartErrorBarAlt16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartErrorBarAlt16(_ref14, ref) {
  var children = _ref14.children,
      rest = _objectWithoutProperties(_ref14, _excluded14);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path35 || (_path35 = /*#__PURE__*/React.createElement("path", {
    d: "M14 10V8H8v2h2v4.1836a2.983 2.983 0 000 5.6328V24H8v2h6V24H12V19.8164a2.983 2.983 0 000-5.6328V10zM26 6V4H20V6h2V8.1836a2.983 2.983 0 000 5.6328V18H20v2h6V18H24V13.8164a2.983 2.983 0 000-5.6328V6z"
  })), _path36 || (_path36 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartEvaluation32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartEvaluation32(_ref15, ref) {
  var children = _ref15.children,
      rest = _objectWithoutProperties(_ref15, _excluded15);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path37 || (_path37 = /*#__PURE__*/React.createElement("path", {
    d: "M25.672 6.207H29.915V8.206H25.672z",
    transform: "rotate(-45.02 27.793 7.207)"
  })), _path38 || (_path38 = /*#__PURE__*/React.createElement("path", {
    d: "M16 20.5L11 15.539 12.59 13.969 16 17.349 23.41 10 25 11.579 16 20.5z"
  })), _path39 || (_path39 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V25.4131L10.4141,19,9,17.585l-5,5V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartEvaluation24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartEvaluation24(_ref16, ref) {
  var children = _ref16.children,
      rest = _objectWithoutProperties(_ref16, _excluded16);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path40 || (_path40 = /*#__PURE__*/React.createElement("path", {
    d: "M25.672 6.207H29.915V8.206H25.672z",
    transform: "rotate(-45.02 27.793 7.207)"
  })), _path41 || (_path41 = /*#__PURE__*/React.createElement("path", {
    d: "M16 20.5L11 15.539 12.59 13.969 16 17.349 23.41 10 25 11.579 16 20.5z"
  })), _path42 || (_path42 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V25.4131L10.4141,19,9,17.585l-5,5V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartEvaluation20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartEvaluation20(_ref17, ref) {
  var children = _ref17.children,
      rest = _objectWithoutProperties(_ref17, _excluded17);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path43 || (_path43 = /*#__PURE__*/React.createElement("path", {
    d: "M25.672 6.207H29.915V8.206H25.672z",
    transform: "rotate(-45.02 27.793 7.207)"
  })), _path44 || (_path44 = /*#__PURE__*/React.createElement("path", {
    d: "M16 20.5L11 15.539 12.59 13.969 16 17.349 23.41 10 25 11.579 16 20.5z"
  })), _path45 || (_path45 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V25.4131L10.4141,19,9,17.585l-5,5V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartEvaluation16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartEvaluation16(_ref18, ref) {
  var children = _ref18.children,
      rest = _objectWithoutProperties(_ref18, _excluded18);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path46 || (_path46 = /*#__PURE__*/React.createElement("path", {
    d: "M25.672 6.207H29.915V8.206H25.672z",
    transform: "rotate(-45.02 27.793 7.207)"
  })), _path47 || (_path47 = /*#__PURE__*/React.createElement("path", {
    d: "M16 20.5L11 15.539 12.59 13.969 16 17.349 23.41 10 25 11.579 16 20.5z"
  })), _path48 || (_path48 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V25.4131L10.4141,19,9,17.585l-5,5V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartHighLow32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHighLow32(_ref19, ref) {
  var children = _ref19.children,
      rest = _objectWithoutProperties(_ref19, _excluded19);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path49 || (_path49 = /*#__PURE__*/React.createElement("path", {
    d: "M15 8L12 8 12 6 10 6 10 20 7 20 7 22 10 22 10 24 12 24 12 10 15 10 15 8zM27 10L24 10 24 6 22 6 22 18 19 18 19 20 22 20 22 24 24 24 24 12 27 12 27 10z"
  })), _path50 || (_path50 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartHighLow24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHighLow24(_ref20, ref) {
  var children = _ref20.children,
      rest = _objectWithoutProperties(_ref20, _excluded20);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path51 || (_path51 = /*#__PURE__*/React.createElement("path", {
    d: "M15 8L12 8 12 6 10 6 10 20 7 20 7 22 10 22 10 24 12 24 12 10 15 10 15 8zM27 10L24 10 24 6 22 6 22 18 19 18 19 20 22 20 22 24 24 24 24 12 27 12 27 10z"
  })), _path52 || (_path52 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartHighLow20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHighLow20(_ref21, ref) {
  var children = _ref21.children,
      rest = _objectWithoutProperties(_ref21, _excluded21);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path53 || (_path53 = /*#__PURE__*/React.createElement("path", {
    d: "M15 8L12 8 12 6 10 6 10 20 7 20 7 22 10 22 10 24 12 24 12 10 15 10 15 8zM27 10L24 10 24 6 22 6 22 18 19 18 19 20 22 20 22 24 24 24 24 12 27 12 27 10z"
  })), _path54 || (_path54 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartHighLow16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHighLow16(_ref22, ref) {
  var children = _ref22.children,
      rest = _objectWithoutProperties(_ref22, _excluded22);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path55 || (_path55 = /*#__PURE__*/React.createElement("path", {
    d: "M15 8L12 8 12 6 10 6 10 20 7 20 7 22 10 22 10 24 12 24 12 10 15 10 15 8zM27 10L24 10 24 6 22 6 22 18 19 18 19 20 22 20 22 24 24 24 24 12 27 12 27 10z"
  })), _path56 || (_path56 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), children);
})));
var ChartHistogram32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHistogram32(_ref23, ref) {
  var children = _ref23.children,
      rest = _objectWithoutProperties(_ref23, _excluded23);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path57 || (_path57 = /*#__PURE__*/React.createElement("path", {
    d: "M6,16c2.9727,0,4.2324-2.251,5.3447-4.2373C12.4741,9.7441,13.45,8,16,8s3.5259,1.7441,4.6553,3.7627C21.7676,13.749,23.0273,16,26,16h4V14H26c-1.7129,0-2.4834-1.2207-3.5991-3.2144C21.2075,8.6543,19.7231,6,16,6s-5.2075,2.6543-6.4009,4.7856C8.4834,12.7793,7.7129,14,6,14H4V2H2V28a2,2,0,0,0,2,2H30V28H28V22H26v6H21.9992L22,20H20v8H16V16H14V28H9.9992L10,20H8v8H4V16Z"
  })), children);
})));
var ChartHistogram24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHistogram24(_ref24, ref) {
  var children = _ref24.children,
      rest = _objectWithoutProperties(_ref24, _excluded24);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path58 || (_path58 = /*#__PURE__*/React.createElement("path", {
    d: "M6,16c2.9727,0,4.2324-2.251,5.3447-4.2373C12.4741,9.7441,13.45,8,16,8s3.5259,1.7441,4.6553,3.7627C21.7676,13.749,23.0273,16,26,16h4V14H26c-1.7129,0-2.4834-1.2207-3.5991-3.2144C21.2075,8.6543,19.7231,6,16,6s-5.2075,2.6543-6.4009,4.7856C8.4834,12.7793,7.7129,14,6,14H4V2H2V28a2,2,0,0,0,2,2H30V28H28V22H26v6H21.9992L22,20H20v8H16V16H14V28H9.9992L10,20H8v8H4V16Z"
  })), children);
})));
var ChartHistogram20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHistogram20(_ref25, ref) {
  var children = _ref25.children,
      rest = _objectWithoutProperties(_ref25, _excluded25);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path59 || (_path59 = /*#__PURE__*/React.createElement("path", {
    d: "M6,16c2.9727,0,4.2324-2.251,5.3447-4.2373C12.4741,9.7441,13.45,8,16,8s3.5259,1.7441,4.6553,3.7627C21.7676,13.749,23.0273,16,26,16h4V14H26c-1.7129,0-2.4834-1.2207-3.5991-3.2144C21.2075,8.6543,19.7231,6,16,6s-5.2075,2.6543-6.4009,4.7856C8.4834,12.7793,7.7129,14,6,14H4V2H2V28a2,2,0,0,0,2,2H30V28H28V22H26v6H21.9992L22,20H20v8H16V16H14V28H9.9992L10,20H8v8H4V16Z"
  })), children);
})));
var ChartHistogram16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartHistogram16(_ref26, ref) {
  var children = _ref26.children,
      rest = _objectWithoutProperties(_ref26, _excluded26);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path60 || (_path60 = /*#__PURE__*/React.createElement("path", {
    d: "M6,16c2.9727,0,4.2324-2.251,5.3447-4.2373C12.4741,9.7441,13.45,8,16,8s3.5259,1.7441,4.6553,3.7627C21.7676,13.749,23.0273,16,26,16h4V14H26c-1.7129,0-2.4834-1.2207-3.5991-3.2144C21.2075,8.6543,19.7231,6,16,6s-5.2075,2.6543-6.4009,4.7856C8.4834,12.7793,7.7129,14,6,14H4V2H2V28a2,2,0,0,0,2,2H30V28H28V22H26v6H21.9992L22,20H20v8H16V16H14V28H9.9992L10,20H8v8H4V16Z"
  })), children);
})));
var ChartLine32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLine32(_ref27, ref) {
  var children = _ref27.children,
      rest = _objectWithoutProperties(_ref27, _excluded27);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path61 || (_path61 = /*#__PURE__*/React.createElement("path", {
    d: "M4.67,28l6.39-12,7.3,6.49a2,2,0,0,0,1.7.47,2,2,0,0,0,1.42-1.07L27,10.9,25.18,10,19.69,21l-7.3-6.49A2,2,0,0,0,10.71,14a2,2,0,0,0-1.42,1L4,25V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartLine24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLine24(_ref28, ref) {
  var children = _ref28.children,
      rest = _objectWithoutProperties(_ref28, _excluded28);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path62 || (_path62 = /*#__PURE__*/React.createElement("path", {
    d: "M4.67,28l6.39-12,7.3,6.49a2,2,0,0,0,1.7.47,2,2,0,0,0,1.42-1.07L27,10.9,25.18,10,19.69,21l-7.3-6.49A2,2,0,0,0,10.71,14a2,2,0,0,0-1.42,1L4,25V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartLine20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLine20(_ref29, ref) {
  var children = _ref29.children,
      rest = _objectWithoutProperties(_ref29, _excluded29);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path63 || (_path63 = /*#__PURE__*/React.createElement("path", {
    d: "M4.67,28l6.39-12,7.3,6.49a2,2,0,0,0,1.7.47,2,2,0,0,0,1.42-1.07L27,10.9,25.18,10,19.69,21l-7.3-6.49A2,2,0,0,0,10.71,14a2,2,0,0,0-1.42,1L4,25V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartLine16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLine16(_ref30, ref) {
  var children = _ref30.children,
      rest = _objectWithoutProperties(_ref30, _excluded30);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path64 || (_path64 = /*#__PURE__*/React.createElement("path", {
    d: "M4.67,28l6.39-12,7.3,6.49a2,2,0,0,0,1.7.47,2,2,0,0,0,1.42-1.07L27,10.9,25.18,10,19.69,21l-7.3-6.49A2,2,0,0,0,10.71,14a2,2,0,0,0-1.42,1L4,25V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartLineData32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineData32(_ref31, ref) {
  var children = _ref31.children,
      rest = _objectWithoutProperties(_ref31, _excluded31);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path65 || (_path65 = /*#__PURE__*/React.createElement("path", {
    d: "M10.06,17.88A4.25,4.25,0,0,0,11,18a4,4,0,0,0,2.23-.68l3.22,2.87a3.88,3.88,0,0,0-.2,3.17A4,4,0,1,0,22.62,19l2.54-5.09a3.78,3.78,0,0,0,2.91-.53A4,4,0,1,0,23.38,13l-2.54,5.09A3.86,3.86,0,0,0,20,18a4,4,0,0,0-2.23.68l-3.22-2.87a3.88,3.88,0,0,0,.2-3.17A4,4,0,1,0,8.3,16.93L4,25V2H2V28a2,2,0,0,0,2,2H30V28H4.67ZM26,8a2,2,0,1,1-2,2A2,2,0,0,1,26,8ZM22,22a2,2,0,1,1-2-2A2,2,0,0,1,22,22ZM11,12a2,2,0,1,1-2,2A2,2,0,0,1,11,12Z"
  })), children);
})));
var ChartLineData24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineData24(_ref32, ref) {
  var children = _ref32.children,
      rest = _objectWithoutProperties(_ref32, _excluded32);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path66 || (_path66 = /*#__PURE__*/React.createElement("path", {
    d: "M10.06,17.88A4.25,4.25,0,0,0,11,18a4,4,0,0,0,2.23-.68l3.22,2.87a3.88,3.88,0,0,0-.2,3.17A4,4,0,1,0,22.62,19l2.54-5.09a3.78,3.78,0,0,0,2.91-.53A4,4,0,1,0,23.38,13l-2.54,5.09A3.86,3.86,0,0,0,20,18a4,4,0,0,0-2.23.68l-3.22-2.87a3.88,3.88,0,0,0,.2-3.17A4,4,0,1,0,8.3,16.93L4,25V2H2V28a2,2,0,0,0,2,2H30V28H4.67ZM26,8a2,2,0,1,1-2,2A2,2,0,0,1,26,8ZM22,22a2,2,0,1,1-2-2A2,2,0,0,1,22,22ZM11,12a2,2,0,1,1-2,2A2,2,0,0,1,11,12Z"
  })), children);
})));
var ChartLineData20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineData20(_ref33, ref) {
  var children = _ref33.children,
      rest = _objectWithoutProperties(_ref33, _excluded33);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path67 || (_path67 = /*#__PURE__*/React.createElement("path", {
    d: "M10.06,17.88A4.25,4.25,0,0,0,11,18a4,4,0,0,0,2.23-.68l3.22,2.87a3.88,3.88,0,0,0-.2,3.17A4,4,0,1,0,22.62,19l2.54-5.09a3.78,3.78,0,0,0,2.91-.53A4,4,0,1,0,23.38,13l-2.54,5.09A3.86,3.86,0,0,0,20,18a4,4,0,0,0-2.23.68l-3.22-2.87a3.88,3.88,0,0,0,.2-3.17A4,4,0,1,0,8.3,16.93L4,25V2H2V28a2,2,0,0,0,2,2H30V28H4.67ZM26,8a2,2,0,1,1-2,2A2,2,0,0,1,26,8ZM22,22a2,2,0,1,1-2-2A2,2,0,0,1,22,22ZM11,12a2,2,0,1,1-2,2A2,2,0,0,1,11,12Z"
  })), children);
})));
var ChartLineData16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineData16(_ref34, ref) {
  var children = _ref34.children,
      rest = _objectWithoutProperties(_ref34, _excluded34);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path68 || (_path68 = /*#__PURE__*/React.createElement("path", {
    d: "M10.06,17.88A4.25,4.25,0,0,0,11,18a4,4,0,0,0,2.23-.68l3.22,2.87a3.88,3.88,0,0,0-.2,3.17A4,4,0,1,0,22.62,19l2.54-5.09a3.78,3.78,0,0,0,2.91-.53A4,4,0,1,0,23.38,13l-2.54,5.09A3.86,3.86,0,0,0,20,18a4,4,0,0,0-2.23.68l-3.22-2.87a3.88,3.88,0,0,0,.2-3.17A4,4,0,1,0,8.3,16.93L4,25V2H2V28a2,2,0,0,0,2,2H30V28H4.67ZM26,8a2,2,0,1,1-2,2A2,2,0,0,1,26,8ZM22,22a2,2,0,1,1-2-2A2,2,0,0,1,22,22ZM11,12a2,2,0,1,1-2,2A2,2,0,0,1,11,12Z"
  })), children);
})));
var ChartLineSmooth32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineSmooth32(_ref35, ref) {
  var children = _ref35.children,
      rest = _objectWithoutProperties(_ref35, _excluded35);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path69 || (_path69 = /*#__PURE__*/React.createElement("path", {
    d: "M13,15c1.4854,0,2.5544,1.4966,3.6863,3.0811C17.9983,19.918,19.4854,22,22,22c5.6709,0,7.78-10.79,8-12l-1.9678-.3584C27.55,12.2827,25.3938,20,22,20c-1.4854,0-2.5544-1.4966-3.6863-3.0811C17.0017,15.082,15.5146,13,13,13c-4.186,0-7.4448,7.4043-9,11.7617V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H5.0439C6.5544,22.8574,9.9634,15,13,15Z"
  })), children);
})));
var ChartLineSmooth24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineSmooth24(_ref36, ref) {
  var children = _ref36.children,
      rest = _objectWithoutProperties(_ref36, _excluded36);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path70 || (_path70 = /*#__PURE__*/React.createElement("path", {
    d: "M13,15c1.4854,0,2.5544,1.4966,3.6863,3.0811C17.9983,19.918,19.4854,22,22,22c5.6709,0,7.78-10.79,8-12l-1.9678-.3584C27.55,12.2827,25.3938,20,22,20c-1.4854,0-2.5544-1.4966-3.6863-3.0811C17.0017,15.082,15.5146,13,13,13c-4.186,0-7.4448,7.4043-9,11.7617V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H5.0439C6.5544,22.8574,9.9634,15,13,15Z"
  })), children);
})));
var ChartLineSmooth20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineSmooth20(_ref37, ref) {
  var children = _ref37.children,
      rest = _objectWithoutProperties(_ref37, _excluded37);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path71 || (_path71 = /*#__PURE__*/React.createElement("path", {
    d: "M13,15c1.4854,0,2.5544,1.4966,3.6863,3.0811C17.9983,19.918,19.4854,22,22,22c5.6709,0,7.78-10.79,8-12l-1.9678-.3584C27.55,12.2827,25.3938,20,22,20c-1.4854,0-2.5544-1.4966-3.6863-3.0811C17.0017,15.082,15.5146,13,13,13c-4.186,0-7.4448,7.4043-9,11.7617V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H5.0439C6.5544,22.8574,9.9634,15,13,15Z"
  })), children);
})));
var ChartLineSmooth16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartLineSmooth16(_ref38, ref) {
  var children = _ref38.children,
      rest = _objectWithoutProperties(_ref38, _excluded38);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path72 || (_path72 = /*#__PURE__*/React.createElement("path", {
    d: "M13,15c1.4854,0,2.5544,1.4966,3.6863,3.0811C17.9983,19.918,19.4854,22,22,22c5.6709,0,7.78-10.79,8-12l-1.9678-.3584C27.55,12.2827,25.3938,20,22,20c-1.4854,0-2.5544-1.4966-3.6863-3.0811C17.0017,15.082,15.5146,13,13,13c-4.186,0-7.4448,7.4043-9,11.7617V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H5.0439C6.5544,22.8574,9.9634,15,13,15Z"
  })), children);
})));
var ChartMarimekko32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMarimekko32(_ref39, ref) {
  var children = _ref39.children,
      rest = _objectWithoutProperties(_ref39, _excluded39);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path73 || (_path73 = /*#__PURE__*/React.createElement("path", {
    d: "M27,3H5A2.0025,2.0025,0,0,0,3,5V27a2.0025,2.0025,0,0,0,2,2H27a2.0025,2.0025,0,0,0,2-2V5A2.0025,2.0025,0,0,0,27,3Zm0,7H21V5h6ZM19,8H13V5h6Zm0,2v8H13V10ZM11,22H5V12h6Zm2-2h6v7H13Zm8-8h6v4H21ZM11,5v5H5V5ZM5,24h6v3H5Zm16,3V18h6v9Z"
  })), children);
})));
var ChartMarimekko24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMarimekko24(_ref40, ref) {
  var children = _ref40.children,
      rest = _objectWithoutProperties(_ref40, _excluded40);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path74 || (_path74 = /*#__PURE__*/React.createElement("path", {
    d: "M27,3H5A2.0025,2.0025,0,0,0,3,5V27a2.0025,2.0025,0,0,0,2,2H27a2.0025,2.0025,0,0,0,2-2V5A2.0025,2.0025,0,0,0,27,3Zm0,7H21V5h6ZM19,8H13V5h6Zm0,2v8H13V10ZM11,22H5V12h6Zm2-2h6v7H13Zm8-8h6v4H21ZM11,5v5H5V5ZM5,24h6v3H5Zm16,3V18h6v9Z"
  })), children);
})));
var ChartMarimekko20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMarimekko20(_ref41, ref) {
  var children = _ref41.children,
      rest = _objectWithoutProperties(_ref41, _excluded41);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path75 || (_path75 = /*#__PURE__*/React.createElement("path", {
    d: "M27,3H5A2.0025,2.0025,0,0,0,3,5V27a2.0025,2.0025,0,0,0,2,2H27a2.0025,2.0025,0,0,0,2-2V5A2.0025,2.0025,0,0,0,27,3Zm0,7H21V5h6ZM19,8H13V5h6Zm0,2v8H13V10ZM11,22H5V12h6Zm2-2h6v7H13Zm8-8h6v4H21ZM11,5v5H5V5ZM5,24h6v3H5Zm16,3V18h6v9Z"
  })), children);
})));
var ChartMarimekko16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMarimekko16(_ref42, ref) {
  var children = _ref42.children,
      rest = _objectWithoutProperties(_ref42, _excluded42);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path76 || (_path76 = /*#__PURE__*/React.createElement("path", {
    d: "M27,3H5A2.0025,2.0025,0,0,0,3,5V27a2.0025,2.0025,0,0,0,2,2H27a2.0025,2.0025,0,0,0,2-2V5A2.0025,2.0025,0,0,0,27,3Zm0,7H21V5h6ZM19,8H13V5h6Zm0,2v8H13V10ZM11,22H5V12h6Zm2-2h6v7H13Zm8-8h6v4H21ZM11,5v5H5V5ZM5,24h6v3H5Zm16,3V18h6v9Z"
  })), children);
})));
var ChartMaximum32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMaximum32(_ref43, ref) {
  var children = _ref43.children,
      rest = _objectWithoutProperties(_ref43, _excluded43);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path77 || (_path77 = /*#__PURE__*/React.createElement("path", {
    d: "M8 6H10V8H8zM12 6H14V8H12zM20 6H22V8H20zM24 6H26V8H24zM28 6H30V8H28z"
  })), _path78 || (_path78 = /*#__PURE__*/React.createElement("path", {
    d: "M27.989,28l-.0271-.1631C26.5105,19.0742,24.0662,9.0894,18,8.0889V6H16V8.085c-6.084.978-8.533,10.9775-9.9863,19.7519L5.9866,28H4V8H6V6H4V2H2V28a2,2,0,0,0,2,2H30V28ZM8.0151,28c2.024-12.1084,4.959-18,8.9727-18s6.9487,5.8916,8.9726,18Z"
  })), children);
})));
var ChartMaximum24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMaximum24(_ref44, ref) {
  var children = _ref44.children,
      rest = _objectWithoutProperties(_ref44, _excluded44);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path79 || (_path79 = /*#__PURE__*/React.createElement("path", {
    d: "M8 6H10V8H8zM12 6H14V8H12zM20 6H22V8H20zM24 6H26V8H24zM28 6H30V8H28z"
  })), _path80 || (_path80 = /*#__PURE__*/React.createElement("path", {
    d: "M27.989,28l-.0271-.1631C26.5105,19.0742,24.0662,9.0894,18,8.0889V6H16V8.085c-6.084.978-8.533,10.9775-9.9863,19.7519L5.9866,28H4V8H6V6H4V2H2V28a2,2,0,0,0,2,2H30V28ZM8.0151,28c2.024-12.1084,4.959-18,8.9727-18s6.9487,5.8916,8.9726,18Z"
  })), children);
})));
var ChartMaximum20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMaximum20(_ref45, ref) {
  var children = _ref45.children,
      rest = _objectWithoutProperties(_ref45, _excluded45);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path81 || (_path81 = /*#__PURE__*/React.createElement("path", {
    d: "M8 6H10V8H8zM12 6H14V8H12zM20 6H22V8H20zM24 6H26V8H24zM28 6H30V8H28z"
  })), _path82 || (_path82 = /*#__PURE__*/React.createElement("path", {
    d: "M27.989,28l-.0271-.1631C26.5105,19.0742,24.0662,9.0894,18,8.0889V6H16V8.085c-6.084.978-8.533,10.9775-9.9863,19.7519L5.9866,28H4V8H6V6H4V2H2V28a2,2,0,0,0,2,2H30V28ZM8.0151,28c2.024-12.1084,4.959-18,8.9727-18s6.9487,5.8916,8.9726,18Z"
  })), children);
})));
var ChartMaximum16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMaximum16(_ref46, ref) {
  var children = _ref46.children,
      rest = _objectWithoutProperties(_ref46, _excluded46);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path83 || (_path83 = /*#__PURE__*/React.createElement("path", {
    d: "M8 6H10V8H8zM12 6H14V8H12zM20 6H22V8H20zM24 6H26V8H24zM28 6H30V8H28z"
  })), _path84 || (_path84 = /*#__PURE__*/React.createElement("path", {
    d: "M27.989,28l-.0271-.1631C26.5105,19.0742,24.0662,9.0894,18,8.0889V6H16V8.085c-6.084.978-8.533,10.9775-9.9863,19.7519L5.9866,28H4V8H6V6H4V2H2V28a2,2,0,0,0,2,2H30V28ZM8.0151,28c2.024-12.1084,4.959-18,8.9727-18s6.9487,5.8916,8.9726,18Z"
  })), children);
})));
var ChartMedian32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMedian32(_ref47, ref) {
  var children = _ref47.children,
      rest = _objectWithoutProperties(_ref47, _excluded47);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path85 || (_path85 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22H18V24H16z",
    transform: "rotate(-90 17 23)"
  })), _path86 || (_path86 = /*#__PURE__*/React.createElement("path", {
    d: "M18,28V26H16v2H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path87 || (_path87 = /*#__PURE__*/React.createElement("path", {
    d: "M26.0532,19.6787A3.44,3.44,0,0,1,23,22c-2.17,0-3.3115-3.333-4.52-6.8623-.3557-1.0386-.7239-2.1094-1.1382-3.1377H18V10H16.4221C15.2124,7.7148,13.5811,6,11,6,7.3218,6,6.1016,9.5332,6.0513,9.6836l1.8955.6377A3.44,3.44,0,0,1,11,8c2.92,0,4.2764,3.958,5.5874,7.7861.2544.7422.5105,1.4893.7813,2.2139H16v2h2.2019c1.0828,2.2886,2.4959,4,4.7981,4,3.6782,0,4.8984-3.5332,4.9487-3.6836Z"
  })), _path88 || (_path88 = /*#__PURE__*/React.createElement("path", {
    d: "M16 6H18V8H16z",
    transform: "rotate(-90 17 7)"
  })), _path89 || (_path89 = /*#__PURE__*/React.createElement("path", {
    d: "M16 2H18V4H16z",
    transform: "rotate(-90 17 3)"
  })), children);
})));
var ChartMedian24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMedian24(_ref48, ref) {
  var children = _ref48.children,
      rest = _objectWithoutProperties(_ref48, _excluded48);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path90 || (_path90 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22H18V24H16z",
    transform: "rotate(-90 17 23)"
  })), _path91 || (_path91 = /*#__PURE__*/React.createElement("path", {
    d: "M18,28V26H16v2H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path92 || (_path92 = /*#__PURE__*/React.createElement("path", {
    d: "M26.0532,19.6787A3.44,3.44,0,0,1,23,22c-2.17,0-3.3115-3.333-4.52-6.8623-.3557-1.0386-.7239-2.1094-1.1382-3.1377H18V10H16.4221C15.2124,7.7148,13.5811,6,11,6,7.3218,6,6.1016,9.5332,6.0513,9.6836l1.8955.6377A3.44,3.44,0,0,1,11,8c2.92,0,4.2764,3.958,5.5874,7.7861.2544.7422.5105,1.4893.7813,2.2139H16v2h2.2019c1.0828,2.2886,2.4959,4,4.7981,4,3.6782,0,4.8984-3.5332,4.9487-3.6836Z"
  })), _path93 || (_path93 = /*#__PURE__*/React.createElement("path", {
    d: "M16 6H18V8H16z",
    transform: "rotate(-90 17 7)"
  })), _path94 || (_path94 = /*#__PURE__*/React.createElement("path", {
    d: "M16 2H18V4H16z",
    transform: "rotate(-90 17 3)"
  })), children);
})));
var ChartMedian20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMedian20(_ref49, ref) {
  var children = _ref49.children,
      rest = _objectWithoutProperties(_ref49, _excluded49);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path95 || (_path95 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22H18V24H16z",
    transform: "rotate(-90 17 23)"
  })), _path96 || (_path96 = /*#__PURE__*/React.createElement("path", {
    d: "M18,28V26H16v2H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path97 || (_path97 = /*#__PURE__*/React.createElement("path", {
    d: "M26.0532,19.6787A3.44,3.44,0,0,1,23,22c-2.17,0-3.3115-3.333-4.52-6.8623-.3557-1.0386-.7239-2.1094-1.1382-3.1377H18V10H16.4221C15.2124,7.7148,13.5811,6,11,6,7.3218,6,6.1016,9.5332,6.0513,9.6836l1.8955.6377A3.44,3.44,0,0,1,11,8c2.92,0,4.2764,3.958,5.5874,7.7861.2544.7422.5105,1.4893.7813,2.2139H16v2h2.2019c1.0828,2.2886,2.4959,4,4.7981,4,3.6782,0,4.8984-3.5332,4.9487-3.6836Z"
  })), _path98 || (_path98 = /*#__PURE__*/React.createElement("path", {
    d: "M16 6H18V8H16z",
    transform: "rotate(-90 17 7)"
  })), _path99 || (_path99 = /*#__PURE__*/React.createElement("path", {
    d: "M16 2H18V4H16z",
    transform: "rotate(-90 17 3)"
  })), children);
})));
var ChartMedian16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMedian16(_ref50, ref) {
  var children = _ref50.children,
      rest = _objectWithoutProperties(_ref50, _excluded50);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path100 || (_path100 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22H18V24H16z",
    transform: "rotate(-90 17 23)"
  })), _path101 || (_path101 = /*#__PURE__*/React.createElement("path", {
    d: "M18,28V26H16v2H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path102 || (_path102 = /*#__PURE__*/React.createElement("path", {
    d: "M26.0532,19.6787A3.44,3.44,0,0,1,23,22c-2.17,0-3.3115-3.333-4.52-6.8623-.3557-1.0386-.7239-2.1094-1.1382-3.1377H18V10H16.4221C15.2124,7.7148,13.5811,6,11,6,7.3218,6,6.1016,9.5332,6.0513,9.6836l1.8955.6377A3.44,3.44,0,0,1,11,8c2.92,0,4.2764,3.958,5.5874,7.7861.2544.7422.5105,1.4893.7813,2.2139H16v2h2.2019c1.0828,2.2886,2.4959,4,4.7981,4,3.6782,0,4.8984-3.5332,4.9487-3.6836Z"
  })), _path103 || (_path103 = /*#__PURE__*/React.createElement("path", {
    d: "M16 6H18V8H16z",
    transform: "rotate(-90 17 7)"
  })), _path104 || (_path104 = /*#__PURE__*/React.createElement("path", {
    d: "M16 2H18V4H16z",
    transform: "rotate(-90 17 3)"
  })), children);
})));
var ChartMinimum32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMinimum32(_ref51, ref) {
  var children = _ref51.children,
      rest = _objectWithoutProperties(_ref51, _excluded51);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path105 || (_path105 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V26H6V24H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path106 || (_path106 = /*#__PURE__*/React.createElement("path", {
    d: "M8 24H10V26H8zM12 24H14V26H12zM20 24H22V26H20zM24 24H26V26H24zM28 24H30V26H28z"
  })), _path107 || (_path107 = /*#__PURE__*/React.createElement("path", {
    d: "M27.9463,4.3281,25.9727,4C23.9487,16.1084,21.0137,22,17,22S10.0513,16.1084,8.0271,4l-1.9734.3281C7.51,13.0566,9.9631,22.93,16,23.9131V26h2V23.9131C24.0371,22.93,26.4907,13.0566,27.9463,4.3281Z"
  })), children);
})));
var ChartMinimum24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMinimum24(_ref52, ref) {
  var children = _ref52.children,
      rest = _objectWithoutProperties(_ref52, _excluded52);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path108 || (_path108 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V26H6V24H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path109 || (_path109 = /*#__PURE__*/React.createElement("path", {
    d: "M8 24H10V26H8zM12 24H14V26H12zM20 24H22V26H20zM24 24H26V26H24zM28 24H30V26H28z"
  })), _path110 || (_path110 = /*#__PURE__*/React.createElement("path", {
    d: "M27.9463,4.3281,25.9727,4C23.9487,16.1084,21.0137,22,17,22S10.0513,16.1084,8.0271,4l-1.9734.3281C7.51,13.0566,9.9631,22.93,16,23.9131V26h2V23.9131C24.0371,22.93,26.4907,13.0566,27.9463,4.3281Z"
  })), children);
})));
var ChartMinimum20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMinimum20(_ref53, ref) {
  var children = _ref53.children,
      rest = _objectWithoutProperties(_ref53, _excluded53);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path111 || (_path111 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V26H6V24H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path112 || (_path112 = /*#__PURE__*/React.createElement("path", {
    d: "M8 24H10V26H8zM12 24H14V26H12zM20 24H22V26H20zM24 24H26V26H24zM28 24H30V26H28z"
  })), _path113 || (_path113 = /*#__PURE__*/React.createElement("path", {
    d: "M27.9463,4.3281,25.9727,4C23.9487,16.1084,21.0137,22,17,22S10.0513,16.1084,8.0271,4l-1.9734.3281C7.51,13.0566,9.9631,22.93,16,23.9131V26h2V23.9131C24.0371,22.93,26.4907,13.0566,27.9463,4.3281Z"
  })), children);
})));
var ChartMinimum16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMinimum16(_ref54, ref) {
  var children = _ref54.children,
      rest = _objectWithoutProperties(_ref54, _excluded54);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path114 || (_path114 = /*#__PURE__*/React.createElement("path", {
    d: "M4,28V26H6V24H4V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), _path115 || (_path115 = /*#__PURE__*/React.createElement("path", {
    d: "M8 24H10V26H8zM12 24H14V26H12zM20 24H22V26H20zM24 24H26V26H24zM28 24H30V26H28z"
  })), _path116 || (_path116 = /*#__PURE__*/React.createElement("path", {
    d: "M27.9463,4.3281,25.9727,4C23.9487,16.1084,21.0137,22,17,22S10.0513,16.1084,8.0271,4l-1.9734.3281C7.51,13.0566,9.9631,22.93,16,23.9131V26h2V23.9131C24.0371,22.93,26.4907,13.0566,27.9463,4.3281Z"
  })), children);
})));
var ChartMultiLine32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultiLine32(_ref55, ref) {
  var children = _ref55.children,
      rest = _objectWithoutProperties(_ref55, _excluded55);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path117 || (_path117 = /*#__PURE__*/React.createElement("path", {
    d: "M4.5859,28l7.1783-5.998L19.7578,23.94a2.021,2.021,0,0,0,1.314-.1206L28,20.5811l-.8479-1.8121-6.9163,3.229L12.2422,20.06a2.0033,2.0033,0,0,0-1.74.3838L4,25.8818V20.49l7.7642-6.4877L19.7578,15.94a2.021,2.021,0,0,0,1.314-.1206l6.9287-3.2383-.8467-1.812-6.918,3.2285L12.2422,12.06a2.0049,2.0049,0,0,0-1.74.3838L4,17.8818V12.49L11.7642,6.002,19.7578,7.94a2.021,2.021,0,0,0,1.314-.1206L28,4.5859l-.8457-1.8115L20.2358,5.998,12.2422,4.06a2.0033,2.0033,0,0,0-1.74.3838L4,9.8818V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartMultiLine24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultiLine24(_ref56, ref) {
  var children = _ref56.children,
      rest = _objectWithoutProperties(_ref56, _excluded56);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path118 || (_path118 = /*#__PURE__*/React.createElement("path", {
    d: "M4.5859,28l7.1783-5.998L19.7578,23.94a2.021,2.021,0,0,0,1.314-.1206L28,20.5811l-.8479-1.8121-6.9163,3.229L12.2422,20.06a2.0033,2.0033,0,0,0-1.74.3838L4,25.8818V20.49l7.7642-6.4877L19.7578,15.94a2.021,2.021,0,0,0,1.314-.1206l6.9287-3.2383-.8467-1.812-6.918,3.2285L12.2422,12.06a2.0049,2.0049,0,0,0-1.74.3838L4,17.8818V12.49L11.7642,6.002,19.7578,7.94a2.021,2.021,0,0,0,1.314-.1206L28,4.5859l-.8457-1.8115L20.2358,5.998,12.2422,4.06a2.0033,2.0033,0,0,0-1.74.3838L4,9.8818V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartMultiLine20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultiLine20(_ref57, ref) {
  var children = _ref57.children,
      rest = _objectWithoutProperties(_ref57, _excluded57);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path119 || (_path119 = /*#__PURE__*/React.createElement("path", {
    d: "M4.5859,28l7.1783-5.998L19.7578,23.94a2.021,2.021,0,0,0,1.314-.1206L28,20.5811l-.8479-1.8121-6.9163,3.229L12.2422,20.06a2.0033,2.0033,0,0,0-1.74.3838L4,25.8818V20.49l7.7642-6.4877L19.7578,15.94a2.021,2.021,0,0,0,1.314-.1206l6.9287-3.2383-.8467-1.812-6.918,3.2285L12.2422,12.06a2.0049,2.0049,0,0,0-1.74.3838L4,17.8818V12.49L11.7642,6.002,19.7578,7.94a2.021,2.021,0,0,0,1.314-.1206L28,4.5859l-.8457-1.8115L20.2358,5.998,12.2422,4.06a2.0033,2.0033,0,0,0-1.74.3838L4,9.8818V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartMultiLine16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultiLine16(_ref58, ref) {
  var children = _ref58.children,
      rest = _objectWithoutProperties(_ref58, _excluded58);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path120 || (_path120 = /*#__PURE__*/React.createElement("path", {
    d: "M4.5859,28l7.1783-5.998L19.7578,23.94a2.021,2.021,0,0,0,1.314-.1206L28,20.5811l-.8479-1.8121-6.9163,3.229L12.2422,20.06a2.0033,2.0033,0,0,0-1.74.3838L4,25.8818V20.49l7.7642-6.4877L19.7578,15.94a2.021,2.021,0,0,0,1.314-.1206l6.9287-3.2383-.8467-1.812-6.918,3.2285L12.2422,12.06a2.0049,2.0049,0,0,0-1.74.3838L4,17.8818V12.49L11.7642,6.002,19.7578,7.94a2.021,2.021,0,0,0,1.314-.1206L28,4.5859l-.8457-1.8115L20.2358,5.998,12.2422,4.06a2.0033,2.0033,0,0,0-1.74.3838L4,9.8818V2H2V28a2,2,0,0,0,2,2H30V28Z"
  })), children);
})));
var ChartMultitype32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultitype32(_ref59, ref) {
  var children = _ref59.children,
      rest = _objectWithoutProperties(_ref59, _excluded59);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path121 || (_path121 = /*#__PURE__*/React.createElement("path", {
    d: "M28 22H30V30H28zM24 18H26V30H24zM20 26H22V30H20zM9 16a7 7 0 107 7A7.0078 7.0078 0 009 16zm4.8989 6H10V18.1011A5.0145 5.0145 0 0113.8989 22zM9 28a5 5 0 01-1-9.8989V22a2 2 0 002 2h3.8989A5.0081 5.0081 0 019 28zM22.5352 12l4-6H30V4H25.4648l-4 6H18V2H16V14a2 2 0 002 2H30V14H18V12z"
  })), _circle || (_circle = /*#__PURE__*/React.createElement("circle", {
    cx: "11",
    cy: "7",
    r: "1"
  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "11",
    r: "1"
  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "5",
    r: "1"
  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement("circle", {
    cx: "5",
    cy: "9",
    r: "1"
  })), _circle5 || (_circle5 = /*#__PURE__*/React.createElement("circle", {
    cx: "3",
    cy: "13",
    r: "1"
  })), children);
})));
var ChartMultitype24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultitype24(_ref60, ref) {
  var children = _ref60.children,
      rest = _objectWithoutProperties(_ref60, _excluded60);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path122 || (_path122 = /*#__PURE__*/React.createElement("path", {
    d: "M28 22H30V30H28zM24 18H26V30H24zM20 26H22V30H20zM9 16a7 7 0 107 7A7.0078 7.0078 0 009 16zm4.8989 6H10V18.1011A5.0145 5.0145 0 0113.8989 22zM9 28a5 5 0 01-1-9.8989V22a2 2 0 002 2h3.8989A5.0081 5.0081 0 019 28zM22.5352 12l4-6H30V4H25.4648l-4 6H18V2H16V14a2 2 0 002 2H30V14H18V12z"
  })), _circle6 || (_circle6 = /*#__PURE__*/React.createElement("circle", {
    cx: "11",
    cy: "7",
    r: "1"
  })), _circle7 || (_circle7 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "11",
    r: "1"
  })), _circle8 || (_circle8 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "5",
    r: "1"
  })), _circle9 || (_circle9 = /*#__PURE__*/React.createElement("circle", {
    cx: "5",
    cy: "9",
    r: "1"
  })), _circle10 || (_circle10 = /*#__PURE__*/React.createElement("circle", {
    cx: "3",
    cy: "13",
    r: "1"
  })), children);
})));
var ChartMultitype20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultitype20(_ref61, ref) {
  var children = _ref61.children,
      rest = _objectWithoutProperties(_ref61, _excluded61);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path123 || (_path123 = /*#__PURE__*/React.createElement("path", {
    d: "M28 22H30V30H28zM24 18H26V30H24zM20 26H22V30H20zM9 16a7 7 0 107 7A7.0078 7.0078 0 009 16zm4.8989 6H10V18.1011A5.0145 5.0145 0 0113.8989 22zM9 28a5 5 0 01-1-9.8989V22a2 2 0 002 2h3.8989A5.0081 5.0081 0 019 28zM22.5352 12l4-6H30V4H25.4648l-4 6H18V2H16V14a2 2 0 002 2H30V14H18V12z"
  })), _circle11 || (_circle11 = /*#__PURE__*/React.createElement("circle", {
    cx: "11",
    cy: "7",
    r: "1"
  })), _circle12 || (_circle12 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "11",
    r: "1"
  })), _circle13 || (_circle13 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "5",
    r: "1"
  })), _circle14 || (_circle14 = /*#__PURE__*/React.createElement("circle", {
    cx: "5",
    cy: "9",
    r: "1"
  })), _circle15 || (_circle15 = /*#__PURE__*/React.createElement("circle", {
    cx: "3",
    cy: "13",
    r: "1"
  })), children);
})));
var ChartMultitype16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartMultitype16(_ref62, ref) {
  var children = _ref62.children,
      rest = _objectWithoutProperties(_ref62, _excluded62);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path124 || (_path124 = /*#__PURE__*/React.createElement("path", {
    d: "M28 22H30V30H28zM24 18H26V30H24zM20 26H22V30H20zM9 16a7 7 0 107 7A7.0078 7.0078 0 009 16zm4.8989 6H10V18.1011A5.0145 5.0145 0 0113.8989 22zM9 28a5 5 0 01-1-9.8989V22a2 2 0 002 2h3.8989A5.0081 5.0081 0 019 28zM22.5352 12l4-6H30V4H25.4648l-4 6H18V2H16V14a2 2 0 002 2H30V14H18V12z"
  })), _circle16 || (_circle16 = /*#__PURE__*/React.createElement("circle", {
    cx: "11",
    cy: "7",
    r: "1"
  })), _circle17 || (_circle17 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "11",
    r: "1"
  })), _circle18 || (_circle18 = /*#__PURE__*/React.createElement("circle", {
    cx: "7",
    cy: "5",
    r: "1"
  })), _circle19 || (_circle19 = /*#__PURE__*/React.createElement("circle", {
    cx: "5",
    cy: "9",
    r: "1"
  })), _circle20 || (_circle20 = /*#__PURE__*/React.createElement("circle", {
    cx: "3",
    cy: "13",
    r: "1"
  })), children);
})));
var ChartNetwork32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartNetwork32(_ref63, ref) {
  var children = _ref63.children,
      rest = _objectWithoutProperties(_ref63, _excluded63);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path125 || (_path125 = /*#__PURE__*/React.createElement("path", {
    d: "M26,14a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2H20a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h2v4.1A5,5,0,0,0,18.1,22H14V20a2,2,0,0,0-2-2H10V13.9a5,5,0,1,0-2,0V18H6a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V24h4.1A5,5,0,1,0,24,18.1V14ZM6,9a3,3,0,1,1,3,3A3,3,0,0,1,6,9Zm6,17H6V20h6Zm14-3a3,3,0,1,1-3-3A3,3,0,0,1,26,23ZM20,6h6v6H20Z"
  })), children);
})));
var ChartNetwork24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartNetwork24(_ref64, ref) {
  var children = _ref64.children,
      rest = _objectWithoutProperties(_ref64, _excluded64);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path126 || (_path126 = /*#__PURE__*/React.createElement("path", {
    d: "M26,14a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2H20a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h2v4.1A5,5,0,0,0,18.1,22H14V20a2,2,0,0,0-2-2H10V13.9a5,5,0,1,0-2,0V18H6a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V24h4.1A5,5,0,1,0,24,18.1V14ZM6,9a3,3,0,1,1,3,3A3,3,0,0,1,6,9Zm6,17H6V20h6Zm14-3a3,3,0,1,1-3-3A3,3,0,0,1,26,23ZM20,6h6v6H20Z"
  })), children);
})));
var ChartNetwork20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartNetwork20(_ref65, ref) {
  var children = _ref65.children,
      rest = _objectWithoutProperties(_ref65, _excluded65);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path127 || (_path127 = /*#__PURE__*/React.createElement("path", {
    d: "M26,14a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2H20a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h2v4.1A5,5,0,0,0,18.1,22H14V20a2,2,0,0,0-2-2H10V13.9a5,5,0,1,0-2,0V18H6a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V24h4.1A5,5,0,1,0,24,18.1V14ZM6,9a3,3,0,1,1,3,3A3,3,0,0,1,6,9Zm6,17H6V20h6Zm14-3a3,3,0,1,1-3-3A3,3,0,0,1,26,23ZM20,6h6v6H20Z"
  })), children);
})));
var ChartNetwork16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartNetwork16(_ref66, ref) {
  var children = _ref66.children,
      rest = _objectWithoutProperties(_ref66, _excluded66);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path128 || (_path128 = /*#__PURE__*/React.createElement("path", {
    d: "M26,14a2,2,0,0,0,2-2V6a2,2,0,0,0-2-2H20a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h2v4.1A5,5,0,0,0,18.1,22H14V20a2,2,0,0,0-2-2H10V13.9a5,5,0,1,0-2,0V18H6a2,2,0,0,0-2,2v6a2,2,0,0,0,2,2h6a2,2,0,0,0,2-2V24h4.1A5,5,0,1,0,24,18.1V14ZM6,9a3,3,0,1,1,3,3A3,3,0,0,1,6,9Zm6,17H6V20h6Zm14-3a3,3,0,1,1-3-3A3,3,0,0,1,26,23ZM20,6h6v6H20Z"
  })), children);
})));
var ChartParallel32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartParallel32(_ref67, ref) {
  var children = _ref67.children,
      rest = _objectWithoutProperties(_ref67, _excluded67);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path129 || (_path129 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2V5.3071l-6,2.25V2H20V7.5229l-8-3.2V2H10V4.4458l-6,3.75V2H2V30H4V27.6182l6-3V30h2V24.3442l8,2.4V30h2V26.5542l6-3.75V30h2V2Zm0,5.4429V12.5L22,17V9.6929ZM20,9.6768v7.5571l-8-4.8V6.4771ZM10,6.8042v5.7417l-6,5.25V10.5542ZM4,25.3818V20.4541l6-5.25v7.1777Zm8-3.1259v-7.49l8,4.8v5.0894Zm10,1.94V19.5L28,15v5.4458Z"
  })), children);
})));
var ChartParallel24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartParallel24(_ref68, ref) {
  var children = _ref68.children,
      rest = _objectWithoutProperties(_ref68, _excluded68);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path130 || (_path130 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2V5.3071l-6,2.25V2H20V7.5229l-8-3.2V2H10V4.4458l-6,3.75V2H2V30H4V27.6182l6-3V30h2V24.3442l8,2.4V30h2V26.5542l6-3.75V30h2V2Zm0,5.4429V12.5L22,17V9.6929ZM20,9.6768v7.5571l-8-4.8V6.4771ZM10,6.8042v5.7417l-6,5.25V10.5542ZM4,25.3818V20.4541l6-5.25v7.1777Zm8-3.1259v-7.49l8,4.8v5.0894Zm10,1.94V19.5L28,15v5.4458Z"
  })), children);
})));
var ChartParallel20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartParallel20(_ref69, ref) {
  var children = _ref69.children,
      rest = _objectWithoutProperties(_ref69, _excluded69);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path131 || (_path131 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2V5.3071l-6,2.25V2H20V7.5229l-8-3.2V2H10V4.4458l-6,3.75V2H2V30H4V27.6182l6-3V30h2V24.3442l8,2.4V30h2V26.5542l6-3.75V30h2V2Zm0,5.4429V12.5L22,17V9.6929ZM20,9.6768v7.5571l-8-4.8V6.4771ZM10,6.8042v5.7417l-6,5.25V10.5542ZM4,25.3818V20.4541l6-5.25v7.1777Zm8-3.1259v-7.49l8,4.8v5.0894Zm10,1.94V19.5L28,15v5.4458Z"
  })), children);
})));
var ChartParallel16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartParallel16(_ref70, ref) {
  var children = _ref70.children,
      rest = _objectWithoutProperties(_ref70, _excluded70);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path132 || (_path132 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2V5.3071l-6,2.25V2H20V7.5229l-8-3.2V2H10V4.4458l-6,3.75V2H2V30H4V27.6182l6-3V30h2V24.3442l8,2.4V30h2V26.5542l6-3.75V30h2V2Zm0,5.4429V12.5L22,17V9.6929ZM20,9.6768v7.5571l-8-4.8V6.4771ZM10,6.8042v5.7417l-6,5.25V10.5542ZM4,25.3818V20.4541l6-5.25v7.1777Zm8-3.1259v-7.49l8,4.8v5.0894Zm10,1.94V19.5L28,15v5.4458Z"
  })), children);
})));
var ChartPie32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPie32(_ref71, ref) {
  var children = _ref71.children,
      rest = _objectWithoutProperties(_ref71, _excluded71);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path133 || (_path133 = /*#__PURE__*/React.createElement("path", {
    d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4ZM26,15H17V6.05A10,10,0,0,1,26,15ZM15.42,26A10,10,0,0,1,15,6.05v9a2,2,0,0,0,2,2h9A10,10,0,0,1,15.42,26Z"
  })), children);
})));
var ChartPie24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPie24(_ref72, ref) {
  var children = _ref72.children,
      rest = _objectWithoutProperties(_ref72, _excluded72);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path134 || (_path134 = /*#__PURE__*/React.createElement("path", {
    d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4ZM26,15H17V6.05A10,10,0,0,1,26,15ZM15.42,26A10,10,0,0,1,15,6.05v9a2,2,0,0,0,2,2h9A10,10,0,0,1,15.42,26Z"
  })), children);
})));
var ChartPie20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPie20(_ref73, ref) {
  var children = _ref73.children,
      rest = _objectWithoutProperties(_ref73, _excluded73);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path135 || (_path135 = /*#__PURE__*/React.createElement("path", {
    d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4ZM26,15H17V6.05A10,10,0,0,1,26,15ZM15.42,26A10,10,0,0,1,15,6.05v9a2,2,0,0,0,2,2h9A10,10,0,0,1,15.42,26Z"
  })), children);
})));
var ChartPie16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPie16(_ref74, ref) {
  var children = _ref74.children,
      rest = _objectWithoutProperties(_ref74, _excluded74);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path136 || (_path136 = /*#__PURE__*/React.createElement("path", {
    d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4ZM26,15H17V6.05A10,10,0,0,1,26,15ZM15.42,26A10,10,0,0,1,15,6.05v9a2,2,0,0,0,2,2h9A10,10,0,0,1,15.42,26Z"
  })), children);
})));
var ChartPoint32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPoint32(_ref75, ref) {
  var children = _ref75.children,
      rest = _objectWithoutProperties(_ref75, _excluded75);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path137 || (_path137 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2.0023,2.0023,0,0,1-2-2V2H4V28H30Z"
  })), _circle21 || (_circle21 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "6",
    r: "3"
  })), _circle22 || (_circle22 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "22",
    r: "3"
  })), _circle23 || (_circle23 = /*#__PURE__*/React.createElement("circle", {
    cx: "18",
    cy: "14",
    r: "3"
  })), _path138 || (_path138 = /*#__PURE__*/React.createElement("path", {
    d: "M9,17a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,9,17Zm0-4a1,1,0,1,0,1,1A1.001,1.001,0,0,0,9,13Z"
  })), _circle24 || (_circle24 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "6",
    r: "3"
  })), _circle25 || (_circle25 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "22",
    r: "3"
  })), _path139 || (_path139 = /*#__PURE__*/React.createElement("path", {
    d: "M27 17a3 3 0 113-3A3.0033 3.0033 0 0127 17zm0-4a1 1 0 101 1A1.001 1.001 0 0027 13zM18 26a3 3 0 113-3A3.0033 3.0033 0 0118 26zm0-4a1 1 0 101 1A1.001 1.001 0 0018 22zM18 8a3 3 0 113-3A3.0033 3.0033 0 0118 8zm0-4a1 1 0 101 1A1.001 1.001 0 0018 4z"
  })), children);
})));
var ChartPoint24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPoint24(_ref76, ref) {
  var children = _ref76.children,
      rest = _objectWithoutProperties(_ref76, _excluded76);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path140 || (_path140 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2.0023,2.0023,0,0,1-2-2V2H4V28H30Z"
  })), _circle26 || (_circle26 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "6",
    r: "3"
  })), _circle27 || (_circle27 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "22",
    r: "3"
  })), _circle28 || (_circle28 = /*#__PURE__*/React.createElement("circle", {
    cx: "18",
    cy: "14",
    r: "3"
  })), _path141 || (_path141 = /*#__PURE__*/React.createElement("path", {
    d: "M9,17a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,9,17Zm0-4a1,1,0,1,0,1,1A1.001,1.001,0,0,0,9,13Z"
  })), _circle29 || (_circle29 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "6",
    r: "3"
  })), _circle30 || (_circle30 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "22",
    r: "3"
  })), _path142 || (_path142 = /*#__PURE__*/React.createElement("path", {
    d: "M27 17a3 3 0 113-3A3.0033 3.0033 0 0127 17zm0-4a1 1 0 101 1A1.001 1.001 0 0027 13zM18 26a3 3 0 113-3A3.0033 3.0033 0 0118 26zm0-4a1 1 0 101 1A1.001 1.001 0 0018 22zM18 8a3 3 0 113-3A3.0033 3.0033 0 0118 8zm0-4a1 1 0 101 1A1.001 1.001 0 0018 4z"
  })), children);
})));
var ChartPoint20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPoint20(_ref77, ref) {
  var children = _ref77.children,
      rest = _objectWithoutProperties(_ref77, _excluded77);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path143 || (_path143 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2.0023,2.0023,0,0,1-2-2V2H4V28H30Z"
  })), _circle31 || (_circle31 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "6",
    r: "3"
  })), _circle32 || (_circle32 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "22",
    r: "3"
  })), _circle33 || (_circle33 = /*#__PURE__*/React.createElement("circle", {
    cx: "18",
    cy: "14",
    r: "3"
  })), _path144 || (_path144 = /*#__PURE__*/React.createElement("path", {
    d: "M9,17a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,9,17Zm0-4a1,1,0,1,0,1,1A1.001,1.001,0,0,0,9,13Z"
  })), _circle34 || (_circle34 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "6",
    r: "3"
  })), _circle35 || (_circle35 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "22",
    r: "3"
  })), _path145 || (_path145 = /*#__PURE__*/React.createElement("path", {
    d: "M27 17a3 3 0 113-3A3.0033 3.0033 0 0127 17zm0-4a1 1 0 101 1A1.001 1.001 0 0027 13zM18 26a3 3 0 113-3A3.0033 3.0033 0 0118 26zm0-4a1 1 0 101 1A1.001 1.001 0 0018 22zM18 8a3 3 0 113-3A3.0033 3.0033 0 0118 8zm0-4a1 1 0 101 1A1.001 1.001 0 0018 4z"
  })), children);
})));
var ChartPoint16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPoint16(_ref78, ref) {
  var children = _ref78.children,
      rest = _objectWithoutProperties(_ref78, _excluded78);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path146 || (_path146 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2.0023,2.0023,0,0,1-2-2V2H4V28H30Z"
  })), _circle36 || (_circle36 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "6",
    r: "3"
  })), _circle37 || (_circle37 = /*#__PURE__*/React.createElement("circle", {
    cx: "9",
    cy: "22",
    r: "3"
  })), _circle38 || (_circle38 = /*#__PURE__*/React.createElement("circle", {
    cx: "18",
    cy: "14",
    r: "3"
  })), _path147 || (_path147 = /*#__PURE__*/React.createElement("path", {
    d: "M9,17a3,3,0,1,1,3-3A3.0033,3.0033,0,0,1,9,17Zm0-4a1,1,0,1,0,1,1A1.001,1.001,0,0,0,9,13Z"
  })), _circle39 || (_circle39 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "6",
    r: "3"
  })), _circle40 || (_circle40 = /*#__PURE__*/React.createElement("circle", {
    cx: "27",
    cy: "22",
    r: "3"
  })), _path148 || (_path148 = /*#__PURE__*/React.createElement("path", {
    d: "M27 17a3 3 0 113-3A3.0033 3.0033 0 0127 17zm0-4a1 1 0 101 1A1.001 1.001 0 0027 13zM18 26a3 3 0 113-3A3.0033 3.0033 0 0118 26zm0-4a1 1 0 101 1A1.001 1.001 0 0018 22zM18 8a3 3 0 113-3A3.0033 3.0033 0 0118 8zm0-4a1 1 0 101 1A1.001 1.001 0 0018 4z"
  })), children);
})));
var ChartPopulation32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPopulation32(_ref79, ref) {
  var children = _ref79.children,
      rest = _objectWithoutProperties(_ref79, _excluded79);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path149 || (_path149 = /*#__PURE__*/React.createElement("path", {
    d: "M30,22H17V20h9V14H17V12h5V6H17V2H15V6H10v6h5v2H6v6h9v2H2v6H15v2h2V28H30ZM20,8v2H17V8Zm-8,2V8h3v2Zm12,6v2H17V16ZM8,18V16h7v2ZM4,26V24H15v2Zm24,0H17V24H28Z"
  })), children);
})));
var ChartPopulation24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPopulation24(_ref80, ref) {
  var children = _ref80.children,
      rest = _objectWithoutProperties(_ref80, _excluded80);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path150 || (_path150 = /*#__PURE__*/React.createElement("path", {
    d: "M30,22H17V20h9V14H17V12h5V6H17V2H15V6H10v6h5v2H6v6h9v2H2v6H15v2h2V28H30ZM20,8v2H17V8Zm-8,2V8h3v2Zm12,6v2H17V16ZM8,18V16h7v2ZM4,26V24H15v2Zm24,0H17V24H28Z"
  })), children);
})));
var ChartPopulation20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPopulation20(_ref81, ref) {
  var children = _ref81.children,
      rest = _objectWithoutProperties(_ref81, _excluded81);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path151 || (_path151 = /*#__PURE__*/React.createElement("path", {
    d: "M30,22H17V20h9V14H17V12h5V6H17V2H15V6H10v6h5v2H6v6h9v2H2v6H15v2h2V28H30ZM20,8v2H17V8Zm-8,2V8h3v2Zm12,6v2H17V16ZM8,18V16h7v2ZM4,26V24H15v2Zm24,0H17V24H28Z"
  })), children);
})));
var ChartPopulation16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartPopulation16(_ref82, ref) {
  var children = _ref82.children,
      rest = _objectWithoutProperties(_ref82, _excluded82);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path152 || (_path152 = /*#__PURE__*/React.createElement("path", {
    d: "M30,22H17V20h9V14H17V12h5V6H17V2H15V6H10v6h5v2H6v6h9v2H2v6H15v2h2V28H30ZM20,8v2H17V8Zm-8,2V8h3v2Zm12,6v2H17V16ZM8,18V16h7v2ZM4,26V24H15v2Zm24,0H17V24H28Z"
  })), children);
})));
var ChartRadar32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadar32(_ref83, ref) {
  var children = _ref83.children,
      rest = _objectWithoutProperties(_ref83, _excluded83);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path153 || (_path153 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2,2,13,8,30H24l6-17Zm2.5818,19.2651-5.9861,1.3306-1.4226-7.8252,4.91-4.209,5.4416,4.0816Zm.1977,2.0054L21.3264,28H10.6736l1.7912-3.3267ZM9.59,13.4937,5.74,12.605,15,5.3291V8.8569ZM17,8.75V5.3291l9.26,7.2759-3.15.727ZM4.6143,14.3979l4.6535,1.0738,1.4844,8.164-1.738,3.2281ZM22.9858,26.8638l-2.5766-4.7852,3.0063-6.7646,3.97-.9161Z"
  })), children);
})));
var ChartRadar24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadar24(_ref84, ref) {
  var children = _ref84.children,
      rest = _objectWithoutProperties(_ref84, _excluded84);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path154 || (_path154 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2,2,13,8,30H24l6-17Zm2.5818,19.2651-5.9861,1.3306-1.4226-7.8252,4.91-4.209,5.4416,4.0816Zm.1977,2.0054L21.3264,28H10.6736l1.7912-3.3267ZM9.59,13.4937,5.74,12.605,15,5.3291V8.8569ZM17,8.75V5.3291l9.26,7.2759-3.15.727ZM4.6143,14.3979l4.6535,1.0738,1.4844,8.164-1.738,3.2281ZM22.9858,26.8638l-2.5766-4.7852,3.0063-6.7646,3.97-.9161Z"
  })), children);
})));
var ChartRadar20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadar20(_ref85, ref) {
  var children = _ref85.children,
      rest = _objectWithoutProperties(_ref85, _excluded85);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path155 || (_path155 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2,2,13,8,30H24l6-17Zm2.5818,19.2651-5.9861,1.3306-1.4226-7.8252,4.91-4.209,5.4416,4.0816Zm.1977,2.0054L21.3264,28H10.6736l1.7912-3.3267ZM9.59,13.4937,5.74,12.605,15,5.3291V8.8569ZM17,8.75V5.3291l9.26,7.2759-3.15.727ZM4.6143,14.3979l4.6535,1.0738,1.4844,8.164-1.738,3.2281ZM22.9858,26.8638l-2.5766-4.7852,3.0063-6.7646,3.97-.9161Z"
  })), children);
})));
var ChartRadar16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadar16(_ref86, ref) {
  var children = _ref86.children,
      rest = _objectWithoutProperties(_ref86, _excluded86);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path156 || (_path156 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2,2,13,8,30H24l6-17Zm2.5818,19.2651-5.9861,1.3306-1.4226-7.8252,4.91-4.209,5.4416,4.0816Zm.1977,2.0054L21.3264,28H10.6736l1.7912-3.3267ZM9.59,13.4937,5.74,12.605,15,5.3291V8.8569ZM17,8.75V5.3291l9.26,7.2759-3.15.727ZM4.6143,14.3979l4.6535,1.0738,1.4844,8.164-1.738,3.2281ZM22.9858,26.8638l-2.5766-4.7852,3.0063-6.7646,3.97-.9161Z"
  })), children);
})));
var ChartRadial32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadial32(_ref87, ref) {
  var children = _ref87.children,
      rest = _objectWithoutProperties(_ref87, _excluded87);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path157 || (_path157 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14.0158,14.0158,0,0,1,2,16H4A12,12,0,1,0,16,4V2a14,14,0,0,1,0,28Z"
  })), _path158 || (_path158 = /*#__PURE__*/React.createElement("path", {
    d: "M16,26A10.0115,10.0115,0,0,1,6,16H8a8,8,0,1,0,8-8V6a10,10,0,0,1,0,20Z"
  })), _path159 || (_path159 = /*#__PURE__*/React.createElement("path", {
    d: "M16,22a6.0069,6.0069,0,0,1-6-6h2a4,4,0,1,0,4-4V10a6,6,0,0,1,0,12Z"
  })), children);
})));
var ChartRadial24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadial24(_ref88, ref) {
  var children = _ref88.children,
      rest = _objectWithoutProperties(_ref88, _excluded88);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path160 || (_path160 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14.0158,14.0158,0,0,1,2,16H4A12,12,0,1,0,16,4V2a14,14,0,0,1,0,28Z"
  })), _path161 || (_path161 = /*#__PURE__*/React.createElement("path", {
    d: "M16,26A10.0115,10.0115,0,0,1,6,16H8a8,8,0,1,0,8-8V6a10,10,0,0,1,0,20Z"
  })), _path162 || (_path162 = /*#__PURE__*/React.createElement("path", {
    d: "M16,22a6.0069,6.0069,0,0,1-6-6h2a4,4,0,1,0,4-4V10a6,6,0,0,1,0,12Z"
  })), children);
})));
var ChartRadial20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadial20(_ref89, ref) {
  var children = _ref89.children,
      rest = _objectWithoutProperties(_ref89, _excluded89);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path163 || (_path163 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14.0158,14.0158,0,0,1,2,16H4A12,12,0,1,0,16,4V2a14,14,0,0,1,0,28Z"
  })), _path164 || (_path164 = /*#__PURE__*/React.createElement("path", {
    d: "M16,26A10.0115,10.0115,0,0,1,6,16H8a8,8,0,1,0,8-8V6a10,10,0,0,1,0,20Z"
  })), _path165 || (_path165 = /*#__PURE__*/React.createElement("path", {
    d: "M16,22a6.0069,6.0069,0,0,1-6-6h2a4,4,0,1,0,4-4V10a6,6,0,0,1,0,12Z"
  })), children);
})));
var ChartRadial16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRadial16(_ref90, ref) {
  var children = _ref90.children,
      rest = _objectWithoutProperties(_ref90, _excluded90);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path166 || (_path166 = /*#__PURE__*/React.createElement("path", {
    d: "M16,30A14.0158,14.0158,0,0,1,2,16H4A12,12,0,1,0,16,4V2a14,14,0,0,1,0,28Z"
  })), _path167 || (_path167 = /*#__PURE__*/React.createElement("path", {
    d: "M16,26A10.0115,10.0115,0,0,1,6,16H8a8,8,0,1,0,8-8V6a10,10,0,0,1,0,20Z"
  })), _path168 || (_path168 = /*#__PURE__*/React.createElement("path", {
    d: "M16,22a6.0069,6.0069,0,0,1-6-6h2a4,4,0,1,0,4-4V10a6,6,0,0,1,0,12Z"
  })), children);
})));
var ChartRelationship32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRelationship32(_ref91, ref) {
  var children = _ref91.children,
      rest = _objectWithoutProperties(_ref91, _excluded91);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path169 || (_path169 = /*#__PURE__*/React.createElement("path", {
    d: "M26,6a3.9963,3.9963,0,0,0-3.8579,3H17.9305A7.9964,7.9964,0,1,0,9,17.9307v4.2114a4,4,0,1,0,2,0V17.9307a7.951,7.951,0,0,0,3.8976-1.6192l3.6693,3.67A3.9529,3.9529,0,0,0,18,22a4,4,0,1,0,4-4,3.9521,3.9521,0,0,0-2.019.5669l-3.6694-3.6694A7.9493,7.9493,0,0,0,17.9305,11h4.2116A3.9934,3.9934,0,1,0,26,6ZM12,26a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,12,26ZM10,16a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,10,16Zm14,6a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,24,22Zm2-10a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,26,12Z"
  })), children);
})));
var ChartRelationship24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRelationship24(_ref92, ref) {
  var children = _ref92.children,
      rest = _objectWithoutProperties(_ref92, _excluded92);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path170 || (_path170 = /*#__PURE__*/React.createElement("path", {
    d: "M26,6a3.9963,3.9963,0,0,0-3.8579,3H17.9305A7.9964,7.9964,0,1,0,9,17.9307v4.2114a4,4,0,1,0,2,0V17.9307a7.951,7.951,0,0,0,3.8976-1.6192l3.6693,3.67A3.9529,3.9529,0,0,0,18,22a4,4,0,1,0,4-4,3.9521,3.9521,0,0,0-2.019.5669l-3.6694-3.6694A7.9493,7.9493,0,0,0,17.9305,11h4.2116A3.9934,3.9934,0,1,0,26,6ZM12,26a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,12,26ZM10,16a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,10,16Zm14,6a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,24,22Zm2-10a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,26,12Z"
  })), children);
})));
var ChartRelationship20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRelationship20(_ref93, ref) {
  var children = _ref93.children,
      rest = _objectWithoutProperties(_ref93, _excluded93);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path171 || (_path171 = /*#__PURE__*/React.createElement("path", {
    d: "M26,6a3.9963,3.9963,0,0,0-3.8579,3H17.9305A7.9964,7.9964,0,1,0,9,17.9307v4.2114a4,4,0,1,0,2,0V17.9307a7.951,7.951,0,0,0,3.8976-1.6192l3.6693,3.67A3.9529,3.9529,0,0,0,18,22a4,4,0,1,0,4-4,3.9521,3.9521,0,0,0-2.019.5669l-3.6694-3.6694A7.9493,7.9493,0,0,0,17.9305,11h4.2116A3.9934,3.9934,0,1,0,26,6ZM12,26a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,12,26ZM10,16a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,10,16Zm14,6a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,24,22Zm2-10a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,26,12Z"
  })), children);
})));
var ChartRelationship16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRelationship16(_ref94, ref) {
  var children = _ref94.children,
      rest = _objectWithoutProperties(_ref94, _excluded94);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path172 || (_path172 = /*#__PURE__*/React.createElement("path", {
    d: "M26,6a3.9963,3.9963,0,0,0-3.8579,3H17.9305A7.9964,7.9964,0,1,0,9,17.9307v4.2114a4,4,0,1,0,2,0V17.9307a7.951,7.951,0,0,0,3.8976-1.6192l3.6693,3.67A3.9529,3.9529,0,0,0,18,22a4,4,0,1,0,4-4,3.9521,3.9521,0,0,0-2.019.5669l-3.6694-3.6694A7.9493,7.9493,0,0,0,17.9305,11h4.2116A3.9934,3.9934,0,1,0,26,6ZM12,26a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,12,26ZM10,16a6,6,0,1,1,6-6A6.0066,6.0066,0,0,1,10,16Zm14,6a2,2,0,1,1-2-2A2.0023,2.0023,0,0,1,24,22Zm2-10a2,2,0,1,1,2-2A2.0023,2.0023,0,0,1,26,12Z"
  })), children);
})));
var ChartRing32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRing32(_ref95, ref) {
  var children = _ref95.children,
      rest = _objectWithoutProperties(_ref95, _excluded95);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path173 || (_path173 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14.0158,14.0158,0,0,0,16,2ZM27.9493,15.001H21.91a5.9825,5.9825,0,0,0-9.3806-3.8853l-4.27-4.27a11.9783,11.9783,0,0,1,19.69,8.1548ZM16,20a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,20ZM4,16A11.937,11.937,0,0,1,6.8455,8.26l4.27,4.2695A5.9836,5.9836,0,0,0,15,21.9106v6.04A12.0105,12.0105,0,0,1,4,16ZM17,27.95v-6.04A6.0069,6.0069,0,0,0,21.91,17h6.04A12.0082,12.0082,0,0,1,17,27.95Z"
  })), children);
})));
var ChartRing24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRing24(_ref96, ref) {
  var children = _ref96.children,
      rest = _objectWithoutProperties(_ref96, _excluded96);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path174 || (_path174 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14.0158,14.0158,0,0,0,16,2ZM27.9493,15.001H21.91a5.9825,5.9825,0,0,0-9.3806-3.8853l-4.27-4.27a11.9783,11.9783,0,0,1,19.69,8.1548ZM16,20a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,20ZM4,16A11.937,11.937,0,0,1,6.8455,8.26l4.27,4.2695A5.9836,5.9836,0,0,0,15,21.9106v6.04A12.0105,12.0105,0,0,1,4,16ZM17,27.95v-6.04A6.0069,6.0069,0,0,0,21.91,17h6.04A12.0082,12.0082,0,0,1,17,27.95Z"
  })), children);
})));
var ChartRing20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRing20(_ref97, ref) {
  var children = _ref97.children,
      rest = _objectWithoutProperties(_ref97, _excluded97);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path175 || (_path175 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14.0158,14.0158,0,0,0,16,2ZM27.9493,15.001H21.91a5.9825,5.9825,0,0,0-9.3806-3.8853l-4.27-4.27a11.9783,11.9783,0,0,1,19.69,8.1548ZM16,20a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,20ZM4,16A11.937,11.937,0,0,1,6.8455,8.26l4.27,4.2695A5.9836,5.9836,0,0,0,15,21.9106v6.04A12.0105,12.0105,0,0,1,4,16ZM17,27.95v-6.04A6.0069,6.0069,0,0,0,21.91,17h6.04A12.0082,12.0082,0,0,1,17,27.95Z"
  })), children);
})));
var ChartRing16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRing16(_ref98, ref) {
  var children = _ref98.children,
      rest = _objectWithoutProperties(_ref98, _excluded98);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path176 || (_path176 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14.0158,14.0158,0,0,0,16,2ZM27.9493,15.001H21.91a5.9825,5.9825,0,0,0-9.3806-3.8853l-4.27-4.27a11.9783,11.9783,0,0,1,19.69,8.1548ZM16,20a4,4,0,1,1,4-4A4.0045,4.0045,0,0,1,16,20ZM4,16A11.937,11.937,0,0,1,6.8455,8.26l4.27,4.2695A5.9836,5.9836,0,0,0,15,21.9106v6.04A12.0105,12.0105,0,0,1,4,16ZM17,27.95v-6.04A6.0069,6.0069,0,0,0,21.91,17h6.04A12.0082,12.0082,0,0,1,17,27.95Z"
  })), children);
})));
var ChartRiver32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRiver32(_ref99, ref) {
  var children = _ref99.children,
      rest = _objectWithoutProperties(_ref99, _excluded99);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path177 || (_path177 = /*#__PURE__*/React.createElement("path", {
    d: "M12.4326,20.0171l8.0376,4.68a1.958,1.958,0,0,0,1.0508.3012,2.2412,2.2412,0,0,0,.4888-.0556l7.2532-1.9769A1,1,0,0,0,30,22.0007V7.996A1,1,0,0,0,28.74,7.0305L21.5034,8.9829l-8.0371-4.68a1.9917,1.9917,0,0,0-1.8652-.1352L4,7.4727V2H2V28a2,2,0,0,0,2,2H30V28H4V23.6577ZM28,21.2344l-6.4966,1.75-8.0371-4.68a1.9931,1.9931,0,0,0-1.8652-.1353L4,21.4746V16.6572l8.4326-3.6416L20.47,17.6968a1.962,1.962,0,0,0,1.0508.3008,2.2112,2.2112,0,0,0,.4888-.0557L28,16.31ZM12.4326,6.0156l8.0376,4.68a2.0091,2.0091,0,0,0,1.54.2451L28,9.3081v4.9258l-6.4966,1.7505-8.0371-4.6812a1.9917,1.9917,0,0,0-1.8652-.1352L4,14.4736V9.6562Z"
  })), children);
})));
var ChartRiver24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRiver24(_ref100, ref) {
  var children = _ref100.children,
      rest = _objectWithoutProperties(_ref100, _excluded100);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path178 || (_path178 = /*#__PURE__*/React.createElement("path", {
    d: "M12.4326,20.0171l8.0376,4.68a1.958,1.958,0,0,0,1.0508.3012,2.2412,2.2412,0,0,0,.4888-.0556l7.2532-1.9769A1,1,0,0,0,30,22.0007V7.996A1,1,0,0,0,28.74,7.0305L21.5034,8.9829l-8.0371-4.68a1.9917,1.9917,0,0,0-1.8652-.1352L4,7.4727V2H2V28a2,2,0,0,0,2,2H30V28H4V23.6577ZM28,21.2344l-6.4966,1.75-8.0371-4.68a1.9931,1.9931,0,0,0-1.8652-.1353L4,21.4746V16.6572l8.4326-3.6416L20.47,17.6968a1.962,1.962,0,0,0,1.0508.3008,2.2112,2.2112,0,0,0,.4888-.0557L28,16.31ZM12.4326,6.0156l8.0376,4.68a2.0091,2.0091,0,0,0,1.54.2451L28,9.3081v4.9258l-6.4966,1.7505-8.0371-4.6812a1.9917,1.9917,0,0,0-1.8652-.1352L4,14.4736V9.6562Z"
  })), children);
})));
var ChartRiver20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRiver20(_ref101, ref) {
  var children = _ref101.children,
      rest = _objectWithoutProperties(_ref101, _excluded101);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path179 || (_path179 = /*#__PURE__*/React.createElement("path", {
    d: "M12.4326,20.0171l8.0376,4.68a1.958,1.958,0,0,0,1.0508.3012,2.2412,2.2412,0,0,0,.4888-.0556l7.2532-1.9769A1,1,0,0,0,30,22.0007V7.996A1,1,0,0,0,28.74,7.0305L21.5034,8.9829l-8.0371-4.68a1.9917,1.9917,0,0,0-1.8652-.1352L4,7.4727V2H2V28a2,2,0,0,0,2,2H30V28H4V23.6577ZM28,21.2344l-6.4966,1.75-8.0371-4.68a1.9931,1.9931,0,0,0-1.8652-.1353L4,21.4746V16.6572l8.4326-3.6416L20.47,17.6968a1.962,1.962,0,0,0,1.0508.3008,2.2112,2.2112,0,0,0,.4888-.0557L28,16.31ZM12.4326,6.0156l8.0376,4.68a2.0091,2.0091,0,0,0,1.54.2451L28,9.3081v4.9258l-6.4966,1.7505-8.0371-4.6812a1.9917,1.9917,0,0,0-1.8652-.1352L4,14.4736V9.6562Z"
  })), children);
})));
var ChartRiver16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRiver16(_ref102, ref) {
  var children = _ref102.children,
      rest = _objectWithoutProperties(_ref102, _excluded102);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path180 || (_path180 = /*#__PURE__*/React.createElement("path", {
    d: "M12.4326,20.0171l8.0376,4.68a1.958,1.958,0,0,0,1.0508.3012,2.2412,2.2412,0,0,0,.4888-.0556l7.2532-1.9769A1,1,0,0,0,30,22.0007V7.996A1,1,0,0,0,28.74,7.0305L21.5034,8.9829l-8.0371-4.68a1.9917,1.9917,0,0,0-1.8652-.1352L4,7.4727V2H2V28a2,2,0,0,0,2,2H30V28H4V23.6577ZM28,21.2344l-6.4966,1.75-8.0371-4.68a1.9931,1.9931,0,0,0-1.8652-.1353L4,21.4746V16.6572l8.4326-3.6416L20.47,17.6968a1.962,1.962,0,0,0,1.0508.3008,2.2112,2.2112,0,0,0,.4888-.0557L28,16.31ZM12.4326,6.0156l8.0376,4.68a2.0091,2.0091,0,0,0,1.54.2451L28,9.3081v4.9258l-6.4966,1.7505-8.0371-4.6812a1.9917,1.9917,0,0,0-1.8652-.1352L4,14.4736V9.6562Z"
  })), children);
})));
var ChartRose32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRose32(_ref103, ref) {
  var children = _ref103.children,
      rest = _objectWithoutProperties(_ref103, _excluded103);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path181 || (_path181 = /*#__PURE__*/React.createElement("path", {
    d: "M30,17A15.017,15.017,0,0,0,15,2H14V8.0591A9.0122,9.0122,0,0,0,6.0591,16H4v1A11.0109,11.0109,0,0,0,14,27.9492V30h1A13.0084,13.0084,0,0,0,27.9492,18H30ZM16,4.0381A13.0217,13.0217,0,0,1,27.9619,16H16ZM14,10.08V16H8.08A7.0037,7.0037,0,0,1,14,10.08ZM6.0552,18H14v7.939A9.0134,9.0134,0,0,1,6.0552,18ZM16,27.9551V18h9.9551A11.0191,11.0191,0,0,1,16,27.9551Z"
  })), children);
})));
var ChartRose24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRose24(_ref104, ref) {
  var children = _ref104.children,
      rest = _objectWithoutProperties(_ref104, _excluded104);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path182 || (_path182 = /*#__PURE__*/React.createElement("path", {
    d: "M30,17A15.017,15.017,0,0,0,15,2H14V8.0591A9.0122,9.0122,0,0,0,6.0591,16H4v1A11.0109,11.0109,0,0,0,14,27.9492V30h1A13.0084,13.0084,0,0,0,27.9492,18H30ZM16,4.0381A13.0217,13.0217,0,0,1,27.9619,16H16ZM14,10.08V16H8.08A7.0037,7.0037,0,0,1,14,10.08ZM6.0552,18H14v7.939A9.0134,9.0134,0,0,1,6.0552,18ZM16,27.9551V18h9.9551A11.0191,11.0191,0,0,1,16,27.9551Z"
  })), children);
})));
var ChartRose20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRose20(_ref105, ref) {
  var children = _ref105.children,
      rest = _objectWithoutProperties(_ref105, _excluded105);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path183 || (_path183 = /*#__PURE__*/React.createElement("path", {
    d: "M30,17A15.017,15.017,0,0,0,15,2H14V8.0591A9.0122,9.0122,0,0,0,6.0591,16H4v1A11.0109,11.0109,0,0,0,14,27.9492V30h1A13.0084,13.0084,0,0,0,27.9492,18H30ZM16,4.0381A13.0217,13.0217,0,0,1,27.9619,16H16ZM14,10.08V16H8.08A7.0037,7.0037,0,0,1,14,10.08ZM6.0552,18H14v7.939A9.0134,9.0134,0,0,1,6.0552,18ZM16,27.9551V18h9.9551A11.0191,11.0191,0,0,1,16,27.9551Z"
  })), children);
})));
var ChartRose16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartRose16(_ref106, ref) {
  var children = _ref106.children,
      rest = _objectWithoutProperties(_ref106, _excluded106);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path184 || (_path184 = /*#__PURE__*/React.createElement("path", {
    d: "M30,17A15.017,15.017,0,0,0,15,2H14V8.0591A9.0122,9.0122,0,0,0,6.0591,16H4v1A11.0109,11.0109,0,0,0,14,27.9492V30h1A13.0084,13.0084,0,0,0,27.9492,18H30ZM16,4.0381A13.0217,13.0217,0,0,1,27.9619,16H16ZM14,10.08V16H8.08A7.0037,7.0037,0,0,1,14,10.08ZM6.0552,18H14v7.939A9.0134,9.0134,0,0,1,6.0552,18ZM16,27.9551V18h9.9551A11.0191,11.0191,0,0,1,16,27.9551Z"
  })), children);
})));
var ChartScatter32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartScatter32(_ref107, ref) {
  var children = _ref107.children,
      rest = _objectWithoutProperties(_ref107, _excluded107);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path185 || (_path185 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _circle41 || (_circle41 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "22",
    r: "2"
  })), _circle42 || (_circle42 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "15",
    r: "2"
  })), _circle43 || (_circle43 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "15",
    r: "2"
  })), _circle44 || (_circle44 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "6",
    r: "2"
  })), _circle45 || (_circle45 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "8",
    r: "2"
  })), children);
})));
var ChartScatter24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartScatter24(_ref108, ref) {
  var children = _ref108.children,
      rest = _objectWithoutProperties(_ref108, _excluded108);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path186 || (_path186 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _circle46 || (_circle46 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "22",
    r: "2"
  })), _circle47 || (_circle47 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "15",
    r: "2"
  })), _circle48 || (_circle48 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "15",
    r: "2"
  })), _circle49 || (_circle49 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "6",
    r: "2"
  })), _circle50 || (_circle50 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "8",
    r: "2"
  })), children);
})));
var ChartScatter20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartScatter20(_ref109, ref) {
  var children = _ref109.children,
      rest = _objectWithoutProperties(_ref109, _excluded109);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path187 || (_path187 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _circle51 || (_circle51 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "22",
    r: "2"
  })), _circle52 || (_circle52 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "15",
    r: "2"
  })), _circle53 || (_circle53 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "15",
    r: "2"
  })), _circle54 || (_circle54 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "6",
    r: "2"
  })), _circle55 || (_circle55 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "8",
    r: "2"
  })), children);
})));
var ChartScatter16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartScatter16(_ref110, ref) {
  var children = _ref110.children,
      rest = _objectWithoutProperties(_ref110, _excluded110);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path188 || (_path188 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _circle56 || (_circle56 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "22",
    r: "2"
  })), _circle57 || (_circle57 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "15",
    r: "2"
  })), _circle58 || (_circle58 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "15",
    r: "2"
  })), _circle59 || (_circle59 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "6",
    r: "2"
  })), _circle60 || (_circle60 = /*#__PURE__*/React.createElement("circle", {
    cx: "14",
    cy: "8",
    r: "2"
  })), children);
})));
var ChartSpiral32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSpiral32(_ref111, ref) {
  var children = _ref111.children,
      rest = _objectWithoutProperties(_ref111, _excluded111);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path189 || (_path189 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A13.919,13.919,0,0,0,7.3245,5.0327,1.9728,1.9728,0,0,0,7,5,2,2,0,0,0,5,7a1.9752,1.9752,0,0,0,.0327.3247A13.986,13.986,0,1,0,16,2Zm0,26A11.977,11.977,0,0,1,6.3589,8.8857a1.8311,1.8311,0,0,0,1.1528.04l1.4634,1.4634a8.9862,8.9862,0,0,0,11.8311,13.207,1.9916,1.9916,0,0,0,2.79-2.79,8.9294,8.9294,0,0,0,0-9.6124,1.9916,1.9916,0,0,0-2.79-2.79,8.9445,8.9445,0,0,0-10.417.5713L8.9258,7.5117a1.8294,1.8294,0,0,0-.04-1.1528A11.9925,11.9925,0,1,1,16,28Zm0-14a2,2,0,1,1-2,2A2.0025,2.0025,0,0,1,16,14Zm3.4331-.019,2.0552-2.0552a2.0443,2.0443,0,0,0,.2265.0454,6.9573,6.9573,0,0,1,0,8.0576,2.0443,2.0443,0,0,0-.2265.0454L19.4331,18.019a3.8788,3.8788,0,0,0,0-4.038Zm.5957-3.6958a1.9993,1.9993,0,0,0,.0454.2265L18.019,12.5669a3.8788,3.8788,0,0,0-4.038,0l-2.1653-2.1655a6.9522,6.9522,0,0,1,8.2131-.1162ZM12.5669,13.981A3.951,3.951,0,0,0,12,16a4.0045,4.0045,0,0,0,4,4,3.9521,3.9521,0,0,0,2.019-.5669l2.0552,2.0552a1.9993,1.9993,0,0,0-.0454.2265,6.988,6.988,0,0,1-9.6272-9.8994Z"
  })), children);
})));
var ChartSpiral24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSpiral24(_ref112, ref) {
  var children = _ref112.children,
      rest = _objectWithoutProperties(_ref112, _excluded112);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path190 || (_path190 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A13.919,13.919,0,0,0,7.3245,5.0327,1.9728,1.9728,0,0,0,7,5,2,2,0,0,0,5,7a1.9752,1.9752,0,0,0,.0327.3247A13.986,13.986,0,1,0,16,2Zm0,26A11.977,11.977,0,0,1,6.3589,8.8857a1.8311,1.8311,0,0,0,1.1528.04l1.4634,1.4634a8.9862,8.9862,0,0,0,11.8311,13.207,1.9916,1.9916,0,0,0,2.79-2.79,8.9294,8.9294,0,0,0,0-9.6124,1.9916,1.9916,0,0,0-2.79-2.79,8.9445,8.9445,0,0,0-10.417.5713L8.9258,7.5117a1.8294,1.8294,0,0,0-.04-1.1528A11.9925,11.9925,0,1,1,16,28Zm0-14a2,2,0,1,1-2,2A2.0025,2.0025,0,0,1,16,14Zm3.4331-.019,2.0552-2.0552a2.0443,2.0443,0,0,0,.2265.0454,6.9573,6.9573,0,0,1,0,8.0576,2.0443,2.0443,0,0,0-.2265.0454L19.4331,18.019a3.8788,3.8788,0,0,0,0-4.038Zm.5957-3.6958a1.9993,1.9993,0,0,0,.0454.2265L18.019,12.5669a3.8788,3.8788,0,0,0-4.038,0l-2.1653-2.1655a6.9522,6.9522,0,0,1,8.2131-.1162ZM12.5669,13.981A3.951,3.951,0,0,0,12,16a4.0045,4.0045,0,0,0,4,4,3.9521,3.9521,0,0,0,2.019-.5669l2.0552,2.0552a1.9993,1.9993,0,0,0-.0454.2265,6.988,6.988,0,0,1-9.6272-9.8994Z"
  })), children);
})));
var ChartSpiral20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSpiral20(_ref113, ref) {
  var children = _ref113.children,
      rest = _objectWithoutProperties(_ref113, _excluded113);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path191 || (_path191 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A13.919,13.919,0,0,0,7.3245,5.0327,1.9728,1.9728,0,0,0,7,5,2,2,0,0,0,5,7a1.9752,1.9752,0,0,0,.0327.3247A13.986,13.986,0,1,0,16,2Zm0,26A11.977,11.977,0,0,1,6.3589,8.8857a1.8311,1.8311,0,0,0,1.1528.04l1.4634,1.4634a8.9862,8.9862,0,0,0,11.8311,13.207,1.9916,1.9916,0,0,0,2.79-2.79,8.9294,8.9294,0,0,0,0-9.6124,1.9916,1.9916,0,0,0-2.79-2.79,8.9445,8.9445,0,0,0-10.417.5713L8.9258,7.5117a1.8294,1.8294,0,0,0-.04-1.1528A11.9925,11.9925,0,1,1,16,28Zm0-14a2,2,0,1,1-2,2A2.0025,2.0025,0,0,1,16,14Zm3.4331-.019,2.0552-2.0552a2.0443,2.0443,0,0,0,.2265.0454,6.9573,6.9573,0,0,1,0,8.0576,2.0443,2.0443,0,0,0-.2265.0454L19.4331,18.019a3.8788,3.8788,0,0,0,0-4.038Zm.5957-3.6958a1.9993,1.9993,0,0,0,.0454.2265L18.019,12.5669a3.8788,3.8788,0,0,0-4.038,0l-2.1653-2.1655a6.9522,6.9522,0,0,1,8.2131-.1162ZM12.5669,13.981A3.951,3.951,0,0,0,12,16a4.0045,4.0045,0,0,0,4,4,3.9521,3.9521,0,0,0,2.019-.5669l2.0552,2.0552a1.9993,1.9993,0,0,0-.0454.2265,6.988,6.988,0,0,1-9.6272-9.8994Z"
  })), children);
})));
var ChartSpiral16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSpiral16(_ref114, ref) {
  var children = _ref114.children,
      rest = _objectWithoutProperties(_ref114, _excluded114);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path192 || (_path192 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A13.919,13.919,0,0,0,7.3245,5.0327,1.9728,1.9728,0,0,0,7,5,2,2,0,0,0,5,7a1.9752,1.9752,0,0,0,.0327.3247A13.986,13.986,0,1,0,16,2Zm0,26A11.977,11.977,0,0,1,6.3589,8.8857a1.8311,1.8311,0,0,0,1.1528.04l1.4634,1.4634a8.9862,8.9862,0,0,0,11.8311,13.207,1.9916,1.9916,0,0,0,2.79-2.79,8.9294,8.9294,0,0,0,0-9.6124,1.9916,1.9916,0,0,0-2.79-2.79,8.9445,8.9445,0,0,0-10.417.5713L8.9258,7.5117a1.8294,1.8294,0,0,0-.04-1.1528A11.9925,11.9925,0,1,1,16,28Zm0-14a2,2,0,1,1-2,2A2.0025,2.0025,0,0,1,16,14Zm3.4331-.019,2.0552-2.0552a2.0443,2.0443,0,0,0,.2265.0454,6.9573,6.9573,0,0,1,0,8.0576,2.0443,2.0443,0,0,0-.2265.0454L19.4331,18.019a3.8788,3.8788,0,0,0,0-4.038Zm.5957-3.6958a1.9993,1.9993,0,0,0,.0454.2265L18.019,12.5669a3.8788,3.8788,0,0,0-4.038,0l-2.1653-2.1655a6.9522,6.9522,0,0,1,8.2131-.1162ZM12.5669,13.981A3.951,3.951,0,0,0,12,16a4.0045,4.0045,0,0,0,4,4,3.9521,3.9521,0,0,0,2.019-.5669l2.0552,2.0552a1.9993,1.9993,0,0,0-.0454.2265,6.988,6.988,0,0,1-9.6272-9.8994Z"
  })), children);
})));
var ChartStacked32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStacked32(_ref115, ref) {
  var children = _ref115.children,
      rest = _objectWithoutProperties(_ref115, _excluded115);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path193 || (_path193 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V6H20V28H16V14H8V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM22,8h4V18H22ZM10,16h4v6H10Z"
  })), children);
})));
var ChartStacked24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStacked24(_ref116, ref) {
  var children = _ref116.children,
      rest = _objectWithoutProperties(_ref116, _excluded116);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path194 || (_path194 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V6H20V28H16V14H8V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM22,8h4V18H22ZM10,16h4v6H10Z"
  })), children);
})));
var ChartStacked20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStacked20(_ref117, ref) {
  var children = _ref117.children,
      rest = _objectWithoutProperties(_ref117, _excluded117);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path195 || (_path195 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V6H20V28H16V14H8V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM22,8h4V18H22ZM10,16h4v6H10Z"
  })), children);
})));
var ChartStacked16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStacked16(_ref118, ref) {
  var children = _ref118.children,
      rest = _objectWithoutProperties(_ref118, _excluded118);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path196 || (_path196 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V6H20V28H16V14H8V28H4V2H2V28a2,2,0,0,0,2,2H30V28ZM22,8h4V18H22ZM10,16h4v6H10Z"
  })), children);
})));
var ChartStepper32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStepper32(_ref119, ref) {
  var children = _ref119.children,
      rest = _objectWithoutProperties(_ref119, _excluded119);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path197 || (_path197 = /*#__PURE__*/React.createElement("path", {
    d: "M14,22V14h8V6h8V4H20v8H12v8H4V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H4V22Z"
  })), children);
})));
var ChartStepper24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStepper24(_ref120, ref) {
  var children = _ref120.children,
      rest = _objectWithoutProperties(_ref120, _excluded120);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path198 || (_path198 = /*#__PURE__*/React.createElement("path", {
    d: "M14,22V14h8V6h8V4H20v8H12v8H4V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H4V22Z"
  })), children);
})));
var ChartStepper20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStepper20(_ref121, ref) {
  var children = _ref121.children,
      rest = _objectWithoutProperties(_ref121, _excluded121);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path199 || (_path199 = /*#__PURE__*/React.createElement("path", {
    d: "M14,22V14h8V6h8V4H20v8H12v8H4V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H4V22Z"
  })), children);
})));
var ChartStepper16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartStepper16(_ref122, ref) {
  var children = _ref122.children,
      rest = _objectWithoutProperties(_ref122, _excluded122);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path200 || (_path200 = /*#__PURE__*/React.createElement("path", {
    d: "M14,22V14h8V6h8V4H20v8H12v8H4V2H2V28a2.0025,2.0025,0,0,0,2,2H30V28H4V22Z"
  })), children);
})));
var ChartSunburst32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSunburst32(_ref123, ref) {
  var children = _ref123.children,
      rest = _objectWithoutProperties(_ref123, _excluded123);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path201 || (_path201 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2a1,1,0,0,0-1,1v7.09a5.9618,5.9618,0,0,0-2.46,1.043L7.8384,6.4311a1.4554,1.4554,0,0,0-2.087.0244A14.05,14.05,0,0,0,9.8047,28.5972a10.8482,10.8482,0,0,0,1.8989.7676,14.0982,14.0982,0,0,0,13.8443-3.1319,1.4336,1.4336,0,0,0,.0278-2.0639L20.877,19.47A5.963,5.963,0,0,0,21.91,17H29a1,1,0,0,0,1-1A14.0158,14.0158,0,0,0,16,2Zm0,10a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,16,12ZM6.83,8.251l4.2959,4.2959a5.91,5.91,0,0,0-.0113,6.9243L6.8381,23.7481A12.0168,12.0168,0,0,1,6.83,8.251Zm1.4228,16.91,4.2759-4.2759A5.9589,5.9589,0,0,0,15,21.91v6.042A11.8783,11.8783,0,0,1,8.2529,25.1612ZM17,27.9561V21.9092a5.9631,5.9631,0,0,0,2.4609-1.0273l4.2818,4.2817A11.8905,11.8905,0,0,1,17,27.9561ZM21.91,15A6.0063,6.0063,0,0,0,17,10.09V4.041A12.0208,12.0208,0,0,1,27.9585,15Z"
  })), children);
})));
var ChartSunburst24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSunburst24(_ref124, ref) {
  var children = _ref124.children,
      rest = _objectWithoutProperties(_ref124, _excluded124);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path202 || (_path202 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2a1,1,0,0,0-1,1v7.09a5.9618,5.9618,0,0,0-2.46,1.043L7.8384,6.4311a1.4554,1.4554,0,0,0-2.087.0244A14.05,14.05,0,0,0,9.8047,28.5972a10.8482,10.8482,0,0,0,1.8989.7676,14.0982,14.0982,0,0,0,13.8443-3.1319,1.4336,1.4336,0,0,0,.0278-2.0639L20.877,19.47A5.963,5.963,0,0,0,21.91,17H29a1,1,0,0,0,1-1A14.0158,14.0158,0,0,0,16,2Zm0,10a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,16,12ZM6.83,8.251l4.2959,4.2959a5.91,5.91,0,0,0-.0113,6.9243L6.8381,23.7481A12.0168,12.0168,0,0,1,6.83,8.251Zm1.4228,16.91,4.2759-4.2759A5.9589,5.9589,0,0,0,15,21.91v6.042A11.8783,11.8783,0,0,1,8.2529,25.1612ZM17,27.9561V21.9092a5.9631,5.9631,0,0,0,2.4609-1.0273l4.2818,4.2817A11.8905,11.8905,0,0,1,17,27.9561ZM21.91,15A6.0063,6.0063,0,0,0,17,10.09V4.041A12.0208,12.0208,0,0,1,27.9585,15Z"
  })), children);
})));
var ChartSunburst20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSunburst20(_ref125, ref) {
  var children = _ref125.children,
      rest = _objectWithoutProperties(_ref125, _excluded125);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path203 || (_path203 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2a1,1,0,0,0-1,1v7.09a5.9618,5.9618,0,0,0-2.46,1.043L7.8384,6.4311a1.4554,1.4554,0,0,0-2.087.0244A14.05,14.05,0,0,0,9.8047,28.5972a10.8482,10.8482,0,0,0,1.8989.7676,14.0982,14.0982,0,0,0,13.8443-3.1319,1.4336,1.4336,0,0,0,.0278-2.0639L20.877,19.47A5.963,5.963,0,0,0,21.91,17H29a1,1,0,0,0,1-1A14.0158,14.0158,0,0,0,16,2Zm0,10a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,16,12ZM6.83,8.251l4.2959,4.2959a5.91,5.91,0,0,0-.0113,6.9243L6.8381,23.7481A12.0168,12.0168,0,0,1,6.83,8.251Zm1.4228,16.91,4.2759-4.2759A5.9589,5.9589,0,0,0,15,21.91v6.042A11.8783,11.8783,0,0,1,8.2529,25.1612ZM17,27.9561V21.9092a5.9631,5.9631,0,0,0,2.4609-1.0273l4.2818,4.2817A11.8905,11.8905,0,0,1,17,27.9561ZM21.91,15A6.0063,6.0063,0,0,0,17,10.09V4.041A12.0208,12.0208,0,0,1,27.9585,15Z"
  })), children);
})));
var ChartSunburst16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartSunburst16(_ref126, ref) {
  var children = _ref126.children,
      rest = _objectWithoutProperties(_ref126, _excluded126);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path204 || (_path204 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2a1,1,0,0,0-1,1v7.09a5.9618,5.9618,0,0,0-2.46,1.043L7.8384,6.4311a1.4554,1.4554,0,0,0-2.087.0244A14.05,14.05,0,0,0,9.8047,28.5972a10.8482,10.8482,0,0,0,1.8989.7676,14.0982,14.0982,0,0,0,13.8443-3.1319,1.4336,1.4336,0,0,0,.0278-2.0639L20.877,19.47A5.963,5.963,0,0,0,21.91,17H29a1,1,0,0,0,1-1A14.0158,14.0158,0,0,0,16,2Zm0,10a4,4,0,1,1-4,4A4.0045,4.0045,0,0,1,16,12ZM6.83,8.251l4.2959,4.2959a5.91,5.91,0,0,0-.0113,6.9243L6.8381,23.7481A12.0168,12.0168,0,0,1,6.83,8.251Zm1.4228,16.91,4.2759-4.2759A5.9589,5.9589,0,0,0,15,21.91v6.042A11.8783,11.8783,0,0,1,8.2529,25.1612ZM17,27.9561V21.9092a5.9631,5.9631,0,0,0,2.4609-1.0273l4.2818,4.2817A11.8905,11.8905,0,0,1,17,27.9561ZM21.91,15A6.0063,6.0063,0,0,0,17,10.09V4.041A12.0208,12.0208,0,0,1,27.9585,15Z"
  })), children);
})));
var ChartTSne32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTSne32(_ref127, ref) {
  var children = _ref127.children,
      rest = _objectWithoutProperties(_ref127, _excluded127);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle61 || (_circle61 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "20",
    r: "2"
  })), _circle62 || (_circle62 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "28",
    r: "2"
  })), _circle63 || (_circle63 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "14",
    r: "2"
  })), _circle64 || (_circle64 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "4",
    r: "2"
  })), _circle65 || (_circle65 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "6",
    r: "2"
  })), _circle66 || (_circle66 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "10",
    r: "2"
  })), _circle67 || (_circle67 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "12",
    r: "2"
  })), _circle68 || (_circle68 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "22",
    r: "2"
  })), _circle69 || (_circle69 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "28",
    r: "2"
  })), _circle70 || (_circle70 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "26",
    r: "2"
  })), _circle71 || (_circle71 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "20",
    r: "2"
  })), _circle72 || (_circle72 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "4",
    r: "2"
  })), _circle73 || (_circle73 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "24",
    r: "2"
  })), _circle74 || (_circle74 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "16",
    r: "2"
  })), children);
})));
var ChartTSne24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTSne24(_ref128, ref) {
  var children = _ref128.children,
      rest = _objectWithoutProperties(_ref128, _excluded128);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle75 || (_circle75 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "20",
    r: "2"
  })), _circle76 || (_circle76 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "28",
    r: "2"
  })), _circle77 || (_circle77 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "14",
    r: "2"
  })), _circle78 || (_circle78 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "4",
    r: "2"
  })), _circle79 || (_circle79 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "6",
    r: "2"
  })), _circle80 || (_circle80 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "10",
    r: "2"
  })), _circle81 || (_circle81 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "12",
    r: "2"
  })), _circle82 || (_circle82 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "22",
    r: "2"
  })), _circle83 || (_circle83 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "28",
    r: "2"
  })), _circle84 || (_circle84 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "26",
    r: "2"
  })), _circle85 || (_circle85 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "20",
    r: "2"
  })), _circle86 || (_circle86 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "4",
    r: "2"
  })), _circle87 || (_circle87 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "24",
    r: "2"
  })), _circle88 || (_circle88 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "16",
    r: "2"
  })), children);
})));
var ChartTSne20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTSne20(_ref129, ref) {
  var children = _ref129.children,
      rest = _objectWithoutProperties(_ref129, _excluded129);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle89 || (_circle89 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "20",
    r: "2"
  })), _circle90 || (_circle90 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "28",
    r: "2"
  })), _circle91 || (_circle91 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "14",
    r: "2"
  })), _circle92 || (_circle92 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "4",
    r: "2"
  })), _circle93 || (_circle93 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "6",
    r: "2"
  })), _circle94 || (_circle94 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "10",
    r: "2"
  })), _circle95 || (_circle95 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "12",
    r: "2"
  })), _circle96 || (_circle96 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "22",
    r: "2"
  })), _circle97 || (_circle97 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "28",
    r: "2"
  })), _circle98 || (_circle98 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "26",
    r: "2"
  })), _circle99 || (_circle99 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "20",
    r: "2"
  })), _circle100 || (_circle100 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "4",
    r: "2"
  })), _circle101 || (_circle101 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "24",
    r: "2"
  })), _circle102 || (_circle102 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "16",
    r: "2"
  })), children);
})));
var ChartTSne16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTSne16(_ref130, ref) {
  var children = _ref130.children,
      rest = _objectWithoutProperties(_ref130, _excluded130);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _circle103 || (_circle103 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "20",
    r: "2"
  })), _circle104 || (_circle104 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "28",
    r: "2"
  })), _circle105 || (_circle105 = /*#__PURE__*/React.createElement("circle", {
    cx: "10",
    cy: "14",
    r: "2"
  })), _circle106 || (_circle106 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "4",
    r: "2"
  })), _circle107 || (_circle107 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "6",
    r: "2"
  })), _circle108 || (_circle108 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "10",
    r: "2"
  })), _circle109 || (_circle109 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "12",
    r: "2"
  })), _circle110 || (_circle110 = /*#__PURE__*/React.createElement("circle", {
    cx: "28",
    cy: "22",
    r: "2"
  })), _circle111 || (_circle111 = /*#__PURE__*/React.createElement("circle", {
    cx: "26",
    cy: "28",
    r: "2"
  })), _circle112 || (_circle112 = /*#__PURE__*/React.createElement("circle", {
    cx: "20",
    cy: "26",
    r: "2"
  })), _circle113 || (_circle113 = /*#__PURE__*/React.createElement("circle", {
    cx: "22",
    cy: "20",
    r: "2"
  })), _circle114 || (_circle114 = /*#__PURE__*/React.createElement("circle", {
    cx: "16",
    cy: "4",
    r: "2"
  })), _circle115 || (_circle115 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "24",
    r: "2"
  })), _circle116 || (_circle116 = /*#__PURE__*/React.createElement("circle", {
    cx: "4",
    cy: "16",
    r: "2"
  })), children);
})));
var ChartTreemap32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTreemap32(_ref131, ref) {
  var children = _ref131.children,
      rest = _objectWithoutProperties(_ref131, _excluded131);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path205 || (_path205 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,12H23V4h5ZM16,4h5V14H16ZM14,4V20H4V4ZM4,22H14v6H4Zm12,6V16H28V28Z"
  })), children);
})));
var ChartTreemap24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTreemap24(_ref132, ref) {
  var children = _ref132.children,
      rest = _objectWithoutProperties(_ref132, _excluded132);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path206 || (_path206 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,12H23V4h5ZM16,4h5V14H16ZM14,4V20H4V4ZM4,22H14v6H4Zm12,6V16H28V28Z"
  })), children);
})));
var ChartTreemap20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTreemap20(_ref133, ref) {
  var children = _ref133.children,
      rest = _objectWithoutProperties(_ref133, _excluded133);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path207 || (_path207 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,12H23V4h5ZM16,4h5V14H16ZM14,4V20H4V4ZM4,22H14v6H4Zm12,6V16H28V28Z"
  })), children);
})));
var ChartTreemap16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartTreemap16(_ref134, ref) {
  var children = _ref134.children,
      rest = _objectWithoutProperties(_ref134, _excluded134);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path208 || (_path208 = /*#__PURE__*/React.createElement("path", {
    d: "M28,2H4A2.0023,2.0023,0,0,0,2,4V28a2.0023,2.0023,0,0,0,2,2H28a2.0023,2.0023,0,0,0,2-2V4A2.0023,2.0023,0,0,0,28,2Zm0,12H23V4h5ZM16,4h5V14H16ZM14,4V20H4V4ZM4,22H14v6H4Zm12,6V16H28V28Z"
  })), children);
})));
var ChartVennDiagram32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartVennDiagram32(_ref135, ref) {
  var children = _ref135.children,
      rest = _objectWithoutProperties(_ref135, _excluded135);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path209 || (_path209 = /*#__PURE__*/React.createElement("path", {
    d: "M20,6a9.92,9.92,0,0,0-4,.84A9.92,9.92,0,0,0,12,6a10,10,0,0,0,0,20,9.92,9.92,0,0,0,4-.84A9.92,9.92,0,0,0,20,26,10,10,0,0,0,20,6ZM12,24A8,8,0,0,1,12,8a7.91,7.91,0,0,1,1.76.2,10,10,0,0,0,0,15.6A7.91,7.91,0,0,1,12,24Zm8-8a8,8,0,0,1-4,6.92A8,8,0,0,1,16,9.08,8,8,0,0,1,20,16Zm0,8a7.91,7.91,0,0,1-1.76-.2,10,10,0,0,0,0-15.6A7.91,7.91,0,0,1,20,8a8,8,0,0,1,0,16Z"
  })), children);
})));
var ChartVennDiagram24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartVennDiagram24(_ref136, ref) {
  var children = _ref136.children,
      rest = _objectWithoutProperties(_ref136, _excluded136);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path210 || (_path210 = /*#__PURE__*/React.createElement("path", {
    d: "M20,6a9.92,9.92,0,0,0-4,.84A9.92,9.92,0,0,0,12,6a10,10,0,0,0,0,20,9.92,9.92,0,0,0,4-.84A9.92,9.92,0,0,0,20,26,10,10,0,0,0,20,6ZM12,24A8,8,0,0,1,12,8a7.91,7.91,0,0,1,1.76.2,10,10,0,0,0,0,15.6A7.91,7.91,0,0,1,12,24Zm8-8a8,8,0,0,1-4,6.92A8,8,0,0,1,16,9.08,8,8,0,0,1,20,16Zm0,8a7.91,7.91,0,0,1-1.76-.2,10,10,0,0,0,0-15.6A7.91,7.91,0,0,1,20,8a8,8,0,0,1,0,16Z"
  })), children);
})));
var ChartVennDiagram20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartVennDiagram20(_ref137, ref) {
  var children = _ref137.children,
      rest = _objectWithoutProperties(_ref137, _excluded137);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path211 || (_path211 = /*#__PURE__*/React.createElement("path", {
    d: "M20,6a9.92,9.92,0,0,0-4,.84A9.92,9.92,0,0,0,12,6a10,10,0,0,0,0,20,9.92,9.92,0,0,0,4-.84A9.92,9.92,0,0,0,20,26,10,10,0,0,0,20,6ZM12,24A8,8,0,0,1,12,8a7.91,7.91,0,0,1,1.76.2,10,10,0,0,0,0,15.6A7.91,7.91,0,0,1,12,24Zm8-8a8,8,0,0,1-4,6.92A8,8,0,0,1,16,9.08,8,8,0,0,1,20,16Zm0,8a7.91,7.91,0,0,1-1.76-.2,10,10,0,0,0,0-15.6A7.91,7.91,0,0,1,20,8a8,8,0,0,1,0,16Z"
  })), children);
})));
var ChartVennDiagram16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartVennDiagram16(_ref138, ref) {
  var children = _ref138.children,
      rest = _objectWithoutProperties(_ref138, _excluded138);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path212 || (_path212 = /*#__PURE__*/React.createElement("path", {
    d: "M20,6a9.92,9.92,0,0,0-4,.84A9.92,9.92,0,0,0,12,6a10,10,0,0,0,0,20,9.92,9.92,0,0,0,4-.84A9.92,9.92,0,0,0,20,26,10,10,0,0,0,20,6ZM12,24A8,8,0,0,1,12,8a7.91,7.91,0,0,1,1.76.2,10,10,0,0,0,0,15.6A7.91,7.91,0,0,1,12,24Zm8-8a8,8,0,0,1-4,6.92A8,8,0,0,1,16,9.08,8,8,0,0,1,20,16Zm0,8a7.91,7.91,0,0,1-1.76-.2,10,10,0,0,0,0-15.6A7.91,7.91,0,0,1,20,8a8,8,0,0,1,0,16Z"
  })), children);
})));
var ChartViolinPlot32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartViolinPlot32(_ref139, ref) {
  var children = _ref139.children,
      rest = _objectWithoutProperties(_ref139, _excluded139);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path213 || (_path213 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _path214 || (_path214 = /*#__PURE__*/React.createElement("path", {
    d: "M14.86 7.8232L13 4.7231V2H11V4.7231l-1.86 3.1A7.9986 7.9986 0 008 11.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V19.2769l1.86-3.1A7.9986 7.9986 0 0016 12.061v-.122A7.9961 7.9961 0 0014.86 7.8232zM12 6.9434l1.145 1.9087A6.0027 6.0027 0 0113.9185 11h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0110.0815 13h3.837a6.0086 6.0086 0 01-.7735 2.1484zM27.86 11.8232L26 8.7231V2H24V8.7231l-1.86 3.1A7.9986 7.9986 0 0021 15.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V23.2769l1.86-3.1A7.9986 7.9986 0 0029 16.061v-.122A7.9961 7.9961 0 0027.86 11.8232zm-2.86-.88l1.145 1.9087A6.0027 6.0027 0 0126.9185 15h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0123.0815 17h3.837a6.0086 6.0086 0 01-.7735 2.1484z"
  })), children);
})));
var ChartViolinPlot24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartViolinPlot24(_ref140, ref) {
  var children = _ref140.children,
      rest = _objectWithoutProperties(_ref140, _excluded140);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path215 || (_path215 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _path216 || (_path216 = /*#__PURE__*/React.createElement("path", {
    d: "M14.86 7.8232L13 4.7231V2H11V4.7231l-1.86 3.1A7.9986 7.9986 0 008 11.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V19.2769l1.86-3.1A7.9986 7.9986 0 0016 12.061v-.122A7.9961 7.9961 0 0014.86 7.8232zM12 6.9434l1.145 1.9087A6.0027 6.0027 0 0113.9185 11h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0110.0815 13h3.837a6.0086 6.0086 0 01-.7735 2.1484zM27.86 11.8232L26 8.7231V2H24V8.7231l-1.86 3.1A7.9986 7.9986 0 0021 15.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V23.2769l1.86-3.1A7.9986 7.9986 0 0029 16.061v-.122A7.9961 7.9961 0 0027.86 11.8232zm-2.86-.88l1.145 1.9087A6.0027 6.0027 0 0126.9185 15h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0123.0815 17h3.837a6.0086 6.0086 0 01-.7735 2.1484z"
  })), children);
})));
var ChartViolinPlot20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartViolinPlot20(_ref141, ref) {
  var children = _ref141.children,
      rest = _objectWithoutProperties(_ref141, _excluded141);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path217 || (_path217 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _path218 || (_path218 = /*#__PURE__*/React.createElement("path", {
    d: "M14.86 7.8232L13 4.7231V2H11V4.7231l-1.86 3.1A7.9986 7.9986 0 008 11.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V19.2769l1.86-3.1A7.9986 7.9986 0 0016 12.061v-.122A7.9961 7.9961 0 0014.86 7.8232zM12 6.9434l1.145 1.9087A6.0027 6.0027 0 0113.9185 11h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0110.0815 13h3.837a6.0086 6.0086 0 01-.7735 2.1484zM27.86 11.8232L26 8.7231V2H24V8.7231l-1.86 3.1A7.9986 7.9986 0 0021 15.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V23.2769l1.86-3.1A7.9986 7.9986 0 0029 16.061v-.122A7.9961 7.9961 0 0027.86 11.8232zm-2.86-.88l1.145 1.9087A6.0027 6.0027 0 0126.9185 15h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0123.0815 17h3.837a6.0086 6.0086 0 01-.7735 2.1484z"
  })), children);
})));
var ChartViolinPlot16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartViolinPlot16(_ref142, ref) {
  var children = _ref142.children,
      rest = _objectWithoutProperties(_ref142, _excluded142);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path219 || (_path219 = /*#__PURE__*/React.createElement("path", {
    d: "M30,30H4a2,2,0,0,1-2-2V2H4V28H30Z"
  })), _path220 || (_path220 = /*#__PURE__*/React.createElement("path", {
    d: "M14.86 7.8232L13 4.7231V2H11V4.7231l-1.86 3.1A7.9986 7.9986 0 008 11.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V19.2769l1.86-3.1A7.9986 7.9986 0 0016 12.061v-.122A7.9961 7.9961 0 0014.86 7.8232zM12 6.9434l1.145 1.9087A6.0027 6.0027 0 0113.9185 11h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0110.0815 13h3.837a6.0086 6.0086 0 01-.7735 2.1484zM27.86 11.8232L26 8.7231V2H24V8.7231l-1.86 3.1A7.9986 7.9986 0 0021 15.939v.122a7.9961 7.9961 0 001.14 4.1158l1.86 3.1V26h2V23.2769l1.86-3.1A7.9986 7.9986 0 0029 16.061v-.122A7.9961 7.9961 0 0027.86 11.8232zm-2.86-.88l1.145 1.9087A6.0027 6.0027 0 0126.9185 15h-3.837a6.0086 6.0086 0 01.7735-2.1484zm0 10.1132l-1.145-1.9087A6.0027 6.0027 0 0123.0815 17h3.837a6.0086 6.0086 0 01-.7735 2.1484z"
  })), children);
})));
var ChartWaterfall32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWaterfall32(_ref143, ref) {
  var children = _ref143.children,
      rest = _objectWithoutProperties(_ref143, _excluded143);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path221 || (_path221 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V18H26V28H22V4H20V28H10V14H8V28H4V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z"
  })), _path222 || (_path222 = /*#__PURE__*/React.createElement("path", {
    d: "M14 4H16V18H14z"
  })), children);
})));
var ChartWaterfall24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWaterfall24(_ref144, ref) {
  var children = _ref144.children,
      rest = _objectWithoutProperties(_ref144, _excluded144);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path223 || (_path223 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V18H26V28H22V4H20V28H10V14H8V28H4V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z"
  })), _path224 || (_path224 = /*#__PURE__*/React.createElement("path", {
    d: "M14 4H16V18H14z"
  })), children);
})));
var ChartWaterfall20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWaterfall20(_ref145, ref) {
  var children = _ref145.children,
      rest = _objectWithoutProperties(_ref145, _excluded145);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path225 || (_path225 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V18H26V28H22V4H20V28H10V14H8V28H4V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z"
  })), _path226 || (_path226 = /*#__PURE__*/React.createElement("path", {
    d: "M14 4H16V18H14z"
  })), children);
})));
var ChartWaterfall16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWaterfall16(_ref146, ref) {
  var children = _ref146.children,
      rest = _objectWithoutProperties(_ref146, _excluded146);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path227 || (_path227 = /*#__PURE__*/React.createElement("path", {
    d: "M28,28V18H26V28H22V4H20V28H10V14H8V28H4V2H2V28a2.0023,2.0023,0,0,0,2,2H30V28Z"
  })), _path228 || (_path228 = /*#__PURE__*/React.createElement("path", {
    d: "M14 4H16V18H14z"
  })), children);
})));
var ChartWinLoss32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWinLoss32(_ref147, ref) {
  var children = _ref147.children,
      rest = _objectWithoutProperties(_ref147, _excluded147);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path229 || (_path229 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H16V6a2.0023,2.0023,0,0,0-2-2H6A2.0023,2.0023,0,0,0,4,6v9H2v2H16v9a2.0023,2.0023,0,0,0,2,2h8a2.0023,2.0023,0,0,0,2-2V17h2ZM6,6h8v9H6ZM26,26H18V17h8Z"
  })), children);
})));
var ChartWinLoss24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWinLoss24(_ref148, ref) {
  var children = _ref148.children,
      rest = _objectWithoutProperties(_ref148, _excluded148);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path230 || (_path230 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H16V6a2.0023,2.0023,0,0,0-2-2H6A2.0023,2.0023,0,0,0,4,6v9H2v2H16v9a2.0023,2.0023,0,0,0,2,2h8a2.0023,2.0023,0,0,0,2-2V17h2ZM6,6h8v9H6ZM26,26H18V17h8Z"
  })), children);
})));
var ChartWinLoss20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWinLoss20(_ref149, ref) {
  var children = _ref149.children,
      rest = _objectWithoutProperties(_ref149, _excluded149);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path231 || (_path231 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H16V6a2.0023,2.0023,0,0,0-2-2H6A2.0023,2.0023,0,0,0,4,6v9H2v2H16v9a2.0023,2.0023,0,0,0,2,2h8a2.0023,2.0023,0,0,0,2-2V17h2ZM6,6h8v9H6ZM26,26H18V17h8Z"
  })), children);
})));
var ChartWinLoss16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChartWinLoss16(_ref150, ref) {
  var children = _ref150.children,
      rest = _objectWithoutProperties(_ref150, _excluded150);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path232 || (_path232 = /*#__PURE__*/React.createElement("path", {
    d: "M30,15H16V6a2.0023,2.0023,0,0,0-2-2H6A2.0023,2.0023,0,0,0,4,6v9H2v2H16v9a2.0023,2.0023,0,0,0,2,2h8a2.0023,2.0023,0,0,0,2-2V17h2ZM6,6h8v9H6ZM26,26H18V17h8Z"
  })), children);
})));
var Chat32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chat32(_ref151, ref) {
  var children = _ref151.children,
      rest = _objectWithoutProperties(_ref151, _excluded151);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path233 || (_path233 = /*#__PURE__*/React.createElement("path", {
    d: "M17.74,30,16,29l4-7h6a2,2,0,0,0,2-2V8a2,2,0,0,0-2-2H6A2,2,0,0,0,4,8V20a2,2,0,0,0,2,2h9v2H6a4,4,0,0,1-4-4V8A4,4,0,0,1,6,4H26a4,4,0,0,1,4,4V20a4,4,0,0,1-4,4H21.16Z"
  })), _path234 || (_path234 = /*#__PURE__*/React.createElement("path", {
    d: "M8 10H24V12H8zM8 16H18V18H8z"
  })), children);
})));
var Chat24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chat24(_ref152, ref) {
  var children = _ref152.children,
      rest = _objectWithoutProperties(_ref152, _excluded152);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path235 || (_path235 = /*#__PURE__*/React.createElement("path", {
    d: "M17.74,30,16,29l4-7h6a2,2,0,0,0,2-2V8a2,2,0,0,0-2-2H6A2,2,0,0,0,4,8V20a2,2,0,0,0,2,2h9v2H6a4,4,0,0,1-4-4V8A4,4,0,0,1,6,4H26a4,4,0,0,1,4,4V20a4,4,0,0,1-4,4H21.16Z"
  })), _path236 || (_path236 = /*#__PURE__*/React.createElement("path", {
    d: "M8 10H24V12H8zM8 16H18V18H8z"
  })), children);
})));
var Chat20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chat20(_ref153, ref) {
  var children = _ref153.children,
      rest = _objectWithoutProperties(_ref153, _excluded153);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path237 || (_path237 = /*#__PURE__*/React.createElement("path", {
    d: "M17.74,30,16,29l4-7h6a2,2,0,0,0,2-2V8a2,2,0,0,0-2-2H6A2,2,0,0,0,4,8V20a2,2,0,0,0,2,2h9v2H6a4,4,0,0,1-4-4V8A4,4,0,0,1,6,4H26a4,4,0,0,1,4,4V20a4,4,0,0,1-4,4H21.16Z"
  })), _path238 || (_path238 = /*#__PURE__*/React.createElement("path", {
    d: "M8 10H24V12H8zM8 16H18V18H8z"
  })), children);
})));
var Chat16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chat16(_ref154, ref) {
  var children = _ref154.children,
      rest = _objectWithoutProperties(_ref154, _excluded154);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path239 || (_path239 = /*#__PURE__*/React.createElement("path", {
    d: "M17.74,30,16,29l4-7h6a2,2,0,0,0,2-2V8a2,2,0,0,0-2-2H6A2,2,0,0,0,4,8V20a2,2,0,0,0,2,2h9v2H6a4,4,0,0,1-4-4V8A4,4,0,0,1,6,4H26a4,4,0,0,1,4,4V20a4,4,0,0,1-4,4H21.16Z"
  })), _path240 || (_path240 = /*#__PURE__*/React.createElement("path", {
    d: "M8 10H24V12H8zM8 16H18V18H8z"
  })), children);
})));
var ChatLaunch32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatLaunch32(_ref155, ref) {
  var children = _ref155.children,
      rest = _objectWithoutProperties(_ref155, _excluded155);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path241 || (_path241 = /*#__PURE__*/React.createElement("path", {
    d: "M22 4L22 6 26.586 6 20 12.586 21.414 14 28 7.414 28 12 30 12 30 4 22 4zM28 16v4a1.9965 1.9965 0 01-2 2H20l-4 7 1.7358 1 3.4288-6H26a3.9992 3.9992 0 004-4V16zM4 20V8A1.9965 1.9965 0 016 6H18V4H6A3.9986 3.9986 0 002 8V20a3.9992 3.9992 0 004 4h9V22H6A1.9965 1.9965 0 014 20z"
  })), children);
})));
var ChatLaunch24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatLaunch24(_ref156, ref) {
  var children = _ref156.children,
      rest = _objectWithoutProperties(_ref156, _excluded156);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path242 || (_path242 = /*#__PURE__*/React.createElement("path", {
    d: "M22 4L22 6 26.586 6 20 12.586 21.414 14 28 7.414 28 12 30 12 30 4 22 4zM28 16v4a1.9965 1.9965 0 01-2 2H20l-4 7 1.7358 1 3.4288-6H26a3.9992 3.9992 0 004-4V16zM4 20V8A1.9965 1.9965 0 016 6H18V4H6A3.9986 3.9986 0 002 8V20a3.9992 3.9992 0 004 4h9V22H6A1.9965 1.9965 0 014 20z"
  })), children);
})));
var ChatLaunch20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatLaunch20(_ref157, ref) {
  var children = _ref157.children,
      rest = _objectWithoutProperties(_ref157, _excluded157);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path243 || (_path243 = /*#__PURE__*/React.createElement("path", {
    d: "M22 4L22 6 26.586 6 20 12.586 21.414 14 28 7.414 28 12 30 12 30 4 22 4zM28 16v4a1.9965 1.9965 0 01-2 2H20l-4 7 1.7358 1 3.4288-6H26a3.9992 3.9992 0 004-4V16zM4 20V8A1.9965 1.9965 0 016 6H18V4H6A3.9986 3.9986 0 002 8V20a3.9992 3.9992 0 004 4h9V22H6A1.9965 1.9965 0 014 20z"
  })), children);
})));
var ChatLaunch16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatLaunch16(_ref158, ref) {
  var children = _ref158.children,
      rest = _objectWithoutProperties(_ref158, _excluded158);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path244 || (_path244 = /*#__PURE__*/React.createElement("path", {
    d: "M22 4L22 6 26.586 6 20 12.586 21.414 14 28 7.414 28 12 30 12 30 4 22 4zM28 16v4a1.9965 1.9965 0 01-2 2H20l-4 7 1.7358 1 3.4288-6H26a3.9992 3.9992 0 004-4V16zM4 20V8A1.9965 1.9965 0 016 6H18V4H6A3.9986 3.9986 0 002 8V20a3.9992 3.9992 0 004 4h9V22H6A1.9965 1.9965 0 014 20z"
  })), children);
})));
var ChatOff32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOff32(_ref159, ref) {
  var children = _ref159.children,
      rest = _objectWithoutProperties(_ref159, _excluded159);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path245 || (_path245 = /*#__PURE__*/React.createElement("path", {
    d: "M28 8V21h2V8a3.9986 3.9986 0 00-4-4H8.2429l2 2H26A1.9965 1.9965 0 0128 8zM30 28.5859L3.4141 2 2 3.4141 3.5039 4.918A3.9181 3.9181 0 002 8V20a3.9992 3.9992 0 004 4h6V22H6a1.9965 1.9965 0 01-2-2V8a1.9814 1.9814 0 01.9194-1.6665L20.5859 22H17l-4 7 1.7358 1 3.4288-6h4.4213l6 6z"
  })), children);
})));
var ChatOff24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOff24(_ref160, ref) {
  var children = _ref160.children,
      rest = _objectWithoutProperties(_ref160, _excluded160);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path246 || (_path246 = /*#__PURE__*/React.createElement("path", {
    d: "M28 8V21h2V8a3.9986 3.9986 0 00-4-4H8.2429l2 2H26A1.9965 1.9965 0 0128 8zM30 28.5859L3.4141 2 2 3.4141 3.5039 4.918A3.9181 3.9181 0 002 8V20a3.9992 3.9992 0 004 4h6V22H6a1.9965 1.9965 0 01-2-2V8a1.9814 1.9814 0 01.9194-1.6665L20.5859 22H17l-4 7 1.7358 1 3.4288-6h4.4213l6 6z"
  })), children);
})));
var ChatOff20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOff20(_ref161, ref) {
  var children = _ref161.children,
      rest = _objectWithoutProperties(_ref161, _excluded161);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path247 || (_path247 = /*#__PURE__*/React.createElement("path", {
    d: "M28 8V21h2V8a3.9986 3.9986 0 00-4-4H8.2429l2 2H26A1.9965 1.9965 0 0128 8zM30 28.5859L3.4141 2 2 3.4141 3.5039 4.918A3.9181 3.9181 0 002 8V20a3.9992 3.9992 0 004 4h6V22H6a1.9965 1.9965 0 01-2-2V8a1.9814 1.9814 0 01.9194-1.6665L20.5859 22H17l-4 7 1.7358 1 3.4288-6h4.4213l6 6z"
  })), children);
})));
var ChatOff16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOff16(_ref162, ref) {
  var children = _ref162.children,
      rest = _objectWithoutProperties(_ref162, _excluded162);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path248 || (_path248 = /*#__PURE__*/React.createElement("path", {
    d: "M28 8V21h2V8a3.9986 3.9986 0 00-4-4H8.2429l2 2H26A1.9965 1.9965 0 0128 8zM30 28.5859L3.4141 2 2 3.4141 3.5039 4.918A3.9181 3.9181 0 002 8V20a3.9992 3.9992 0 004 4h6V22H6a1.9965 1.9965 0 01-2-2V8a1.9814 1.9814 0 01.9194-1.6665L20.5859 22H17l-4 7 1.7358 1 3.4288-6h4.4213l6 6z"
  })), children);
})));
var ChatOperational32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOperational32(_ref163, ref) {
  var children = _ref163.children,
      rest = _objectWithoutProperties(_ref163, _excluded163);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path249 || (_path249 = /*#__PURE__*/React.createElement("path", {
    d: "M15.586 10.414L19.166 14 19.166 14 15.584 17.587 17 19 22 14 17 9 15.586 10.414z"
  })), _path250 || (_path250 = /*#__PURE__*/React.createElement("path", {
    d: "M20.586 10.414L24.166 14 24.166 14 20.584 17.587 22 19 27 14 22 9 20.586 10.414zM10 9L11.593 12 15 12.414 12.5 14.667 13 18 10 16.125 7 18 7.5 14.667 5 12.414 8.5 12 10 9z"
  })), _path251 || (_path251 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatOperational24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOperational24(_ref164, ref) {
  var children = _ref164.children,
      rest = _objectWithoutProperties(_ref164, _excluded164);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path252 || (_path252 = /*#__PURE__*/React.createElement("path", {
    d: "M15.586 10.414L19.166 14 19.166 14 15.584 17.587 17 19 22 14 17 9 15.586 10.414z"
  })), _path253 || (_path253 = /*#__PURE__*/React.createElement("path", {
    d: "M20.586 10.414L24.166 14 24.166 14 20.584 17.587 22 19 27 14 22 9 20.586 10.414zM10 9L11.593 12 15 12.414 12.5 14.667 13 18 10 16.125 7 18 7.5 14.667 5 12.414 8.5 12 10 9z"
  })), _path254 || (_path254 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatOperational20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOperational20(_ref165, ref) {
  var children = _ref165.children,
      rest = _objectWithoutProperties(_ref165, _excluded165);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path255 || (_path255 = /*#__PURE__*/React.createElement("path", {
    d: "M15.586 10.414L19.166 14 19.166 14 15.584 17.587 17 19 22 14 17 9 15.586 10.414z"
  })), _path256 || (_path256 = /*#__PURE__*/React.createElement("path", {
    d: "M20.586 10.414L24.166 14 24.166 14 20.584 17.587 22 19 27 14 22 9 20.586 10.414zM10 9L11.593 12 15 12.414 12.5 14.667 13 18 10 16.125 7 18 7.5 14.667 5 12.414 8.5 12 10 9z"
  })), _path257 || (_path257 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatOperational16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatOperational16(_ref166, ref) {
  var children = _ref166.children,
      rest = _objectWithoutProperties(_ref166, _excluded166);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path258 || (_path258 = /*#__PURE__*/React.createElement("path", {
    d: "M15.586 10.414L19.166 14 19.166 14 15.584 17.587 17 19 22 14 17 9 15.586 10.414z"
  })), _path259 || (_path259 = /*#__PURE__*/React.createElement("path", {
    d: "M20.586 10.414L24.166 14 24.166 14 20.584 17.587 22 19 27 14 22 9 20.586 10.414zM10 9L11.593 12 15 12.414 12.5 14.667 13 18 10 16.125 7 18 7.5 14.667 5 12.414 8.5 12 10 9z"
  })), _path260 || (_path260 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V8a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,8V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V8A3.9988,3.9988,0,0,1,6,4H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatBot32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatBot32(_ref167, ref) {
  var children = _ref167.children,
      rest = _objectWithoutProperties(_ref167, _excluded167);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path261 || (_path261 = /*#__PURE__*/React.createElement("path", {
    d: "M16 19a6.9908 6.9908 0 01-5.833-3.1287l1.666-1.1074a5.0007 5.0007 0 008.334 0l1.666 1.1074A6.9908 6.9908 0 0116 19zM20 8a2 2 0 102 2A1.9806 1.9806 0 0020 8zM12 8a2 2 0 102 2A1.9806 1.9806 0 0012 8z"
  })), _path262 || (_path262 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V6a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,6V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V6A3.9988,3.9988,0,0,1,6,2H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatBot24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatBot24(_ref168, ref) {
  var children = _ref168.children,
      rest = _objectWithoutProperties(_ref168, _excluded168);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path263 || (_path263 = /*#__PURE__*/React.createElement("path", {
    d: "M16 19a6.9908 6.9908 0 01-5.833-3.1287l1.666-1.1074a5.0007 5.0007 0 008.334 0l1.666 1.1074A6.9908 6.9908 0 0116 19zM20 8a2 2 0 102 2A1.9806 1.9806 0 0020 8zM12 8a2 2 0 102 2A1.9806 1.9806 0 0012 8z"
  })), _path264 || (_path264 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V6a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,6V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V6A3.9988,3.9988,0,0,1,6,2H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatBot20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatBot20(_ref169, ref) {
  var children = _ref169.children,
      rest = _objectWithoutProperties(_ref169, _excluded169);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path265 || (_path265 = /*#__PURE__*/React.createElement("path", {
    d: "M16 19a6.9908 6.9908 0 01-5.833-3.1287l1.666-1.1074a5.0007 5.0007 0 008.334 0l1.666 1.1074A6.9908 6.9908 0 0116 19zM20 8a2 2 0 102 2A1.9806 1.9806 0 0020 8zM12 8a2 2 0 102 2A1.9806 1.9806 0 0012 8z"
  })), _path266 || (_path266 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V6a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,6V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V6A3.9988,3.9988,0,0,1,6,2H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var ChatBot16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChatBot16(_ref170, ref) {
  var children = _ref170.children,
      rest = _objectWithoutProperties(_ref170, _excluded170);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path267 || (_path267 = /*#__PURE__*/React.createElement("path", {
    d: "M16 19a6.9908 6.9908 0 01-5.833-3.1287l1.666-1.1074a5.0007 5.0007 0 008.334 0l1.666 1.1074A6.9908 6.9908 0 0116 19zM20 8a2 2 0 102 2A1.9806 1.9806 0 0020 8zM12 8a2 2 0 102 2A1.9806 1.9806 0 0012 8z"
  })), _path268 || (_path268 = /*#__PURE__*/React.createElement("path", {
    d: "M17.7358,30,16,29l4-7h6a1.9966,1.9966,0,0,0,2-2V6a1.9966,1.9966,0,0,0-2-2H6A1.9966,1.9966,0,0,0,4,6V20a1.9966,1.9966,0,0,0,2,2h9v2H6a3.9993,3.9993,0,0,1-4-4V6A3.9988,3.9988,0,0,1,6,2H26a3.9988,3.9988,0,0,1,4,4V20a3.9993,3.9993,0,0,1-4,4H21.1646Z"
  })), children);
})));
var Checkbox32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkbox32(_ref171, ref) {
  var children = _ref171.children,
      rest = _objectWithoutProperties(_ref171, _excluded171);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path269 || (_path269 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var Checkbox24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkbox24(_ref172, ref) {
  var children = _ref172.children,
      rest = _objectWithoutProperties(_ref172, _excluded172);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path270 || (_path270 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var Checkbox20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkbox20(_ref173, ref) {
  var children = _ref173.children,
      rest = _objectWithoutProperties(_ref173, _excluded173);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path271 || (_path271 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var Checkbox16 = /*#__PURE__*/react.forwardRef(function Checkbox16(_ref174, ref) {
  var children = _ref174.children,
      rest = (0,Icon_9ecdf98c._)(_ref174, _excluded174);

  return /*#__PURE__*/react.createElement(Icon_9ecdf98c.I, (0,Icon_9ecdf98c.a)({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path272 || (_path272 = /*#__PURE__*/react.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
});
var CheckboxChecked32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxChecked32(_ref175, ref) {
  var children = _ref175.children,
      rest = _objectWithoutProperties(_ref175, _excluded175);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path273 || (_path273 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), _path274 || (_path274 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.5L9 16.54 10.59 15 14 18.35 21.41 11 23 12.58 14 21.5z"
  })), children);
})));
var CheckboxChecked24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxChecked24(_ref176, ref) {
  var children = _ref176.children,
      rest = _objectWithoutProperties(_ref176, _excluded176);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path275 || (_path275 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), _path276 || (_path276 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.5L9 16.54 10.59 15 14 18.35 21.41 11 23 12.58 14 21.5z"
  })), children);
})));
var CheckboxChecked20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxChecked20(_ref177, ref) {
  var children = _ref177.children,
      rest = _objectWithoutProperties(_ref177, _excluded177);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path277 || (_path277 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), _path278 || (_path278 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.5L9 16.54 10.59 15 14 18.35 21.41 11 23 12.58 14 21.5z"
  })), children);
})));
var CheckboxChecked16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxChecked16(_ref178, ref) {
  var children = _ref178.children,
      rest = _objectWithoutProperties(_ref178, _excluded178);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path279 || (_path279 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), _path280 || (_path280 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.5L9 16.54 10.59 15 14 18.35 21.41 11 23 12.58 14 21.5z"
  })), children);
})));
var CheckboxCheckedFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxCheckedFilled32(_ref179, ref) {
  var children = _ref179.children,
      rest = _objectWithoutProperties(_ref179, _excluded179);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path281 || (_path281 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z"
  })), _path282 || (_path282 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxCheckedFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxCheckedFilled24(_ref180, ref) {
  var children = _ref180.children,
      rest = _objectWithoutProperties(_ref180, _excluded180);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path283 || (_path283 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z"
  })), _path284 || (_path284 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxCheckedFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxCheckedFilled20(_ref181, ref) {
  var children = _ref181.children,
      rest = _objectWithoutProperties(_ref181, _excluded181);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path285 || (_path285 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z"
  })), _path286 || (_path286 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxCheckedFilled16 = /*#__PURE__*/react.forwardRef(function CheckboxCheckedFilled16(_ref182, ref) {
  var children = _ref182.children,
      rest = (0,Icon_9ecdf98c._)(_ref182, _excluded182);

  return /*#__PURE__*/react.createElement(Icon_9ecdf98c.I, (0,Icon_9ecdf98c.a)({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path287 || (_path287 = /*#__PURE__*/react.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z"
  })), _path288 || (_path288 = /*#__PURE__*/react.createElement("path", {
    fill: "none",
    d: "M14,21.5,9,16.5427,10.5908,15,14,18.3456,21.4087,11l1.5918,1.5772Z",
    "data-icon-path": "inner-path"
  })), children);
});
var CheckboxIndeterminate32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminate32(_ref183, ref) {
  var children = _ref183.children,
      rest = _objectWithoutProperties(_ref183, _excluded183);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path289 || (_path289 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path290 || (_path290 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxIndeterminate24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminate24(_ref184, ref) {
  var children = _ref184.children,
      rest = _objectWithoutProperties(_ref184, _excluded184);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path291 || (_path291 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path292 || (_path292 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxIndeterminate20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminate20(_ref185, ref) {
  var children = _ref185.children,
      rest = _objectWithoutProperties(_ref185, _excluded185);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path293 || (_path293 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path294 || (_path294 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxIndeterminate16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminate16(_ref186, ref) {
  var children = _ref186.children,
      rest = _objectWithoutProperties(_ref186, _excluded186);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path295 || (_path295 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path296 || (_path296 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxIndeterminateFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminateFilled32(_ref187, ref) {
  var children = _ref187.children,
      rest = _objectWithoutProperties(_ref187, _excluded187);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path297 || (_path297 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), _path298 || (_path298 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M22,18H10V14H22Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxIndeterminateFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminateFilled24(_ref188, ref) {
  var children = _ref188.children,
      rest = _objectWithoutProperties(_ref188, _excluded188);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path299 || (_path299 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), _path300 || (_path300 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M22,18H10V14H22Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxIndeterminateFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminateFilled20(_ref189, ref) {
  var children = _ref189.children,
      rest = _objectWithoutProperties(_ref189, _excluded189);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path301 || (_path301 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), _path302 || (_path302 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M22,18H10V14H22Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxIndeterminateFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxIndeterminateFilled16(_ref190, ref) {
  var children = _ref190.children,
      rest = _objectWithoutProperties(_ref190, _excluded190);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path303 || (_path303 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), _path304 || (_path304 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M22,18H10V14H22Z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckboxUndeterminate32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminate32(_ref191, ref) {
  var children = _ref191.children,
      rest = _objectWithoutProperties(_ref191, _excluded191);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path305 || (_path305 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path306 || (_path306 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxUndeterminate24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminate24(_ref192, ref) {
  var children = _ref192.children,
      rest = _objectWithoutProperties(_ref192, _excluded192);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path307 || (_path307 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path308 || (_path308 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxUndeterminate20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminate20(_ref193, ref) {
  var children = _ref193.children,
      rest = _objectWithoutProperties(_ref193, _excluded193);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path309 || (_path309 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path310 || (_path310 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxUndeterminate16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminate16(_ref194, ref) {
  var children = _ref194.children,
      rest = _objectWithoutProperties(_ref194, _excluded194);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path311 || (_path311 = /*#__PURE__*/React.createElement("path", {
    d: "M10 14H22V18H10z"
  })), _path312 || (_path312 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM6,26V6H26V26Z"
  })), children);
})));
var CheckboxUndeterminateFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminateFilled32(_ref195, ref) {
  var children = _ref195.children,
      rest = _objectWithoutProperties(_ref195, _excluded195);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path313 || (_path313 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), children);
})));
var CheckboxUndeterminateFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminateFilled24(_ref196, ref) {
  var children = _ref196.children,
      rest = _objectWithoutProperties(_ref196, _excluded196);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path314 || (_path314 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), children);
})));
var CheckboxUndeterminateFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminateFilled20(_ref197, ref) {
  var children = _ref197.children,
      rest = _objectWithoutProperties(_ref197, _excluded197);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path315 || (_path315 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), children);
})));
var CheckboxUndeterminateFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckboxUndeterminateFilled16(_ref198, ref) {
  var children = _ref198.children,
      rest = _objectWithoutProperties(_ref198, _excluded198);

  if (false) {}

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path316 || (_path316 = /*#__PURE__*/React.createElement("path", {
    d: "M26,4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2H26a2,2,0,0,0,2-2V6A2,2,0,0,0,26,4ZM22,18H10V14H22Z"
  })), children);
})));
var Checkmark32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkmark32(_ref199, ref) {
  var children = _ref199.children,
      rest = _objectWithoutProperties(_ref199, _excluded199);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path317 || (_path317 = /*#__PURE__*/React.createElement("path", {
    d: "M13 24L4 15 5.414 13.586 13 21.171 26.586 7.586 28 9 13 24z"
  })), children);
})));
var Checkmark24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkmark24(_ref200, ref) {
  var children = _ref200.children,
      rest = _objectWithoutProperties(_ref200, _excluded200);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path318 || (_path318 = /*#__PURE__*/React.createElement("path", {
    d: "M10 15.9L4.7 10.6 3.6 11.6 8.9 16.9 10 18 20.6 7.4 19.5 6.3z"
  })), children);
})));
var Checkmark20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkmark20(_ref201, ref) {
  var children = _ref201.children,
      rest = _objectWithoutProperties(_ref201, _excluded201);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 20 20",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path319 || (_path319 = /*#__PURE__*/React.createElement("path", {
    d: "M8 13.2L3.6 8.8 2.7 9.7 7.1 14.1 8 15 16.5 6.5 15.6 5.6z"
  })), _path320 || (_path320 = /*#__PURE__*/React.createElement("path", {
    d: "M15.6 5.6L8 13.2 3.6 8.8 2.7 9.7 7.1 14.1 8 15 16.5 6.5 15.6 5.6z"
  })), children);
})));
var Checkmark16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Checkmark16(_ref202, ref) {
  var children = _ref202.children,
      rest = _objectWithoutProperties(_ref202, _excluded202);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path321 || (_path321 = /*#__PURE__*/React.createElement("path", {
    d: "M13 24L4 15 5.414 13.586 13 21.171 26.586 7.586 28 9 13 24z"
  })), children);
})));
var CheckmarkFilled32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilled32(_ref203, ref) {
  var children = _ref203.children,
      rest = _objectWithoutProperties(_ref203, _excluded203);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path322 || (_path322 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2ZM14,21.5908l-5-5L10.5906,15,14,18.4092,21.41,11l1.5957,1.5859Z"
  })), _path323 || (_path323 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M14 21.591L9 16.591 10.591 15 14 18.409 21.41 11 23.005 12.585 14 21.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilled24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilled24(_ref204, ref) {
  var children = _ref204.children,
      rest = _objectWithoutProperties(_ref204, _excluded204);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path324 || (_path324 = /*#__PURE__*/React.createElement("path", {
    d: "M12,1C6,1,1,6,1,12s5,11,11,11s11-4.9,11-11S18.1,1,12,1z M10.4,16.3l-3.9-3.9l1.3-1.2l2.7,2.7l5.8-5.8l1.3,1.3L10.4,16.3z"
  })), _path325 || (_path325 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M10.4,16.3l-3.9-3.9l1.3-1.2l2.7,2.7l5.8-5.8l1.3,1.3L10.4,16.3z",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CheckmarkFilled20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilled20(_ref205, ref) {
  var children = _ref205.children,
      rest = _objectWithoutProperties(_ref205, _excluded205);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 20 20",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path326 || (_path326 = /*#__PURE__*/React.createElement("path", {
    d: "M10,1c-4.9,0-9,4.1-9,9s4.1,9,9,9s9-4,9-9S15,1,10,1z M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z"
  })), _path327 || (_path327 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M8.7,13.5l-3.2-3.2l1-1l2.2,2.2l4.8-4.8l1,1L8.7,13.5z",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CheckmarkFilled16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilled16(_ref206, ref) {
  var children = _ref206.children,
      rest = _objectWithoutProperties(_ref206, _excluded206);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path328 || (_path328 = /*#__PURE__*/React.createElement("path", {
    d: "M8,1C4.1,1,1,4.1,1,8c0,3.9,3.1,7,7,7s7-3.1,7-7C15,4.1,11.9,1,8,1z M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z"
  })), _path329 || (_path329 = /*#__PURE__*/React.createElement("path", {
    d: "M7,11L4.3,8.3l0.9-0.8L7,9.3l4-3.9l0.9,0.8L7,11z",
    "data-icon-path": "inner-path",
    opacity: "0"
  })), children);
})));
var CheckmarkFilledError32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledError32(_ref207, ref) {
  var children = _ref207.children,
      rest = _objectWithoutProperties(_ref207, _excluded207);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path330 || (_path330 = /*#__PURE__*/React.createElement("path", {
    d: "M30,24a6,6,0,1,0-6,6A6.0066,6.0066,0,0,0,30,24Zm-2,0a3.9521,3.9521,0,0,1-.5669,2.019L21.981,20.5669A3.9529,3.9529,0,0,1,24,20,4.0045,4.0045,0,0,1,28,24Zm-8,0a3.9521,3.9521,0,0,1,.5669-2.019l5.4521,5.4521A3.9529,3.9529,0,0,1,24,28,4.0045,4.0045,0,0,1,20,24Z"
  })), _path331 || (_path331 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,2,23.82V24a8,8,0,0,1,8-8h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path332 || (_path332 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledError24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledError24(_ref208, ref) {
  var children = _ref208.children,
      rest = _objectWithoutProperties(_ref208, _excluded208);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path333 || (_path333 = /*#__PURE__*/React.createElement("path", {
    d: "M30,24a6,6,0,1,0-6,6A6.0066,6.0066,0,0,0,30,24Zm-2,0a3.9521,3.9521,0,0,1-.5669,2.019L21.981,20.5669A3.9529,3.9529,0,0,1,24,20,4.0045,4.0045,0,0,1,28,24Zm-8,0a3.9521,3.9521,0,0,1,.5669-2.019l5.4521,5.4521A3.9529,3.9529,0,0,1,24,28,4.0045,4.0045,0,0,1,20,24Z"
  })), _path334 || (_path334 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,2,23.82V24a8,8,0,0,1,8-8h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path335 || (_path335 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledError20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledError20(_ref209, ref) {
  var children = _ref209.children,
      rest = _objectWithoutProperties(_ref209, _excluded209);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path336 || (_path336 = /*#__PURE__*/React.createElement("path", {
    d: "M30,24a6,6,0,1,0-6,6A6.0066,6.0066,0,0,0,30,24Zm-2,0a3.9521,3.9521,0,0,1-.5669,2.019L21.981,20.5669A3.9529,3.9529,0,0,1,24,20,4.0045,4.0045,0,0,1,28,24Zm-8,0a3.9521,3.9521,0,0,1,.5669-2.019l5.4521,5.4521A3.9529,3.9529,0,0,1,24,28,4.0045,4.0045,0,0,1,20,24Z"
  })), _path337 || (_path337 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,2,23.82V24a8,8,0,0,1,8-8h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path338 || (_path338 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledError16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledError16(_ref210, ref) {
  var children = _ref210.children,
      rest = _objectWithoutProperties(_ref210, _excluded210);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path339 || (_path339 = /*#__PURE__*/React.createElement("path", {
    d: "M30,24a6,6,0,1,0-6,6A6.0066,6.0066,0,0,0,30,24Zm-2,0a3.9521,3.9521,0,0,1-.5669,2.019L21.981,20.5669A3.9529,3.9529,0,0,1,24,20,4.0045,4.0045,0,0,1,28,24Zm-8,0a3.9521,3.9521,0,0,1,.5669-2.019l5.4521,5.4521A3.9529,3.9529,0,0,1,24,28,4.0045,4.0045,0,0,1,20,24Z"
  })), _path340 || (_path340 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,2,23.82V24a8,8,0,0,1,8-8h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path341 || (_path341 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledWarning32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledWarning32(_ref211, ref) {
  var children = _ref211.children,
      rest = _objectWithoutProperties(_ref211, _excluded211);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path342 || (_path342 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,3.3928,23.5059l3.9246-7.8492A2.9846,2.9846,0,0,1,24,16h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path343 || (_path343 = /*#__PURE__*/React.createElement("path", {
    d: "M27.38,28H20.6178L24,21.2358ZM24,18a1,1,0,0,0-.8947.5527l-5,10A1.0005,1.0005,0,0,0,19,30H29a1,1,0,0,0,.9214-1.3892L24.8946,18.5527A1,1,0,0,0,24,18Z"
  })), _path344 || (_path344 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledWarning24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledWarning24(_ref212, ref) {
  var children = _ref212.children,
      rest = _objectWithoutProperties(_ref212, _excluded212);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path345 || (_path345 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,3.3928,23.5059l3.9246-7.8492A2.9846,2.9846,0,0,1,24,16h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path346 || (_path346 = /*#__PURE__*/React.createElement("path", {
    d: "M27.38,28H20.6178L24,21.2358ZM24,18a1,1,0,0,0-.8947.5527l-5,10A1.0005,1.0005,0,0,0,19,30H29a1,1,0,0,0,.9214-1.3892L24.8946,18.5527A1,1,0,0,0,24,18Z"
  })), _path347 || (_path347 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledWarning20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledWarning20(_ref213, ref) {
  var children = _ref213.children,
      rest = _objectWithoutProperties(_ref213, _excluded213);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path348 || (_path348 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,3.3928,23.5059l3.9246-7.8492A2.9846,2.9846,0,0,1,24,16h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path349 || (_path349 = /*#__PURE__*/React.createElement("path", {
    d: "M27.38,28H20.6178L24,21.2358ZM24,18a1,1,0,0,0-.8947.5527l-5,10A1.0005,1.0005,0,0,0,19,30H29a1,1,0,0,0,.9214-1.3892L24.8946,18.5527A1,1,0,0,0,24,18Z"
  })), _path350 || (_path350 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkFilledWarning16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkFilledWarning16(_ref214, ref) {
  var children = _ref214.children,
      rest = _objectWithoutProperties(_ref214, _excluded214);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path351 || (_path351 = /*#__PURE__*/React.createElement("path", {
    d: "M14,2a12,12,0,1,0,3.3928,23.5059l3.9246-7.8492A2.9846,2.9846,0,0,1,24,16h1.82A11.9348,11.9348,0,0,0,14,2ZM12,18.5908l-4-4L9.5908,13,12,15.4092,17.4092,10,19,11.5908Z"
  })), _path352 || (_path352 = /*#__PURE__*/React.createElement("path", {
    d: "M27.38,28H20.6178L24,21.2358ZM24,18a1,1,0,0,0-.8947.5527l-5,10A1.0005,1.0005,0,0,0,19,30H29a1,1,0,0,0,.9214-1.3892L24.8946,18.5527A1,1,0,0,0,24,18Z"
  })), _path353 || (_path353 = /*#__PURE__*/React.createElement("path", {
    fill: "none",
    d: "M12 18.591L8 14.591 9.591 13 12 15.409 17.409 10 19 11.591 12 18.591z",
    "data-icon-path": "inner-path"
  })), children);
})));
var CheckmarkOutline32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutline32(_ref215, ref) {
  var children = _ref215.children,
      rest = _objectWithoutProperties(_ref215, _excluded215);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path354 || (_path354 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"
  })), _path355 || (_path355 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
  })), children);
})));
var CheckmarkOutline24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutline24(_ref216, ref) {
  var children = _ref216.children,
      rest = _objectWithoutProperties(_ref216, _excluded216);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path356 || (_path356 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"
  })), _path357 || (_path357 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
  })), children);
})));
var CheckmarkOutline20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutline20(_ref217, ref) {
  var children = _ref217.children,
      rest = _objectWithoutProperties(_ref217, _excluded217);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path358 || (_path358 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"
  })), _path359 || (_path359 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
  })), children);
})));
var CheckmarkOutline16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutline16(_ref218, ref) {
  var children = _ref218.children,
      rest = _objectWithoutProperties(_ref218, _excluded218);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path360 || (_path360 = /*#__PURE__*/React.createElement("path", {
    d: "M14 21.414L9 16.413 10.413 15 14 18.586 21.585 11 23 12.415 14 21.414z"
  })), _path361 || (_path361 = /*#__PURE__*/React.createElement("path", {
    d: "M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
  })), children);
})));
var CheckmarkOutlineError32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineError32(_ref219, ref) {
  var children = _ref219.children,
      rest = _objectWithoutProperties(_ref219, _excluded219);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path362 || (_path362 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path363 || (_path363 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM30 24a6 6 0 10-6 6A6.0066 6.0066 0 0030 24zm-2 0a3.9521 3.9521 0 01-.5669 2.019L21.981 20.5669A3.9529 3.9529 0 0124 20 4.0045 4.0045 0 0128 24zm-8 0a3.9521 3.9521 0 01.5669-2.019l5.4521 5.4521A3.9529 3.9529 0 0124 28 4.0045 4.0045 0 0120 24z"
  })), children);
})));
var CheckmarkOutlineError24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineError24(_ref220, ref) {
  var children = _ref220.children,
      rest = _objectWithoutProperties(_ref220, _excluded220);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path364 || (_path364 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path365 || (_path365 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM30 24a6 6 0 10-6 6A6.0066 6.0066 0 0030 24zm-2 0a3.9521 3.9521 0 01-.5669 2.019L21.981 20.5669A3.9529 3.9529 0 0124 20 4.0045 4.0045 0 0128 24zm-8 0a3.9521 3.9521 0 01.5669-2.019l5.4521 5.4521A3.9529 3.9529 0 0124 28 4.0045 4.0045 0 0120 24z"
  })), children);
})));
var CheckmarkOutlineError20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineError20(_ref221, ref) {
  var children = _ref221.children,
      rest = _objectWithoutProperties(_ref221, _excluded221);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path366 || (_path366 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path367 || (_path367 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM30 24a6 6 0 10-6 6A6.0066 6.0066 0 0030 24zm-2 0a3.9521 3.9521 0 01-.5669 2.019L21.981 20.5669A3.9529 3.9529 0 0124 20 4.0045 4.0045 0 0128 24zm-8 0a3.9521 3.9521 0 01.5669-2.019l5.4521 5.4521A3.9529 3.9529 0 0124 28 4.0045 4.0045 0 0120 24z"
  })), children);
})));
var CheckmarkOutlineError16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineError16(_ref222, ref) {
  var children = _ref222.children,
      rest = _objectWithoutProperties(_ref222, _excluded222);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path368 || (_path368 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path369 || (_path369 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM30 24a6 6 0 10-6 6A6.0066 6.0066 0 0030 24zm-2 0a3.9521 3.9521 0 01-.5669 2.019L21.981 20.5669A3.9529 3.9529 0 0124 20 4.0045 4.0045 0 0128 24zm-8 0a3.9521 3.9521 0 01.5669-2.019l5.4521 5.4521A3.9529 3.9529 0 0124 28 4.0045 4.0045 0 0120 24z"
  })), children);
})));
var CheckmarkOutlineWarning32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineWarning32(_ref223, ref) {
  var children = _ref223.children,
      rest = _objectWithoutProperties(_ref223, _excluded223);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path370 || (_path370 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path371 || (_path371 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM27.38 28H20.6178L24 21.2358zM24 18a1 1 0 00-.8947.5527l-5 10A1.0005 1.0005 0 0019 30H29a1 1 0 00.9214-1.3892L24.8946 18.5527A1 1 0 0024 18z"
  })), children);
})));
var CheckmarkOutlineWarning24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineWarning24(_ref224, ref) {
  var children = _ref224.children,
      rest = _objectWithoutProperties(_ref224, _excluded224);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path372 || (_path372 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path373 || (_path373 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM27.38 28H20.6178L24 21.2358zM24 18a1 1 0 00-.8947.5527l-5 10A1.0005 1.0005 0 0019 30H29a1 1 0 00.9214-1.3892L24.8946 18.5527A1 1 0 0024 18z"
  })), children);
})));
var CheckmarkOutlineWarning20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineWarning20(_ref225, ref) {
  var children = _ref225.children,
      rest = _objectWithoutProperties(_ref225, _excluded225);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path374 || (_path374 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path375 || (_path375 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM27.38 28H20.6178L24 21.2358zM24 18a1 1 0 00-.8947.5527l-5 10A1.0005 1.0005 0 0019 30H29a1 1 0 00.9214-1.3892L24.8946 18.5527A1 1 0 0024 18z"
  })), children);
})));
var CheckmarkOutlineWarning16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function CheckmarkOutlineWarning16(_ref226, ref) {
  var children = _ref226.children,
      rest = _objectWithoutProperties(_ref226, _excluded226);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path376 || (_path376 = /*#__PURE__*/React.createElement("path", {
    d: "M14,24A10,10,0,1,1,24,14h2A12,12,0,1,0,14,26Z"
  })), _path377 || (_path377 = /*#__PURE__*/React.createElement("path", {
    d: "M12 15.59L9.41 13 8 14.41 12 18.41 19 11.41 17.59 10 12 15.59zM27.38 28H20.6178L24 21.2358zM24 18a1 1 0 00-.8947.5527l-5 10A1.0005 1.0005 0 0019 30H29a1 1 0 00.9214-1.3892L24.8946 18.5527A1 1 0 0024 18z"
  })), children);
})));
var Chemistry32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chemistry32(_ref227, ref) {
  var children = _ref227.children,
      rest = _objectWithoutProperties(_ref227, _excluded227);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path378 || (_path378 = /*#__PURE__*/React.createElement("path", {
    d: "M27.2314,23.6182,20,13.6748V4h2V2H10V4h2v9.6748L4.7686,23.6182A4.0183,4.0183,0,0,0,8.0186,30H23.9814a4.0183,4.0183,0,0,0,3.25-6.3818ZM14,14.3252V4h4V14.3252L20.6728,18H11.3272ZM23.9814,28H8.0186a2.0192,2.0192,0,0,1-1.6329-3.2061L9.8726,20H22.1274l3.4869,4.7939A2.0192,2.0192,0,0,1,23.9814,28Z"
  })), children);
})));
var Chemistry24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chemistry24(_ref228, ref) {
  var children = _ref228.children,
      rest = _objectWithoutProperties(_ref228, _excluded228);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path379 || (_path379 = /*#__PURE__*/React.createElement("path", {
    d: "M27.2314,23.6182,20,13.6748V4h2V2H10V4h2v9.6748L4.7686,23.6182A4.0183,4.0183,0,0,0,8.0186,30H23.9814a4.0183,4.0183,0,0,0,3.25-6.3818ZM14,14.3252V4h4V14.3252L20.6728,18H11.3272ZM23.9814,28H8.0186a2.0192,2.0192,0,0,1-1.6329-3.2061L9.8726,20H22.1274l3.4869,4.7939A2.0192,2.0192,0,0,1,23.9814,28Z"
  })), children);
})));
var Chemistry20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chemistry20(_ref229, ref) {
  var children = _ref229.children,
      rest = _objectWithoutProperties(_ref229, _excluded229);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path380 || (_path380 = /*#__PURE__*/React.createElement("path", {
    d: "M27.2314,23.6182,20,13.6748V4h2V2H10V4h2v9.6748L4.7686,23.6182A4.0183,4.0183,0,0,0,8.0186,30H23.9814a4.0183,4.0183,0,0,0,3.25-6.3818ZM14,14.3252V4h4V14.3252L20.6728,18H11.3272ZM23.9814,28H8.0186a2.0192,2.0192,0,0,1-1.6329-3.2061L9.8726,20H22.1274l3.4869,4.7939A2.0192,2.0192,0,0,1,23.9814,28Z"
  })), children);
})));
var Chemistry16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function Chemistry16(_ref230, ref) {
  var children = _ref230.children,
      rest = _objectWithoutProperties(_ref230, _excluded230);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path381 || (_path381 = /*#__PURE__*/React.createElement("path", {
    d: "M27.2314,23.6182,20,13.6748V4h2V2H10V4h2v9.6748L4.7686,23.6182A4.0183,4.0183,0,0,0,8.0186,30H23.9814a4.0183,4.0183,0,0,0,3.25-6.3818ZM14,14.3252V4h4V14.3252L20.6728,18H11.3272ZM23.9814,28H8.0186a2.0192,2.0192,0,0,1-1.6329-3.2061L9.8726,20H22.1274l3.4869,4.7939A2.0192,2.0192,0,0,1,23.9814,28Z"
  })), children);
})));
var ChemistryReference32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChemistryReference32(_ref231, ref) {
  var children = _ref231.children,
      rest = _objectWithoutProperties(_ref231, _excluded231);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path382 || (_path382 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z"
  })), _path383 || (_path383 = /*#__PURE__*/React.createElement("path", {
    d: "M20,13.67V4h2V2H10V4h2v9.67L9.58,17h2.4767L14,14.33V4h4V14.33l7.61,10.46a2.0133,2.0133,0,0,1-.44,2.82,2.0406,2.0406,0,0,1-1.19.39H15v2h8.98a4.0154,4.0154,0,0,0,3.25-6.38Z"
  })), children);
})));
var ChemistryReference24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChemistryReference24(_ref232, ref) {
  var children = _ref232.children,
      rest = _objectWithoutProperties(_ref232, _excluded232);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path384 || (_path384 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z"
  })), _path385 || (_path385 = /*#__PURE__*/React.createElement("path", {
    d: "M20,13.67V4h2V2H10V4h2v9.67L9.58,17h2.4767L14,14.33V4h4V14.33l7.61,10.46a2.0133,2.0133,0,0,1-.44,2.82,2.0406,2.0406,0,0,1-1.19.39H15v2h8.98a4.0154,4.0154,0,0,0,3.25-6.38Z"
  })), children);
})));
var ChemistryReference20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChemistryReference20(_ref233, ref) {
  var children = _ref233.children,
      rest = _objectWithoutProperties(_ref233, _excluded233);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path386 || (_path386 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z"
  })), _path387 || (_path387 = /*#__PURE__*/React.createElement("path", {
    d: "M20,13.67V4h2V2H10V4h2v9.67L9.58,17h2.4767L14,14.33V4h4V14.33l7.61,10.46a2.0133,2.0133,0,0,1-.44,2.82,2.0406,2.0406,0,0,1-1.19.39H15v2h8.98a4.0154,4.0154,0,0,0,3.25-6.38Z"
  })), children);
})));
var ChemistryReference16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChemistryReference16(_ref234, ref) {
  var children = _ref234.children,
      rest = _objectWithoutProperties(_ref234, _excluded234);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path388 || (_path388 = /*#__PURE__*/React.createElement("path", {
    d: "M4 20L4 22 8.586 22 2 28.586 3.414 30 10 23.414 10 28 12 28 12 20 4 20z"
  })), _path389 || (_path389 = /*#__PURE__*/React.createElement("path", {
    d: "M20,13.67V4h2V2H10V4h2v9.67L9.58,17h2.4767L14,14.33V4h4V14.33l7.61,10.46a2.0133,2.0133,0,0,1-.44,2.82,2.0406,2.0406,0,0,1-1.19.39H15v2h8.98a4.0154,4.0154,0,0,0,3.25-6.38Z"
  })), children);
})));
var ChevronDown32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronDown32(_ref235, ref) {
  var children = _ref235.children,
      rest = _objectWithoutProperties(_ref235, _excluded235);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path390 || (_path390 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22L6 12 7.4 10.6 16 19.2 24.6 10.6 26 12z"
  })), children);
})));
var ChevronDown24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronDown24(_ref236, ref) {
  var children = _ref236.children,
      rest = _objectWithoutProperties(_ref236, _excluded236);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path391 || (_path391 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22L6 12 7.4 10.6 16 19.2 24.6 10.6 26 12z"
  })), children);
})));
var ChevronDown20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronDown20(_ref237, ref) {
  var children = _ref237.children,
      rest = _objectWithoutProperties(_ref237, _excluded237);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path392 || (_path392 = /*#__PURE__*/React.createElement("path", {
    d: "M16 22L6 12 7.4 10.6 16 19.2 24.6 10.6 26 12z"
  })), children);
})));
var ChevronDown16 = /*#__PURE__*/react.forwardRef(function ChevronDown16(_ref238, ref) {
  var children = _ref238.children,
      rest = (0,Icon_9ecdf98c._)(_ref238, _excluded238);

  return /*#__PURE__*/react.createElement(Icon_9ecdf98c.I, (0,Icon_9ecdf98c.a)({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path393 || (_path393 = /*#__PURE__*/react.createElement("path", {
    d: "M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
  })), children);
});
var ChevronDownGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronDownGlyph(_ref239, ref) {
  var children = _ref239.children,
      rest = _objectWithoutProperties(_ref239, _excluded239);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 10,
    height: 6,
    viewBox: "0 0 10 6",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path394 || (_path394 = /*#__PURE__*/React.createElement("path", {
    d: "M5 6L0 1 0.7 0.3 5 4.6 9.3 0.3 10 1z"
  })), children);
})));
var ChevronLeft32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronLeft32(_ref240, ref) {
  var children = _ref240.children,
      rest = _objectWithoutProperties(_ref240, _excluded240);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path395 || (_path395 = /*#__PURE__*/React.createElement("path", {
    d: "M10 16L20 6 21.4 7.4 12.8 16 21.4 24.6 20 26z"
  })), children);
})));
var ChevronLeft24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronLeft24(_ref241, ref) {
  var children = _ref241.children,
      rest = _objectWithoutProperties(_ref241, _excluded241);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path396 || (_path396 = /*#__PURE__*/React.createElement("path", {
    d: "M10 16L20 6 21.4 7.4 12.8 16 21.4 24.6 20 26z"
  })), children);
})));
var ChevronLeft20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronLeft20(_ref242, ref) {
  var children = _ref242.children,
      rest = _objectWithoutProperties(_ref242, _excluded242);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path397 || (_path397 = /*#__PURE__*/React.createElement("path", {
    d: "M10 16L20 6 21.4 7.4 12.8 16 21.4 24.6 20 26z"
  })), children);
})));
var ChevronLeft16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronLeft16(_ref243, ref) {
  var children = _ref243.children,
      rest = _objectWithoutProperties(_ref243, _excluded243);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path398 || (_path398 = /*#__PURE__*/React.createElement("path", {
    d: "M5 8L10 3 10.7 3.7 6.4 8 10.7 12.3 10 13z"
  })), children);
})));
var ChevronLeftGlyph = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronLeftGlyph(_ref244, ref) {
  var children = _ref244.children,
      rest = _objectWithoutProperties(_ref244, _excluded244);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 6,
    height: 10,
    viewBox: "0 0 6 10",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path399 || (_path399 = /*#__PURE__*/React.createElement("path", {
    d: "M0 5L5 0 5.7 0.7 1.4 5 5.7 9.3 5 10z"
  })), children);
})));
var ChevronMini32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronMini32(_ref245, ref) {
  var children = _ref245.children,
      rest = _objectWithoutProperties(_ref245, _excluded245);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path400 || (_path400 = /*#__PURE__*/React.createElement("path", {
    d: "M31 19L31 31 19 31 31 19z"
  })), children);
})));
var ChevronMini24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronMini24(_ref246, ref) {
  var children = _ref246.children,
      rest = _objectWithoutProperties(_ref246, _excluded246);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path401 || (_path401 = /*#__PURE__*/React.createElement("path", {
    d: "M31 19L31 31 19 31 31 19z"
  })), children);
})));
var ChevronMini20 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronMini20(_ref247, ref) {
  var children = _ref247.children,
      rest = _objectWithoutProperties(_ref247, _excluded247);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 20,
    height: 20,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path402 || (_path402 = /*#__PURE__*/React.createElement("path", {
    d: "M31 19L31 31 19 31 31 19z"
  })), children);
})));
var ChevronMini16 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronMini16(_ref248, ref) {
  var children = _ref248.children,
      rest = _objectWithoutProperties(_ref248, _excluded248);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 16,
    height: 16,
    viewBox: "0 0 16 16",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path403 || (_path403 = /*#__PURE__*/React.createElement("path", {
    d: "M15 9L15 15 9 15z"
  })), children);
})));
var ChevronRight32 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronRight32(_ref249, ref) {
  var children = _ref249.children,
      rest = _objectWithoutProperties(_ref249, _excluded249);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 32,
    height: 32,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path404 || (_path404 = /*#__PURE__*/React.createElement("path", {
    d: "M22 16L12 26 10.6 24.6 19.2 16 10.6 7.4 12 6z"
  })), children);
})));
var ChevronRight24 = /*#__PURE__*/(/* unused pure expression or super */ null && (React.forwardRef(function ChevronRight24(_ref250, ref) {
  var children = _ref250.children,
      rest = _objectWithoutProperties(_ref250, _excluded250);

  return /*#__PURE__*/React.createElement(Icon, _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 32 32",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    ref: ref
  }, rest), _path405 || (_path405 = /*#__PURE__*/React.createElement("path", {
    d: "M22 16L12 26 10.6 24.6 19.2 16 10.6 7.4 12 6z"
  })), children);
})));



// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/usePrefix.js
var usePrefix = __webpack_require__(330);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Link/Link.js



var Link_excluded = ["children", "className", "href", "disabled", "inline", "visited", "renderIcon", "size"];

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





var Link = function Link(_ref) {
  var _classnames;

  var children = _ref.children,
      className = _ref.className,
      href = _ref.href,
      disabled = _ref.disabled,
      inline = _ref.inline,
      visited = _ref.visited,
      Icon = _ref.renderIcon,
      size = _ref.size,
      other = (0,objectWithoutProperties/* default */.Z)(_ref, Link_excluded);

  var prefix = (0,usePrefix/* usePrefix */.A)();
  var classNames = classnames_default()("".concat(prefix, "--link"), className, (_classnames = {}, (0,defineProperty/* default */.Z)(_classnames, "".concat(prefix, "--link--disabled"), disabled), (0,defineProperty/* default */.Z)(_classnames, "".concat(prefix, "--link--inline"), inline), (0,defineProperty/* default */.Z)(_classnames, "".concat(prefix, "--link--visited"), visited), (0,defineProperty/* default */.Z)(_classnames, "".concat(prefix, "--link--").concat(size), size), _classnames));
  var Tag = disabled ? 'p' : 'a';
  var rel = other.target === '_blank' ? 'noopener' : null;
  return /*#__PURE__*/react.createElement(Tag, (0,esm_extends/* default */.Z)({
    href: disabled ? null : href,
    className: classNames,
    rel: rel
  }, other), children, !inline && Icon && /*#__PURE__*/react.createElement("div", {
    className: "".concat(prefix, "--link__icon")
  }, /*#__PURE__*/react.createElement(Icon, null)));
};

Link.propTypes = {
  /**
   * Provide the content for the Link
   */
  children: (prop_types_default()).node,

  /**
   * Provide a custom className to be applied to the containing `<a>` node
   */
  className: (prop_types_default()).string,

  /**
   * Specify if the control should be disabled, or not
   */
  disabled: (prop_types_default()).bool,

  /**
   * Provide the `href` attribute for the `<a>` node
   */
  href: (prop_types_default()).string,

  /**
   * Specify whether you want the inline version of this control
   */
  inline: (prop_types_default()).bool,

  /**
   * Optional prop to render an icon next to the link.
   * Can be a React component class
   */
  renderIcon: prop_types_default().oneOfType([(prop_types_default()).func, (prop_types_default()).object]),

  /**
   * Specify the size of the Link. Currently supports either `sm`, 'md' (default) or 'lg` as an option.
   */
  size: prop_types_default().oneOf(['sm', 'md', 'lg']),

  /**
   * Specify whether you want the link to receive visited styles after the link has been clicked
   */
  visited: (prop_types_default()).bool
};
/* harmony default export */ const Link_Link = (Link);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/keyboard/match.js
var match = __webpack_require__(4509);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/keyboard/keys.js
var keys = __webpack_require__(4817);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/prop-types/deprecate.js
var deprecate = __webpack_require__(3597);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/tools/events.js
var events = __webpack_require__(3834);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/internal/useIsomorphicEffect.js
 // useLayoutEffect on the client, useEffect on the server

var useIsomorphicEffect = typeof window !== 'undefined' ? react.useLayoutEffect : react.useEffect;
/* harmony default export */ const internal_useIsomorphicEffect = (useIsomorphicEffect);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Tile/next/Tile.js




var Tile_excluded = ["children", "className", "light"],
    Tile_excluded2 = ["children", "className", "clicked", "handleClick", "handleKeyDown", "href", "light", "onClick", "onKeyDown"],
    Tile_excluded3 = ["children", "className", "disabled", "handleClick", "handleKeyDown", "iconDescription", "id", "light", "name", "onClick", "onChange", "onKeyDown", "selected", "tabIndex", "title", "value"],
    Tile_excluded4 = ["tabIndex", "className", "children", "expanded", "tileMaxHeight", "tilePadding", "onClick", "onKeyUp", "tileCollapsedIconText", "tileExpandedIconText", "tileCollapsedLabel", "tileExpandedLabel", "onBeforeClick", "light"];










var Tile = /*#__PURE__*/react.forwardRef(function Tile(_ref, ref) {
  var children = _ref.children,
      className = _ref.className,
      _ref$light = _ref.light,
      light = _ref$light === void 0 ? false : _ref$light,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref, Tile_excluded);

  var prefix = (0,usePrefix/* usePrefix */.A)();
  var tileClasses = classnames_default()("".concat(prefix, "--tile"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--tile--light"), light), className);
  return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
    className: tileClasses,
    ref: ref
  }, rest), children);
});
Tile.displayName = 'Tile';
Tile.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (0,deprecate/* default */.Z)((prop_types_default()).bool, 'The `light` prop for `Tile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.')
};
var ClickableTile = /*#__PURE__*/react.forwardRef(function ClickableTile(_ref2, ref) {
  var _cx2;

  var children = _ref2.children,
      className = _ref2.className,
      _ref2$clicked = _ref2.clicked,
      clicked = _ref2$clicked === void 0 ? false : _ref2$clicked,
      handleClick = _ref2.handleClick,
      handleKeyDown = _ref2.handleKeyDown,
      href = _ref2.href,
      _ref2$light = _ref2.light,
      light = _ref2$light === void 0 ? false : _ref2$light,
      _ref2$onClick = _ref2.onClick,
      onClick = _ref2$onClick === void 0 ? function () {} : _ref2$onClick,
      _ref2$onKeyDown = _ref2.onKeyDown,
      onKeyDown = _ref2$onKeyDown === void 0 ? function () {} : _ref2$onKeyDown,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref2, Tile_excluded2);

  var prefix = (0,usePrefix/* usePrefix */.A)();
  var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--clickable"), (_cx2 = {}, (0,defineProperty/* default */.Z)(_cx2, "".concat(prefix, "--tile--is-clicked"), clicked), (0,defineProperty/* default */.Z)(_cx2, "".concat(prefix, "--tile--light"), light), _cx2), className);

  var _useState = (0,react.useState)(clicked),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      isSelected = _useState2[0],
      setIsSelected = _useState2[1]; // TODO: replace with onClick when handleClick prop is deprecated


  var clickHandler = handleClick || onClick; // TODO: replace with onClick when handleClick prop is deprecated

  var keyDownHandler = handleKeyDown || onKeyDown;

  function handleOnClick(evt) {
    evt.persist();
    setIsSelected(!isSelected);
    clickHandler(evt);
  }

  function handleOnKeyDown(evt) {
    evt.persist();

    if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
      evt.preventDefault();
      setIsSelected(!isSelected);
      keyDownHandler(evt);
    }

    keyDownHandler(evt);
  }

  return /*#__PURE__*/react.createElement(Link_Link, (0,esm_extends/* default */.Z)({
    className: classes,
    href: href,
    onClick: handleOnClick,
    onKeyDown: handleOnKeyDown,
    ref: ref
  }, rest), children);
});
ClickableTile.displayName = 'ClickableTile';
ClickableTile.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * Boolean for whether a tile has been clicked.
   */
  clicked: (prop_types_default()).bool,

  /**
   * Deprecated in v11. Use 'onClick' instead.
   */
  handleClick: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The handleClick prop for ClickableTile has been deprecated in favor of onClick. It will be removed in the next major release.'),

  /**
   * Specify the function to run when the ClickableTile is interacted with via a keyboard
   */
  handleKeyDown: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The handleKeyDown prop for ClickableTile has been deprecated in favor of onKeyDown. It will be removed in the next major release.'),

  /**
   * The href for the link.
   */
  href: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (0,deprecate/* default */.Z)((prop_types_default()).bool, 'The `light` prop for `ClickableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),

  /**
   * Specify the function to run when the ClickableTile is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the ClickableTile is interacted with via a keyboard
   */
  onKeyDown: (prop_types_default()).func,

  /**
   * The rel property for the link.
   */
  rel: (prop_types_default()).string
};
var SelectableTile = /*#__PURE__*/react.forwardRef(function SelectableTile(_ref3, ref) {
  var _cx3;

  var children = _ref3.children,
      className = _ref3.className,
      disabled = _ref3.disabled,
      handleClick = _ref3.handleClick,
      handleKeyDown = _ref3.handleKeyDown,
      iconDescription = _ref3.iconDescription,
      id = _ref3.id,
      _ref3$light = _ref3.light,
      light = _ref3$light === void 0 ? false : _ref3$light,
      name = _ref3.name,
      _ref3$onClick = _ref3.onClick,
      onClick = _ref3$onClick === void 0 ? function () {} : _ref3$onClick,
      _ref3$onChange = _ref3.onChange,
      onChange = _ref3$onChange === void 0 ? function () {} : _ref3$onChange,
      _ref3$onKeyDown = _ref3.onKeyDown,
      onKeyDown = _ref3$onKeyDown === void 0 ? function () {} : _ref3$onKeyDown,
      _ref3$selected = _ref3.selected,
      selected = _ref3$selected === void 0 ? false : _ref3$selected,
      _ref3$tabIndex = _ref3.tabIndex,
      tabIndex = _ref3$tabIndex === void 0 ? 0 : _ref3$tabIndex,
      _ref3$title = _ref3.title,
      title = _ref3$title === void 0 ? 'title' : _ref3$title,
      _ref3$value = _ref3.value,
      value = _ref3$value === void 0 ? 'value' : _ref3$value,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref3, Tile_excluded3);

  var prefix = (0,usePrefix/* usePrefix */.A)(); // TODO: replace with onClick when handleClick prop is deprecated

  var clickHandler = handleClick || onClick; // TODO: replace with onKeyDown when handleKeyDown prop is deprecated

  var keyDownHandler = handleKeyDown || onKeyDown;

  var _useState3 = (0,react.useState)(selected),
      _useState4 = (0,slicedToArray/* default */.Z)(_useState3, 2),
      isSelected = _useState4[0],
      setIsSelected = _useState4[1];

  var _useState5 = (0,react.useState)(selected),
      _useState6 = (0,slicedToArray/* default */.Z)(_useState5, 2),
      prevSelected = _useState6[0],
      setPrevSelected = _useState6[1];

  var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--selectable"), (_cx3 = {}, (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--is-selected"), isSelected), (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--light"), light), (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--disabled"), disabled), _cx3), className);
  var inputClasses = classnames_default()("".concat(prefix, "--tile-input"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--tile-input--checked"), isSelected)); // TODO: rename to handleClick when handleClick prop is deprecated

  function handleOnClick(evt) {
    evt.preventDefault();
    evt.persist();
    setIsSelected(!isSelected);
    clickHandler(evt);
    onChange(evt);
  } // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated


  function handleOnKeyDown(evt) {
    evt.persist();

    if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
      evt.preventDefault();
      setIsSelected(!isSelected);
      onChange(evt);
    }

    keyDownHandler(evt);
  }

  function handleChange(event) {
    setIsSelected(event.target.checked);
    onChange(event);
  }

  if (selected !== prevSelected) {
    setIsSelected(selected);
    setPrevSelected(selected);
  }

  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("input", {
    checked: isSelected,
    className: inputClasses,
    disabled: disabled,
    id: id,
    name: name,
    onChange: !disabled ? handleChange : null,
    ref: ref,
    tabIndex: -1,
    title: title,
    type: "checkbox",
    value: value
  }), /*#__PURE__*/react.createElement("label", (0,esm_extends/* default */.Z)({
    className: classes,
    htmlFor: id,
    onClick: !disabled ? handleOnClick : null,
    onKeyDown: !disabled ? handleOnKeyDown : null // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
    ,
    tabIndex: !disabled ? tabIndex : null
  }, rest), /*#__PURE__*/react.createElement("span", {
    className: "".concat(prefix, "--tile__checkmark ").concat(prefix, "--tile__checkmark--persistent")
  }, isSelected ? /*#__PURE__*/react.createElement(CheckboxCheckedFilled16, null) : /*#__PURE__*/react.createElement(Checkbox16, null)), /*#__PURE__*/react.createElement("span", {
    className: "".concat(prefix, "--tile-content")
  }, children)));
});
SelectableTile.displayName = 'SelectableTile';
SelectableTile.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * Specify whether the SelectableTile should be disabled
   */
  disabled: (prop_types_default()).bool,

  /**
   * Specify the function to run when the SelectableTile is clicked
   */
  handleClick: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The `handleClick` prop for `SelectableTile` has been deprecated in favor of `onClick`. It will be removed in the next major release.'),

  /**
   * Specify the function to run when the SelectableTile is interacted with via a keyboard
   */
  handleKeyDown: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The `handleKeyDown` prop for `SelectableTile` has been deprecated in favor of `onKeyDown`. It will be removed in the next major release.'),

  /**
   * The description of the checkmark icon.
   */
  iconDescription: (0,deprecate/* default */.Z)((prop_types_default()).string, 'The `iconDescription` prop for `SelectableTile` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),

  /**
   * The ID of the `<input>`.
   */
  id: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (0,deprecate/* default */.Z)((prop_types_default()).bool, 'The `light` prop for `SelectableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),

  /**
   * The `name` of the `<input>`.
   */
  name: (prop_types_default()).string,

  /**
   * The empty handler of the `<input>`.
   */
  onChange: (prop_types_default()).func,

  /**
   * Specify the function to run when the SelectableTile is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the SelectableTile is interacted with via a keyboard
   */
  onKeyDown: (prop_types_default()).func,

  /**
   * `true` to select this tile.
   */
  selected: (prop_types_default()).bool,

  /**
   * Specify the tab index of the wrapper element
   */
  tabIndex: (prop_types_default()).number,

  /**
   * The `title` of the `<input>`.
   */
  title: (prop_types_default()).string,

  /**
   * The value of the `<input>`.
   */
  value: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]).isRequired
};
function ExpandableTile(_ref4) {
  var _cx5;

  var tabIndex = _ref4.tabIndex,
      className = _ref4.className,
      children = _ref4.children,
      expanded = _ref4.expanded,
      tileMaxHeight = _ref4.tileMaxHeight,
      tilePadding = _ref4.tilePadding,
      onClick = _ref4.onClick,
      onKeyUp = _ref4.onKeyUp,
      tileCollapsedIconText = _ref4.tileCollapsedIconText,
      tileExpandedIconText = _ref4.tileExpandedIconText,
      tileCollapsedLabel = _ref4.tileCollapsedLabel,
      tileExpandedLabel = _ref4.tileExpandedLabel,
      onBeforeClick = _ref4.onBeforeClick,
      light = _ref4.light,
      rest = (0,objectWithoutProperties/* default */.Z)(_ref4, Tile_excluded4);

  var _useState7 = (0,react.useState)(tileMaxHeight),
      _useState8 = (0,slicedToArray/* default */.Z)(_useState7, 2),
      isTileMaxHeight = _useState8[0],
      setIsTileMaxHeight = _useState8[1];

  var _useState9 = (0,react.useState)(tilePadding),
      _useState10 = (0,slicedToArray/* default */.Z)(_useState9, 2),
      isTilePadding = _useState10[0],
      setIsTilePadding = _useState10[1];

  var _useState11 = (0,react.useState)(expanded),
      _useState12 = (0,slicedToArray/* default */.Z)(_useState11, 2),
      prevExpanded = _useState12[0],
      setPrevExpanded = _useState12[1];

  var _useState13 = (0,react.useState)(tileMaxHeight),
      _useState14 = (0,slicedToArray/* default */.Z)(_useState13, 2),
      prevTileMaxHeight = _useState14[0],
      setPrevTileMaxHeight = _useState14[1];

  var _useState15 = (0,react.useState)(tilePadding),
      _useState16 = (0,slicedToArray/* default */.Z)(_useState15, 2),
      prevTilePadding = _useState16[0],
      setPrevTilePadding = _useState16[1];

  var _useState17 = (0,react.useState)(expanded),
      _useState18 = (0,slicedToArray/* default */.Z)(_useState17, 2),
      isExpanded = _useState18[0],
      setIsExpanded = _useState18[1];

  var aboveTheFold = (0,react.useRef)(null);
  var tileContent = (0,react.useRef)(null);
  var tile = (0,react.useRef)(null);
  var prefix = (0,usePrefix/* usePrefix */.A)();

  if (expanded !== prevExpanded) {
    setIsExpanded(expanded);
    setPrevExpanded(expanded);
    setMaxHeight();
  }

  if (tileMaxHeight !== prevTileMaxHeight) {
    setIsTileMaxHeight(tileMaxHeight);
    setPrevTileMaxHeight(tileMaxHeight);
  }

  if (tilePadding !== prevTilePadding) {
    setIsTilePadding(tilePadding);
    setPrevTilePadding(tilePadding);
  }

  function setMaxHeight() {
    if (isExpanded) {
      setIsTileMaxHeight(tileContent.current.getBoundingClientRect().height);
    }

    setIsTileMaxHeight(aboveTheFold.current.getBoundingClientRect().height);
  }

  function handleClick(evt) {
    if (!onBeforeClick(evt) || evt.target.tagName === 'INPUT') {
      return;
    }

    evt.persist();
    setIsExpanded(!isExpanded);
    setMaxHeight();

    if (onClick) {
      onClick(evt);
    }
  }

  function handleKeyUp(evt) {
    if (evt.target !== tile.current) {
      if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
        evt.preventDefault();
      }
    }
  }

  function getChildren() {
    return react.Children.toArray(children);
  }

  var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--expandable"), (_cx5 = {}, (0,defineProperty/* default */.Z)(_cx5, "".concat(prefix, "--tile--is-expanded"), isExpanded), (0,defineProperty/* default */.Z)(_cx5, "".concat(prefix, "--tile--light"), light), _cx5), className);
  var tileStyle = {
    maxHeight: isExpanded ? null : isTileMaxHeight + isTilePadding
  };
  var childrenAsArray = getChildren();
  internal_useIsomorphicEffect(function () {
    var getStyle = window.getComputedStyle(tile.current, null);
    var node = aboveTheFold.current;

    var _node$getBoundingClie = node.getBoundingClientRect(),
        height = _node$getBoundingClie.height;

    var paddingTop = parseInt(getStyle.getPropertyValue('padding-top'), 10);
    var paddingBottom = parseInt(getStyle.getPropertyValue('padding-bottom'), 10);
    setIsTileMaxHeight(height);
    setIsTilePadding(paddingTop + paddingBottom);
  }, []);
  (0,react.useEffect)(function () {
    var resizeObserver = new ResizeObserver(function (entries) {
      var _entries = (0,slicedToArray/* default */.Z)(entries, 1),
          aboveTheFold = _entries[0];

      setIsTileMaxHeight(aboveTheFold.contentRect.height);
    });
    resizeObserver.observe(aboveTheFold.current);
    return function () {
      return resizeObserver.disconnect();
    };
  }, []);
  return /*#__PURE__*/react.createElement("button", (0,esm_extends/* default */.Z)({
    type: "button",
    ref: tile,
    style: tileStyle,
    className: classes,
    "aria-expanded": isExpanded,
    title: isExpanded ? tileExpandedIconText : tileCollapsedIconText
  }, rest, {
    onKeyUp: (0,events/* composeEventHandlers */.M)([onKeyUp, handleKeyUp]),
    onClick: (0,events/* composeEventHandlers */.M)([onClick, handleClick]),
    tabIndex: tabIndex
  }), /*#__PURE__*/react.createElement("div", {
    ref: tileContent
  }, /*#__PURE__*/react.createElement("div", {
    ref: aboveTheFold,
    className: "".concat(prefix, "--tile-content")
  }, childrenAsArray[0]), /*#__PURE__*/react.createElement("div", {
    className: "".concat(prefix, "--tile__chevron")
  }, /*#__PURE__*/react.createElement("span", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), /*#__PURE__*/react.createElement(ChevronDown16, null)), /*#__PURE__*/react.createElement("div", {
    className: "".concat(prefix, "--tile-content")
  }, childrenAsArray[1])));
}
ExpandableTile.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * `true` if the tile is expanded.
   */
  expanded: (prop_types_default()).bool,

  /**
   * An ID that can be provided to aria-labelledby
   */
  id: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (0,deprecate/* default */.Z)((prop_types_default()).bool, 'The `light` prop for `ExpandableTile` is no longer needed and has been deprecated. It will be removed in the next major release. Use the Layer component instead.'),

  /**
   * optional handler to decide whether to ignore a click. returns false if click should be ignored
   */
  onBeforeClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the ExpandableTile is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * optional handler to trigger a function when a key is pressed
   */
  onKeyUp: (prop_types_default()).func,

  /**
   * The `tabindex` attribute.
   */
  tabIndex: (prop_types_default()).number,

  /**
   * The description of the "collapsed" icon that can be read by screen readers.
   */
  tileCollapsedIconText: (prop_types_default()).string,

  /**
   * When "collapsed", a label to appear next to the chevron (e.g., "View more").
   */
  tileCollapsedLabel: (prop_types_default()).string,

  /**
   * The description of the "expanded" icon that can be read by screen readers.
   */
  tileExpandedIconText: (prop_types_default()).string,

  /**
   * When "expanded", a label to appear next to the chevron (e.g., "View less").
   */
  tileExpandedLabel: (prop_types_default()).string
};
ExpandableTile.defaultProps = {
  tabIndex: 0,
  expanded: false,
  tileMaxHeight: 0,
  tilePadding: 0,
  onBeforeClick: function onBeforeClick() {
    return true;
  },
  onClick: function onClick() {},
  tileCollapsedIconText: 'Interact to expand Tile',
  tileExpandedIconText: 'Interact to collapse Tile'
};
ExpandableTile.displayName = 'ExpandableTile';
var TileAboveTheFoldContent = /*#__PURE__*/react.forwardRef(function TilAboveTheFoldContent(_ref5, ref) {
  var children = _ref5.children;
  var prefix = (0,usePrefix/* usePrefix */.A)();
  return /*#__PURE__*/react.createElement("span", {
    ref: ref,
    className: "".concat(prefix, "--tile-content__above-the-fold")
  }, children);
});
TileAboveTheFoldContent.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node
};
TileAboveTheFoldContent.displayName = 'TileAboveTheFoldContent';
var TileBelowTheFoldContent = /*#__PURE__*/react.forwardRef(function TileBelowTheFoldContent(_ref6, ref) {
  var children = _ref6.children;
  var prefix = (0,usePrefix/* usePrefix */.A)();
  return /*#__PURE__*/react.createElement("span", {
    ref: ref,
    className: "".concat(prefix, "--tile-content__below-the-fold")
  }, children);
});
TileBelowTheFoldContent.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node
};
TileBelowTheFoldContent.displayName = 'TileBelowTheFoldContent';
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(8127);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js
var classCallCheck = __webpack_require__(7055);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/createClass.js
var createClass = __webpack_require__(220);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules
var inherits = __webpack_require__(927);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js + 1 modules
var possibleConstructorReturn = __webpack_require__(780);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(5806);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Tile/Tile.js










var Tile_Tile_excluded = ["children", "className", "light"],
    Tile_Tile_excluded2 = ["children", "href", "className", "handleClick", "handleKeyDown", "onClick", "onKeyDown", "clicked", "light"],
    Tile_Tile_excluded3 = ["children", "id", "tabIndex", "value", "name", "title", "iconDescription", "className", "handleClick", "handleKeyDown", "onClick", "onChange", "onKeyDown", "light", "disabled", "selected"],
    Tile_Tile_excluded4 = ["tabIndex", "className", "expanded", "tileMaxHeight", "tilePadding", "onKeyUp", "tileCollapsedIconText", "tileExpandedIconText", "tileCollapsedLabel", "tileExpandedLabel", "onBeforeClick", "light"];

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0,getPrototypeOf/* default */.Z)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0,getPrototypeOf/* default */.Z)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0,possibleConstructorReturn/* default */.Z)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */









var Tile_Tile = /*#__PURE__*/function (_Component) {
  (0,inherits/* default */.Z)(Tile, _Component);

  var _super = _createSuper(Tile);

  function Tile() {
    (0,classCallCheck/* default */.Z)(this, Tile);

    return _super.apply(this, arguments);
  }

  (0,createClass/* default */.Z)(Tile, [{
    key: "render",
    value: function render() {
      var prefix = this.context;

      var _this$props = this.props,
          children = _this$props.children,
          className = _this$props.className,
          light = _this$props.light,
          rest = (0,objectWithoutProperties/* default */.Z)(_this$props, Tile_Tile_excluded);

      var tileClasses = classnames_default()("".concat(prefix, "--tile"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--tile--light"), light), className);
      return /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({
        className: tileClasses
      }, rest), children);
    }
  }]);

  return Tile;
}(react.Component);

(0,defineProperty/* default */.Z)(Tile_Tile, "propTypes", {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (prop_types_default()).bool
});

(0,defineProperty/* default */.Z)(Tile_Tile, "contextType", usePrefix/* PrefixContext */.T);

(0,defineProperty/* default */.Z)(Tile_Tile, "defaultProps", {
  light: false
});

var Tile_ClickableTile = /*#__PURE__*/function (_Component2) {
  (0,inherits/* default */.Z)(ClickableTile, _Component2);

  var _super2 = _createSuper(ClickableTile);

  function ClickableTile() {
    var _this;

    (0,classCallCheck/* default */.Z)(this, ClickableTile);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super2.call.apply(_super2, [this].concat(args));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "state", {});

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleClick", function (evt) {
      evt.persist();

      _this.setState({
        clicked: !_this.state.clicked
      }, function () {
        var _this$props$handleCli, _this$props2, _this$props$onClick, _this$props3;

        // TODO: Remove handleClick prop when handleClick is deprecated
        ((_this$props$handleCli = (_this$props2 = _this.props).handleClick) === null || _this$props$handleCli === void 0 ? void 0 : _this$props$handleCli.call(_this$props2, evt)) || ((_this$props$onClick = (_this$props3 = _this.props).onClick) === null || _this$props$onClick === void 0 ? void 0 : _this$props$onClick.call(_this$props3, evt));
      });
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this), "handleKeyDown", function (evt) {
      evt.persist();

      if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
        _this.setState({
          clicked: !_this.state.clicked
        }, function () {
          var _this$props$handleKey, _this$props4;

          // TODO: Remove handleKeyDown prop when handleKeyDown is deprecated
          ((_this$props$handleKey = (_this$props4 = _this.props).handleKeyDown) === null || _this$props$handleKey === void 0 ? void 0 : _this$props$handleKey.call(_this$props4, evt)) || _this.props.onKeyDown(evt);
        });
      } else {
        var _this$props$handleKey2, _this$props5;

        // TODO: Remove handleKeyDown prop when handleKeyDown is deprecated
        ((_this$props$handleKey2 = (_this$props5 = _this.props).handleKeyDown) === null || _this$props$handleKey2 === void 0 ? void 0 : _this$props$handleKey2.call(_this$props5, evt)) || _this.props.onKeyDown(evt);
      }
    });

    return _this;
  }

  (0,createClass/* default */.Z)(ClickableTile, [{
    key: "render",
    value: function render() {
      var _cx2;

      var prefix = this.context;

      var _this$props6 = this.props,
          children = _this$props6.children,
          href = _this$props6.href,
          className = _this$props6.className,
          handleClick = _this$props6.handleClick,
          handleKeyDown = _this$props6.handleKeyDown,
          onClick = _this$props6.onClick,
          onKeyDown = _this$props6.onKeyDown,
          clicked = _this$props6.clicked,
          light = _this$props6.light,
          rest = (0,objectWithoutProperties/* default */.Z)(_this$props6, Tile_Tile_excluded2);

      var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--clickable"), (_cx2 = {}, (0,defineProperty/* default */.Z)(_cx2, "".concat(prefix, "--tile--is-clicked"), this.state.clicked), (0,defineProperty/* default */.Z)(_cx2, "".concat(prefix, "--tile--light"), light), _cx2), className);
      return /*#__PURE__*/react.createElement(Link_Link, (0,esm_extends/* default */.Z)({
        href: href,
        className: classes
      }, rest, {
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown
      }), children);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: // eslint-disable-next-line react/prop-types
    function getDerivedStateFromProps(_ref, state) {
      var clicked = _ref.clicked;
      var prevClicked = state.prevClicked;
      return prevClicked === clicked ? null : {
        clicked: clicked,
        prevClicked: clicked
      };
    }
  }]);

  return ClickableTile;
}(react.Component);

(0,defineProperty/* default */.Z)(Tile_ClickableTile, "propTypes", {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * Deprecated in v11. Use 'onClick' instead.
   */
  handleClick: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The handleClick prop for ClickableTile has been deprecated in favor of onClick. It will be removed in the next major release.'),

  /**
   * Specify the function to run when the ClickableTile is interacted with via a keyboard
   */
  handleKeyDown: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The handleKeyDown prop for ClickableTile has been deprecated in favor of onKeyDown. It will be removed in the next major release.'),

  /**
   * The href for the link.
   */
  href: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (prop_types_default()).bool,

  /**
   * Specify the function to run when the ClickableTile is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the ClickableTile is interacted with via a keyboard
   */
  onKeyDown: (prop_types_default()).func,

  /**
   * The rel property for the link.
   */
  rel: (prop_types_default()).string
});

(0,defineProperty/* default */.Z)(Tile_ClickableTile, "contextType", usePrefix/* PrefixContext */.T);

(0,defineProperty/* default */.Z)(Tile_ClickableTile, "defaultProps", {
  clicked: false,
  onClick: function onClick() {},
  onKeyDown: function onKeyDown() {},
  light: false
});

function Tile_SelectableTile(props) {
  var _cx3;

  var children = props.children,
      id = props.id,
      tabIndex = props.tabIndex,
      value = props.value,
      name = props.name,
      title = props.title,
      iconDescription = props.iconDescription,
      className = props.className,
      handleClick = props.handleClick,
      handleKeyDown = props.handleKeyDown,
      onClick = props.onClick,
      onChange = props.onChange,
      onKeyDown = props.onKeyDown,
      light = props.light,
      disabled = props.disabled,
      selected = props.selected,
      rest = (0,objectWithoutProperties/* default */.Z)(props, Tile_Tile_excluded3);

  var prefix = (0,usePrefix/* usePrefix */.A)(); // TODO: replace with onClick when handleClick prop is deprecated

  var clickHandler = handleClick || onClick; // TODO: replace with onKeyDown when handleKeyDown prop is deprecated

  var keyDownHandler = handleKeyDown || onKeyDown;

  var _useState = (0,react.useState)(selected),
      _useState2 = (0,slicedToArray/* default */.Z)(_useState, 2),
      isSelected = _useState2[0],
      setIsSelected = _useState2[1];

  var input = (0,react.useRef)(null);
  var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--selectable"), (_cx3 = {}, (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--is-selected"), isSelected), (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--light"), light), (0,defineProperty/* default */.Z)(_cx3, "".concat(prefix, "--tile--disabled"), disabled), _cx3), className);
  var inputClasses = classnames_default()("".concat(prefix, "--tile-input"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--tile-input--checked"), isSelected)); // TODO: rename to handleClick when handleClick prop is deprecated

  function handleOnClick(evt) {
    evt.preventDefault();
    evt.persist();
    setIsSelected(!isSelected);
    clickHandler(evt);
    onChange(evt);
  } // TODO: rename to handleKeyDown when handleKeyDown prop is deprecated


  function handleOnKeyDown(evt) {
    evt.persist();

    if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
      evt.preventDefault();
      setIsSelected(!isSelected);
      onChange(evt);
    }

    keyDownHandler(evt);
  }

  function handleChange(event) {
    setIsSelected(event.target.checked);
    onChange(event);
  }

  (0,react.useEffect)(function () {
    setIsSelected(selected);
  }, [selected]);
  return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("input", {
    ref: input,
    tabIndex: -1,
    id: id,
    className: inputClasses,
    value: value,
    onChange: !disabled ? handleChange : null,
    type: "checkbox",
    disabled: disabled,
    name: name,
    title: title,
    checked: isSelected
  }), /*#__PURE__*/react.createElement("label", (0,esm_extends/* default */.Z)({
    htmlFor: id,
    className: classes // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex
    ,
    tabIndex: !disabled ? tabIndex : null
  }, rest, {
    onClick: !disabled ? handleOnClick : null,
    onKeyDown: !disabled ? handleOnKeyDown : null
  }), /*#__PURE__*/react.createElement("span", {
    className: "".concat(prefix, "--tile__checkmark ").concat(prefix, "--tile__checkmark--persistent")
  }, isSelected ? /*#__PURE__*/react.createElement(CheckboxCheckedFilled16, null) : /*#__PURE__*/react.createElement(Checkbox16, null)), /*#__PURE__*/react.createElement("span", {
    className: "".concat(prefix, "--tile-content")
  }, children)));
}
Tile_SelectableTile.defaultProps = {
  value: 'value',
  title: 'title',
  selected: false,
  tabIndex: 0,
  light: false,
  onClick: function onClick() {},
  onChange: function onChange() {},
  onKeyDown: function onKeyDown() {}
};
Tile_SelectableTile.propTypes = {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * Specify whether the SelectableTile should be disabled
   */
  disabled: (prop_types_default()).bool,

  /**
   * Specify the function to run when the SelectableTile is clicked
   */
  handleClick: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The `handleClick` prop for `SelectableTile` has been deprecated in favor of `onClick`. It will be removed in the next major release.'),

  /**
   * Specify the function to run when the SelectableTile is interacted with via a keyboard
   */
  handleKeyDown: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The `handleKeyDown` prop for `SelectableTile` has been deprecated in favor of `onKeyDown`. It will be removed in the next major release.'),

  /**
   * The description of the checkmark icon.
   */
  iconDescription: (0,deprecate/* default */.Z)((prop_types_default()).string, 'The `iconDescription` prop for `SelectableTile` is no longer needed and has ' + 'been deprecated. It will be removed in the next major release.'),

  /**
   * The ID of the `<input>`.
   */
  id: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (prop_types_default()).bool,

  /**
   * The `name` of the `<input>`.
   */
  name: (prop_types_default()).string,

  /**
   * The empty handler of the `<input>`.
   */
  onChange: (prop_types_default()).func,

  /**
   * Specify the function to run when the SelectableTile is clicked
   */
  onClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the SelectableTile is interacted with via a keyboard
   */
  onKeyDown: (prop_types_default()).func,

  /**
   * `true` to select this tile.
   */
  selected: (prop_types_default()).bool,

  /**
   * Specify the tab index of the wrapper element
   */
  tabIndex: (prop_types_default()).number,

  /**
   * The `title` of the `<input>`.
   */
  title: (prop_types_default()).string,

  /**
   * The value of the `<input>`.
   */
  value: prop_types_default().oneOfType([(prop_types_default()).string, (prop_types_default()).number]).isRequired
};
var Tile_ExpandableTile = /*#__PURE__*/function (_Component3) {
  (0,inherits/* default */.Z)(ExpandableTile, _Component3);

  var _super3 = _createSuper(ExpandableTile);

  function ExpandableTile() {
    var _this2;

    (0,classCallCheck/* default */.Z)(this, ExpandableTile);

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this2 = _super3.call.apply(_super3, [this].concat(args));

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "state", {});

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "resizeObserver", null);

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "componentDidMount", function () {
      _this2.resizeObserver = new ResizeObserver(function (entries) {
        var _entries = (0,slicedToArray/* default */.Z)(entries, 1),
            aboveTheFold = _entries[0];

        _this2.setState({
          tileMaxHeight: aboveTheFold.contentRect.height
        });
      });

      if (_this2.tile) {
        var getStyle = window.getComputedStyle(_this2.tile, null);

        if (_this2.aboveTheFold) {
          _this2.resizeObserver.observe(_this2.aboveTheFold);

          _this2.setState({
            tileMaxHeight: _this2.aboveTheFold.getBoundingClientRect().height,
            tilePadding: parseInt(getStyle.getPropertyValue('padding-top'), 10) + parseInt(getStyle.getPropertyValue('padding-bottom'), 10)
          });
        }
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "componentDidUpdate", function (prevProps) {
      if (prevProps.expanded !== _this2.props.expanded) {
        _this2.setMaxHeight();
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "setMaxHeight", function () {
      if (_this2.state.expanded ? _this2.tileContent : _this2.aboveTheFold) {
        _this2.setState({
          tileMaxHeight: _this2.state.expanded ? _this2.tileContent.getBoundingClientRect().height : _this2.aboveTheFold.getBoundingClientRect().height
        });
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "handleClick", function (evt) {
      if (!_this2.props.onBeforeClick(evt) || evt.target.tagName === 'INPUT') {
        return;
      }

      evt.persist();

      _this2.setState({
        expanded: !_this2.state.expanded
      }, function () {
        var _this2$props$handleCl, _this2$props, _this2$props$onClick, _this2$props2;

        _this2.setMaxHeight(); // TODO: Remove handleClick prop when handleClick is deprecated


        ((_this2$props$handleCl = (_this2$props = _this2.props).handleClick) === null || _this2$props$handleCl === void 0 ? void 0 : _this2$props$handleCl.call(_this2$props, evt)) || ((_this2$props$onClick = (_this2$props2 = _this2.props).onClick) === null || _this2$props$onClick === void 0 ? void 0 : _this2$props$onClick.call(_this2$props2, evt));
      });
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "handleKeyUp", function (evt) {
      if (evt.target !== _this2.tile) {
        if ((0,match/* matches */.wB)(evt, [keys/* Enter */.Ce, keys/* Space */.T])) {
          evt.preventDefault();
        }
      }
    });

    (0,defineProperty/* default */.Z)((0,assertThisInitialized/* default */.Z)(_this2), "getChildren", function () {
      return react.Children.toArray(_this2.props.children);
    });

    return _this2;
  }

  (0,createClass/* default */.Z)(ExpandableTile, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.resizeObserver) {
        this.resizeObserver.disconnect();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _cx5,
          _this3 = this;

      var _this$props7 = this.props,
          tabIndex = _this$props7.tabIndex,
          className = _this$props7.className,
          expanded = _this$props7.expanded,
          tileMaxHeight = _this$props7.tileMaxHeight,
          tilePadding = _this$props7.tilePadding,
          onKeyUp = _this$props7.onKeyUp,
          tileCollapsedIconText = _this$props7.tileCollapsedIconText,
          tileExpandedIconText = _this$props7.tileExpandedIconText,
          tileCollapsedLabel = _this$props7.tileCollapsedLabel,
          tileExpandedLabel = _this$props7.tileExpandedLabel,
          onBeforeClick = _this$props7.onBeforeClick,
          light = _this$props7.light,
          rest = (0,objectWithoutProperties/* default */.Z)(_this$props7, Tile_Tile_excluded4);

      var prefix = this.context;
      var isExpanded = this.state.expanded;
      var classes = classnames_default()("".concat(prefix, "--tile"), "".concat(prefix, "--tile--expandable"), (_cx5 = {}, (0,defineProperty/* default */.Z)(_cx5, "".concat(prefix, "--tile--is-expanded"), isExpanded), (0,defineProperty/* default */.Z)(_cx5, "".concat(prefix, "--tile--light"), light), _cx5), className);
      var tileStyle = {
        maxHeight: isExpanded ? null : this.state.tileMaxHeight + this.state.tilePadding
      };
      var childrenAsArray = this.getChildren();
      return (
        /*#__PURE__*/
        // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
        react.createElement("button", (0,esm_extends/* default */.Z)({
          type: "button",
          ref: function ref(tile) {
            _this3.tile = tile;
          },
          style: tileStyle,
          className: classes,
          "aria-expanded": isExpanded,
          title: isExpanded ? tileExpandedIconText : tileCollapsedIconText
        }, rest, {
          onKeyUp: (0,events/* composeEventHandlers */.M)([onKeyUp, this.handleKeyUp]),
          onClick: this.handleClick,
          tabIndex: tabIndex
        }), /*#__PURE__*/react.createElement("div", {
          ref: function ref(tileContent) {
            _this3.tileContent = tileContent;
          }
        }, /*#__PURE__*/react.createElement("div", {
          ref: function ref(aboveTheFold) {
            _this3.aboveTheFold = aboveTheFold;
          },
          className: "".concat(prefix, "--tile-content")
        }, childrenAsArray[0]), /*#__PURE__*/react.createElement("div", {
          className: "".concat(prefix, "--tile__chevron")
        }, /*#__PURE__*/react.createElement("span", null, isExpanded ? tileExpandedLabel : tileCollapsedLabel), /*#__PURE__*/react.createElement(ChevronDown16, null)), /*#__PURE__*/react.createElement("div", {
          className: "".concat(prefix, "--tile-content")
        }, childrenAsArray[1])))
      );
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps( // eslint-disable-next-line react/prop-types
    _ref2, state) {
      var expanded = _ref2.expanded,
          tileMaxHeight = _ref2.tileMaxHeight,
          tilePadding = _ref2.tilePadding;
      var prevExpanded = state.prevExpanded,
          prevTileMaxHeight = state.prevTileMaxHeight,
          prevTilePadding = state.prevTilePadding,
          currentExpanded = state.expanded,
          currentTileMaxHeight = state.tileMaxHeight,
          currentTilePadding = state.tilePadding;
      var expandedChanged = prevExpanded !== expanded;
      var tileMaxHeightChanged = prevTileMaxHeight !== tileMaxHeight;
      var tilePaddingChanged = prevTilePadding !== tilePadding;
      return !expandedChanged && !tileMaxHeightChanged && !tilePaddingChanged ? null : {
        expanded: !expandedChanged ? currentExpanded : expanded,
        tileMaxHeight: !tileMaxHeightChanged ? currentTileMaxHeight : tileMaxHeight,
        tilePadding: !tilePaddingChanged ? currentTilePadding : tilePadding,
        prevExpanded: expanded,
        prevTileMaxHeight: tileMaxHeight,
        prevTilePadding: tilePadding
      };
    }
  }]);

  return ExpandableTile;
}(react.Component);

(0,defineProperty/* default */.Z)(Tile_ExpandableTile, "propTypes", {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node,

  /**
   * The CSS class names.
   */
  className: (prop_types_default()).string,

  /**
   * `true` if the tile is expanded.
   */
  expanded: (prop_types_default()).bool,

  /**
   * Deprecated in v11. Use 'onClick' instead.
   */
  handleClick: (0,deprecate/* default */.Z)((prop_types_default()).func, 'The handleClick prop for ExpandableTile has been deprecated in favor of onClick. It will be removed in the next major release.'),

  /**
   * An ID that can be provided to aria-labelledby
   */
  id: (prop_types_default()).string,

  /**
   * `true` to use the light version. For use on $ui-01 backgrounds only.
   * Don't use this to make tile background color same as container background color.
   */
  light: (prop_types_default()).bool,

  /**
   * optional handler to decide whether to ignore a click. returns false if click should be ignored
   */
  onBeforeClick: (prop_types_default()).func,

  /**
   * Specify the function to run when the ExpandableTile is clicked
    */
  onClick: (prop_types_default()).func,

  /**
   * optional handler to trigger a function when a key is pressed
   */
  onKeyUp: (prop_types_default()).func,

  /**
   * The `tabindex` attribute.
   */
  tabIndex: (prop_types_default()).number,

  /**
   * The description of the "collapsed" icon that can be read by screen readers.
   */
  tileCollapsedIconText: (prop_types_default()).string,

  /**
   * When "collapsed", a label to appear next to the chevron (e.g., "View more").
   */
  tileCollapsedLabel: (prop_types_default()).string,

  /**
   * The description of the "expanded" icon that can be read by screen readers.
   */
  tileExpandedIconText: (prop_types_default()).string,

  /**
   * When "expanded", a label to appear next to the chevron (e.g., "View less").
   */
  tileExpandedLabel: (prop_types_default()).string
});

(0,defineProperty/* default */.Z)(Tile_ExpandableTile, "contextType", usePrefix/* PrefixContext */.T);

(0,defineProperty/* default */.Z)(Tile_ExpandableTile, "defaultProps", {
  tabIndex: 0,
  expanded: false,
  tileMaxHeight: 0,
  tilePadding: 0,
  onBeforeClick: function onBeforeClick() {
    return true;
  },
  onClick: function onClick() {},
  tileCollapsedIconText: 'Interact to expand Tile',
  tileExpandedIconText: 'Interact to collapse Tile',
  light: false
});

var Tile_TileAboveTheFoldContent = /*#__PURE__*/function (_Component4) {
  (0,inherits/* default */.Z)(TileAboveTheFoldContent, _Component4);

  var _super4 = _createSuper(TileAboveTheFoldContent);

  function TileAboveTheFoldContent() {
    (0,classCallCheck/* default */.Z)(this, TileAboveTheFoldContent);

    return _super4.apply(this, arguments);
  }

  (0,createClass/* default */.Z)(TileAboveTheFoldContent, [{
    key: "render",
    value: function render() {
      var prefix = this.context;
      var children = this.props.children;
      return /*#__PURE__*/react.createElement("span", {
        className: "".concat(prefix, "--tile-content__above-the-fold")
      }, children);
    }
  }]);

  return TileAboveTheFoldContent;
}(react.Component);

(0,defineProperty/* default */.Z)(Tile_TileAboveTheFoldContent, "propTypes", {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node
});

(0,defineProperty/* default */.Z)(Tile_TileAboveTheFoldContent, "contextType", usePrefix/* PrefixContext */.T);

var Tile_TileBelowTheFoldContent = /*#__PURE__*/function (_Component5) {
  (0,inherits/* default */.Z)(TileBelowTheFoldContent, _Component5);

  var _super5 = _createSuper(TileBelowTheFoldContent);

  function TileBelowTheFoldContent() {
    (0,classCallCheck/* default */.Z)(this, TileBelowTheFoldContent);

    return _super5.apply(this, arguments);
  }

  (0,createClass/* default */.Z)(TileBelowTheFoldContent, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      var prefix = this.context;
      return /*#__PURE__*/react.createElement("span", {
        className: "".concat(prefix, "--tile-content__below-the-fold")
      }, children);
    }
  }]);

  return TileBelowTheFoldContent;
}(react.Component);

(0,defineProperty/* default */.Z)(Tile_TileBelowTheFoldContent, "propTypes", {
  /**
   * The child nodes.
   */
  children: (prop_types_default()).node
});

(0,defineProperty/* default */.Z)(Tile_TileBelowTheFoldContent, "contextType", usePrefix/* PrefixContext */.T);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/Tile/index.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */



var components_Tile_Tile = es/* enabled */.am('enable-v11-release') ? Tile : Tile_Tile;
var components_Tile_ClickableTile = es/* enabled */.am('enable-v11-release') ? ClickableTile : Tile_ClickableTile;
var components_Tile_SelectableTile = es/* enabled */.am('enable-v11-release') ? SelectableTile : Tile_SelectableTile;
var components_Tile_ExpandableTile = es/* enabled */.am('enable-v11-release') ? ExpandableTile : Tile_ExpandableTile;
var components_Tile_TileAboveTheFoldContent = es/* enabled */.am('enable-v11-release') ? TileAboveTheFoldContent : Tile_TileAboveTheFoldContent;
var components_Tile_TileBelowTheFoldContent = es/* enabled */.am('enable-v11-release') ? TileBelowTheFoldContent : Tile_TileBelowTheFoldContent;

/***/ }),

/***/ 3342:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4245);
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5882);
/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(8775);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2779);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3980);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(2784);
/* harmony import */ var _prop_types_AriaPropTypes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(8144);
/* harmony import */ var _internal_usePrefix__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(330);



var _excluded = ["className", "children"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */






var Header = function Header(_ref) {
  var customClassName = _ref.className,
      children = _ref.children,
      rest = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)(_ref, _excluded);

  var prefix = (0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_5__/* .usePrefix */ .A)();
  var className = classnames__WEBPACK_IMPORTED_MODULE_1___default()("".concat(prefix, "--header"), customClassName);
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_3__.createElement("header", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({}, rest, {
    className: className
  }), children);
};

Header.propTypes = _objectSpread(_objectSpread({}, _prop_types_AriaPropTypes__WEBPACK_IMPORTED_MODULE_7__/* .AriaLabelPropType */ .b), {}, {
  /**
   * Optionally provide a custom class name that is applied to the underlying <header>
   */
  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Header);

/***/ }),

/***/ 1917:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5882);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4245);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2784);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(2779);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(3980);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _prop_types_AriaPropTypes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(8144);
/* harmony import */ var _internal_usePrefix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(330);



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





var Switcher = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function Switcher(props, ref) {
  var prefix = (0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_4__/* .usePrefix */ .A)();
  var ariaLabel = props['aria-label'],
      ariaLabelledBy = props['aria-labelledby'],
      customClassName = props.className,
      children = props.children;
  var accessibilityLabel = {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledBy
  };
  var className = classnames__WEBPACK_IMPORTED_MODULE_2___default()("".concat(prefix, "--switcher"), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, customClassName, !!customClassName));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement("ul", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({
    ref: ref,
    className: className
  }, accessibilityLabel), children);
});
Switcher.displayName = 'Switcher';
Switcher.propTypes = _objectSpread(_objectSpread({}, _prop_types_AriaPropTypes__WEBPACK_IMPORTED_MODULE_6__/* .AriaLabelPropType */ .b), {}, {
  /**
   * expects to receive <SwitcherItem />
   */
  children: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node.isRequired),

  /**
   * Optionally provide a custom class to apply to the underlying `<ul>` node
   */
  className: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().string)
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Switcher);

/***/ }),

/***/ 2830:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5882);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(4245);
/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8775);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2784);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2779);
/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3980);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _internal_usePrefix__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(330);



var _excluded = ["className"];

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */





var SwitcherDivider = function SwitcherDivider(_ref) {
  var customClassName = _ref.className,
      other = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_ref, _excluded);

  var prefix = (0,_internal_usePrefix__WEBPACK_IMPORTED_MODULE_4__/* .usePrefix */ .A)();
  var className = classnames__WEBPACK_IMPORTED_MODULE_1___default()("".concat(prefix, "--switcher__item--divider"), (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z)({}, customClassName, !!customClassName));
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("hr", (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_6__/* ["default"] */ .Z)({}, other, {
    className: className
  }));
};

SwitcherDivider.propTypes = {
  /**
   * Optionally provide a custom class to apply to the underlying `<li>` node
   */
  className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SwitcherDivider);

/***/ }),

/***/ 2974:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ UIShell_SwitcherItem)
});

// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/extends.js
var esm_extends = __webpack_require__(5882);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4245);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js + 1 modules
var objectWithoutProperties = __webpack_require__(8775);
// EXTERNAL MODULE: ../../node_modules/react/index.js
var react = __webpack_require__(2784);
// EXTERNAL MODULE: ../../node_modules/classnames/index.js
var classnames = __webpack_require__(2779);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);
// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(3980);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/prop-types/AriaPropTypes.js + 1 modules
var AriaPropTypes = __webpack_require__(8144);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/UIShell/Link.js


var _excluded = ["element", "isSideNavExpanded"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


/**
 * Link is a custom component that allows us to supporting rendering elements
 * other than `a` in our markup. The goal is to allow users to support passing
 * in their own components to support use-cases like `react-router` or
 * `@reach/router`
 */

var Link = /*#__PURE__*/react.forwardRef(function Link(props, ref) {
  var element = props.element,
      isSideNavExpanded = props.isSideNavExpanded,
      rest = (0,objectWithoutProperties/* default */.Z)(props, _excluded);

  return /*#__PURE__*/react.createElement(element, _objectSpread(_objectSpread({}, rest), {}, {
    ref: ref
  }));
});
var LinkPropTypes = {
  /**
   * The base element to use to build the link. Defaults to `a`, can also accept
   * alternative tag names or custom components like `Link` from `react-router`.
   */
  element: (prop_types_default()).elementType,

  /**
   * Property to indicate if the side nav container is open (or not). Use to
   * keep local state and styling in step with the SideNav expansion state.
   */
  isSideNavExpanded: (prop_types_default()).bool
};
Link.displayName = 'Link';
Link.propTypes = LinkPropTypes;
Link.defaultProps = {
  element: 'a'
};

/* harmony default export */ const UIShell_Link = (Link);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/es/internal/usePrefix.js
var usePrefix = __webpack_require__(330);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/components/UIShell/SwitcherItem.js



var SwitcherItem_excluded = ["aria-label", "aria-labelledby", "className", "children", "isSelected"];

function SwitcherItem_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function SwitcherItem_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? SwitcherItem_ownKeys(Object(source), !0).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : SwitcherItem_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */






var SwitcherItem = /*#__PURE__*/react.forwardRef(function SwitcherItem(props, ref) {
  var prefix = (0,usePrefix/* usePrefix */.A)();

  var ariaLabel = props['aria-label'],
      ariaLabelledBy = props['aria-labelledby'],
      customClassName = props.className,
      children = props.children,
      isSelected = props.isSelected,
      rest = (0,objectWithoutProperties/* default */.Z)(props, SwitcherItem_excluded);

  var className = classnames_default()("".concat(prefix, "--switcher__item"), (0,defineProperty/* default */.Z)({}, customClassName, !!customClassName));
  var accessibilityLabel = {
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledBy
  };
  var linkClassName = classnames_default()("".concat(prefix, "--switcher__item-link"), (0,defineProperty/* default */.Z)({}, "".concat(prefix, "--switcher__item-link--selected"), isSelected));
  return /*#__PURE__*/react.createElement("li", {
    className: className
  }, /*#__PURE__*/react.createElement(UIShell_Link, (0,esm_extends/* default */.Z)({}, rest, {
    ref: ref,
    className: linkClassName,
    tabIndex: 0
  }, accessibilityLabel), children));
});
SwitcherItem.displayName = 'SwitcherItem';
SwitcherItem.propTypes = SwitcherItem_objectSpread(SwitcherItem_objectSpread({}, AriaPropTypes/* AriaLabelPropType */.b), {}, {
  /**
   * Specify the text content for the link
   */
  children: (prop_types_default()).node.isRequired,

  /**
   * Optionally provide a custom class to apply to the underlying `<li>` node
   */
  className: (prop_types_default()).string
});
/* harmony default export */ const UIShell_SwitcherItem = (SwitcherItem);

/***/ }),

/***/ 4817:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Ce": () => (/* binding */ Enter),
/* harmony export */   "L1": () => (/* binding */ Escape),
/* harmony export */   "T": () => (/* binding */ Space)
/* harmony export */ });
/* unused harmony exports Tab, PageUp, PageDown, End, Home, ArrowLeft, ArrowUp, ArrowRight, ArrowDown, Delete */
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
var Tab = {
  key: 'Tab',
  which: 9,
  keyCode: 9
};
var Enter = {
  key: 'Enter',
  which: 13,
  keyCode: 13
};
var Escape = {
  key: ['Escape', // IE11 Escape
  'Esc'],
  which: 27,
  keyCode: 27
};
var Space = {
  key: ' ',
  which: 32,
  keyCode: 32
};
var PageUp = {
  key: 'PageUp',
  which: 33,
  keyCode: 33
};
var PageDown = {
  key: 'PageDown',
  which: 34,
  keyCode: 34
};
var End = {
  key: 'End',
  which: 35,
  keyCode: 35
};
var Home = {
  key: 'Home',
  which: 36,
  keyCode: 36
};
var ArrowLeft = {
  key: 'ArrowLeft',
  which: 37,
  keyCode: 37
};
var ArrowUp = {
  key: 'ArrowUp',
  which: 38,
  keyCode: 38
};
var ArrowRight = {
  key: 'ArrowRight',
  which: 39,
  keyCode: 39
};
var ArrowDown = {
  key: 'ArrowDown',
  which: 40,
  keyCode: 40
};
var Delete = {
  key: 'Delete',
  which: 8 || 0,
  keyCode: 8 || 0
};

/***/ }),

/***/ 4509:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "wB": () => (/* binding */ matches)
/* harmony export */ });
/* unused harmony exports match, getCharacterFor */
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @typedef Key
 * @property key {Array<string>|string}
 * @property which {number}
 * @property keyCode {number}
 */

/**
 * Check to see if at least one key code matches the key code of the
 * given event.
 *
 * @example
 * import * as keys from '../keys';
 * import { matches } from '../match';
 *
 * function handleOnKeyDown(event) {
 *   if (matches(event, [keys.Enter, keys.Space]) {
 *     // ...
 *   }
 * }
 *
 * @param {Event} event
 * @param {Array<Key>} keysToMatch
 * @returns {boolean}
 */
function matches(event, keysToMatch) {
  for (var i = 0; i < keysToMatch.length; i++) {
    if (match(event, keysToMatch[i])) {
      return true;
    }
  }

  return false;
}
/**
 * Check to see if the given key matches the corresponding keyboard event. Also
 * supports passing in the value directly if you can't used the given event.
 *
 * @example
 * import * as keys from '../keys';
 * import { matches } from '../match';
 *
 * function handleOnKeyDown(event) {
 *   if (match(event, keys.Enter) {
 *     // ...
 *   }
 * }
 *
 * @param {Event|number|string} eventOrCode
 * @param {Key} key
 * @returns {boolean}
 */

function match(eventOrCode) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      key = _ref.key,
      which = _ref.which,
      keyCode = _ref.keyCode;

  if (typeof eventOrCode === 'string') {
    return eventOrCode === key;
  }

  if (typeof eventOrCode === 'number') {
    return eventOrCode === which || eventOrCode === keyCode;
  }

  if (eventOrCode.key && Array.isArray(key)) {
    return key.indexOf(eventOrCode.key) !== -1;
  }

  return eventOrCode.key === key || eventOrCode.which === which || eventOrCode.keyCode === keyCode;
}
/**
 * Get a string character for a given event or event code (useful for synthetic
 * events)
 *
 * @param {Event|number} eventOrCode
 * @returns {string}
 */

function getCharacterFor(eventOrCode) {
  if (typeof eventOrCode === 'number') {
    return String.fromCharCode(eventOrCode);
  }

  return eventOrCode.key || String.fromCharCode(eventOrCode.which || eventOrCode.keyCode);
}

/***/ }),

/***/ 330:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "T": () => (/* binding */ PrefixContext),
/* harmony export */   "A": () => (/* binding */ usePrefix)
/* harmony export */ });
/* harmony import */ var carbon_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(5498);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2784);
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


var PrefixContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createContext(carbon_components__WEBPACK_IMPORTED_MODULE_1__/* ["default"].prefix */ .Z.prefix);
function usePrefix() {
  return react__WEBPACK_IMPORTED_MODULE_0__.useContext(PrefixContext);
}

/***/ }),

/***/ 8144:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "b": () => (/* binding */ AriaLabelPropType)
});

// EXTERNAL MODULE: ../../node_modules/prop-types/index.js
var prop_types = __webpack_require__(3980);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/defineProperty.js
var defineProperty = __webpack_require__(4245);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/prop-types/isRequiredOneOf.js


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,defineProperty/* default */.Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * @param {object<string, Function>} propTypes The list of type checkers, keyed by prop names.
 * @returns {object<string, Function>}
 *   The new prop type checkers that checks if one of the given props exist,
 *   in addition to the original type checkings.
 */
function isRequiredOneOf(propTypes) {
  var names = Object.keys(propTypes);

  var checker = function checker(propType) {
    return function (props, propName, componentName) {
      if (false) {}

      for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
        rest[_key - 3] = arguments[_key];
      }

      return propType.apply(void 0, [props, propName, componentName].concat(rest));
    };
  };

  return names.reduce(function (o, name) {
    return _objectSpread(_objectSpread({}, o), {}, (0,defineProperty/* default */.Z)({}, name, checker(propTypes[name])));
  }, {});
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/es/prop-types/AriaPropTypes.js
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */


var AriaLabelPropType = isRequiredOneOf({
  'aria-label': (prop_types_default()).string,
  'aria-labelledby': (prop_types_default()).string
});

/***/ }),

/***/ 3597:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ deprecate)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4245);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

var didWarnAboutDeprecation = {};
function deprecate(propType, message) {
  function checker(props, propName, componentName) {
    if (props[propName] === undefined) {
      return;
    }

    if (!didWarnAboutDeprecation[componentName] || !didWarnAboutDeprecation[componentName][propName]) {
      didWarnAboutDeprecation[componentName] = _objectSpread(_objectSpread({}, didWarnAboutDeprecation[componentName]), {}, (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)({}, propName, true));
       false ? 0 : void 0;
    }

    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    return propType.apply(void 0, [props, propName, componentName].concat(rest));
  }

  return checker;
}

/***/ }),

/***/ 3834:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "M": () => (/* binding */ composeEventHandlers)
/* harmony export */ });
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Generic utility to compose event handlers so that consumers can supply their
 * own event listeners on table components. The default heuristic here is to
 * iterate through the given functions until `preventDefault` is called on the
 * given event.
 *
 * @param {Array<Function>} fns array of functions to apply to the event
 * @returns {Function}
 */
var composeEventHandlers = function composeEventHandlers(fns) {
  return function (event) {
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    for (var i = 0; i < fns.length; i++) {
      if (event.defaultPrevented) {
        break;
      }

      if (typeof fns[i] === 'function') {
        fns[i].apply(fns, [event].concat(args));
      }
    }
  };
};

/***/ }),

/***/ 5498:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ settings_1)
/* harmony export */ });
/**
 * Copyright IBM Corp. 2016, 2018
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Settings.
 * @exports CarbonComponents.settings
 * @type Object
 * @property {boolean} [disableAutoInit]
 *   Disables automatic instantiation of components.
 *   By default (`CarbonComponents.disableAutoInit` is `false`),
 *   carbon-components attempts to instantiate components automatically
 *   by searching for elements with `data-component-name` (e.g. `data-loading`) attribute
 *   or upon DOM events (e.g. clicking) on such elements.
 *   See each components' static `.init()` methods for details.
 * @property {string} [prefix=bx]
 *   Brand prefix. Should be in sync with `$prefix` Sass variable in carbon-components/src/globals/scss/_vars.scss.
 * // @todo given that the default value is so long, is it appropriate to put in the JSDoc?
 * @property {string} [selectorTabbable]
 *   A selector selecting tabbable/focusable nodes.
 *   By default selectorTabbable references links, areas, inputs, buttons, selects, textareas,
 *   iframes, objects, embeds, or elements explicitly using tabindex or contenteditable attributes
 *   as long as the element is not `disabled` or the `tabindex="-1"`.
 * @property {string} [selectorFocusable]
 *   CSS selector that selects major nodes that are click focusable
 *   This property is identical to selectorTabbable with the exception of
 *   the `:not([tabindex='-1'])` pseudo class
 */
var settings = {
  prefix: 'bx',
  selectorTabbable: "\n    a[href], area[href], input:not([disabled]):not([tabindex='-1']),\n    button:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),\n    textarea:not([disabled]):not([tabindex='-1']),\n    iframe, object, embed, *[tabindex]:not([tabindex='-1']), *[contenteditable=true]\n  ",
  selectorFocusable: "\n    a[href], area[href], input:not([disabled]),\n    button:not([disabled]),select:not([disabled]),\n    textarea:not([disabled]),\n    iframe, object, embed, *[tabindex], *[contenteditable=true]\n  "
};
var settings_1 = settings;


/***/ }),

/***/ 2779:
/***/ ((module, exports) => {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2018 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames() {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				if (arg.length) {
					var inner = classNames.apply(null, arg);
					if (inner) {
						classes.push(inner);
					}
				}
			} else if (argType === 'object') {
				if (arg.toString === Object.prototype.toString) {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				} else {
					classes.push(arg.toString());
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ 1641:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/
// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf

var dispatch = (__webpack_require__(4225)/* .dispatch */ .W);

var cloudRadians = Math.PI / 180,
    cw = 1 << 11 >> 5,
    ch = 1 << 11;

module.exports = function() {
  var size = [256, 256],
      text = cloudText,
      font = cloudFont,
      fontSize = cloudFontSize,
      fontStyle = cloudFontNormal,
      fontWeight = cloudFontNormal,
      rotate = cloudRotate,
      padding = cloudPadding,
      spiral = archimedeanSpiral,
      words = [],
      timeInterval = Infinity,
      event = dispatch("word", "end"),
      timer = null,
      random = Math.random,
      cloud = {},
      canvas = cloudCanvas;

  cloud.canvas = function(_) {
    return arguments.length ? (canvas = functor(_), cloud) : canvas;
  };

  cloud.start = function() {
    var contextAndRatio = getContext(canvas()),
        board = zeroArray((size[0] >> 5) * size[1]),
        bounds = null,
        n = words.length,
        i = -1,
        tags = [],
        data = words.map(function(d, i) {
          d.text = text.call(this, d, i);
          d.font = font.call(this, d, i);
          d.style = fontStyle.call(this, d, i);
          d.weight = fontWeight.call(this, d, i);
          d.rotate = rotate.call(this, d, i);
          d.size = ~~fontSize.call(this, d, i);
          d.padding = padding.call(this, d, i);
          return d;
        }).sort(function(a, b) { return b.size - a.size; });

    if (timer) clearInterval(timer);
    timer = setInterval(step, 0);
    step();

    return cloud;

    function step() {
      var start = Date.now();
      while (Date.now() - start < timeInterval && ++i < n && timer) {
        var d = data[i];
        d.x = (size[0] * (random() + .5)) >> 1;
        d.y = (size[1] * (random() + .5)) >> 1;
        cloudSprite(contextAndRatio, d, data, i);
        if (d.hasText && place(board, d, bounds)) {
          tags.push(d);
          event.call("word", cloud, d);
          if (bounds) cloudBounds(bounds, d);
          else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];
          // Temporary hack
          d.x -= size[0] >> 1;
          d.y -= size[1] >> 1;
        }
      }
      if (i >= n) {
        cloud.stop();
        event.call("end", cloud, tags, bounds);
      }
    }
  }

  cloud.stop = function() {
    if (timer) {
      clearInterval(timer);
      timer = null;
    }
    return cloud;
  };

  function getContext(canvas) {
    canvas.width = canvas.height = 1;
    var ratio = Math.sqrt(canvas.getContext("2d").getImageData(0, 0, 1, 1).data.length >> 2);
    canvas.width = (cw << 5) / ratio;
    canvas.height = ch / ratio;

    var context = canvas.getContext("2d");
    context.fillStyle = context.strokeStyle = "red";
    context.textAlign = "center";

    return {context: context, ratio: ratio};
  }

  function place(board, tag, bounds) {
    var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],
        startX = tag.x,
        startY = tag.y,
        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),
        s = spiral(size),
        dt = random() < .5 ? 1 : -1,
        t = -dt,
        dxdy,
        dx,
        dy;

    while (dxdy = s(t += dt)) {
      dx = ~~dxdy[0];
      dy = ~~dxdy[1];

      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;

      tag.x = startX + dx;
      tag.y = startY + dy;

      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||
          tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;
      // TODO only check for collisions within current bounds.
      if (!bounds || !cloudCollide(tag, board, size[0])) {
        if (!bounds || collideRects(tag, bounds)) {
          var sprite = tag.sprite,
              w = tag.width >> 5,
              sw = size[0] >> 5,
              lx = tag.x - (w << 4),
              sx = lx & 0x7f,
              msx = 32 - sx,
              h = tag.y1 - tag.y0,
              x = (tag.y + tag.y0) * sw + (lx >> 5),
              last;
          for (var j = 0; j < h; j++) {
            last = 0;
            for (var i = 0; i <= w; i++) {
              board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);
            }
            x += sw;
          }
          delete tag.sprite;
          return true;
        }
      }
    }
    return false;
  }

  cloud.timeInterval = function(_) {
    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;
  };

  cloud.words = function(_) {
    return arguments.length ? (words = _, cloud) : words;
  };

  cloud.size = function(_) {
    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;
  };

  cloud.font = function(_) {
    return arguments.length ? (font = functor(_), cloud) : font;
  };

  cloud.fontStyle = function(_) {
    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;
  };

  cloud.fontWeight = function(_) {
    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;
  };

  cloud.rotate = function(_) {
    return arguments.length ? (rotate = functor(_), cloud) : rotate;
  };

  cloud.text = function(_) {
    return arguments.length ? (text = functor(_), cloud) : text;
  };

  cloud.spiral = function(_) {
    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;
  };

  cloud.fontSize = function(_) {
    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;
  };

  cloud.padding = function(_) {
    return arguments.length ? (padding = functor(_), cloud) : padding;
  };

  cloud.random = function(_) {
    return arguments.length ? (random = _, cloud) : random;
  };

  cloud.on = function() {
    var value = event.on.apply(event, arguments);
    return value === event ? cloud : value;
  };

  return cloud;
};

function cloudText(d) {
  return d.text;
}

function cloudFont() {
  return "serif";
}

function cloudFontNormal() {
  return "normal";
}

function cloudFontSize(d) {
  return Math.sqrt(d.value);
}

function cloudRotate() {
  return (~~(Math.random() * 6) - 3) * 30;
}

function cloudPadding() {
  return 1;
}

// Fetches a monochrome sprite bitmap for the specified text.
// Load in batches for speed.
function cloudSprite(contextAndRatio, d, data, di) {
  if (d.sprite) return;
  var c = contextAndRatio.context,
      ratio = contextAndRatio.ratio;

  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);
  var x = 0,
      y = 0,
      maxh = 0,
      n = data.length;
  --di;
  while (++di < n) {
    d = data[di];
    c.save();
    c.font = d.style + " " + d.weight + " " + ~~((d.size + 1) / ratio) + "px " + d.font;
    var w = c.measureText(d.text + "m").width * ratio,
        h = d.size << 1;
    if (d.rotate) {
      var sr = Math.sin(d.rotate * cloudRadians),
          cr = Math.cos(d.rotate * cloudRadians),
          wcr = w * cr,
          wsr = w * sr,
          hcr = h * cr,
          hsr = h * sr;
      w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;
      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));
    } else {
      w = (w + 0x1f) >> 5 << 5;
    }
    if (h > maxh) maxh = h;
    if (x + w >= (cw << 5)) {
      x = 0;
      y += maxh;
      maxh = 0;
    }
    if (y + h >= ch) break;
    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);
    if (d.rotate) c.rotate(d.rotate * cloudRadians);
    c.fillText(d.text, 0, 0);
    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);
    c.restore();
    d.width = w;
    d.height = h;
    d.xoff = x;
    d.yoff = y;
    d.x1 = w >> 1;
    d.y1 = h >> 1;
    d.x0 = -d.x1;
    d.y0 = -d.y1;
    d.hasText = true;
    x += w;
  }
  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,
      sprite = [];
  while (--di >= 0) {
    d = data[di];
    if (!d.hasText) continue;
    var w = d.width,
        w32 = w >> 5,
        h = d.y1 - d.y0;
    // Zero the buffer
    for (var i = 0; i < h * w32; i++) sprite[i] = 0;
    x = d.xoff;
    if (x == null) return;
    y = d.yoff;
    var seen = 0,
        seenRow = -1;
    for (var j = 0; j < h; j++) {
      for (var i = 0; i < w; i++) {
        var k = w32 * j + (i >> 5),
            m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;
        sprite[k] |= m;
        seen |= m;
      }
      if (seen) seenRow = j;
      else {
        d.y0++;
        h--;
        j--;
        y++;
      }
    }
    d.y1 = d.y0 + seenRow;
    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);
  }
}

// Use mask-based collision detection.
function cloudCollide(tag, board, sw) {
  sw >>= 5;
  var sprite = tag.sprite,
      w = tag.width >> 5,
      lx = tag.x - (w << 4),
      sx = lx & 0x7f,
      msx = 32 - sx,
      h = tag.y1 - tag.y0,
      x = (tag.y + tag.y0) * sw + (lx >> 5),
      last;
  for (var j = 0; j < h; j++) {
    last = 0;
    for (var i = 0; i <= w; i++) {
      if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))
          & board[x + i]) return true;
    }
    x += sw;
  }
  return false;
}

function cloudBounds(bounds, d) {
  var b0 = bounds[0],
      b1 = bounds[1];
  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;
  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;
  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;
  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;
}

function collideRects(a, b) {
  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;
}

function archimedeanSpiral(size) {
  var e = size[0] / size[1];
  return function(t) {
    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];
  };
}

function rectangularSpiral(size) {
  var dy = 4,
      dx = dy * size[0] / size[1],
      x = 0,
      y = 0;
  return function(t) {
    var sign = t < 0 ? -1 : 1;
    // See triangular numbers: T_n = n * (n + 1) / 2.
    switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {
      case 0:  x += dx; break;
      case 1:  y += dy; break;
      case 2:  x -= dx; break;
      default: y -= dy; break;
    }
    return [x, y];
  };
}

// TODO reuse arrays?
function zeroArray(n) {
  var a = [],
      i = -1;
  while (++i < n) a[i] = 0;
  return a;
}

function cloudCanvas() {
  return document.createElement("canvas");
}

function functor(d) {
  return typeof d === "function" ? d : function() { return d; };
}

var spirals = {
  archimedean: archimedeanSpiral,
  rectangular: rectangularSpiral
};


/***/ }),

/***/ 4225:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "W": () => (/* reexport */ src_dispatch)
});

;// CONCATENATED MODULE: ../../node_modules/d3-cloud/node_modules/d3-dispatch/src/dispatch.js
var noop = {value: function() {}};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }
  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function(t) {
    var name = "", i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {type: t, name: name};
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function(typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length;

    // If no callback was specified, return the callback of the given type and name.
    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;
      return;
    }

    // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.
    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);
    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);
      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function() {
    var copy = {}, _ = this._;
    for (var t in _) copy[t] = _[t].slice();
    return new Dispatch(copy);
  },
  call: function(type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function(type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);
    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }
  if (callback != null) type.push({name: name, value: callback});
  return type;
}

/* harmony default export */ const src_dispatch = (dispatch);

;// CONCATENATED MODULE: ../../node_modules/d3-cloud/node_modules/d3-dispatch/src/index.js



/***/ }),

/***/ 2348:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = buildFormatLongFn;

function buildFormatLongFn(args) {
  return function (dirtyOptions) {
    var options = dirtyOptions || {};
    var width = options.width ? String(options.width) : args.defaultWidth;
    var format = args.formats[width] || args.formats[args.defaultWidth];
    return format;
  };
}

module.exports = exports.default;

/***/ }),

/***/ 4738:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = buildLocalizeFn;

function buildLocalizeFn(args) {
  return function (dirtyIndex, dirtyOptions) {
    var options = dirtyOptions || {};
    var context = options.context ? String(options.context) : 'standalone';
    var valuesArray;

    if (context === 'formatting' && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
      var width = options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth;

      var _width = options.width ? String(options.width) : args.defaultWidth;

      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }

    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index];
  };
}

module.exports = exports.default;

/***/ }),

/***/ 9653:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = buildMatchFn;

function buildMatchFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var width = options.width;
    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
    var matchResult = string.match(matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
    var value;

    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {
      value = findIndex(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    } else {
      value = findKey(parsePatterns, function (pattern) {
        return pattern.test(string);
      });
    }

    value = args.valueCallback ? args.valueCallback(value) : value;
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

function findKey(object, predicate) {
  for (var key in object) {
    if (object.hasOwnProperty(key) && predicate(object[key])) {
      return key;
    }
  }
}

function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++) {
    if (predicate(array[key])) {
      return key;
    }
  }
}

module.exports = exports.default;

/***/ }),

/***/ 1604:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = buildMatchPatternFn;

function buildMatchPatternFn(args) {
  return function (dirtyString, dirtyOptions) {
    var string = String(dirtyString);
    var options = dirtyOptions || {};
    var matchResult = string.match(args.matchPattern);

    if (!matchResult) {
      return null;
    }

    var matchedString = matchResult[0];
    var parseResult = string.match(args.parsePattern);

    if (!parseResult) {
      return null;
    }

    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    return {
      value: value,
      rest: string.slice(matchedString.length)
    };
  };
}

module.exports = exports.default;

/***/ }),

/***/ 3361:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = formatDistance;
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: 'less than a second',
    other: 'less than {{count}} seconds'
  },
  xSeconds: {
    one: '1 second',
    other: '{{count}} seconds'
  },
  halfAMinute: 'half a minute',
  lessThanXMinutes: {
    one: 'less than a minute',
    other: 'less than {{count}} minutes'
  },
  xMinutes: {
    one: '1 minute',
    other: '{{count}} minutes'
  },
  aboutXHours: {
    one: 'about 1 hour',
    other: 'about {{count}} hours'
  },
  xHours: {
    one: '1 hour',
    other: '{{count}} hours'
  },
  xDays: {
    one: '1 day',
    other: '{{count}} days'
  },
  aboutXMonths: {
    one: 'about 1 month',
    other: 'about {{count}} months'
  },
  xMonths: {
    one: '1 month',
    other: '{{count}} months'
  },
  aboutXYears: {
    one: 'about 1 year',
    other: 'about {{count}} years'
  },
  xYears: {
    one: '1 year',
    other: '{{count}} years'
  },
  overXYears: {
    one: 'over 1 year',
    other: 'over {{count}} years'
  },
  almostXYears: {
    one: 'almost 1 year',
    other: 'almost {{count}} years'
  }
};

function formatDistance(token, count, options) {
  options = options || {};
  var result;

  if (typeof formatDistanceLocale[token] === 'string') {
    result = formatDistanceLocale[token];
  } else if (count === 1) {
    result = formatDistanceLocale[token].one;
  } else {
    result = formatDistanceLocale[token].other.replace('{{count}}', count);
  }

  if (options.addSuffix) {
    if (options.comparison > 0) {
      return 'in ' + result;
    } else {
      return result + ' ago';
    }
  }

  return result;
}

module.exports = exports.default;

/***/ }),

/***/ 1780:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _index = _interopRequireDefault(__webpack_require__(2348));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var dateFormats = {
  full: 'EEEE, MMMM do, y',
  long: 'MMMM do, y',
  medium: 'MMM d, y',
  short: 'MM/dd/yyyy'
};
var timeFormats = {
  full: 'h:mm:ss a zzzz',
  long: 'h:mm:ss a z',
  medium: 'h:mm:ss a',
  short: 'h:mm a'
};
var dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: '{{date}}, {{time}}',
  short: '{{date}}, {{time}}'
};
var formatLong = {
  date: (0, _index.default)({
    formats: dateFormats,
    defaultWidth: 'full'
  }),
  time: (0, _index.default)({
    formats: timeFormats,
    defaultWidth: 'full'
  }),
  dateTime: (0, _index.default)({
    formats: dateTimeFormats,
    defaultWidth: 'full'
  })
};
var _default = formatLong;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),

/***/ 3663:
/***/ ((module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = formatRelative;
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: 'P'
};

function formatRelative(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}

module.exports = exports.default;

/***/ }),

/***/ 8350:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _index = _interopRequireDefault(__webpack_require__(4738));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var eraValues = {
  narrow: ['B', 'A'],
  abbreviated: ['BC', 'AD'],
  wide: ['Before Christ', 'Anno Domini']
};
var quarterValues = {
  narrow: ['1', '2', '3', '4'],
  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.
  // If you are making a new locale based on this one, check if the same is true for the language you're working on.
  // Generally, formatted dates should look like they are in the middle of a sentence,
  // e.g. in Spanish language the weekdays and months should be in the lowercase.

};
var monthValues = {
  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
};
var dayValues = {
  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
};
var dayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'morning',
    afternoon: 'afternoon',
    evening: 'evening',
    night: 'night'
  }
};
var formattingDayPeriodValues = {
  narrow: {
    am: 'a',
    pm: 'p',
    midnight: 'mi',
    noon: 'n',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  abbreviated: {
    am: 'AM',
    pm: 'PM',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  },
  wide: {
    am: 'a.m.',
    pm: 'p.m.',
    midnight: 'midnight',
    noon: 'noon',
    morning: 'in the morning',
    afternoon: 'in the afternoon',
    evening: 'in the evening',
    night: 'at night'
  }
};

function ordinalNumber(dirtyNumber, _dirtyOptions) {
  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
  // if they are different for different grammatical genders,
  // use `options.unit`:
  //
  //   var options = dirtyOptions || {}
  //   var unit = String(options.unit)
  //
  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
  // 'day', 'hour', 'minute', 'second'

  var rem100 = number % 100;

  if (rem100 > 20 || rem100 < 10) {
    switch (rem100 % 10) {
      case 1:
        return number + 'st';

      case 2:
        return number + 'nd';

      case 3:
        return number + 'rd';
    }
  }

  return number + 'th';
}

var localize = {
  ordinalNumber: ordinalNumber,
  era: (0, _index.default)({
    values: eraValues,
    defaultWidth: 'wide'
  }),
  quarter: (0, _index.default)({
    values: quarterValues,
    defaultWidth: 'wide',
    argumentCallback: function (quarter) {
      return Number(quarter) - 1;
    }
  }),
  month: (0, _index.default)({
    values: monthValues,
    defaultWidth: 'wide'
  }),
  day: (0, _index.default)({
    values: dayValues,
    defaultWidth: 'wide'
  }),
  dayPeriod: (0, _index.default)({
    values: dayPeriodValues,
    defaultWidth: 'wide',
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: 'wide'
  })
};
var _default = localize;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),

/***/ 6049:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _index = _interopRequireDefault(__webpack_require__(1604));

var _index2 = _interopRequireDefault(__webpack_require__(9653));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
var parseOrdinalNumberPattern = /\d+/i;
var matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
};
var parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
};
var matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
};
var parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
};
var matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
};
var parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
};
var matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
};
var parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
};
var matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
};
var parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
};
var match = {
  ordinalNumber: (0, _index.default)({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function (value) {
      return parseInt(value, 10);
    }
  }),
  era: (0, _index2.default)({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseEraPatterns,
    defaultParseWidth: 'any'
  }),
  quarter: (0, _index2.default)({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: 'any',
    valueCallback: function (index) {
      return index + 1;
    }
  }),
  month: (0, _index2.default)({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: 'any'
  }),
  day: (0, _index2.default)({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: 'wide',
    parsePatterns: parseDayPatterns,
    defaultParseWidth: 'any'
  }),
  dayPeriod: (0, _index2.default)({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: 'any',
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: 'any'
  })
};
var _default = match;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),

/***/ 626:
/***/ ((module, exports, __webpack_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports["default"] = void 0;

var _index = _interopRequireDefault(__webpack_require__(3361));

var _index2 = _interopRequireDefault(__webpack_require__(1780));

var _index3 = _interopRequireDefault(__webpack_require__(3663));

var _index4 = _interopRequireDefault(__webpack_require__(8350));

var _index5 = _interopRequireDefault(__webpack_require__(6049));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @type {Locale}
 * @category Locales
 * @summary English locale (United States).
 * @language English
 * @iso-639-2 eng
 * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
 * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
 */
var locale = {
  code: 'en-US',
  formatDistance: _index.default,
  formatLong: _index2.default,
  formatRelative: _index3.default,
  localize: _index4.default,
  match: _index5.default,
  options: {
    weekStartsOn: 0
    /* Sunday */
    ,
    firstWeekContainsDate: 1
  }
};
var _default = locale;
exports["default"] = _default;
module.exports = exports.default;

/***/ }),

/***/ 8493:
/***/ (function(module) {

(function (global) {
    'use strict';

    var util = newUtil();
    var inliner = newInliner();
    var fontFaces = newFontFaces();
    var images = newImages();

    // Default impl options
    var defaultOptions = {
        // Default is to fail on error, no placeholder
        imagePlaceholder: undefined,
        // Default cache bust is false, it will use the cache
        cacheBust: false
    };

    var domtoimage = {
        toSvg: toSvg,
        toPng: toPng,
        toJpeg: toJpeg,
        toBlob: toBlob,
        toPixelData: toPixelData,
        impl: {
            fontFaces: fontFaces,
            images: images,
            util: util,
            inliner: inliner,
            options: {}
        }
    };

    if (true)
        module.exports = domtoimage;
    else
        {}


    /**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options
     * @param {Function} options.filter - Should return true if passed node should be included in the output
     *          (excluding node means excluding it's children as well). Not called on the root node.
     * @param {String} options.bgcolor - color for the background, any valid CSS color value.
     * @param {Number} options.width - width to be applied to node before rendering.
     * @param {Number} options.height - height to be applied to node before rendering.
     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.
     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),
                defaults to 1.0.
     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch
     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url
     * @return {Promise} - A promise that is fulfilled with a SVG image data URL
     * */
    function toSvg(node, options) {
        options = options || {};
        copyOptions(options);
        return Promise.resolve(node)
            .then(function (node) {
                return cloneNode(node, options.filter, true);
            })
            .then(embedFonts)
            .then(inlineImages)
            .then(applyOptions)
            .then(function (clone) {
                return makeSvgDataUri(clone,
                    options.width || util.width(node),
                    options.height || util.height(node)
                );
            });

        function applyOptions(clone) {
            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;

            if (options.width) clone.style.width = options.width + 'px';
            if (options.height) clone.style.height = options.height + 'px';

            if (options.style)
                Object.keys(options.style).forEach(function (property) {
                    clone.style[property] = options.style[property];
                });

            return clone;
        }
    }

    /**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.
     * */
    function toPixelData(node, options) {
        return draw(node, options || {})
            .then(function (canvas) {
                return canvas.getContext('2d').getImageData(
                    0,
                    0,
                    util.width(node),
                    util.height(node)
                ).data;
            });
    }

    /**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a PNG image data URL
     * */
    function toPng(node, options) {
        return draw(node, options || {})
            .then(function (canvas) {
                return canvas.toDataURL();
            });
    }

    /**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL
     * */
    function toJpeg(node, options) {
        options = options || {};
        return draw(node, options)
            .then(function (canvas) {
                return canvas.toDataURL('image/jpeg', options.quality || 1.0);
            });
    }

    /**
     * @param {Node} node - The DOM Node object to render
     * @param {Object} options - Rendering options, @see {@link toSvg}
     * @return {Promise} - A promise that is fulfilled with a PNG image blob
     * */
    function toBlob(node, options) {
        return draw(node, options || {})
            .then(util.canvasToBlob);
    }

    function copyOptions(options) {
        // Copy options to impl options for use in impl
        if(typeof(options.imagePlaceholder) === 'undefined') {
            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;
        } else {
            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;
        }

        if(typeof(options.cacheBust) === 'undefined') {
            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;
        } else {
            domtoimage.impl.options.cacheBust = options.cacheBust;
        }
    }

    function draw(domNode, options) {
        return toSvg(domNode, options)
            .then(util.makeImage)
            .then(util.delay(100))
            .then(function (image) {
                var canvas = newCanvas(domNode);
                canvas.getContext('2d').drawImage(image, 0, 0);
                return canvas;
            });

        function newCanvas(domNode) {
            var canvas = document.createElement('canvas');
            canvas.width = options.width || util.width(domNode);
            canvas.height = options.height || util.height(domNode);

            if (options.bgcolor) {
                var ctx = canvas.getContext('2d');
                ctx.fillStyle = options.bgcolor;
                ctx.fillRect(0, 0, canvas.width, canvas.height);
            }

            return canvas;
        }
    }

    function cloneNode(node, filter, root) {
        if (!root && filter && !filter(node)) return Promise.resolve();

        return Promise.resolve(node)
            .then(makeNodeCopy)
            .then(function (clone) {
                return cloneChildren(node, clone, filter);
            })
            .then(function (clone) {
                return processClone(node, clone);
            });

        function makeNodeCopy(node) {
            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());
            return node.cloneNode(false);
        }

        function cloneChildren(original, clone, filter) {
            var children = original.childNodes;
            if (children.length === 0) return Promise.resolve(clone);

            return cloneChildrenInOrder(clone, util.asArray(children), filter)
                .then(function () {
                    return clone;
                });

            function cloneChildrenInOrder(parent, children, filter) {
                var done = Promise.resolve();
                children.forEach(function (child) {
                    done = done
                        .then(function () {
                            return cloneNode(child, filter);
                        })
                        .then(function (childClone) {
                            if (childClone) parent.appendChild(childClone);
                        });
                });
                return done;
            }
        }

        function processClone(original, clone) {
            if (!(clone instanceof Element)) return clone;

            return Promise.resolve()
                .then(cloneStyle)
                .then(clonePseudoElements)
                .then(copyUserInput)
                .then(fixSvg)
                .then(function () {
                    return clone;
                });

            function cloneStyle() {
                copyStyle(window.getComputedStyle(original), clone.style);

                function copyStyle(source, target) {
                    if (source.cssText) target.cssText = source.cssText;
                    else copyProperties(source, target);

                    function copyProperties(source, target) {
                        util.asArray(source).forEach(function (name) {
                            target.setProperty(
                                name,
                                source.getPropertyValue(name),
                                source.getPropertyPriority(name)
                            );
                        });
                    }
                }
            }

            function clonePseudoElements() {
                [':before', ':after'].forEach(function (element) {
                    clonePseudoElement(element);
                });

                function clonePseudoElement(element) {
                    var style = window.getComputedStyle(original, element);
                    var content = style.getPropertyValue('content');

                    if (content === '' || content === 'none') return;

                    var className = util.uid();
                    clone.className = clone.className + ' ' + className;
                    var styleElement = document.createElement('style');
                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));
                    clone.appendChild(styleElement);

                    function formatPseudoElementStyle(className, element, style) {
                        var selector = '.' + className + ':' + element;
                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);
                        return document.createTextNode(selector + '{' + cssText + '}');

                        function formatCssText(style) {
                            var content = style.getPropertyValue('content');
                            return style.cssText + ' content: ' + content + ';';
                        }

                        function formatCssProperties(style) {

                            return util.asArray(style)
                                .map(formatProperty)
                                .join('; ') + ';';

                            function formatProperty(name) {
                                return name + ': ' +
                                    style.getPropertyValue(name) +
                                    (style.getPropertyPriority(name) ? ' !important' : '');
                            }
                        }
                    }
                }
            }

            function copyUserInput() {
                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;
                if (original instanceof HTMLInputElement) clone.setAttribute("value", original.value);
            }

            function fixSvg() {
                if (!(clone instanceof SVGElement)) return;
                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');

                if (!(clone instanceof SVGRectElement)) return;
                ['width', 'height'].forEach(function (attribute) {
                    var value = clone.getAttribute(attribute);
                    if (!value) return;

                    clone.style.setProperty(attribute, value);
                });
            }
        }
    }

    function embedFonts(node) {
        return fontFaces.resolveAll()
            .then(function (cssText) {
                var styleNode = document.createElement('style');
                node.appendChild(styleNode);
                styleNode.appendChild(document.createTextNode(cssText));
                return node;
            });
    }

    function inlineImages(node) {
        return images.inlineAll(node)
            .then(function () {
                return node;
            });
    }

    function makeSvgDataUri(node, width, height) {
        return Promise.resolve(node)
            .then(function (node) {
                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');
                return new XMLSerializer().serializeToString(node);
            })
            .then(util.escapeXhtml)
            .then(function (xhtml) {
                return '<foreignObject x="0" y="0" width="100%" height="100%">' + xhtml + '</foreignObject>';
            })
            .then(function (foreignObject) {
                return '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="' + height + '">' +
                    foreignObject + '</svg>';
            })
            .then(function (svg) {
                return 'data:image/svg+xml;charset=utf-8,' + svg;
            });
    }

    function newUtil() {
        return {
            escape: escape,
            parseExtension: parseExtension,
            mimeType: mimeType,
            dataAsUrl: dataAsUrl,
            isDataUrl: isDataUrl,
            canvasToBlob: canvasToBlob,
            resolveUrl: resolveUrl,
            getAndEncode: getAndEncode,
            uid: uid(),
            delay: delay,
            asArray: asArray,
            escapeXhtml: escapeXhtml,
            makeImage: makeImage,
            width: width,
            height: height
        };

        function mimes() {
            /*
             * Only WOFF and EOT mime types for fonts are 'real'
             * see http://www.iana.org/assignments/media-types/media-types.xhtml
             */
            var WOFF = 'application/font-woff';
            var JPEG = 'image/jpeg';

            return {
                'woff': WOFF,
                'woff2': WOFF,
                'ttf': 'application/font-truetype',
                'eot': 'application/vnd.ms-fontobject',
                'png': 'image/png',
                'jpg': JPEG,
                'jpeg': JPEG,
                'gif': 'image/gif',
                'tiff': 'image/tiff',
                'svg': 'image/svg+xml'
            };
        }

        function parseExtension(url) {
            var match = /\.([^\.\/]*?)$/g.exec(url);
            if (match) return match[1];
            else return '';
        }

        function mimeType(url) {
            var extension = parseExtension(url).toLowerCase();
            return mimes()[extension] || '';
        }

        function isDataUrl(url) {
            return url.search(/^(data:)/) !== -1;
        }

        function toBlob(canvas) {
            return new Promise(function (resolve) {
                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);
                var length = binaryString.length;
                var binaryArray = new Uint8Array(length);

                for (var i = 0; i < length; i++)
                    binaryArray[i] = binaryString.charCodeAt(i);

                resolve(new Blob([binaryArray], {
                    type: 'image/png'
                }));
            });
        }

        function canvasToBlob(canvas) {
            if (canvas.toBlob)
                return new Promise(function (resolve) {
                    canvas.toBlob(resolve);
                });

            return toBlob(canvas);
        }

        function resolveUrl(url, baseUrl) {
            var doc = document.implementation.createHTMLDocument();
            var base = doc.createElement('base');
            doc.head.appendChild(base);
            var a = doc.createElement('a');
            doc.body.appendChild(a);
            base.href = baseUrl;
            a.href = url;
            return a.href;
        }

        function uid() {
            var index = 0;

            return function () {
                return 'u' + fourRandomChars() + index++;

                function fourRandomChars() {
                    /* see http://stackoverflow.com/a/6248722/2519373 */
                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);
                }
            };
        }

        function makeImage(uri) {
            return new Promise(function (resolve, reject) {
                var image = new Image();
                image.onload = function () {
                    resolve(image);
                };
                image.onerror = reject;
                image.src = uri;
            });
        }

        function getAndEncode(url) {
            var TIMEOUT = 30000;
            if(domtoimage.impl.options.cacheBust) {
                // Cache bypass so we dont have CORS issues with cached images
                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache
                url += ((/\?/).test(url) ? "&" : "?") + (new Date()).getTime();
            }

            return new Promise(function (resolve) {
                var request = new XMLHttpRequest();

                request.onreadystatechange = done;
                request.ontimeout = timeout;
                request.responseType = 'blob';
                request.timeout = TIMEOUT;
                request.open('GET', url, true);
                request.send();

                var placeholder;
                if(domtoimage.impl.options.imagePlaceholder) {
                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);
                    if(split && split[1]) {
                        placeholder = split[1];
                    }
                }

                function done() {
                    if (request.readyState !== 4) return;

                    if (request.status !== 200) {
                        if(placeholder) {
                            resolve(placeholder);
                        } else {
                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);
                        }

                        return;
                    }

                    var encoder = new FileReader();
                    encoder.onloadend = function () {
                        var content = encoder.result.split(/,/)[1];
                        resolve(content);
                    };
                    encoder.readAsDataURL(request.response);
                }

                function timeout() {
                    if(placeholder) {
                        resolve(placeholder);
                    } else {
                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);
                    }
                }

                function fail(message) {
                    console.error(message);
                    resolve('');
                }
            });
        }

        function dataAsUrl(content, type) {
            return 'data:' + type + ';base64,' + content;
        }

        function escape(string) {
            return string.replace(/([.*+?^${}()|\[\]\/\\])/g, '\\$1');
        }

        function delay(ms) {
            return function (arg) {
                return new Promise(function (resolve) {
                    setTimeout(function () {
                        resolve(arg);
                    }, ms);
                });
            };
        }

        function asArray(arrayLike) {
            var array = [];
            var length = arrayLike.length;
            for (var i = 0; i < length; i++) array.push(arrayLike[i]);
            return array;
        }

        function escapeXhtml(string) {
            return string.replace(/#/g, '%23').replace(/\n/g, '%0A');
        }

        function width(node) {
            var leftBorder = px(node, 'border-left-width');
            var rightBorder = px(node, 'border-right-width');
            return node.scrollWidth + leftBorder + rightBorder;
        }

        function height(node) {
            var topBorder = px(node, 'border-top-width');
            var bottomBorder = px(node, 'border-bottom-width');
            return node.scrollHeight + topBorder + bottomBorder;
        }

        function px(node, styleProperty) {
            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);
            return parseFloat(value.replace('px', ''));
        }
    }

    function newInliner() {
        var URL_REGEX = /url\(['"]?([^'"]+?)['"]?\)/g;

        return {
            inlineAll: inlineAll,
            shouldProcess: shouldProcess,
            impl: {
                readUrls: readUrls,
                inline: inline
            }
        };

        function shouldProcess(string) {
            return string.search(URL_REGEX) !== -1;
        }

        function readUrls(string) {
            var result = [];
            var match;
            while ((match = URL_REGEX.exec(string)) !== null) {
                result.push(match[1]);
            }
            return result.filter(function (url) {
                return !util.isDataUrl(url);
            });
        }

        function inline(string, url, baseUrl, get) {
            return Promise.resolve(url)
                .then(function (url) {
                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;
                })
                .then(get || util.getAndEncode)
                .then(function (data) {
                    return util.dataAsUrl(data, util.mimeType(url));
                })
                .then(function (dataUrl) {
                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');
                });

            function urlAsRegex(url) {
                return new RegExp('(url\\([\'"]?)(' + util.escape(url) + ')([\'"]?\\))', 'g');
            }
        }

        function inlineAll(string, baseUrl, get) {
            if (nothingToInline()) return Promise.resolve(string);

            return Promise.resolve(string)
                .then(readUrls)
                .then(function (urls) {
                    var done = Promise.resolve(string);
                    urls.forEach(function (url) {
                        done = done.then(function (string) {
                            return inline(string, url, baseUrl, get);
                        });
                    });
                    return done;
                });

            function nothingToInline() {
                return !shouldProcess(string);
            }
        }
    }

    function newFontFaces() {
        return {
            resolveAll: resolveAll,
            impl: {
                readAll: readAll
            }
        };

        function resolveAll() {
            return readAll(document)
                .then(function (webFonts) {
                    return Promise.all(
                        webFonts.map(function (webFont) {
                            return webFont.resolve();
                        })
                    );
                })
                .then(function (cssStrings) {
                    return cssStrings.join('\n');
                });
        }

        function readAll() {
            return Promise.resolve(util.asArray(document.styleSheets))
                .then(getCssRules)
                .then(selectWebFontRules)
                .then(function (rules) {
                    return rules.map(newWebFont);
                });

            function selectWebFontRules(cssRules) {
                return cssRules
                    .filter(function (rule) {
                        return rule.type === CSSRule.FONT_FACE_RULE;
                    })
                    .filter(function (rule) {
                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));
                    });
            }

            function getCssRules(styleSheets) {
                var cssRules = [];
                styleSheets.forEach(function (sheet) {
                    try {
                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));
                    } catch (e) {
                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());
                    }
                });
                return cssRules;
            }

            function newWebFont(webFontRule) {
                return {
                    resolve: function resolve() {
                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;
                        return inliner.inlineAll(webFontRule.cssText, baseUrl);
                    },
                    src: function () {
                        return webFontRule.style.getPropertyValue('src');
                    }
                };
            }
        }
    }

    function newImages() {
        return {
            inlineAll: inlineAll,
            impl: {
                newImage: newImage
            }
        };

        function newImage(element) {
            return {
                inline: inline
            };

            function inline(get) {
                if (util.isDataUrl(element.src)) return Promise.resolve();

                return Promise.resolve(element.src)
                    .then(get || util.getAndEncode)
                    .then(function (data) {
                        return util.dataAsUrl(data, util.mimeType(element.src));
                    })
                    .then(function (dataUrl) {
                        return new Promise(function (resolve, reject) {
                            element.onload = resolve;
                            element.onerror = reject;
                            element.src = dataUrl;
                        });
                    });
            }
        }

        function inlineAll(node) {
            if (!(node instanceof Element)) return Promise.resolve(node);

            return inlineBackground(node)
                .then(function () {
                    if (node instanceof HTMLImageElement)
                        return newImage(node).inline();
                    else
                        return Promise.all(
                            util.asArray(node.childNodes).map(function (child) {
                                return inlineAll(child);
                            })
                        );
                });

            function inlineBackground(node) {
                var background = node.style.getPropertyValue('background');

                if (!background) return Promise.resolve(node);

                return inliner.inlineAll(background)
                    .then(function (inlined) {
                        node.style.setProperty(
                            'background',
                            inlined,
                            node.style.getPropertyPriority('background')
                        );
                    })
                    .then(function () {
                        return node;
                    });
            }
        }
    }
})(this);


/***/ }),

/***/ 8746:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeNoise2D = void 0;
var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;
var Grad = [
    [1, 1],
    [-1, 1],
    [1, -1],
    [-1, -1],
    [1, 0],
    [-1, 0],
    [1, 0],
    [-1, 0],
    [0, 1],
    [0, -1],
    [0, 1],
    [0, -1],
];
function makeNoise2D(random) {
    if (random === void 0) { random = Math.random; }
    var p = new Uint8Array(256);
    for (var i = 0; i < 256; i++)
        p[i] = i;
    var n;
    var q;
    for (var i = 255; i > 0; i--) {
        n = Math.floor((i + 1) * random());
        q = p[i];
        p[i] = p[n];
        p[n] = q;
    }
    var perm = new Uint8Array(512);
    var permMod12 = new Uint8Array(512);
    for (var i = 0; i < 512; i++) {
        perm[i] = p[i & 255];
        permMod12[i] = perm[i] % 12;
    }
    return function (x, y) {
        // Skew the input space to determine which simplex cell we're in
        var s = (x + y) * 0.5 * (Math.sqrt(3.0) - 1.0); // Hairy factor for 2D
        var i = Math.floor(x + s);
        var j = Math.floor(y + s);
        var t = (i + j) * G2;
        var X0 = i - t; // Unskew the cell origin back to (x,y) space
        var Y0 = j - t;
        var x0 = x - X0; // The x,y distances from the cell origin
        var y0 = y - Y0;
        // Determine which simplex we are in.
        var i1 = x0 > y0 ? 1 : 0;
        var j1 = x0 > y0 ? 0 : 1;
        // Offsets for corners
        var x1 = x0 - i1 + G2;
        var y1 = y0 - j1 + G2;
        var x2 = x0 - 1.0 + 2.0 * G2;
        var y2 = y0 - 1.0 + 2.0 * G2;
        // Work out the hashed gradient indices of the three simplex corners
        var ii = i & 255;
        var jj = j & 255;
        var g0 = Grad[permMod12[ii + perm[jj]]];
        var g1 = Grad[permMod12[ii + i1 + perm[jj + j1]]];
        var g2 = Grad[permMod12[ii + 1 + perm[jj + 1]]];
        // Calculate the contribution from the three corners
        var t0 = 0.5 - x0 * x0 - y0 * y0;
        var n0 = t0 < 0 ? 0.0 : Math.pow(t0, 4) * (g0[0] * x0 + g0[1] * y0);
        var t1 = 0.5 - x1 * x1 - y1 * y1;
        var n1 = t1 < 0 ? 0.0 : Math.pow(t1, 4) * (g1[0] * x1 + g1[1] * y1);
        var t2 = 0.5 - x2 * x2 - y2 * y2;
        var n2 = t2 < 0 ? 0.0 : Math.pow(t2, 4) * (g2[0] * x2 + g2[1] * y2);
        // Add contributions from each corner to get the final noise value.
        // The result is scaled to return values in the interval [-1, 1]
        return 70.14805770653952 * (n0 + n1 + n2);
    };
}
exports.makeNoise2D = makeNoise2D;


/***/ }),

/***/ 8823:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeNoise3D = void 0;
var G3 = 1.0 / 6.0;
var Grad = [
    [1, 1, 0],
    [-1, 1, 0],
    [1, -1, 0],
    [-1, -1, 0],
    [1, 0, 1],
    [-1, 0, 1],
    [1, 0, -1],
    [-1, 0, -1],
    [0, 1, 1],
    [0, -1, -1],
    [0, 1, -1],
    [0, -1, -1],
];
function makeNoise3D(random) {
    if (random === void 0) { random = Math.random; }
    var p = new Uint8Array(256);
    for (var i = 0; i < 256; i++)
        p[i] = i;
    var n;
    var q;
    for (var i = 255; i > 0; i--) {
        n = Math.floor((i + 1) * random());
        q = p[i];
        p[i] = p[n];
        p[n] = q;
    }
    var perm = new Uint8Array(512);
    var permMod12 = new Uint8Array(512);
    for (var i = 0; i < 512; i++) {
        perm[i] = p[i & 255];
        permMod12[i] = perm[i] % 12;
    }
    return function (x, y, z) {
        // Skew the input space to determine which simplex cell we're in
        var s = (x + y + z) / 3.0; // Very nice and simple skew factor for 3D
        var i = Math.floor(x + s);
        var j = Math.floor(y + s);
        var k = Math.floor(z + s);
        var t = (i + j + k) * G3;
        var X0 = i - t; // Unskew the cell origin back to (x,y,z) space
        var Y0 = j - t;
        var Z0 = k - t;
        var x0 = x - X0; // The x,y,z distances from the cell origin
        var y0 = y - Y0;
        var z0 = z - Z0;
        // Deterine which simplex we are in
        var i1, j1, k1 // Offsets for second corner of simplex in (i,j,k) coords
        ;
        var i2, j2, k2 // Offsets for third corner of simplex in (i,j,k) coords
        ;
        if (x0 >= y0) {
            if (y0 >= z0) {
                i1 = i2 = j2 = 1;
                j1 = k1 = k2 = 0;
            }
            else if (x0 >= z0) {
                i1 = i2 = k2 = 1;
                j1 = k1 = j2 = 0;
            }
            else {
                k1 = i2 = k2 = 1;
                i1 = j1 = j2 = 0;
            }
        }
        else {
            if (y0 < z0) {
                k1 = j2 = k2 = 1;
                i1 = j1 = i2 = 0;
            }
            else if (x0 < z0) {
                j1 = j2 = k2 = 1;
                i1 = k1 = i2 = 0;
            }
            else {
                j1 = i2 = j2 = 1;
                i1 = k1 = k2 = 0;
            }
        }
        var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords
        var y1 = y0 - j1 + G3;
        var z1 = z0 - k1 + G3;
        var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords
        var y2 = y0 - j2 + 2.0 * G3;
        var z2 = z0 - k2 + 2.0 * G3;
        var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords
        var y3 = y0 - 1.0 + 3.0 * G3;
        var z3 = z0 - 1.0 + 3.0 * G3;
        // Work out the hashed gradient indices of the four simplex corners
        var ii = i & 255;
        var jj = j & 255;
        var kk = k & 255;
        var g0 = Grad[permMod12[ii + perm[jj + perm[kk]]]];
        var g1 = Grad[permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]]];
        var g2 = Grad[permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]]];
        var g3 = Grad[permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]]];
        // Calculate the contribution from the four corners
        var t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0;
        var n0 = t0 < 0
            ? 0.0
            : Math.pow(t0, 4) * (g0[0] * x0 + g0[1] * y0 + g0[2] * z0);
        var t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1;
        var n1 = t1 < 0
            ? 0.0
            : Math.pow(t1, 4) * (g1[0] * x1 + g1[1] * y1 + g1[2] * z1);
        var t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2;
        var n2 = t2 < 0
            ? 0.0
            : Math.pow(t2, 4) * (g2[0] * x2 + g2[1] * y2 + g2[2] * z2);
        var t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3;
        var n3 = t3 < 0
            ? 0.0
            : Math.pow(t3, 4) * (g3[0] * x3 + g3[1] * y3 + g3[2] * z3);
        // Add contributions from each corner to get the final noise value.
        // The result is scaled to stay just inside [-1,1]
        return 94.68493150681972 * (n0 + n1 + n2 + n3);
    };
}
exports.makeNoise3D = makeNoise3D;


/***/ }),

/***/ 9013:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

/*
 * Based on example code by Stefan Gustavson (stegu@itn.liu.se).
 * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).
 * Better rank ordering method by Stefan Gustavson in 2012.
 *
 * This code was placed in the public domain by its original author,
 * Stefan Gustavson. You may use it as you see fit, but
 * attribution is appreciated.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.makeNoise4D = void 0;
var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;
var Grad = [
    [0, 1, 1, 1],
    [0, 1, 1, -1],
    [0, 1, -1, 1],
    [0, 1, -1, -1],
    [0, -1, 1, 1],
    [0, -1, 1, -1],
    [0, -1, -1, 1],
    [0, -1, -1, -1],
    [1, 0, 1, 1],
    [1, 0, 1, -1],
    [1, 0, -1, 1],
    [1, 0, -1, -1],
    [-1, 0, 1, 1],
    [-1, 0, 1, -1],
    [-1, 0, -1, 1],
    [-1, 0, -1, -1],
    [1, 1, 0, 1],
    [1, 1, 0, -1],
    [1, -1, 0, 1],
    [1, -1, 0, -1],
    [-1, 1, 0, 1],
    [-1, 1, 0, -1],
    [-1, -1, 0, 1],
    [-1, -1, 0, -1],
    [1, 1, 1, 0],
    [1, 1, -1, 0],
    [1, -1, 1, 0],
    [1, -1, -1, 0],
    [-1, 1, 1, 0],
    [-1, 1, -1, 0],
    [-1, -1, 1, 0],
    [-1, -1, -1, 0],
];
function makeNoise4D(random) {
    if (random === void 0) { random = Math.random; }
    var p = new Uint8Array(256);
    for (var i = 0; i < 256; i++)
        p[i] = i;
    var n;
    var q;
    for (var i = 255; i > 0; i--) {
        n = Math.floor((i + 1) * random());
        q = p[i];
        p[i] = p[n];
        p[n] = q;
    }
    var perm = new Uint8Array(512);
    var permMod12 = new Uint8Array(512);
    for (var i = 0; i < 512; i++) {
        perm[i] = p[i & 255];
        permMod12[i] = perm[i] % 12;
    }
    return function (x, y, z, w) {
        // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in
        var s = (x + y + z + w) * (Math.sqrt(5.0) - 1.0) / 4.0; // Factor for 4D skewing
        var i = Math.floor(x + s);
        var j = Math.floor(y + s);
        var k = Math.floor(z + s);
        var l = Math.floor(w + s);
        var t = (i + j + k + l) * G4; // Factor for 4D unskewing
        var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space
        var Y0 = j - t;
        var Z0 = k - t;
        var W0 = l - t;
        var x0 = x - X0; // The x,y,z,w distances from the cell origin
        var y0 = y - Y0;
        var z0 = z - Z0;
        var w0 = w - W0;
        // To find out which of the 24 possible simplices we're in, we need to determine the
        // magnitude ordering of x0, y0, z0 and w0. Six pair-wise comparisons are performed between
        // each possible pair of the four coordinates, and the results are used to rank the numbers.
        var rankx = 0;
        var ranky = 0;
        var rankz = 0;
        var rankw = 0;
        if (x0 > y0)
            rankx++;
        else
            ranky++;
        if (x0 > z0)
            rankx++;
        else
            rankz++;
        if (x0 > w0)
            rankx++;
        else
            rankw++;
        if (y0 > z0)
            ranky++;
        else
            rankz++;
        if (y0 > w0)
            ranky++;
        else
            rankw++;
        if (z0 > w0)
            rankz++;
        else
            rankw++;
        // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.
        // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w
        // impossible. Only the 24 indices which have non-zero entries make any sense.
        // We use a thresholding to set the coordinates in turn from the largest magnitude.
        // Rank 3 denotes the largest coordinate.
        var i1 = rankx >= 3 ? 1 : 0;
        var j1 = ranky >= 3 ? 1 : 0;
        var k1 = rankz >= 3 ? 1 : 0;
        var l1 = rankw >= 3 ? 1 : 0;
        // Rank 2 denotes the second largest coordinate.
        var i2 = rankx >= 2 ? 1 : 0;
        var j2 = ranky >= 2 ? 1 : 0;
        var k2 = rankz >= 2 ? 1 : 0;
        var l2 = rankw >= 2 ? 1 : 0;
        // Rank 1 denotes the second smallest coordinate.
        var i3 = rankx >= 1 ? 1 : 0;
        var j3 = ranky >= 1 ? 1 : 0;
        var k3 = rankz >= 1 ? 1 : 0;
        var l3 = rankw >= 1 ? 1 : 0;
        // The fifth corner has all coordinate offsets = 1, so no need to compute that.
        var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords
        var y1 = y0 - j1 + G4;
        var z1 = z0 - k1 + G4;
        var w1 = w0 - l1 + G4;
        var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords
        var y2 = y0 - j2 + 2.0 * G4;
        var z2 = z0 - k2 + 2.0 * G4;
        var w2 = w0 - l2 + 2.0 * G4;
        var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords
        var y3 = y0 - j3 + 3.0 * G4;
        var z3 = z0 - k3 + 3.0 * G4;
        var w3 = w0 - l3 + 3.0 * G4;
        var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords
        var y4 = y0 - 1.0 + 4.0 * G4;
        var z4 = z0 - 1.0 + 4.0 * G4;
        var w4 = w0 - 1.0 + 4.0 * G4;
        // Work out the hashed gradient indices of the five simplex corners
        var ii = i & 255;
        var jj = j & 255;
        var kk = k & 255;
        var ll = l & 255;
        var g0 = Grad[perm[ii + perm[jj + perm[kk + perm[ll]]]] %
            32];
        var g1 = Grad[perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32];
        var g2 = Grad[perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32];
        var g3 = Grad[perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32];
        var g4 = Grad[perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32];
        // Calculate the contribution from the five corners
        var t0 = 0.5 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;
        var n0 = t0 < 0
            ? 0.0
            : Math.pow(t0, 4) * (g0[0] * x0 + g0[1] * y0 + g0[2] * z0 + g0[3] * w0);
        var t1 = 0.5 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;
        var n1 = t1 < 0
            ? 0.0
            : Math.pow(t1, 4) * (g1[0] * x1 + g1[1] * y1 + g1[2] * z1 + g1[3] * w1);
        var t2 = 0.5 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;
        var n2 = t2 < 0
            ? 0.0
            : Math.pow(t2, 4) * (g2[0] * x2 + g2[1] * y2 + g2[2] * z2 + g2[3] * w2);
        var t3 = 0.5 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;
        var n3 = t3 < 0
            ? 0.0
            : Math.pow(t3, 4) * (g3[0] * x3 + g3[1] * y3 + g3[2] * z3 + g3[3] * w3);
        var t4 = 0.5 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;
        var n4 = t4 < 0
            ? 0.0
            : Math.pow(t4, 4) * (g4[0] * x4 + g4[1] * y4 + g4[2] * z4 + g4[3] * w4);
        // Sum up and scale the result to cover the range [-1,1]
        return 72.37855765153665 * (n0 + n1 + n2 + n3 + n4);
    };
}
exports.makeNoise4D = makeNoise4D;


/***/ }),

/***/ 4864:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
var __webpack_unused_export__;

__webpack_unused_export__ = ({ value: true });
__webpack_unused_export__ = __webpack_unused_export__ = exports.DA = void 0;
var _2d_1 = __webpack_require__(8746);
Object.defineProperty(exports, "DA", ({ enumerable: true, get: function () { return _2d_1.makeNoise2D; } }));
var _3d_1 = __webpack_require__(8823);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return _3d_1.makeNoise3D; } });
var _4d_1 = __webpack_require__(9013);
__webpack_unused_export__ = ({ enumerable: true, get: function () { return _4d_1.makeNoise4D; } });


/***/ }),

/***/ 8431:
/***/ ((module, exports, __webpack_require__) => {

/* module decorator */ module = __webpack_require__.nmd(module);
/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used to compose bitmasks for comparison styles. */
var UNORDERED_COMPARE_FLAG = 1,
    PARTIAL_COMPARE_FLAG = 2;

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_SAFE_INTEGER = 9007199254740991,
    MAX_INTEGER = 1.7976931348623157e+308,
    NAN = 0 / 0;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    return freeProcess && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    Uint8Array = root.Uint8Array,
    propertyIsEnumerable = objectProto.propertyIsEnumerable,
    splice = arrayProto.splice;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object),
    nativeMax = Math.max,
    nativeMin = Math.min;

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView'),
    Map = getNative(root, 'Map'),
    Promise = getNative(root, 'Promise'),
    Set = getNative(root, 'Set'),
    WeakMap = getNative(root, 'WeakMap'),
    nativeCreate = getNative(Object, 'create');

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values ? values.length : 0;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  this.__data__ = new ListCache(entries);
}

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
}

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  return this.__data__['delete'](key);
}

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var cache = this.__data__;
  if (cache instanceof ListCache) {
    var pairs = cache.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      return this;
    }
    cache = this.__data__ = new MapCache(pairs);
  }
  cache.set(key, value);
  return this;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  // Safari 9 makes `arguments.length` enumerable in strict mode.
  var result = (isArray(value) || isArguments(value))
    ? baseTimes(value.length, String)
    : [];

  var length = result.length,
      skipIndexes = !!length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
      result.push(key);
    }
  }
  return result;
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `getTag`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  return objectToString.call(value);
}

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {boolean} [bitmask] The bitmask of comparison flags.
 *  The bitmask may be composed of the following flags:
 *     1 - Unordered comparison
 *     2 - Partial comparison
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, customizer, bitmask, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
}

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = arrayTag,
      othTag = arrayTag;

  if (!objIsArr) {
    objTag = getTag(object);
    objTag = objTag == argsTag ? objectTag : objTag;
  }
  if (!othIsArr) {
    othTag = getTag(other);
    othTag = othTag == argsTag ? objectTag : othTag;
  }
  var objIsObj = objTag == objectTag && !isHostObject(object),
      othIsObj = othTag == objectTag && !isHostObject(other),
      isSameTag = objTag == othTag;

  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
  }
  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
}

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
}

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
  };
}

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!seen.has(othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
              return seen.add(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, customizer, bitmask, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= UNORDERED_COMPARE_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Function} customizer The function to customize comparisons.
 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`
 *  for more details.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
      objProps = keys(object),
      objLength = objProps.length,
      othProps = keys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11,
// for data views in Edge < 14, and promises in Node.js.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = objectToString.call(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : undefined;

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = isKey(path, object) ? [path] : castPath(path);

  var result,
      index = -1,
      length = path.length;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result) {
    return result;
  }
  var length = object ? object.length : 0;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * This method is like `_.findIndex` except that it iterates over elements
 * of `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity]
 *  The function invoked per iteration.
 * @param {number} [fromIndex=array.length-1] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': true },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': false }
 * ];
 *
 * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
 * // => 2
 *
 * // The `_.matches` iteratee shorthand.
 * _.findLastIndex(users, { 'user': 'barney', 'active': true });
 * // => 0
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findLastIndex(users, ['active', false]);
 * // => 2
 *
 * // The `_.property` iteratee shorthand.
 * _.findLastIndex(users, 'active');
 * // => 0
 */
function findLastIndex(array, predicate, fromIndex) {
  var length = array ? array.length : 0;
  if (!length) {
    return -1;
  }
  var index = length - 1;
  if (fromIndex !== undefined) {
    index = toInteger(fromIndex);
    index = fromIndex < 0
      ? nativeMax(length + index, 0)
      : nativeMin(index, length - 1);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);
}

/**
 * This method is like `_.find` except that it iterates over elements of
 * `collection` from right to left.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity]
 *  The function invoked per iteration.
 * @param {number} [fromIndex=collection.length-1] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * _.findLast([1, 2, 3, 4], function(n) {
 *   return n % 2 == 1;
 * });
 * // => 3
 */
var findLast = createFind(findLastIndex);

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
function isArguments(value) {
  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = findLast;


/***/ }),

/***/ 8262:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = __webpack_require__(3586);

function emptyFunction() {}
function emptyFunctionWithReset() {}
emptyFunctionWithReset.resetWarningCache = emptyFunction;

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    var err = new Error(
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
    err.name = 'Invariant Violation';
    throw err;
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    elementType: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim,

    checkPropTypes: emptyFunctionWithReset,
    resetWarningCache: emptyFunction
  };

  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ 3980:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (false) { var throwOnDirectAccess, ReactIs; } else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(8262)();
}


/***/ }),

/***/ 3586:
/***/ ((module) => {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ 2564:
/***/ ((module) => {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (false) {}

module.exports = warning;


/***/ }),

/***/ 821:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _arrayLikeToArray)
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),

/***/ 8127:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),

/***/ 7055:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _classCallCheck)
/* harmony export */ });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),

/***/ 220:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _createClass)
/* harmony export */ });
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

/***/ }),

/***/ 4245:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _defineProperty)
/* harmony export */ });
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),

/***/ 5882:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _extends)
/* harmony export */ });
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

/***/ }),

/***/ 5806:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _getPrototypeOf)
/* harmony export */ });
function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),

/***/ 927:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ _inherits)
});

;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/inherits.js

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  Object.defineProperty(subClass, "prototype", {
    writable: false
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

/***/ }),

/***/ 8775:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ _objectWithoutProperties)
});

;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/***/ }),

/***/ 780:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ _possibleConstructorReturn)
});

;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  }, _typeof(obj);
}
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(8127);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js


function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
  }

  return (0,assertThisInitialized/* default */.Z)(self);
}

/***/ }),

/***/ 1905:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ _slicedToArray)
});

;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js
function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}
// EXTERNAL MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js
var unsupportedIterableToArray = __webpack_require__(8458);
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
;// CONCATENATED MODULE: ../../node_modules/carbon-components-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js




function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || (0,unsupportedIterableToArray/* default */.Z)(arr, i) || _nonIterableRest();
}

/***/ }),

/***/ 8458:
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (/* binding */ _unsupportedIterableToArray)
/* harmony export */ });
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(821);

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .Z)(o, minLen);
}

/***/ })

}]);
//# sourceMappingURL=51.b0f4c1ea.js.map